#pragma once

#include <ddraw.h>
#include <dsound.h>

typedef DWORD DPID;

/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'battlegrounds_x2'
*/

struct RGE_Master_Animated_Object;
struct RGE_Player;
struct TRIBE_Player;
struct RGE_Static_Object;
struct RGE_Master_Static_Object;
struct RGE_Moving_Object;
struct RGE_Master_Moving_Object;
struct RGE_Action_Object;
struct RGE_Master_Action_Object;
struct RGE_Combat_Object;
struct RGE_Master_Combat_Object;
struct TRIBE_Master_Combat_Object;
struct TRIBE_Building_Object;
struct TRIBE_Master_Building_Object;
struct RGE_Game_World;
struct TRIBE_World;
struct RGE_Active_Sprite_List;
struct RGE_Sprite;
struct RGE_Map;
struct RGE_Active_Sprite;
struct TShape;
struct TDrawArea;
struct RGE_Color_Table;
struct Shape_Info;
struct DClipInfo_Node;
struct RGE_Visible_Map;
struct RGE_Sound;
struct TDigital;
struct TCommunications_Handler;
struct RGE_Scenario;
struct RGE_Campaign;
struct RGE_Timeline;
struct RGE_Scenario_Header;
struct TMousePointer;
struct TDrawSystem;
struct TMusic_System;
struct TRegistry;
struct TSound_Driver;
struct BITMAPINFO256;
struct TRANSINFO;
struct TTextPanel;
struct TChat;
struct TTaunt;
struct TScreenPanel;
struct TPanel;
struct TCommCommandLog;
struct TButtonPanel;
struct TDropDownPanel;
struct TRIBE_Trigger_System;
struct RGE_Game_Info;
struct RGE_Lobby;
struct TribeVoteSystemDialog;
struct TRIBE_Screen_Game;
struct RGE_Command;
struct TRIBE_Command;
struct AIExpert;
struct RGE_View;
struct T_Scenario;
struct BPath;
struct RGE_Object_List;
struct UnitAIModule;
struct RGE_Sprite_Particle_System;
struct RGE_Sprite_Particle;
struct RGE_Action;
struct RGE_Action_List;
struct RGE_Communications_Synchronize;
struct TRIBE_Command_Give_Attribute;
struct BUnitGroup;
struct BVector;
struct BPathData;
struct TRIBE_Panel_Button;
struct Item_Avail;
struct RGE_Player_Object_List;
struct RGE_Zone_Map_List;
struct RGE_Zone_Map;
struct RGE_Map_Analysis;
struct RGE_Map_Analysis_System;
struct TRIBE_Diamond_Map_View;
struct RGE_Tile;
struct RGE_Obstruction_Manager_Land;
struct RGE_Obstruction_Manager_Air;
struct ObsRecord;
struct VISIBLE_UNIT_REC;
struct Visible_Unit_Manager;
struct Visible_Resource_Manager;
struct RGE_Doppleganger_Creator;
struct RGE_Armor_Weapon_Info;
struct LOSTBL;
struct MShortPather;
struct XYPoint;
struct RGE_New_Object_List;
struct BMovementData;
struct RGE_Task;
struct RGE_Visible_Object_Updator;
struct TRIBE_History_Info;
struct RGE_Master_Missile_Object;
struct RGE_Master_Doppleganger_Object;
struct RGE_Active_Sprite_Node;
struct TRIBE_Master_Tree_Object;
struct RGE_Task_List;
struct OrderEvent;
struct NotifyEvent;
struct RGE_Communications_Queue;
struct RESENDER;
struct HOLDER;
struct RGE_Comm_Error;
struct TListPanel;
struct RGE_Communications_Speed;
struct TCommunications_Services;
struct TPicturePanel;
struct TCommunications_Sessions;
struct TSpan_List_Manager;
struct TInputPanel;
struct TEditPanel;
struct TScrollBarPanel;
struct TVerticalSliderPanel;
struct THorizontalSliderPanel;
struct TPicture;
struct Time_Line_Panel;
struct TRIBE_Tech;
struct RGE_Panel_Tool_Box;
struct SoundManager;
struct RGE_Victory_Conditions;
struct TRIBE_Hotkey_Handler;
struct TRIBE_Main_View;
struct RGE_Tile_List_Node;
struct RGE_Master_Player;
struct RGE_Effects;
struct RGE_RMM_Database_Controller;
struct RGE_Random_Map_Module;
struct RGE_Command_Create;
struct RGE_Command_Give_Attribute;
struct RGE_Player_Info;
struct TribeAIFacts;
struct TRIBE_Trigger;
struct TRIBE_Trigger_Effect;
struct RGE_Unified_Visible_Map;
struct Map_Stack;
struct RGE_Victory_Entry;
struct TDebuggingLog;
struct TRIBE_Trigger_Condition;
struct XYZBYTEPoint;
struct RGE_Victory_Point_Entry;
struct TribeMainDecisionAIModule;
struct MainDecisionAIModule;
struct RGE_Object_Node;
struct TRIBE_Panel_Object;
struct RGE_Font;
struct RGE_Check_List;
struct TRIBE_History_Events;
struct Player_Time_Slice_Data;
struct RGE_Effect;
struct VISIBLE_RESOURCE_REC;
struct RGE_Diamond_Map;
struct RGE_Prog_Info;
struct RGE_Person_Info;
struct TRIBE_Panel_Time;
struct Time_Slice_Special_Event;
struct Time_Slice_History_Event;
struct TRIBE_Panel_Inven;
struct TPercentPanel;
struct TMessagePanel;
struct RGE_Communications_Addresses;
struct IPAD;
struct RGE_TimeSinceLastCall;
struct TScrollTextPanel;
struct TCommLog;
struct MsgQueue;
struct $65758D9D43B54B363A052B56EC34040F;
struct ManagedArray_int_;
struct Wall_Info;
struct RGE_Campaign_Info;
struct BFormation;
struct BContextAnalyzer;
struct BFormationLine;
struct BFormationSlot;
struct CMemoryPool;
struct CMemoryBlock;
struct ObstructionInfo;
struct PanelNode;
struct Shape_Clip_Mask;
struct streamingSound;
struct staticSound;
struct VSpan_Node;
struct RGE_RMM_Token;
struct RGE_Land_Data_Entry;
struct RGE_RMM_Cliffs_Generator;
struct IntersectRecord;
struct NAME;
struct Shape_Clip_Node;
struct Shape_File_Header;
struct RGE_Sound_Info;
struct BMotionVtbl;
struct BSpecificMove;
struct BContextPlanElement;
struct BUnitGroupVtbl;
struct PathingSystemVtbl;
struct RGE_Object_ListVtbl;
struct TCommLogVtbl;
struct cHeaderFile;
struct TDebuggingLogVtbl;
struct RGE_Damage_Sprite_Info;
struct DrawAreaNode;
struct InfluenceMapVtbl;
struct RGE_Check_Node;
struct RGE_Color_TableVtbl;
struct RGE_CommandVtbl;
struct DynamicTileCacheNode;
struct RGE_MapVtbl;
struct RGE_Map_Copy_Object_Data;
struct RGE_Map_Copy_Data;
struct UMV_Offset_Point;
struct TRIBE_MapVtbl;
struct RGE_Map_Gen_Info;
struct VISIBLE_UNIT_PTR;
struct Wall_Info_Node;
struct TRIBE_Game__TRIBE_Game_Options;
struct RGE_Effect_Command;
struct RGE_EffectsVtbl;
struct RGE_Scenario_Info;
struct TRIBE_Hotkey_HandlerVtbl;
struct RGE_Hotkey_Info;
struct RGE_Hotkey_HandlerVtbl;
struct Mip_Square;
struct RGE_Player_Object_ListVtbl;
struct TPanelVtbl;
struct TTextPanel__FontChangeNode;
struct TTextPanel__TextNode;
struct TTextPanelVtbl;
struct TEasy_PanelVtbl;
struct TDialogPanelVtbl;
struct TScreenPanelVtbl;
struct RGE_PlayerVtbl;
struct RGE_View_Stack;
struct Combat_Notifications;
struct TRIBE_PlayerVtbl;
struct RGE_Static_ObjectVtbl;
struct RGE_Extra_Terrain_Table;
struct RGE_Game_WorldVtbl;
struct TRIBE_WorldVtbl;
struct RGE_Master_Static_ObjectVtbl;
struct RGE_Base_GameVtbl;
struct TRIBE_GameVtbl;
struct MouseClickInfo;
struct RGE_ActionVtbl;
struct RGE_Action_BirdVtbl;
struct RGE_Action_AttackVtbl;
struct RGE_Action_ExploreVtbl;
struct RGE_Action_EnterVtbl;
struct RGE_Action_GatherVtbl;
struct RGE_Action_MissileVtbl;
struct RGE_Action_Move_ToVtbl;
struct RGE_Action_MakeVtbl;
struct RGE_Action_GuardVtbl;
struct TRIBE_Action_BuildVtbl;
struct TRIBE_Action_Make_ObjVtbl;
struct TRIBE_Action_Make_TechVtbl;
struct TRIBE_Action_ConvertVtbl;
struct TRIBE_Action_HealVtbl;
struct TRIBE_Action_HousingVtbl;
struct TRIBE_Action_ArtifactVtbl;
struct TRIBE_Action_WonderVtbl;
struct TRIBE_Action_Discovery_ArtifactVtbl;
struct TRIBE_Action_FarmVtbl;
struct TRIBE_Action_HuntVtbl;
struct TRIBE_Action_RepairVtbl;
struct TRIBE_Action_TradeVtbl;
struct TRIBE_Action_Offboard_TradeVtbl;
struct TRIBE_Action_Pickup_RelicVtbl;
struct TRIBE_Action_ChargeVtbl;
struct TRIBE_Action_PackVtbl;
struct TRIBE_Action_UnpackVtbl;
struct TRIBE_Action_Unit_TransformVtbl;
struct TRIBE_Action_CaptureVtbl;
struct TRIBE_Action_ShepherdVtbl;
struct TRIBE_Action_Deliver_RelicVtbl;
struct RGE_Action_TransportVtbl;
struct RGE_Action_ListVtbl;
struct RGE_Action_Node;
struct TRIBE_Action_ListVtbl;
struct RGE_Animated_ObjectVtbl;
struct RGE_Moving_ObjectVtbl;
struct RGE_Action_ObjectVtbl;
struct RGE_Combat_ObjectVtbl;
struct RGE_Doppleganger_ObjectVtbl;
struct RGE_Missile_ObjectVtbl;
struct TRIBE_Combat_ObjectVtbl;
struct TRIBE_Building_ObjectVtbl;
struct Production_Queue_Record;
struct TRIBE_Tree_ObjectVtbl;
struct RGE_Master_Animated_ObjectVtbl;
struct RGE_Master_Moving_ObjectVtbl;
struct RGE_Master_Action_ObjectVtbl;
struct RGE_Master_Combat_ObjectVtbl;
struct RGE_Master_Missile_ObjectVtbl;
struct TRIBE_Master_Combat_ObjectVtbl;
struct TRIBE_Master_Building_ObjectVtbl;
struct TRIBE_Master_Tree_ObjectVtbl;
struct RGE_Task_ListVtbl;
struct RGE_Picture_List;
struct RGE_Sound_List;
struct TRIBE_Screen_Status_MessageVtbl;
struct TribeSaveGameScreenVtbl;
struct TRIBE_Screen_OptionsVtbl;
struct TribeMultiplayerSaveGameScreenVtbl;
struct TRIBE_Screen_WaitVtbl;
struct TribeMPSetupScreenVtbl;
struct T_ScenarioVtbl;
struct RGE_ScenarioVtbl;
struct TVoice;
struct TribeLoadMultiplayerSavedGameScreenVtbl;
struct TRIBE_Screen_Main_ErrorVtbl;
struct TRIBE_Screen_Main_MenuVtbl;
struct TribeLoadSavedGameScreenVtbl;
struct TribeHistoryScreenVtbl;
struct TRIBE_Game_Mission_ScreenVtbl;
struct TRIBE_Screen_Game_CampaignVtbl;
struct TRIBE_Credits_ScreenVtbl;
struct TRIBE_Screen_Campaign_SelectionVtbl;
struct TRIBE_Campaign_Editor_ScreenVtbl;
struct TRIBE_Aftermath_ScreenVtbl;
struct TRIBE_Screen_GameVtbl;
struct Trade_Avail;
struct TButtonPanelVtbl;
struct TEditPanelVtbl;
struct TDropDownPanelVtbl;
struct TribePopUpHelpVtbl;
struct RGE_Victory_ConditionsVtbl;
struct RGE_Scenario_HeaderVtbl;
struct RGE_Random_Map_ModuleVtbl;
struct RGE_Random_Map_Module_List;
struct RGE_RMM_Elevation_GeneratorVtbl;
struct RGE_RMM_Shallows_GeneratorVtbl;
struct RGE_RMM_Terrain_GeneratorVtbl;
struct RGE_RMM_Object_GeneratorVtbl;
struct RGE_RMM_Cliffs_GeneratorVtbl;
struct RGE_RMM_Land_GeneratorVtbl;
struct RGE_RMM_Database_ControllerVtbl;
struct RGE_Terrain_Data_Entry;
struct RGE_Object_Data_Entry;
struct RGE_Elevation_Data_Entry;
struct RGE_Map_Data_Entry;
struct RGE_RMM_Script_ControllerVtbl;
struct TRIBE_RMM_Database_ControllerVtbl;
struct TRIBE_RMM_Script_ControllerVtbl;
struct TRIBE_Scenario_HeaderVtbl;
struct TRIBE_Task_ListVtbl;
struct TRIBE_Victory_ConditionsVtbl;
struct TribeMPRestoreScreenVtbl;
struct RGE_Active_SpriteVtbl;
struct RGE_Active_Sprite_ListVtbl;
struct RGE_Active_Animated_SpriteVtbl;
struct RGE_Scenario_Offset;
struct RGE_Master_Doppleganger_ObjectVtbl;
struct RGE_Sprite_Particle_mem_bank;
struct TRIBE_CommandVtbl;
struct TribeSelectScenarioScreenVtbl;
struct TribeSendMessageDialogVtbl;
struct TribeSendQuickMessageDialogVtbl;
struct TribeMenuDialogVtbl;
struct TListPanelVtbl;
struct RGE_Dialog_ListVtbl;
struct rdlg_list_info;
struct TListDialogVtbl;
struct TDropDownButtonPanelVtbl;
struct TMessageDialogVtbl;
struct TMessagePanelVtbl;
struct Message_Node;
struct TInputPanelVtbl;
struct THorizontalSliderPanelVtbl;
struct TScrollBarPanelVtbl;
struct TScrollTextPanelVtbl;
struct TVerticalSliderPanelVtbl;
struct streamingSoundNode;
struct staticSoundNode;
struct RGE_Panel_Tool_BoxVtbl;
struct TPercentPanelVtbl;
struct TPicturePanelVtbl;
struct THelpDialogVtbl;
struct TRIBE_Panel_ButtonVtbl;
struct TRIBE_Panel_TimeVtbl;
struct TRIBE_Panel_InvenVtbl;
struct TRIBE_Screen_Sed_OpenVtbl;
struct TRIBE_Objectives_DialogVtbl;
struct TRIBE_Mission_ScreenVtbl;
struct TribeVoteSystemDialogVtbl;
struct TribeScenarioDifficultyDialogVtbl;
struct TribePlayerNameDialogVtbl;
struct TribeAboutDialogVtbl;
struct TribeAddressListDialogVtbl;
struct TribeConfigDialogVtbl;
struct TribeAchievementsScreenVtbl;
struct RGE_Master_PlayerVtbl;
struct TRIBE_Master_PlayerVtbl;
struct TRIBE_Dialog_Sed_MenuVtbl;
struct TRIBE_Object_ListVtbl;
struct vis_Upd_info;
struct TRIBE_History_Entry;
struct TRIBE_EffectsVtbl;
struct FullMapPrintStatusDialogVtbl;
struct FullMapPrintDialogVtbl;
struct RGE_TimelineVtbl;
struct RGE_Time_Entry;
struct Time_Line_PanelVtbl;
struct VictoryConditionRuleSystemVtbl;
struct AIModuleIDVtbl;
struct AIModuleMessage;
struct AIModuleVtbl;
struct StrategyAIModuleVtbl;
struct TribeStrategyAIModuleVtbl;
struct TribeResourceAIModuleVtbl;
struct EmotionalAIModuleVtbl;
struct DiplomacyAIModuleVtbl;
struct TribeConstructionAIModuleVtbl;
struct ConstructionAIModuleVtbl;
struct ConstructionItemVtbl;
struct TribeBuildAIModuleVtbl;
struct BuildItemVtbl;
struct BaseItemVtbl;
struct BuildAIModuleVtbl;
struct UnitAIModule__UnitAIRetargetEntry;
struct UnitAIModuleVtbl;
struct SoftOb_ArrayList;
struct RGE_Obstruction_Manager_LandVtbl;
struct RGE_Obstruction_Manager_AirVtbl;
struct ILine;
struct NodeArrayInfo;
struct ObListControl;
struct TribeArtifactUnitAIModuleVtbl;
struct TribeCivilianUnitAIModuleVtbl;
struct TribePriestUnitAIModuleVtbl;
struct TribeMedicUnitAIModuleVtbl;
struct TribeHuntedAnimalUnitAIModuleVtbl;
struct TribeElephantUnitAIModuleVtbl;
struct TribeLionUnitAIModuleVtbl;
struct TribeSiegeUnitAIModuleVtbl;
struct TribeFishingShipUnitAIModuleVtbl;
struct TribeTradeShipUnitAIModuleVtbl;
struct TribeTransportShipUnitAIModuleVtbl;
struct TribeBuildingUnitAIModuleVtbl;
struct TribeTowerUnitAIModuleVtbl;
struct TribeSoldierUnitAIModuleVtbl;
struct RGE_Diamond_MapVtbl;
struct RGE_Map_Image_Line;
struct RGE_Map_Tile_Row;
struct RGE_Diamond_Map_ViewVtbl;
struct TRIBE_Diamond_Map_ViewVtbl;

/* 54 */
#pragma pack(push, 1)
struct TRIBE_Tech_Tree
{
};
#pragma pack(pop)

/* 55 */
#pragma pack(push, 1)
struct TRIBE_Player_Tech
{
};
#pragma pack(pop)

/* 589 */
typedef int LOSLastActions;

/* 328 */
#pragma pack(push, 8)
struct LOS_ExploreInfo
{
  RGE_Static_Object *theObj;
  LOSLastActions LastAction;
  int x1;
  int y1;
  int x2;
  int y2;
  int Radius;
  int Square;
  int PlayerNum;
};
#pragma pack(pop)

/* 56 */
#pragma pack(push, 8)
struct RGE_Animated_Object
{
  RGE_Animated_ObjectVtbl *vfptr;
  int gbg_unknown_1;
  float gbg_unknown_2;
  int gbg_unknown_3;
  int id;
  RGE_Master_Animated_Object *master_obj;
  TRIBE_Player *owner;
  RGE_Sprite *sprite;
  RGE_Sprite *old_sprite;
  RGE_Active_Sprite_List *sprite_list;
  RGE_Tile *tile;
  RGE_Static_Object *inside_obj;
  RGE_New_Object_List *objects;
  __int16 screen_x_offset;
  __int16 screen_y_offset;
  __int16 shadow_x_offset;
  __int16 shadow_y_offset;
  float hp;
  float sp;
  unsigned __int8 curr_damage_percent;
  unsigned __int8 facet;
  unsigned __int8 selected;
  float world_x;
  float world_y;
  float world_z;
  float attribute_amount_held;
  unsigned __int8 object_state;
  unsigned __int8 sleep_flag;
  unsigned __int8 dopple_flag;
  unsigned __int8 goto_sleep_flag;
  __int16 attribute_type_held;
  unsigned __int8 type;
  unsigned __int8 worker_num;
  ObsRecord *CurrentObstructionData;
  ObsRecord *ObstructionDataList;
  RGE_Static_Object **player_object_node;
  int *mPathingGroup;
  int mPathingGroupSize;
  int mMaximumPathingGroupSize;
  int damaged_lately_timer;
  UnitAIModule *unitAIValue;
  int zoneMapIndex;
  unsigned __int8 inObstructionMapValue;
  unsigned __int8 lastInObstructionMapValue;
  unsigned __int8 underAttackValue;
  int mGroupID;
  unsigned __int8 mROOAlreadyCalled;
  LOS_ExploreInfo ei;
  float speed;
};
#pragma pack(pop)

/* 201 */
#pragma pack(push, 8)
struct XYZPoint
{
  int x;
  int y;
  int z;
};
#pragma pack(pop)

/* 159 */
#pragma pack(push, 8)
struct BVector
{
  float x;
  float y;
  float z;
};
#pragma pack(pop)

/* 757 */
#pragma pack(push, 8)
struct RGE_Animated_ObjectVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Animated_Object *, unsigned int);
  int (__thiscall *gbg_unknown1)(RGE_Animated_Object *);
  int (__thiscall *gbg_get_civ_override)(RGE_Animated_Object *);
  unsigned __int8 (__thiscall *gbg_unknown3)(RGE_Animated_Object *);
  unsigned __int8 (__thiscall *gbg_unknown4)(RGE_Animated_Object *);
  unsigned __int8 (__thiscall *gbg_unknown5)(RGE_Animated_Object *);
  unsigned __int8 (__thiscall *gbg_unknown6)(RGE_Animated_Object *);
  unsigned __int8 (__thiscall *gbg_unknown7)(RGE_Animated_Object *);
  unsigned __int8 (__thiscall *gbg_unknown8)(RGE_Animated_Object *);
  unsigned __int8 (__thiscall *gbg_unknown9)(RGE_Animated_Object *);
  unsigned __int8 (__thiscall *gbg_unknown10)(RGE_Animated_Object *);
  unsigned __int8 (__thiscall *gbg_unknown11)(RGE_Animated_Object *);
  unsigned __int8 (__thiscall *gbg_isPadawan)(RGE_Animated_Object *);
  unsigned __int8 (__thiscall *gbg_isMaster)(RGE_Animated_Object *);
  unsigned __int8 (__thiscall *gbg_unknown14)(RGE_Animated_Object *);
  unsigned __int8 (__thiscall *gbg_isShielded)(RGE_Animated_Object *);
  void (__thiscall *gbg_unknown16)(RGE_Animated_Object *);
  void (__thiscall *gbg_unknown17)(RGE_Animated_Object *);
  unsigned __int8 (__thiscall *gbg_unknown18)(RGE_Animated_Object *, int);
  unsigned __int8 (__thiscall *gbg_isDetector)(RGE_Animated_Object *);
  unsigned __int8 (__thiscall *gbg_unknown20)(RGE_Animated_Object *, int);
  unsigned __int8 (__thiscall *gbg_isPowered)(RGE_Animated_Object *, int);
  void (__thiscall *gbg_unknown22)(RGE_Animated_Object *);
  unsigned __int8 (__thiscall *gbg_unknown23)(RGE_Animated_Object *);
  unsigned __int8 (__thiscall *gbg_isBiological)(RGE_Animated_Object *);
  unsigned __int8 (__thiscall *gbg_isDamaged)(RGE_Animated_Object *);
  unsigned __int8 (__thiscall *gbg_unknown26)(RGE_Animated_Object *);
  unsigned __int8 (__thiscall *gbg_canBeHealedByPlayer)(RGE_Animated_Object *, int);
  unsigned __int8 (__thiscall *gbg_canBeRepairedByPlayer)(RGE_Animated_Object *, int);
  void (__thiscall *recycle_in_to_game)(RGE_Animated_Object *, RGE_Master_Static_Object *, RGE_Player *, float, float, float);
  void (__thiscall *recycle_out_of_game)(RGE_Animated_Object *);
  void (__thiscall *draw)(RGE_Animated_Object *, TDrawArea *, __int16, __int16, RGE_Color_Table *);
  void (__thiscall *shadow_draw)(RGE_Animated_Object *, TDrawArea *, __int16, __int16, unsigned __int8);
  void (__thiscall *normal_draw)(RGE_Animated_Object *, TDrawArea *, __int16, __int16);
  void (__thiscall *draw_front_frame)(RGE_Animated_Object *, TDrawArea *, __int16, __int16);
  void (__thiscall *draw_back_frame)(RGE_Animated_Object *, TDrawArea *, __int16, __int16);
  void (__thiscall *draw_frame)(RGE_Animated_Object *, TDrawArea *, __int16, __int16);
  unsigned __int8 (__thiscall *update)(RGE_Animated_Object *);
  void (__thiscall *check_damage_sprites)(RGE_Animated_Object *);
  void (__thiscall *rehook)(RGE_Animated_Object *);
  void (__thiscall *save)(RGE_Animated_Object *, int);
  void (__thiscall *teleport_off_map)(RGE_Animated_Object *);
  float (__thiscall *teleport)(RGE_Animated_Object *, float, float, float);
  float (__thiscall *handle_teleport_z_correction)(RGE_Animated_Object *, float);
  void (__thiscall *new_sprite)(RGE_Animated_Object *, RGE_Sprite *);
  void (__thiscall *add_overlay_sprite)(RGE_Animated_Object *, RGE_Sprite *, unsigned __int8);
  void (__thiscall *remove_overlay_sprite)(RGE_Animated_Object *, RGE_Sprite *);
  void (__thiscall *change_ownership)(RGE_Animated_Object *, RGE_Player *);
  void (__thiscall *modify)(RGE_Animated_Object *, float, unsigned __int8);
  void (__thiscall *modify_delta)(RGE_Animated_Object *, float, unsigned __int8);
  void (__thiscall *modify_percent)(RGE_Animated_Object *, float, unsigned __int8);
  void (__thiscall *transform)(RGE_Animated_Object *, RGE_Master_Static_Object *);
  void (__thiscall *copy_obj)(RGE_Animated_Object *, RGE_Master_Static_Object *);
  void (__thiscall *set_object_state)(RGE_Animated_Object *, unsigned __int8);
  void (__thiscall *remove_visible_resource)(RGE_Animated_Object *);
  void (__thiscall *create_doppleganger_when_dying)(RGE_Animated_Object *);
  void (__thiscall *destroy_obj)(RGE_Animated_Object *);
  void (__thiscall *die_die_die)(RGE_Animated_Object *);
  void (__thiscall *damage)(RGE_Animated_Object *, int, RGE_Armor_Weapon_Info *, float, RGE_Player *, RGE_Static_Object *, int);
  float (__thiscall *calculateDamage)(RGE_Animated_Object *, int, RGE_Armor_Weapon_Info *, float, RGE_Player *, RGE_Static_Object *);
  void (__thiscall *rotate)(RGE_Animated_Object *, int);
  unsigned __int8 (__thiscall *can_attack)(RGE_Animated_Object *);
  void (__thiscall *set_attribute)(RGE_Animated_Object *, __int16, float);
  void (__thiscall *set_attribute_amount)(RGE_Animated_Object *, float, unsigned __int8, unsigned __int8);
  int (__thiscall *heal_2)(RGE_Animated_Object *, int, int);
  unsigned __int8 (__thiscall *heal_1)(RGE_Animated_Object *, float);
  int (__thiscall *canRepair)(RGE_Animated_Object *);
  void (__thiscall *notify_of_relation)(RGE_Animated_Object *, int, unsigned __int8);
  void (__thiscall *do_command)(RGE_Animated_Object *, RGE_Static_Object *, float, float, float);
  int (__thiscall *actionTypeIfOrdered)(RGE_Animated_Object *, RGE_Static_Object *, float, float, float, float *);
  unsigned __int8 (__thiscall *move_to)(RGE_Animated_Object *, RGE_Static_Object *, float, float, float);
  void (__thiscall *work)(RGE_Animated_Object *, RGE_Static_Object *, float, float, float);
  void (__thiscall *stop)(RGE_Animated_Object *);
  void (__thiscall *set_attack)(RGE_Animated_Object *, RGE_Static_Object *);
  void (__thiscall *play_command_sound)(RGE_Animated_Object *);
  void (__thiscall *play_move_sound)(RGE_Animated_Object *);
  void (__thiscall *new_angle)(RGE_Animated_Object *, float);
  RGE_Static_Object *(__thiscall *spawn_death_obj)(RGE_Animated_Object *);
  RGE_Master_Static_Object *(__thiscall *get_command_master)(RGE_Animated_Object *, RGE_Static_Object *, float, float, float);
  void (__thiscall *set_being_worked_on)(RGE_Animated_Object *, RGE_Action_Object *, __int16, unsigned __int8);
  void (__thiscall *release_being_worked_on)(RGE_Animated_Object *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *is_moving)(RGE_Animated_Object *);
  RGE_Static_Object *(__thiscall *get_target_obj)(RGE_Animated_Object *);
  unsigned __int8 (__thiscall *more_room)(RGE_Animated_Object *, RGE_Static_Object *);
  void (__thiscall *enter_obj)(RGE_Animated_Object *, RGE_Static_Object *, unsigned __int8);
  void (__thiscall *exit_obj)(RGE_Animated_Object *);
  void (__thiscall *add_obj)(RGE_Animated_Object *, RGE_Static_Object *);
  void (__thiscall *remove_obj)(RGE_Animated_Object *, RGE_Static_Object *);
  int (__thiscall *explore_terrain)(RGE_Animated_Object *, RGE_Player *, unsigned __int8, int, int);
  void (__thiscall *unexplore_terrain)(RGE_Animated_Object *, RGE_Player *, unsigned __int8, int, int);
  LOSTBL *(__thiscall *get_los_table)(RGE_Animated_Object *);
  unsigned __int8 (__thiscall *get_visibility)(RGE_Animated_Object *, RGE_Player *);
  int (__thiscall *inAttackRange)(RGE_Animated_Object *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *underAttack)(RGE_Animated_Object *);
  void (__thiscall *setUnderAttack)(RGE_Animated_Object *, unsigned __int8);
  float (__thiscall *calc_attack_modifier)(RGE_Animated_Object *, RGE_Static_Object *);
  float (__thiscall *getSpeed)(RGE_Animated_Object *);
  float (__thiscall *getAngle)(RGE_Animated_Object *);
  float (__thiscall *maximumSpeed)(RGE_Animated_Object *);
  float (__thiscall *rateOfFire)(RGE_Animated_Object *);
  float (__thiscall *damageCapability_2)(RGE_Animated_Object *, RGE_Static_Object *);
  float (__thiscall *damageCapability_1)(RGE_Animated_Object *);
  float (__thiscall *weaponRange)(RGE_Animated_Object *);
  float (__thiscall *minimumWeaponRange)(RGE_Animated_Object *);
  int (__thiscall *passableTile_2)(RGE_Animated_Object *, float, float, int *, int);
  int (__thiscall *passableTile_1)(RGE_Animated_Object *, float, float);
  int (__thiscall *currentTargetID)(RGE_Animated_Object *);
  float (__thiscall *currentTargetX)(RGE_Animated_Object *);
  float (__thiscall *currentTargetY)(RGE_Animated_Object *);
  float (__thiscall *currentTargetZ)(RGE_Animated_Object *);
  void (__thiscall *setWaitingToMove)(RGE_Animated_Object *, unsigned __int8);
  unsigned __int8 (__thiscall *waitingToMove)(RGE_Animated_Object *);
  unsigned __int8 (__thiscall *actionState)(RGE_Animated_Object *);
  unsigned __int8 (__thiscall *keepGatheringWhenObjectIsOut)(RGE_Animated_Object *, int);
  unsigned __int8 (__thiscall *produceWhenKilledBy)(RGE_Animated_Object *, int);
  unsigned __int8 (__thiscall *useSameZoneDropsite)(RGE_Animated_Object *);
  float (__thiscall *searchRadius)(RGE_Animated_Object *);
  unsigned __int8 (__thiscall *is_idle)(RGE_Animated_Object *);
  void (*logDebug)(RGE_Animated_Object *, char *, ...);
  void (*debug)(RGE_Animated_Object *, char *, ...);
  void (__thiscall *notify)(RGE_Animated_Object *, int, int, int, int, int, int);
  int (__thiscall *attack_2)(RGE_Animated_Object *, float, float, float, int);
  int (__thiscall *attack_1)(RGE_Animated_Object *, int, int);
  int (__thiscall *moveTo_3)(RGE_Animated_Object *, float, float, float, float, int, int);
  int (__thiscall *moveTo_2)(RGE_Animated_Object *, int, float, int);
  int (__thiscall *moveTo_1)(RGE_Animated_Object *, int, int);
  int (__thiscall *moveAwayFrom)(RGE_Animated_Object *, int, int);
  int (__thiscall *hunt)(RGE_Animated_Object *, int, int);
  int (__thiscall *gather)(RGE_Animated_Object *, int, int);
  int (__thiscall *convert)(RGE_Animated_Object *, int, int);
  int (__thiscall *repair)(RGE_Animated_Object *, int, int);
  int (__thiscall *build)(RGE_Animated_Object *, int, int);
  int (__thiscall *trade)(RGE_Animated_Object *, int, int);
  int (__thiscall *explore)(RGE_Animated_Object *, int, int, int);
  int (__thiscall *enter)(RGE_Animated_Object *, int, int);
  int (__thiscall *unload)(RGE_Animated_Object *, int, float, float, float);
  int (__thiscall *transport)(RGE_Animated_Object *, float, float, float, int);
  int (__thiscall *stopAction)(RGE_Animated_Object *);
  int (__thiscall *pause)(RGE_Animated_Object *);
  int (__thiscall *canPath_2)(RGE_Animated_Object *, int, float, float *, int, int, bool);
  int (__thiscall *canPath_1)(RGE_Animated_Object *, XYZPoint, float, int, float *, int, int, bool);
  int (__thiscall *canQuickPath)(RGE_Animated_Object *, int, float, float *);
  int (__thiscall *canPathWithObstructions)(RGE_Animated_Object *, int, float, float *, int, int, ManagedArray_int_ *);
  int (__thiscall *canPathWithAdditionalPassability)(RGE_Animated_Object *, XYZPoint, float, int, float *, int, int, int, int, int, BPath *);
  int (__thiscall *findFirstTerrainAlongExceptionPath)(RGE_Animated_Object *, int, float *, float *, BPath *);
  int (__thiscall *canLinePath_2)(RGE_Animated_Object *, int, int, int, int, float, int);
  int (__thiscall *canLinePath_1)(RGE_Animated_Object *, const XYPoint *, const XYPoint *, float, XYPoint *, int);
  int (__thiscall *firstTileAlongLine)(RGE_Animated_Object *, const XYPoint *, const XYPoint *, XYPoint *, int, int, int);
  unsigned __int8 (__thiscall *have_action)(RGE_Animated_Object *);
  int (__thiscall *gameActionType)(RGE_Animated_Object *);
  BVector *(__thiscall *userDefinedWaypoint)(RGE_Animated_Object *, int);
  int (__thiscall *addUserDefinedWaypoint)(RGE_Animated_Object *, float, float, float);
  void (__thiscall *zeroUserDefinedWaypoints)(RGE_Animated_Object *);
  void (__thiscall *removeAllUserDefinedWaypoints)(RGE_Animated_Object *);
  int (__thiscall *numberUserDefinedWaypoints)(RGE_Animated_Object *);
  BPath *(__thiscall *getPatrolInformation)(RGE_Animated_Object *, int *);
  float (__thiscall *distanceToHighestLevelPath_2)(RGE_Animated_Object *, BVector);
  float (__thiscall *distanceToHighestLevelPath_1)(RGE_Animated_Object *);
  BPath *(__thiscall *findAvoidancePath)(RGE_Animated_Object *, XYZPoint *, float, int);
  int (__thiscall *get_action_checksum)(RGE_Animated_Object *);
  int (__thiscall *get_waypoint_checksum)(RGE_Animated_Object *);
  void (__thiscall *setPatrolMode)(RGE_Animated_Object *, unsigned __int8);
  int (__thiscall *garrisoned_count)(RGE_Animated_Object *);
  int (__thiscall *lock_down)(RGE_Animated_Object *);
  int (__thiscall *unlock_down)(RGE_Animated_Object *);
  int (__thiscall *get_locked_down_count)(RGE_Animated_Object *);
  float (__thiscall *getTradeAmount)(RGE_Animated_Object *, float, float, float, float);
  int (__thiscall *setup_2)(RGE_Animated_Object *, int, RGE_Game_World *);
  int (__thiscall *setup_1)(RGE_Animated_Object *, RGE_Master_Static_Object *, RGE_Player *, float, float, float);
  RGE_New_Object_List *(__thiscall *create_object_list)(RGE_Animated_Object *);
  RGE_Active_Sprite_List *(__thiscall *create_sprite_list)(RGE_Animated_Object *);
  BVector *(__thiscall *position)(RGE_Animated_Object *, BVector *);
  BPathData *(__thiscall *getPathData)(RGE_Animated_Object *);
  int (__thiscall *actionType)(RGE_Animated_Object *);
  int (__thiscall *hasActionOfType)(RGE_Animated_Object *, int);
  int (__thiscall *gbg_hasActionOfType2)(RGE_Animated_Object *, int);
  int (__thiscall *addMove)(RGE_Animated_Object *, int, float, int, int, int);
  int (__thiscall *addCurrentPath)(RGE_Animated_Object *, BPath *, int, float, int);
  int (__thiscall *addFuturePath)(RGE_Animated_Object *, BPath *, int, float, int);
  void (__thiscall *stopAllMovement)(RGE_Animated_Object *);
  void (__thiscall *setOrientation)(RGE_Animated_Object *, BVector *, BVector *);
  BVector *(__thiscall *velocity)(RGE_Animated_Object *, BVector *);
  void (__thiscall *setVelocity)(RGE_Animated_Object *, BVector *);
  BVector *(__thiscall *acceleration)(RGE_Animated_Object *, BVector *);
  void (__thiscall *setAcceleration)(RGE_Animated_Object *, BVector *);
  float (__thiscall *forwardVelocity)(RGE_Animated_Object *);
  void (__thiscall *setForwardVelocity)(RGE_Animated_Object *, float);
  float (__thiscall *forwardAcceleration)(RGE_Animated_Object *);
  void (__thiscall *setForwardAcceleration)(RGE_Animated_Object *, float);
  void (__thiscall *moveForward)(RGE_Animated_Object *, float);
  void (__thiscall *setPosition)(RGE_Animated_Object *, BVector *);
  void (__thiscall *yaw)(RGE_Animated_Object *, float);
  int (__thiscall *isMoving)(RGE_Animated_Object *);
  void (__thiscall *stopMoving)(RGE_Animated_Object *);
  float (__thiscall *calculateFutureVelocity)(RGE_Animated_Object *, float, float, float, BVector *);
  unsigned int (__thiscall *lastMoveTime)(RGE_Animated_Object *);
  void (__thiscall *pauseMovement)(RGE_Animated_Object *, float);
  int (__thiscall *movementPriority)(RGE_Animated_Object *);
  int (__thiscall *intelligentMovementUpdate)(RGE_Animated_Object *);
  float (__thiscall *calculateMaximumSpeed)(RGE_Animated_Object *, int);
  int (__thiscall *calculateForward)(RGE_Animated_Object *, BVector *, BVector *, BVector *);
  float (__thiscall *calculateYawAngle)(RGE_Animated_Object *, BVector *, BVector *, float, int *);
  int (__thiscall *calculateReachedPoint)(RGE_Animated_Object *, BVector *, BVector *, BVector *);
  float (__thiscall *calculateTurnRadius)(RGE_Animated_Object *);
  int (__thiscall *checkAcceleration)(RGE_Animated_Object *, BVector *, int, int);
  BVector *(__thiscall *straightProjectedPosition)(RGE_Animated_Object *, BVector *, BVector *, float);
  int (__thiscall *onPatrol)(RGE_Animated_Object *);
  BVector *(__thiscall *orientationForward)(RGE_Animated_Object *, BVector *);
  int (__thiscall *setRunSprite)(RGE_Animated_Object *);
  int (__thiscall *setMoveSprite)(RGE_Animated_Object *);
  int (__thiscall *setFidgetSprite)(RGE_Animated_Object *);
  int (__thiscall *getGateLocked)(RGE_Animated_Object *);
  void (__thiscall *setGateLocked)(RGE_Animated_Object *, int);
  int (__thiscall *isGateOpenable)(RGE_Animated_Object *, int);
  int (__thiscall *getLinkedChild)(RGE_Animated_Object *, int);
  int (__thiscall *get_next_selected_group)(RGE_Animated_Object *, int);
  __int16 (__thiscall *get_Selected_Groups)(RGE_Animated_Object *);
  void (__thiscall *set_Selected_Groups)(RGE_Animated_Object *, __int16);
  int (__thiscall *get_num_Selected_groups)(RGE_Animated_Object *);
  int (__thiscall *setup_3)(RGE_Animated_Object *, RGE_Master_Animated_Object *, RGE_Player *, float, float, float);
};
#pragma pack(pop)

/* 57 */
#pragma pack(push, 8)
struct RGE_Master_Animated_Object
{
  RGE_Master_Animated_ObjectVtbl *vfptr;
  unsigned __int8 master_type;
  char *name;
  char *gbg_name2;
  __int16 unit_line;
  unsigned __int8 min_tech_level;
  __int16 string_id;
  __int16 string_id2;
  __int16 id;
  __int16 copy_id;
  __int16 base_id;
  __int16 object_group;
  RGE_Sprite *sprite;
  RGE_Sprite *sprite2;
  RGE_Sprite *death_sprite;
  RGE_Sprite *undead_sprite;
  unsigned __int8 undead_flag;
  __int16 hp;
  float los;
  unsigned __int8 obj_max;
  float radius_x;
  float radius_y;
  float radius_z;
  RGE_Sound *selected_sound;
  RGE_Sound *created_sound;
  RGE_Sound *death_sound;
  RGE_Sound *damage_sound;
  __int16 death_spawn_obj_id;
  unsigned __int8 sort_number;
  unsigned __int8 can_be_built_on;
  __int16 button_pict;
  unsigned __int8 hide_in_scenario_editor;
  __int16 portrait_pict;
  unsigned __int8 available;
  unsigned __int8 disabled;
  __int16 tile_req1;
  __int16 tile_req2;
  __int16 center_tile_req1;
  __int16 center_tile_req2;
  float construction_radius_x;
  float construction_radius_y;
  unsigned __int8 elevation_flag;
  unsigned __int8 fog_flag;
  __int16 terrain;
  unsigned __int8 movement_type;
  __int16 attribute_type_held[3];
  float attribute_amount_held[3];
  __int16 attribute_max_amount;
  float attribute_rot;
  float multiple_attribute_mod;
  unsigned __int8 attribute_flag[3];
  unsigned __int8 area_effect_object_level;
  unsigned __int8 combat_level;
  unsigned __int8 select_level;
  unsigned __int8 map_draw_level;
  unsigned __int8 unit_level;
  unsigned __int8 map_color;
  unsigned __int8 attack_reaction;
  unsigned __int8 convert_terrain_flag;
  unsigned __int8 damage_sprite_num;
  RGE_Damage_Sprite_Info *damage_sprites;
  unsigned __int8 occlusion_flag;
  unsigned __int8 obstruction_type;
  unsigned __int8 obstruction_class;
  unsigned int object_flags;
  int help_string_id;
  int help_page_id;
  int hotkey_id;
  unsigned __int8 recyclable;
  unsigned __int8 track_as_resource;
  unsigned __int8 create_doppleganger_on_death;
  unsigned __int8 resource_group;
  unsigned __int8 draw_flag;
  unsigned __int8 draw_color;
  float outline_radius_x;
  float outline_radius_y;
  float outline_radius_z;
  float speed;
};
#pragma pack(pop)

/* 262 */
#pragma pack(push, 8)
struct RGE_Tile_List
{
  int list_size;
  int num_active;
  int new_count;
  int collapse_list;
  int freeze_access;
  RGE_Tile_List_Node *list;
};
#pragma pack(pop)

/* 650 */
#pragma pack(push, 8)
struct Diplomacy_Offer
{
  unsigned __int8 sequence;
  unsigned __int8 started_by;
  unsigned int actual_time;
  unsigned int game_time;
  unsigned __int8 declare;
  unsigned __int8 old_diplomacy;
  unsigned __int8 new_diplomacy;
  unsigned __int8 old_intelligence;
  unsigned __int8 new_intelligence;
  unsigned __int8 old_trade;
  unsigned __int8 new_trade;
  unsigned __int8 demand;
  int gold;
  char message[100];
  unsigned __int8 status;
};
#pragma pack(pop)

/* 59 */
#pragma pack(push, 8)
struct TRIBE_Player
{
  TRIBE_PlayerVtbl *vfptr;
  int computerPlayerValue;
  int pathingAttemptCapValue;
  int pathingDelayCapValue;
  int currentUpdatePathingAttemptsValue;
  int checksum;
  int position_checksum;
  int action_checksum;
  unsigned __int8 checksum_created_this_update;
  int mLineRatio;
  int mColumnRatio;
  int mMinColumnDistance;
  int mColumnToLineDistance;
  int mAutoFormations;
  float mFormationInfluenceDistance;
  int mBreakAutoFormationsBySpeed;
  float pendingDebit[4];
  float escrow[4];
  float escrowPercentage[4];
  int master_object_num;
  RGE_Master_Static_Object **master_objects;
  RGE_Player_Object_List *objects;
  RGE_Player_Object_List *sleeping_objects;
  RGE_Player_Object_List *doppleganger_objects;
  RGE_Victory_Conditions *victory_conditions;
  RGE_Visible_Map *visible;
  TRIBE_World *world;
  RGE_Doppleganger_Creator *doppleganger_creator;
  RGE_Visible_Object_Updator *visible_object_updator;
  unsigned __int8 gbg_unknown_mask;
  char *name;
  int id;
  unsigned __int8 type;
  unsigned __int8 culture;
  unsigned __int8 game_status;
  unsigned __int8 resigned;
  int attribute_num;
  float *attributes;
  RGE_Tile_List tile_list;
  RGE_Tile_List diam_tile_list;
  unsigned __int8 *relations;
  int unitDiplomacy[9];
  int mutualAlly[9];
  unsigned int mutualExploredMask;
  unsigned int mutualVisibleMask;
  unsigned int nonMutualVisibleMask;
  unsigned int RemoveVisibleBits[9];
  int allied_LOS_Enable;
  unsigned __int8 allied_victory;
  unsigned __int8 master_player_id;
  RGE_Color_Table *color_table;
  RGE_Color_Table *true_color_table;
  int tribe_effect;
  int team_effect;
  Visible_Resource_Manager *VR_List;
  float view_x;
  float view_y;
  __int16 map_x;
  __int16 map_y;
  RGE_View_Stack *view_stack;
  int view_stack_size;
  int start_x;
  int start_y;
  float map_scroll_vector_x;
  float map_scroll_vector_y;
  float map_scroll_end_x;
  float map_scroll_end_y;
  float map_scroll_start_x;
  float map_scroll_start_y;
  float map_scroll_total_distance;
  float map_scroll_distance;
  __int16 selected_start_col;
  __int16 selected_start_row;
  __int16 selected_end_col;
  __int16 selected_end_row;
  __int16 replacement_terrain;
  __int16 replacement_overlay;
  __int16 replacement_overlay_shape;
  RGE_Static_Object *selected_obj;
  RGE_Static_Object *sel_list[40];
  unsigned int sel_object_properties;
  int sel_count;
  unsigned __int8 groups_used[127];
  __int16 object_category_count[1600];
  __int16 object_group_count[100];
  __int16 built_object_category_count[1600];
  __int16 built_object_group_count[100];
  __int16 total_unit_count;
  __int16 total_building_count;
  __int16 built_unit_count;
  __int16 built_building_count;
  int easiest_reaction_percentage;
  int easier_reaction_percentage;
  unsigned __int8 task_ungrouped_soldiers;
  unsigned __int8 RGE_Player_gap[3];
  TRIBE_Player_Tech *tech_tree;
  int fog_update;
  int update_count;
  int enemy_alert_count;
  int regular_attack_count;
  unsigned __int8 regular_attack_flag;
  float regular_attack_x;
  float regular_attack_y;
  int town_attack_count;
  unsigned __int8 town_attack_flag;
  float town_attack_x;
  float town_attack_y;
  Combat_Notifications *combat_notifications;
  int updateCountNeedHelp;
  float update_time;
  TribeMainDecisionAIModule *playerAI;
  char aiStatusInformationValue[256];
  char aiStatusInformationValue2[256];
  char aiStatusInformationValue3[256];
  char aiStatusInformationValue4[256];
  char aiStatusInformationValue5[256];
  char aiStatusInformationValue6[256];
  float ruin_held_time;
  float artifact_held_time;
  TRIBE_History_Info *history;
  int update_history_count;
  int old_kills;
  int old_hit_points;
  int old_razings;
  int battle_flag;
  int razings_flag;
  int total_kills;
  int total_hit_points;
  int total_razings;
  int old_player_kills[9];
  TRIBE_Tech_Tree *tech_tree_help;
  unsigned __int8 chance_to_dodge_missiles;
  unsigned __int8 chance_for_archers_to_maintain_distance;
  unsigned __int8 diplomacy[9];
  unsigned __int8 intelligence[9];
  unsigned __int8 trade[9];
  Diplomacy_Offer offer[9];
  unsigned int treaty_time[9];
  int treaty_exists[9];
  __int16 fealty;
  unsigned __int8 offboard_trade_route_explored[20];
  unsigned __int8 offboard_trade_route_being_explored[20];
  RGE_Object_List *relic_list;
  int gather_point_id;
  float gather_point_x;
  float gather_point_y;
  float gather_point_z;
  int retreat_point_id;
  float retreat_point_x;
  float retreat_point_y;
  float retreat_point_z;
  unsigned __int8 prod_queue_on;
  RGE_Object_List *gate_list;
  int cp_nomad_tc_build_lock;
  int open_gates_for_pathing_count;
  int max_trade_amount;
  int old_max_trade_amount;
  int max_trade_limit;
  int current_wood_limit;
  int current_food_limit;
  int current_stone_limit;
  int current_ore_limit;
  int commodity_volumn_delta;
  float trade_vig_rate;
  int trade_refresh_timer;
  int trade_refresh_rate;
  int farm_queue_count;
};
#pragma pack(pop)

/* 77 */
#pragma pack(push, 8)
struct RGE_Sprite
{
  char pict_name[25];
  int resource_id;
  unsigned __int8 loaded;
  RGE_Color_Table **color_tables;
  TShape *shape;
  int last_time;
  int delta_time;
  unsigned __int8 color_flag;
  unsigned __int8 draw_level;
  __int16 color_table;
  unsigned __int8 transparent_picking_flag;
  __int16 box_x1;
  __int16 box_y1;
  __int16 box_x2;
  __int16 box_y2;
  __int16 draw_list_num;
  RGE_Picture_List *draw_list;
  RGE_Sound *main_sound;
  unsigned __int8 micro_man_sound;
  RGE_Sound_List *sound_list;
  char name[25];
  __int16 frame_num;
  __int16 facet_num;
  float base_speed;
  float duration;
  float pause_between_loops;
  unsigned __int8 flag;
  __int16 id;
  unsigned __int8 mirror_flag;
  unsigned __int8 editor_flag;
};
#pragma pack(pop)

/* 76 */
#pragma pack(push, 8)
struct RGE_Active_Sprite_List
{
  RGE_Active_Sprite_ListVtbl *vfptr;
  RGE_Active_Sprite_Node *list;
  RGE_Static_Object *owner;
};
#pragma pack(pop)

/* 190 */
#pragma pack(push, 8)
struct RGE_Tile
{
  __int16 screen_xpos;
  __int16 screen_ypos;
  unsigned __int8 tile_type;
  unsigned __int8 terrain_type;
  unsigned __int8 height;
  unsigned __int8 last_drawn_as;
  unsigned __int8 last_drawn_shape;
  unsigned __int8 draw_as;
  unsigned __int8 draw_attribute;
  unsigned __int8 area_control;
  unsigned __int8 multi_tile_vector;
  unsigned __int8 TileObject_Count;
  unsigned __int8 last_drawn_shape2;
  unsigned __int8 ObjectDeleteLock;
  TShape *TileShape;
  RGE_Static_Object **Object_List;
  RGE_Sprite_Particle *particle_list;
  unsigned __int8 particle_list_count;
  unsigned __int8 place_holder1;
  unsigned __int8 place_holder2;
  unsigned __int8 place_holder3;
};
#pragma pack(pop)

/* 60 */
#pragma pack(push, 8)
struct RGE_Static_Object
{
  RGE_Static_ObjectVtbl *vfptr;
  int gbg_civ_override;
  float gbg_unknown_2;
  int gbg_unknown_3;
  int id;
  RGE_Master_Static_Object *master_obj;
  TRIBE_Player *owner;
  RGE_Sprite *sprite;
  RGE_Sprite *old_sprite;
  RGE_Active_Sprite_List *sprite_list;
  RGE_Tile *tile;
  RGE_Static_Object *inside_obj;
  RGE_New_Object_List *objects;
  __int16 screen_x_offset;
  __int16 screen_y_offset;
  __int16 shadow_x_offset;
  __int16 shadow_y_offset;
  float hp;
  float sp;
  unsigned __int8 curr_damage_percent;
  unsigned __int8 facet;
  unsigned __int8 selected;
  float world_x;
  float world_y;
  float world_z;
  float attribute_amount_held;
  unsigned __int8 object_state;
  unsigned __int8 sleep_flag;
  unsigned __int8 dopple_flag;
  unsigned __int8 goto_sleep_flag;
  __int16 attribute_type_held;
  unsigned __int8 type;
  unsigned __int8 worker_num;
  ObsRecord *CurrentObstructionData;
  ObsRecord *ObstructionDataList;
  RGE_Static_Object **player_object_node;
  int *mPathingGroup;
  int mPathingGroupSize;
  int mMaximumPathingGroupSize;
  int damaged_lately_timer;
  UnitAIModule *unitAIValue;
  int zoneMapIndex;
  unsigned __int8 inObstructionMapValue;
  unsigned __int8 lastInObstructionMapValue;
  unsigned __int8 underAttackValue;
  int mGroupID;
  unsigned __int8 mROOAlreadyCalled;
  LOS_ExploreInfo ei;
};
#pragma pack(pop)

/* 205 */
#pragma pack(push, 8)
struct RGE_New_Object_List
{
  RGE_Static_Object **List;
  int Number_of_objects;
  int ListSize;
  int GrowSize;
  bool DeletingAll;
};
#pragma pack(pop)

/* 503 */
#pragma pack(push, 8)
struct ObsRecord__$B9193B69CC5E42799476A322097F919A__$E40FE0E4C69CE251F817A0E38191C2E3
{
  float X;
  float Y;
  float Radius;
  float Radius2;
  float Xmin;
  float Ymin;
  float Xmax;
  float Ymax;
};
#pragma pack(pop)

/* 443 */
#pragma pack(push, 8)
struct Point
{
  float X;
  float Y;
};
#pragma pack(pop)

/* 448 */
#pragma pack(push, 8)
struct Line
{
  Point P0;
  Point P1;
};
#pragma pack(pop)

/* 504 */
#pragma pack(push, 8)
struct ObsRecord__$B9193B69CC5E42799476A322097F919A__$C9A9179C5B769E253E4D5622F321340B
{
  Line LineSeg;
  float X3;
  float Y3;
  float X4;
  float Y4;
};
#pragma pack(pop)

/* 505 */
#pragma pack(push, 8)
struct ObsRecord__$B9193B69CC5E42799476A322097F919A__$515678BC539BA2526E795D19D27B6BF1
{
  float X1;
  float Y1;
  float X2;
  float Y2;
  float Slope;
  bool isVertical;
  bool isHorizontal;
};
#pragma pack(pop)

/* 506 */
#pragma pack(push, 8)
union ObsRecord__$B9193B69CC5E42799476A322097F919A
{
  float DirectVal[8];
  #pragma pack(push, 8)
  struct
  {
    float X;
    float Y;
    float Radius;
    float Radius2;
    float Xmin;
    float Ymin;
    float Xmax;
    float Ymax;
  };
  #pragma pack(pop)
  #pragma pack(push, 8)
  struct
  {
    Line LineSeg;
    float X3;
    float Y3;
    float X4;
    float Y4;
  };
  #pragma pack(pop)
  #pragma pack(push, 8)
  struct
  {
    float X1;
    float Y1;
    float X2;
    float Y2;
    float Slope;
    bool isVertical;
    bool isHorizontal;
  };
  #pragma pack(pop)
};
#pragma pack(pop)

/* 193 */
#pragma pack(push, 8)
struct ObsRecord
{
  int NodeProperties;
  unsigned __int8 Type;
  unsigned __int8 Status;
  unsigned __int8 NodeType;
  unsigned __int8 Color;
  RGE_Static_Object *Object;
  ObsRecord *Next;
  int ThisNodeIdx;
  int ThisPtrIdx;
  unsigned int id;
  unsigned __int8 idxMinX;
  unsigned __int8 idxMinY;
  unsigned __int8 idxMaxX;
  unsigned __int8 idxMaxY;
  #pragma pack(push, 8)
  union
  {
    float DirectVal[8];
    #pragma pack(push, 8)
    struct
    {
      float X;
      float Y;
      float Radius;
      float Radius2;
      float Xmin;
      float Ymin;
      float Xmax;
      float Ymax;
    };
    #pragma pack(pop)
    #pragma pack(push, 8)
    struct
    {
      Line LineSeg;
      float X3;
      float Y3;
      float X4;
      float Y4;
    };
    #pragma pack(pop)
    #pragma pack(push, 8)
    struct
    {
      float X1;
      float Y1;
      float X2;
      float Y2;
      float Slope;
      bool isVertical;
      bool isHorizontal;
    };
    #pragma pack(pop)
  };
  #pragma pack(pop)
};
#pragma pack(pop)

/* 960 */
#pragma pack(push, 8)
struct UnitAIOrderHistory
{
  int mOrder;
  int mAction;
  unsigned int mTime;
  BVector mPosition;
  int mTargetID;
  int mTargetAttackCategory;
  BVector mTargetPosition;
  UnitAIOrderHistory *next;
  UnitAIOrderHistory *prev;
};
#pragma pack(pop)

/* 402 */
#pragma pack(push, 1)
struct __declspec(align(4)) ManagedArray_int_
{
  int value;
  int numberValue;
  int desiredNumberValue;
  int maximumSizeValue;
};
#pragma pack(pop)

/* 938 */
#pragma pack(push, 8)
struct Waypoint
{
  float x;
  float y;
  float z;
  unsigned __int8 facetToNextWaypoint;
};
#pragma pack(pop)

/* 140 */
#pragma pack(push, 8)
struct UnitAIModule
{
  UnitAIModuleVtbl *vfptr;
  RGE_Combat_Object *objectValue;
  int moodValue;
  int objectCategoryValue;
  int orderQueueSizeValue;
  int orderQueueMaxSizeValue;
  OrderEvent *orderQueueValue;
  int notifyQueueSizeValue;
  int notifyQueueMaxSizeValue;
  NotifyEvent *notifyQueueValue;
  int currentOrderValue;
  int currentOrderPriorityValue;
  int currentActionValue;
  int currentTargetValue;
  int currentTargetTypeValue;
  float currentTargetXValue;
  float currentTargetYValue;
  float currentTargetZValue;
  float desiredTargetDistanceValue;
  int defendTargetValue;
  int lastOrderValue;
  int lastActionValue;
  int lastTargetValue;
  int lastTargetTypeValue;
  UnitAIOrderHistory mOrderHistory;
  int mOrderHistorySize;
  unsigned int mLastRetargetTime;
  ManagedArray_int_ attackingUnitsValue;
  Waypoint waypointQueue[8];
  int waypointQueueSizeValue;
  unsigned int lastUpdateTimeValue;
  unsigned int idleTimerValue;
  unsigned int adjustedIdleTimeoutValue;
  unsigned int idleTimeoutValue;
  unsigned int secondaryTimerValue;
  unsigned int lookAroundTimerValue;
  unsigned int lookAroundTimeoutValue;
  Waypoint lastWorldPositionValue;
  float defenseBufferValue;
  int *importantObjects;
  int numberImportantObjects;
  unsigned __int8 stopAfterTargetKilledValue;
  unsigned __int8 stateValue;
  float statePositionXValue;
  float statePositionYValue;
  float timeSinceEnemySighting;
  unsigned __int8 alertModeValue;
  int alertModeObjectIDValue;
  BPath *mPatrolPath;
  int mPatrolCurrentWaypoint;
  unsigned int mRandomizedRetargetTimer;
  int mBestUnitToAttackThisUpdate;
  unsigned __int8 mFormationType;
  unsigned __int8 autoAttackOrderFlag;
  int mNumberRetargetEntries;
  int mMaximumNumberRetargetEntries;
  UnitAIModule__UnitAIRetargetEntry *mRetargetEntries;
};
#pragma pack(pop)

/* 61 */
#pragma pack(push, 8)
struct RGE_Master_Static_Object
{
  RGE_Master_Static_ObjectVtbl *vfptr;
  unsigned __int8 master_type;
  char *name;
  char *gbg_name2;
  __int16 unit_line;
  unsigned __int8 min_tech_level;
  __int16 string_id;
  __int16 string_id2;
  __int16 id;
  __int16 copy_id;
  __int16 base_id;
  __int16 object_group;
  RGE_Sprite *sprite;
  RGE_Sprite *sprite2;
  RGE_Sprite *death_sprite;
  RGE_Sprite *undead_sprite;
  unsigned __int8 undead_flag;
  __int16 hp;
  float los;
  unsigned __int8 obj_max;
  float radius_x;
  float radius_y;
  float radius_z;
  RGE_Sound *selected_sound;
  RGE_Sound *created_sound;
  RGE_Sound *death_sound;
  RGE_Sound *damage_sound;
  __int16 death_spawn_obj_id;
  unsigned __int8 sort_number;
  unsigned __int8 can_be_built_on;
  __int16 button_pict;
  unsigned __int8 hide_in_scenario_editor;
  __int16 portrait_pict;
  unsigned __int8 available;
  unsigned __int8 disabled;
  __int16 tile_req1;
  __int16 tile_req2;
  __int16 center_tile_req1;
  __int16 center_tile_req2;
  float construction_radius_x;
  float construction_radius_y;
  unsigned __int8 elevation_flag;
  unsigned __int8 fog_flag;
  __int16 terrain;
  unsigned __int8 movement_type;
  __int16 attribute_type_held[3];
  float attribute_amount_held[3];
  __int16 attribute_max_amount;
  float attribute_rot;
  float multiple_attribute_mod;
  unsigned __int8 attribute_flag[3];
  unsigned __int8 area_effect_object_level;
  unsigned __int8 combat_level;
  unsigned __int8 select_level;
  unsigned __int8 map_draw_level;
  unsigned __int8 unit_level;
  unsigned __int8 map_color;
  unsigned __int8 attack_reaction;
  unsigned __int8 convert_terrain_flag;
  unsigned __int8 damage_sprite_num;
  RGE_Damage_Sprite_Info *damage_sprites;
  unsigned __int8 occlusion_flag;
  unsigned __int8 obstruction_type;
  unsigned __int8 obstruction_class;
  unsigned int object_flags;
  int help_string_id;
  int help_page_id;
  int hotkey_id;
  unsigned __int8 recyclable;
  unsigned __int8 track_as_resource;
  unsigned __int8 create_doppleganger_on_death;
  unsigned __int8 resource_group;
  unsigned __int8 draw_flag;
  unsigned __int8 draw_color;
  float outline_radius_x;
  float outline_radius_y;
  float outline_radius_z;
};
#pragma pack(pop)

/* 58 */
#pragma pack(push, 8)
struct RGE_Player
{
  RGE_PlayerVtbl *vfptr;
  int computerPlayerValue;
  int pathingAttemptCapValue;
  int pathingDelayCapValue;
  int currentUpdatePathingAttemptsValue;
  int checksum;
  int position_checksum;
  int action_checksum;
  unsigned __int8 checksum_created_this_update;
  int mLineRatio;
  int mColumnRatio;
  int mMinColumnDistance;
  int mColumnToLineDistance;
  int mAutoFormations;
  float mFormationInfluenceDistance;
  int mBreakAutoFormationsBySpeed;
  float pendingDebit[4];
  float escrow[4];
  float escrowPercentage[4];
  int master_object_num;
  RGE_Master_Static_Object **master_objects;
  RGE_Player_Object_List *objects;
  RGE_Player_Object_List *sleeping_objects;
  RGE_Player_Object_List *doppleganger_objects;
  RGE_Victory_Conditions *victory_conditions;
  RGE_Visible_Map *visible;
  RGE_Game_World *world;
  RGE_Doppleganger_Creator *doppleganger_creator;
  RGE_Visible_Object_Updator *visible_object_updator;
  unsigned __int8 gbg_unknown_mask;
  char *name;
  int id;
  unsigned __int8 type;
  unsigned __int8 culture;
  unsigned __int8 game_status;
  unsigned __int8 resigned;
  int attribute_num;
  float *attributes;
  RGE_Tile_List tile_list;
  RGE_Tile_List diam_tile_list;
  unsigned __int8 *relations;
  int unitDiplomacy[9];
  int mutualAlly[9];
  unsigned int mutualExploredMask;
  unsigned int mutualVisibleMask;
  unsigned int nonMutualVisibleMask;
  unsigned int RemoveVisibleBits[9];
  int allied_LOS_Enable;
  unsigned __int8 allied_victory;
  unsigned __int8 master_player_id;
  RGE_Color_Table *color_table;
  RGE_Color_Table *true_color_table;
  int tribe_effect;
  int team_effect;
  Visible_Resource_Manager *VR_List;
  float view_x;
  float view_y;
  __int16 map_x;
  __int16 map_y;
  RGE_View_Stack *view_stack;
  int view_stack_size;
  int start_x;
  int start_y;
  float map_scroll_vector_x;
  float map_scroll_vector_y;
  float map_scroll_end_x;
  float map_scroll_end_y;
  float map_scroll_start_x;
  float map_scroll_start_y;
  float map_scroll_total_distance;
  float map_scroll_distance;
  __int16 selected_start_col;
  __int16 selected_start_row;
  __int16 selected_end_col;
  __int16 selected_end_row;
  __int16 replacement_terrain;
  __int16 replacement_overlay;
  __int16 replacement_overlay_shape;
  RGE_Static_Object *selected_obj;
  RGE_Static_Object *sel_list[40];
  unsigned int sel_object_properties;
  int sel_count;
  unsigned __int8 groups_used[127];
  __int16 object_category_count[1600];
  __int16 object_group_count[100];
  __int16 built_object_category_count[1600];
  __int16 built_object_group_count[100];
  __int16 total_unit_count;
  __int16 total_building_count;
  __int16 built_unit_count;
  __int16 built_building_count;
  int easiest_reaction_percentage;
  int easier_reaction_percentage;
  unsigned __int8 task_ungrouped_soldiers;
  unsigned __int8 RGE_Player_gap[3];
};
#pragma pack(pop)

/* 82 */
#pragma pack(push, 8)
struct TDrawArea
{
  TDrawSystem *DrawSystem;
  HWND Wnd;
  unsigned __int8 *Bits;
  BITMAPINFO256 *BitmapInfo;
  HBITMAP Bitmap;
  HBITMAP OldBitmap;
  int Width;
  int Height;
  int Pitch;
  int Orien;
  RECT ClipRect;
  HDC DrawDc;
  IDirectDrawSurface *DrawSurface;
  DDSURFACEDESC SurfaceDesc;
  DrawAreaNode *Node;
  char *Name;
  unsigned __int8 *LastBits;
  int LastPitch;
  void **DisplayOffsets;
  void **CurDisplayOffsets;
  void **FloatOffsets;
  RGE_Color_Table *shadow_color_table;
  TSpan_List_Manager *SpanList;
  TSpan_List_Manager *CurSpanList;
  int Float_X_Delta;
  int Float_Y_Delta;
  int DisplayOffsetsSz;
  int FloatOffsetsSz;
  int SystemMemOnly;
  int UsingVidMem;
  int UseTrans;
  int IsPrimarySurface;
  int Restored;
  int ExtendedLines;
  unsigned __int8 TransColor;
  unsigned __int8 ***MasterBlendTable;
  char BlendFileName[260];
};
#pragma pack(pop)

/* 83 */
#pragma pack(push, 8)
struct RGE_Color_Table
{
  RGE_Color_TableVtbl *vfptr;
  int id;
  int reference_id;
  unsigned __int8 *TranslateTable;
  int ColorTransformBase;
  int UnitOutlineColor;
  int SelectionColor1;
  int SelectionColor2;
  int MiniMapColor1;
  int MiniMapColor2;
  int MiniMapColor3;
  int TextColor1;
  int TextColor2;
  unsigned __int8 TextColorR;
  unsigned __int8 TextColorG;
  unsigned __int8 TextColorB;
  unsigned __int8 Reserved;
};
#pragma pack(pop)

/* 198 */
#pragma pack(push, 8)
struct RGE_Armor_Weapon_Info
{
  __int16 type;
  __int16 value;
};
#pragma pack(pop)

/* 64 */
#pragma pack(push, 8)
struct RGE_Action_Object
{
  RGE_Action_ObjectVtbl *vfptr;
  int gbg_unknown_1;
  float gbg_unknown_2;
  int gbg_unknown_3;
  int id;
  RGE_Master_Action_Object *master_obj;
  TRIBE_Player *owner;
  RGE_Sprite *sprite;
  RGE_Sprite *old_sprite;
  RGE_Active_Sprite_List *sprite_list;
  RGE_Tile *tile;
  RGE_Static_Object *inside_obj;
  RGE_New_Object_List *objects;
  __int16 screen_x_offset;
  __int16 screen_y_offset;
  __int16 shadow_x_offset;
  __int16 shadow_y_offset;
  float hp;
  float sp;
  unsigned __int8 curr_damage_percent;
  unsigned __int8 facet;
  unsigned __int8 selected;
  float world_x;
  float world_y;
  float world_z;
  float attribute_amount_held;
  unsigned __int8 object_state;
  unsigned __int8 sleep_flag;
  unsigned __int8 dopple_flag;
  unsigned __int8 goto_sleep_flag;
  __int16 attribute_type_held;
  unsigned __int8 type;
  unsigned __int8 worker_num;
  ObsRecord *CurrentObstructionData;
  ObsRecord *ObstructionDataList;
  RGE_Static_Object **player_object_node;
  int *mPathingGroup;
  int mPathingGroupSize;
  int mMaximumPathingGroupSize;
  int damaged_lately_timer;
  UnitAIModule *unitAIValue;
  int zoneMapIndex;
  unsigned __int8 inObstructionMapValue;
  unsigned __int8 lastInObstructionMapValue;
  unsigned __int8 underAttackValue;
  int mGroupID;
  unsigned __int8 mROOAlreadyCalled;
  LOS_ExploreInfo ei;
  float speed;
  float trail_remainder;
  float velocity_x;
  float velocity_y;
  float velocity_z;
  float angle;
  float turn_towards_time;
  unsigned __int8 on_ground;
  float turnTimer;
  int continueCounter;
  int currentTerrainException1;
  int currentTerrainException2;
  unsigned __int8 waitingToMoveValue;
  unsigned __int8 numberWaitDelays;
  BVector *userDefinedWaypoints;
  int numberUserDefinedWaypointsValue;
  int maximumNumberUserDefinedWaypointsValue;
  BVector positionValue;
  BVector orientationForwardValue;
  BVector orientationRightValue;
  BPathData *pathData;
  BPathData *mFuturePathData;
  BMovementData *movementData;
  unsigned int lastMoveTimeValue;
  int mHasSubstitutePosition;
  BVector mSubstitutePosition;
  int mConsecutiveSubstituteCount;
  RGE_Action_List *actions;
  unsigned __int8 waiting;
  unsigned __int8 command_flag;
  __int16 Selected_Group_Info;
};
#pragma pack(pop)

/* 200 */
#pragma pack(push, 8)
struct LOSTBL
{
  int y_delta;
  int x_left;
  int x_right;
};
#pragma pack(pop)

/* 403 */
#pragma pack(push, 8)
struct BBitVector
{
  int valueValue;
};
#pragma pack(pop)

/* 137 */
#pragma pack(push, 8)
struct BPath
{
  BPath *next;
  BPath *prev;
  int idValue;
  int waypointsCount;
  int waypointsAllocatedSize;
  BVector *waypoints;
  float pathLengthValue;
  unsigned int creationTimeValue;
  BBitVector flags;
  const int initialNumberWaypoints;
  int mReferenceCount;
  int mNumberIgnoreUnits;
  int *mIgnoreUnits;
};
#pragma pack(pop)

/* 204 */
#pragma pack(push, 8)
struct XYPoint
{
  int x;
  int y;
};
#pragma pack(pop)

/* 653 */
typedef int eSaveLoadModes_e;

/* 72 */
#pragma pack(push, 8)
struct RGE_Game_World
{
  RGE_Game_WorldVtbl *vfptr;
  eSaveLoadModes_e eSaveLoadModes;
  unsigned int mExpertSystemChecksum;
  TCommunications_Handler *com_handler;
  unsigned int world_time;
  unsigned int old_world_time;
  unsigned int world_time_delta;
  float timer;
  unsigned int old_time;
  float game_speed;
  unsigned __int8 temp_pause;
  unsigned __int8 game_state;
  unsigned __int8 game_end_condition;
  int sound_update_index;
  int sprite_update_index;
  RGE_Map *map;
  __int16 sound_num;
  RGE_Sound **sounds;
  __int16 sprite_num;
  RGE_Sprite **sprites;
  __int16 player_num;
  RGE_Player **players;
  __int16 master_player_num;
  RGE_Master_Player **master_players;
  RGE_Effects *effects;
  __int16 terrain_num;
  __int16 terrain_size;
  float **terrains;
  RGE_Extra_Terrain_Table **extra_terrain_info;
  RGE_Command *commands;
  RGE_Scenario *scenario;
  RGE_Sprite_Particle_System *particle_system;
  RGE_Map_Analysis_System *map_analysis_system;
  __int16 color_table_num;
  RGE_Color_Table **color_tables;
  int next_object_id;
  int next_reusable_object_id;
  int scenario_object_id;
  unsigned __int8 scenario_object_flag;
  unsigned int random_seed;
  __int16 curr_player;
  float view_x;
  float view_y;
  float sound_falloff_ratio;
  TSound_Driver *sound_driver;
  float world_time_delta_seconds;
  RGE_Static_Object **objectsValue;
  int numberObjectsValue;
  int maxNumberObjectsValue;
  RGE_Static_Object **negativeObjectsValue;
  int numberNegativeObjectsValue;
  int maxNumberNegativeObjectsValue;
  int campaign;
  int campaign_player;
  int campaign_scenario;
  int player_turn;
  unsigned int player_time_delta[9];
  RGE_Object_List *reusable_static_objects;
  RGE_Object_List *reusable_animated_objects;
  RGE_Object_List *reusable_moving_objects;
  RGE_Object_List *reusable_action_objects;
  RGE_Object_List *reusable_combat_objects;
  RGE_Object_List *reusable_missile_objects;
  RGE_Object_List *reusable_doppleganger_objects;
  unsigned int maximumComputerPlayerUpdateTime;
  unsigned int availableComputerPlayerUpdateTime;
  int currentUpdateComputerPlayer;
  char auto_save_name[100];
  int auto_save_count;
  int auto_save_timer;
  RGE_Task_List **tasks;
  int task_count;
  int gbg_unknown_1;
  int gbg_unknown_2;
  int gbg_unknown_3;
  int gbg_unknown_4;
  int gbg_unknown_5;
  int gbg_unknown_6;
  int difficultyLevelValue;
  int allianceLocked;
  BPath paths;
  int numberPathsValue;
  int pathIDCounterValue;
  BUnitGroup *unitGroups;
  int mNumberUnitGroups;
  int mUnitGroupCounter;
  BContextAnalyzer *mContextAnalyzer;
  unsigned int mReplayTimeStart;
  unsigned int mReplayRecordedInterval;
  unsigned int mReplayPauseTime;
};
#pragma pack(pop)

/* 160 */
#pragma pack(push, 8)
struct BPathData
{
  int id;
  BPathData *linkedPath;
  int linkedPathType;
  int waypointLevel;
  BPath *path;
  int pathID;
  int waypoint;
  int state;
  float range;
  int targetID;
  float pauseTime;
  int continueCounter;
  BBitVector mFlags;
};
#pragma pack(pop)

/* 767 */
#pragma pack(push, 8)
struct RGE_Master_Animated_ObjectVtbl
{
  unsigned __int8 (__thiscall *gbg_needs_power)(RGE_Master_Animated_Object *);
  RGE_Sprite *(__thiscall *gbg_get_sprite_civ_override)(RGE_Master_Animated_Object *, RGE_Static_Object *);
  RGE_Sprite *(__thiscall *gbg_get_sprite2_civ_override)(RGE_Master_Animated_Object *, RGE_Static_Object *);
  RGE_Sprite *(__thiscall *gbg_get_death_sprite_civ_override)(RGE_Master_Animated_Object *, RGE_Static_Object *);
  RGE_Sprite *(__thiscall *gbg_get_undead_sprite_civ_override)(RGE_Master_Animated_Object *, RGE_Static_Object *);
  void *(__thiscall *__vecDelDtor)(RGE_Master_Animated_Object *, unsigned int);
  void (__thiscall *copy_obj)(RGE_Master_Animated_Object *, RGE_Master_Static_Object *);
  void (__thiscall *modify)(RGE_Master_Animated_Object *, float, unsigned __int8);
  void (__thiscall *modify_delta)(RGE_Master_Animated_Object *, float, unsigned __int8);
  void (__thiscall *modify_percent)(RGE_Master_Animated_Object *, float, unsigned __int8);
  void (__thiscall *small_save)(RGE_Master_Animated_Object *, int);
  void (__thiscall *save)(RGE_Master_Animated_Object *, int);
  RGE_Static_Object *(__thiscall *make_new_obj)(RGE_Master_Animated_Object *, RGE_Player *, float, float, float);
  RGE_Master_Static_Object *(__thiscall *make_new_master)(RGE_Master_Animated_Object *);
  unsigned __int8 (__thiscall *check_placement)(RGE_Master_Animated_Object *, RGE_Player *, float, float, int *, unsigned __int8, unsigned __int8, unsigned __int8, unsigned __int8, unsigned __int8, unsigned __int8, RGE_Static_Object *, unsigned __int8);
  unsigned __int8 (__thiscall *alignment)(RGE_Master_Animated_Object *, float *, float *, RGE_Game_World *, unsigned __int8);
  int (__thiscall *calc_base_damage_ability)(RGE_Master_Animated_Object *, RGE_Master_Combat_Object *);
  void (__thiscall *play_command_sound)(RGE_Master_Animated_Object *, RGE_Player *);
  void (__thiscall *play_move_sound)(RGE_Master_Animated_Object *, RGE_Player *);
  void (__thiscall *draw)(RGE_Master_Animated_Object *, TDrawArea *, __int16, __int16, RGE_Color_Table *, int, int, int, unsigned __int8);
  float (__thiscall *maximumSpeed)(RGE_Master_Animated_Object *, int);
  float (__thiscall *acceleration)(RGE_Master_Animated_Object *, int);
  float (__thiscall *deceleration)(RGE_Master_Animated_Object *, int);
  float (__thiscall *getTurnRadius)(RGE_Master_Animated_Object *);
  float (__thiscall *getTurnRadiusSpeed)(RGE_Master_Animated_Object *);
  int (__thiscall *setTurnRadiusOffTurnSpeed)(RGE_Master_Animated_Object *);
  int (__thiscall *setTurnRadius)(RGE_Master_Animated_Object *, float, float);
  float (__thiscall *getMaximumYawPerSecondMoving)(RGE_Master_Animated_Object *);
  float (__thiscall *getMaximumYawPerSecondStationary)(RGE_Master_Animated_Object *);
  void (__thiscall *setStationaryYawRevolutionTime)(RGE_Master_Animated_Object *, float);
};
#pragma pack(pop)

/* 89 */
#pragma pack(push, 8)
struct RGE_Sound
{
  __int16 play_at_update_count;
  __int16 sound_num;
  RGE_Sound_Info *sounds;
  unsigned int cache_time;
  __int16 id;
};
#pragma pack(pop)

/* 562 */
#pragma pack(push, 8)
struct RGE_Damage_Sprite_Info
{
  RGE_Sprite *sprite;
  unsigned __int8 damage_percent;
  unsigned __int8 flag;
};
#pragma pack(pop)

/* 651 */
#pragma pack(push, 8)
struct TRIBE_PlayerVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Player *, unsigned int);
  int (__thiscall *unknown1)(TRIBE_Player *, int);
  void (__thiscall *set_game_status)(TRIBE_Player *, unsigned __int8);
  void (__thiscall *do_resign)(TRIBE_Player *, int);
  void (__thiscall *changeToHumanPlayer)(TRIBE_Player *);
  void (__thiscall *changeToComputerPlayer)(TRIBE_Player *);
  char *(__thiscall *aiStatus)(TRIBE_Player *, int);
  int (__thiscall *computerPlayer)(TRIBE_Player *);
  int (__thiscall *isEnemy)(TRIBE_Player *, int);
  int (__thiscall *isAlly)(TRIBE_Player *, int);
  int (__thiscall *isNeutral)(TRIBE_Player *, int);
  int (__thiscall *isAllNeutral)(TRIBE_Player *);
  void (__thiscall *setDiplomaticStance)(TRIBE_Player *, int, int);
  void (__thiscall *loadAIInformation)(TRIBE_Player *, char *, char *, char *, int, int);
  void (__thiscall *sendUnitAIOrder)(TRIBE_Player *, int, int, int, int, int, float, float, float, float, int, int, int);
  void (__thiscall *processAIOrder)(TRIBE_Player *, int, int, int, int, int, float, float, float, float, int, int, int);
  void (__thiscall *kickAI)(TRIBE_Player *, int);
  int (__thiscall *strategicNumber)(TRIBE_Player *, int);
  void (__thiscall *sendGameOrder)(TRIBE_Player *, RGE_Static_Object *, RGE_Static_Object *, float, float);
  void (__thiscall *sendAddWaypointCommand)(TRIBE_Player *, int, XYZBYTEPoint *, int);
  void (__thiscall *processAddWaypointCommand)(TRIBE_Player *, int, XYZBYTEPoint *, int);
  int (__thiscall *sendAICommand)(TRIBE_Player *, int, int, int, int, int);
  void (__thiscall *setTileExplored)(TRIBE_Player *, int, int);
  int (__thiscall *objectCostByType)(TRIBE_Player *, int);
  void (__thiscall *trackUnitGather)(TRIBE_Player *, int, int, int);
  RGE_Static_Object *(__thiscall *make_scenario_obj)(TRIBE_Player *, float, float, float, __int16, unsigned __int8, float);
  void (__thiscall *scenario_save)(TRIBE_Player *, int);
  void (__thiscall *scenario_load)(TRIBE_Player *, int, int *, float);
  void (__thiscall *scenario_postsave)(TRIBE_Player *, int);
  void (__thiscall *scenario_postload)(TRIBE_Player *, int, int *, float);
  void (__thiscall *load)(TRIBE_Player *, int);
  void (__thiscall *new_attribute_num)(TRIBE_Player *, __int16, float);
  void (__thiscall *add_attribute_num)(TRIBE_Player *, __int16, float, unsigned __int8);
  void (__thiscall *update)(TRIBE_Player *);
  void (__thiscall *update_dopplegangers)(TRIBE_Player *);
  void (__thiscall *save)(TRIBE_Player *, int);
  void (__thiscall *save2)(TRIBE_Player *, int);
  void (__thiscall *save_info)(TRIBE_Player *, int);
  void (__thiscall *random_start)(TRIBE_Player *);
  void (__thiscall *modify_tobj)(TRIBE_Player *, __int16, __int16, float, unsigned __int8);
  void (__thiscall *modify_tobj_delta)(TRIBE_Player *, __int16, __int16, float, unsigned __int8);
  void (__thiscall *modify_tobj_percent)(TRIBE_Player *, __int16, __int16, float, unsigned __int8);
  void (__thiscall *copy_obj)(TRIBE_Player *, __int16, __int16);
  void (__thiscall *effect_add_attribute)(TRIBE_Player *, __int16, float, unsigned __int8);
  void (__thiscall *effect_multiply_attribute)(TRIBE_Player *, __int16, float);
  RGE_Static_Object *(__thiscall *make_new_object)(TRIBE_Player *, int, float, float, float, int);
  unsigned __int8 (__thiscall *get_selected_objects_to_command)(TRIBE_Player *, RGE_Static_Object ***, __int16 *, __int16, __int16, __int16, __int16, unsigned __int8, unsigned __int8, unsigned int);
  void (__thiscall *analyize_selected_objects)(TRIBE_Player *);
  int (__thiscall *get_mouse_pointer_action_vars)(TRIBE_Player *, int, int, int, int, int, int *, int *);
  unsigned __int8 (__thiscall *command_make_move)(TRIBE_Player *, RGE_Static_Object *, float, float);
  unsigned __int8 (__thiscall *command_make_work)(TRIBE_Player *, RGE_Static_Object *, float, float);
  unsigned __int8 (__thiscall *command_make_do)(TRIBE_Player *, RGE_Static_Object *, float, float);
  unsigned __int8 (__thiscall *command_make_unit_do)(TRIBE_Player *, RGE_Static_Object *, RGE_Static_Object *, float, float);
  unsigned __int8 (__thiscall *command_stop)(TRIBE_Player *);
  unsigned __int8 (__thiscall *command_place_object)(TRIBE_Player *, __int16, float, float, float);
  unsigned __int8 (__thiscall *command_add_attribute)(TRIBE_Player *, int, float);
  unsigned __int8 (__thiscall *command_give_attribute)(TRIBE_Player *, int, int, float);
  unsigned __int8 (__thiscall *command_stand_ground)(TRIBE_Player *);
  unsigned __int8 (__thiscall *command_resign)(TRIBE_Player *, int, int);
  unsigned __int8 (__thiscall *command_add_waypoint)(TRIBE_Player *, float, float, float);
  unsigned __int8 (__thiscall *command_unit_ai_state)(TRIBE_Player *, unsigned __int8);
  unsigned __int8 (__thiscall *command_guard)(TRIBE_Player *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *command_follow)(TRIBE_Player *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *command_patrol)(TRIBE_Player *, unsigned __int8, float *, float *);
  unsigned __int8 (__thiscall *command_scout)(TRIBE_Player *, float, float);
  unsigned __int8 (__thiscall *command_form_formation)(TRIBE_Player *, int);
  unsigned __int8 (__thiscall *command_break_formation)(TRIBE_Player *, int);
  unsigned __int8 (__thiscall *command_wheel_formation)(TRIBE_Player *, int, int);
  unsigned __int8 (__thiscall *command_about_face_formation)(TRIBE_Player *, int);
  unsigned __int8 (__thiscall *command_lock_formation)(TRIBE_Player *, int, int);
  unsigned __int8 (__thiscall *command_formation_parameters)(TRIBE_Player *, int, int, int, int, float, int);
  unsigned __int8 (__thiscall *command_auto_formations)(TRIBE_Player *, int);
  RGE_Static_Object **(__thiscall *addObject)(TRIBE_Player *, RGE_Static_Object *, int, int);
  void (__thiscall *removeObject)(TRIBE_Player *, RGE_Static_Object *, int, int, RGE_Static_Object **);
  void (*logMessage)(TRIBE_Player *, char *, ...);
  void (__thiscall *notify)(TRIBE_Player *, int, int, int, int, int, int);
  void (__thiscall *notifyUnitDeath)(TRIBE_Player *, int, int);
  int (__thiscall *isInTacticalAIGroup)(TRIBE_Player *, int);
  void (__thiscall *logStatus)(TRIBE_Player *, FILE *, int);
  void (__thiscall *load_victory)(TRIBE_Player *, int, int *, unsigned __int8);
  void (__thiscall *new_victory)(TRIBE_Player *);
  void (__thiscall *open_gates_for_pathing)(TRIBE_Player *, int);
  void (__thiscall *close_gates_for_pathing)(TRIBE_Player *, int);
  int (__thiscall *isGateLocked)(TRIBE_Player *, int);
  void (__thiscall *setGateLocked)(TRIBE_Player *, int, int);
  int (__thiscall *closeGate)(TRIBE_Player *, int);
  int (__thiscall *openGate)(TRIBE_Player *, int);
  unsigned __int8 (__thiscall *command_give_attribute_2)(TRIBE_Player *, int, int, float, float);
  void (__thiscall *addResource)(TRIBE_Player *, int, int);
  void (__thiscall *registerTrigger)(TRIBE_Player *, int);
  void (__thiscall *buildObject)(TRIBE_Player *, int, int, float, float, int);
  void (__thiscall *buildWall)(TRIBE_Player *, int, int, int, int, int, int, int);
  void (__thiscall *cancelBuild)(TRIBE_Player *, int, int, int, float, float, int, int);
  void (__thiscall *registerBuild)(TRIBE_Player *, RGE_Static_Object *, int);
  void (__thiscall *trainUnit)(TRIBE_Player *, int, int, int);
  void (__thiscall *cancelTrain)(TRIBE_Player *, int, int, int, int);
  void (__thiscall *registerTrain)(TRIBE_Player *, int, int, int, int);
  void (__thiscall *research)(TRIBE_Player *, int, int, int);
  void (__thiscall *cancelResearch)(TRIBE_Player *, int, int, int, int);
  void (__thiscall *registerResearch)(TRIBE_Player *, int, int, int);
  void (__thiscall *spy)(TRIBE_Player *);
  void (__thiscall *taskTrader)(TRIBE_Player *, int, int, int, float, float);
  void (__thiscall *taskResourceGatherer)(TRIBE_Player *, int, int, int, float, float);
  void (__thiscall *notifyAI)(TRIBE_Player *, int, int, int, int, int, int);
  int (__thiscall *convertMasterTypeToFormationType)(TRIBE_Player *, int);
};
#pragma pack(pop)

/* 169 */
#pragma pack(push, 8)
struct RGE_Player_Object_List
{
  RGE_Player_Object_ListVtbl *vfptr;
  RGE_Static_Object **List;
  int Number_of_objects;
  int ListSize;
  int GrowSize;
  unsigned __int8 DeletingAll;
  unsigned __int8 RGE_Player_Object_List_gap[3];
};
#pragma pack(pop)

/* 257 */
#pragma pack(push, 8)
struct RGE_Victory_Conditions
{
  RGE_Victory_ConditionsVtbl *vfptr;
  RGE_Victory_Entry *victory_list;
  int list_num;
  RGE_Player *player;
  unsigned __int8 victory;
  RGE_Victory_Point_Entry *victory_point_list;
  int point_list_num;
  int tot_victory_points;
  int starting_points;
  int starting_group;
};
#pragma pack(pop)

/* 88 */
#pragma pack(push, 8)
struct RGE_Visible_Map
{
  unsigned __int8 **map_offsets;
  RGE_Game_World *world;
  RGE_Player *player;
  RGE_Map *map;
  unsigned __int8 *visible_map;
  int widthValue;
  int heightValue;
  int numberTilesExploredValue;
  int numberTotalTilesValue;
  unsigned int PlayerVisibleMaskValue;
  unsigned int PlayerVisibleMaskInvertValue;
  unsigned int PlayerExploredMaskValue;
  unsigned int PlayerExploredMaskInvertValue;
  unsigned int input_csum;
};
#pragma pack(pop)

/* 73 */
#pragma pack(push, 8)
struct TRIBE_World
{
  TRIBE_WorldVtbl *vfptr;
  eSaveLoadModes_e eSaveLoadModes;
  unsigned int mExpertSystemChecksum;
  TCommunications_Handler *com_handler;
  unsigned int world_time;
  unsigned int old_world_time;
  unsigned int world_time_delta;
  float timer;
  unsigned int old_time;
  float game_speed;
  unsigned __int8 temp_pause;
  unsigned __int8 game_state;
  unsigned __int8 game_end_condition;
  int sound_update_index;
  int sprite_update_index;
  RGE_Map *map;
  __int16 sound_num;
  RGE_Sound **sounds;
  __int16 sprite_num;
  RGE_Sprite **sprites;
  __int16 player_num;
  TRIBE_Player **players;
  __int16 master_player_num;
  RGE_Master_Player **master_players;
  RGE_Effects *effects;
  __int16 terrain_num;
  __int16 terrain_size;
  float **terrains;
  RGE_Extra_Terrain_Table **extra_terrain_info;
  TRIBE_Command *commands;
  RGE_Scenario *scenario;
  RGE_Sprite_Particle_System *particle_system;
  RGE_Map_Analysis_System *map_analysis_system;
  __int16 color_table_num;
  RGE_Color_Table **color_tables;
  int next_object_id;
  int next_reusable_object_id;
  int scenario_object_id;
  unsigned __int8 scenario_object_flag;
  unsigned int random_seed;
  __int16 curr_player;
  float view_x;
  float view_y;
  float sound_falloff_ratio;
  TSound_Driver *sound_driver;
  float world_time_delta_seconds;
  RGE_Static_Object **objectsValue;
  int numberObjectsValue;
  int maxNumberObjectsValue;
  RGE_Static_Object **negativeObjectsValue;
  int numberNegativeObjectsValue;
  int maxNumberNegativeObjectsValue;
  int campaign;
  int campaign_player;
  int campaign_scenario;
  int player_turn;
  unsigned int player_time_delta[9];
  RGE_Object_List *reusable_static_objects;
  RGE_Object_List *reusable_animated_objects;
  RGE_Object_List *reusable_moving_objects;
  RGE_Object_List *reusable_action_objects;
  RGE_Object_List *reusable_combat_objects;
  RGE_Object_List *reusable_missile_objects;
  RGE_Object_List *reusable_doppleganger_objects;
  unsigned int maximumComputerPlayerUpdateTime;
  unsigned int availableComputerPlayerUpdateTime;
  int currentUpdateComputerPlayer;
  char auto_save_name[100];
  int auto_save_count;
  int auto_save_timer;
  RGE_Task_List **tasks;
  int task_count;
  int gbg_unknown_1;
  int gbg_unknown_2;
  int gbg_unknown_3;
  int gbg_unknown_4;
  int gbg_unknown_5;
  int gbg_unknown_6;
  int difficultyLevelValue;
  int allianceLocked;
  BPath paths;
  int numberPathsValue;
  int pathIDCounterValue;
  BUnitGroup *unitGroups;
  int mNumberUnitGroups;
  int mUnitGroupCounter;
  BContextAnalyzer *mContextAnalyzer;
  unsigned int mReplayTimeStart;
  unsigned int mReplayRecordedInterval;
  unsigned int mReplayPauseTime;
  TRIBE_Tech *tech;
  AIExpert *expert;
  TribeAIFacts *facts;
  int victory_type;
  int artifact_count;
  int ruin_count;
  unsigned __int8 countdown_victory;
  float countdown_clock;
  unsigned __int8 score_displayed;
  unsigned __int8 time_displayed;
  unsigned __int8 controllingComputerPlayer;
  float world_start_default_price;
  float world_min_price;
  float world_max_price;
  float world_price_delta;
  float world_wood_price;
  float world_food_price;
  float world_stone_price;
  float world_ore_price;
  int wood_price_delta;
  float old_wood_price_adj;
  int stone_price_delta;
  float old_stone_price_adj;
  int food_price_delta;
  float old_food_price_adj;
  int ore_price_delta;
  float old_ore_price_adj;
  unsigned int last_trade_update_time;
  int world_wood_inven;
  int world_food_inven;
  int world_stone_inven;
  int world_ore_inven;
  int time_slice;
  int unit_kill_rate;
  int unit_kill_total;
  int unit_hit_point_rate;
  int unit_hit_point_total;
  int razing_kill_rate;
  int razing_kill_total;
  unsigned __int8 relic_hun_bonus;
  unsigned __int8 relicwarned500years;
  unsigned __int8 relicwarned1000years;
  unsigned __int8 relic_countdown_going_on;
  unsigned __int8 playerTeams[9];
  unsigned __int8 timedwarned500years;
  unsigned __int8 timedwarned1000years;
  unsigned __int8 ruinwarned500years;
  unsigned __int8 ruinwarned1000years;
  float global_ruin_countdown_clock;
  TRIBE_Trigger_System *trigger_system;
  TRIBE_Tech_Tree *tech_tree_help;
  RGE_Object_List *wonders;
  int sent_zone_score;
};
#pragma pack(pop)

/* 197 */
#pragma pack(push, 8)
struct RGE_Doppleganger_Creator
{
  RGE_Player *owner;
  int allocated_size;
  int active_size;
  RGE_Static_Object **Objects;
  unsigned int **Map_Addresses;
  unsigned int *Last_Map_Value;
  int *Object_ids;
};
#pragma pack(pop)

/* 210 */
#pragma pack(push, 8)
struct RGE_Visible_Object_Updator
{
  RGE_Player *owner;
  int ObjectListSize;
  int ObjectListUsed;
  vis_Upd_info *List;
  unsigned __int8 *SizeList;
};
#pragma pack(pop)

/* 263 */
#pragma pack(push, 8)
struct RGE_Tile_List_Node
{
  int col;
  int row;
};
#pragma pack(pop)

/* 196 */
#pragma pack(push, 8)
struct Visible_Resource_Manager
{
  VISIBLE_RESOURCE_REC **VR_List;
  int *VR_ListSize;
  int *VR_ListUsed;
  RGE_Player *owner;
  int num_visible_resource_lists;
};
#pragma pack(pop)

/* 648 */
#pragma pack(push, 8)
struct RGE_View_Stack
{
  float X;
  float Y;
};
#pragma pack(pop)

/* 649 */
#pragma pack(push, 8)
struct Combat_Notifications
{
  int attacked_obj_id;
  int count;
  int player_id;
  float x;
  float y;
  unsigned __int8 flags;
  Combat_Notifications *next;
};
#pragma pack(pop)

/* 297 */
#pragma pack(push, 1)
struct TribeMainDecisionAIModule
{
};
#pragma pack(pop)

/* 211 */
#pragma pack(push, 8)
struct TRIBE_History_Info
{
  TRIBE_History_Entry *history;
  TRIBE_History_Events *events;
  TRIBE_Player *player;
  int number_of_events;
  int number_of_entries;
  int max_number_of_entries;
  int update_history_count;
  int old_total_razings;
  int old_build_value_razings;
  int old_total_razings_other;
  int old_build_value_razings_other;
  int old_total_kills;
  int old_build_value_kills;
  int old_total_kills_other;
  int old_build_value_kills_other;
  float razings_weight;
  float kills_weight;
  float razing_percent;
  float kills_perecent;
  int razings_flag;
  int battle_flag;
  unsigned int old_current_build_value_units;
  unsigned int old_current_build_value_buildings;
  unsigned __int16 old_player_kills[8];
  unsigned int old_player_kill_BV[8];
  unsigned __int16 old_player_razings[8];
  unsigned int old_player_razing_BV[8];
  float running_ave_BV_percent;
  unsigned int running_total_BV_kills;
  unsigned int running_total_BV_razings;
  unsigned __int16 running_total_kills;
  unsigned __int16 running_total_razings;
};
#pragma pack(pop)

/* 138 */
#pragma pack(push, 8)
struct RGE_Object_List
{
  RGE_Object_ListVtbl *vfptr;
  RGE_Object_Node *list;
  __int16 number_of_objects;
  RGE_Object_Node *next_node;
};
#pragma pack(pop)

/* 81 */
#pragma pack(push, 8)
struct TShape
{
  int load_type;
  int load_size;
  Shape_Clip_Mask **ClipMasks;
  Shape_File_Header *FShape;
  Shape_Info *shape_info;
  unsigned __int8 Is_Loaded;
  int Num_Shapes;
};
#pragma pack(pop)

/* 777 */
#pragma pack(push, 8)
struct RGE_Picture_List
{
  __int16 picture_num;
  RGE_Sprite *sprite;
  __int16 offset_x;
  __int16 offset_y;
  __int16 facet;
};
#pragma pack(pop)

/* 778 */
#pragma pack(push, 8)
struct RGE_Sound_List
{
  RGE_Sound *sound[3];
  __int16 frame[3];
};
#pragma pack(pop)

/* 856 */
#pragma pack(push, 8)
struct RGE_Active_Sprite_ListVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Active_Sprite_List *, unsigned int);
  __int16 (__thiscall *frame)(RGE_Active_Sprite_List *, RGE_Sprite *);
  void (__thiscall *update)(RGE_Active_Sprite_List *, float, float);
  void (__thiscall *draw)(RGE_Active_Sprite_List *, __int16, __int16, __int16, __int16, __int16, RGE_Color_Table *, TDrawArea *);
  void (__thiscall *normal_draw)(RGE_Active_Sprite_List *, __int16, __int16, __int16, RGE_Color_Table *, TDrawArea *);
  void (__thiscall *shadow_draw)(RGE_Active_Sprite_List *, __int16, __int16, __int16, RGE_Color_Table *, TDrawArea *, unsigned __int8);
  unsigned __int8 (__thiscall *is_animating)(RGE_Active_Sprite_List *, RGE_Sprite *);
  void (__thiscall *set_frame)(RGE_Active_Sprite_List *, RGE_Sprite *, __int16);
  void (__thiscall *set_facet)(RGE_Active_Sprite_List *, __int16, int, int);
  unsigned __int8 (__thiscall *frame_passed)(RGE_Active_Sprite_List *, RGE_Sprite *, __int16);
  unsigned __int8 (__thiscall *looped)(RGE_Active_Sprite_List *, RGE_Sprite *);
  __int16 (__thiscall *get_facetindex)(RGE_Active_Sprite_List *, RGE_Sprite *, __int16);
  unsigned __int8 (__thiscall *load_node)(RGE_Active_Sprite_List *, int, unsigned __int8, RGE_Sprite **);
};
#pragma pack(pop)

/* 217 */
#pragma pack(push, 8)
struct RGE_Active_Sprite_Node
{
  RGE_Active_Sprite *node;
  unsigned __int8 order;
  unsigned __int8 flag;
  unsigned __int8 count;
  RGE_Active_Sprite_Node *next;
};
#pragma pack(pop)

/* 143 */
#pragma pack(push, 8)
struct RGE_Sprite_Particle
{
  int pixel_offset_x;
  int pixel_offset_y;
  int start_time;
  int facet;
  int update_passes_untill_deletion;
  int frame_duration;
  int update_array_index;
  float x;
  float y;
  float z;
  RGE_Sprite *sprite;
  RGE_Tile *tile;
  RGE_Sprite_Particle *next;
  RGE_Sprite_Particle *prev;
  RGE_Sprite_Particle *update_next;
  RGE_Sprite_Particle *tile_next;
  RGE_Sprite_Particle *tile_prev;
  unsigned __int8 flags;
};
#pragma pack(pop)

/* 652 */
#pragma pack(push, 8)
struct RGE_Static_ObjectVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Static_Object *, unsigned int);
  int (__thiscall *gbg_unknown1)(RGE_Static_Object *);
  int (__thiscall *gbg_get_civ_override)(RGE_Static_Object *);
  unsigned __int8 (__thiscall *gbg_unknown3)(RGE_Static_Object *);
  unsigned __int8 (__thiscall *gbg_unknown4)(RGE_Static_Object *);
  unsigned __int8 (__thiscall *gbg_unknown5)(RGE_Static_Object *);
  unsigned __int8 (__thiscall *gbg_unknown6)(RGE_Static_Object *);
  unsigned __int8 (__thiscall *gbg_unknown7)(RGE_Static_Object *);
  unsigned __int8 (__thiscall *gbg_unknown8)(RGE_Static_Object *);
  unsigned __int8 (__thiscall *gbg_unknown9)(RGE_Static_Object *);
  unsigned __int8 (__thiscall *gbg_unknown10)(RGE_Static_Object *);
  unsigned __int8 (__thiscall *gbg_unknown11)(RGE_Static_Object *);
  unsigned __int8 (__thiscall *gbg_isPadawan)(RGE_Static_Object *);
  unsigned __int8 (__thiscall *gbg_isMaster)(RGE_Static_Object *);
  unsigned __int8 (__thiscall *gbg_unknown14)(RGE_Static_Object *);
  unsigned __int8 (__thiscall *gbg_isShielded)(RGE_Static_Object *);
  void (__thiscall *gbg_unknown16)(RGE_Static_Object *);
  void (__thiscall *gbg_unknown17)(RGE_Static_Object *);
  unsigned __int8 (__thiscall *gbg_unknown18)(RGE_Static_Object *, int);
  unsigned __int8 (__thiscall *gbg_isDetector)(RGE_Static_Object *);
  unsigned __int8 (__thiscall *gbg_unknown20)(RGE_Static_Object *, int);
  unsigned __int8 (__thiscall *gbg_isPowered)(RGE_Static_Object *, int);
  void (__thiscall *gbg_unknown22)(RGE_Static_Object *);
  unsigned __int8 (__thiscall *gbg_unknown23)(RGE_Static_Object *);
  unsigned __int8 (__thiscall *gbg_isBiological)(RGE_Static_Object *);
  unsigned __int8 (__thiscall *gbg_isDamaged)(RGE_Static_Object *);
  unsigned __int8 (__thiscall *gbg_unknown26)(RGE_Static_Object *);
  unsigned __int8 (__thiscall *gbg_canBeHealedByPlayer)(RGE_Static_Object *, int);
  unsigned __int8 (__thiscall *gbg_canBeRepairedByPlayer)(RGE_Static_Object *, int);
  void (__thiscall *recycle_in_to_game)(RGE_Static_Object *, RGE_Master_Static_Object *, RGE_Player *, float, float, float);
  void (__thiscall *recycle_out_of_game)(RGE_Static_Object *);
  void (__thiscall *draw)(RGE_Static_Object *, TDrawArea *, __int16, __int16, RGE_Color_Table *);
  void (__thiscall *shadow_draw)(RGE_Static_Object *, TDrawArea *, __int16, __int16, unsigned __int8);
  void (__thiscall *normal_draw)(RGE_Static_Object *, TDrawArea *, __int16, __int16);
  void (__thiscall *draw_front_frame)(RGE_Static_Object *, TDrawArea *, __int16, __int16);
  void (__thiscall *draw_back_frame)(RGE_Static_Object *, TDrawArea *, __int16, __int16);
  void (__thiscall *draw_frame)(RGE_Static_Object *, TDrawArea *, __int16, __int16);
  unsigned __int8 (__thiscall *update)(RGE_Static_Object *);
  void (__thiscall *check_damage_sprites)(RGE_Static_Object *);
  void (__thiscall *rehook)(RGE_Static_Object *);
  void (__thiscall *save)(RGE_Static_Object *, int);
  void (__thiscall *teleport_off_map)(RGE_Static_Object *);
  float (__thiscall *teleport)(RGE_Static_Object *, float, float, float);
  float (__thiscall *handle_teleport_z_correction)(RGE_Static_Object *, float);
  void (__thiscall *new_sprite)(RGE_Static_Object *, RGE_Sprite *);
  void (__thiscall *add_overlay_sprite)(RGE_Static_Object *, RGE_Sprite *, unsigned __int8);
  void (__thiscall *remove_overlay_sprite)(RGE_Static_Object *, RGE_Sprite *);
  void (__thiscall *change_ownership)(RGE_Static_Object *, RGE_Player *);
  void (__thiscall *modify)(RGE_Static_Object *, float, unsigned __int8);
  void (__thiscall *modify_delta)(RGE_Static_Object *, float, unsigned __int8);
  void (__thiscall *modify_percent)(RGE_Static_Object *, float, unsigned __int8);
  void (__thiscall *transform)(RGE_Static_Object *, RGE_Master_Static_Object *);
  void (__thiscall *copy_obj)(RGE_Static_Object *, RGE_Master_Static_Object *);
  void (__thiscall *set_object_state)(RGE_Static_Object *, unsigned __int8);
  void (__thiscall *remove_visible_resource)(RGE_Static_Object *);
  void (__thiscall *create_doppleganger_when_dying)(RGE_Static_Object *);
  void (__thiscall *destroy_obj)(RGE_Static_Object *);
  void (__thiscall *die_die_die)(RGE_Static_Object *);
  void (__thiscall *damage)(RGE_Static_Object *, int, RGE_Armor_Weapon_Info *, float, RGE_Player *, RGE_Static_Object *, int);
  float (__thiscall *calculateDamage)(RGE_Static_Object *, int, RGE_Armor_Weapon_Info *, float, RGE_Player *, RGE_Static_Object *);
  void (__thiscall *rotate)(RGE_Static_Object *, int);
  unsigned __int8 (__thiscall *can_attack)(RGE_Static_Object *);
  void (__thiscall *set_attribute)(RGE_Static_Object *, __int16, float);
  void (__thiscall *set_attribute_amount)(RGE_Static_Object *, float, unsigned __int8, unsigned __int8);
  int (__thiscall *heal_2)(RGE_Static_Object *, int, int);
  unsigned __int8 (__thiscall *heal_1)(RGE_Static_Object *, float);
  int (__thiscall *canRepair)(RGE_Static_Object *);
  void (__thiscall *notify_of_relation)(RGE_Static_Object *, int, unsigned __int8);
  void (__thiscall *do_command)(RGE_Static_Object *, RGE_Static_Object *, float, float, float);
  int (__thiscall *actionTypeIfOrdered)(RGE_Static_Object *, RGE_Static_Object *, float, float, float, float *);
  unsigned __int8 (__thiscall *move_to)(RGE_Static_Object *, RGE_Static_Object *, float, float, float);
  void (__thiscall *work)(RGE_Static_Object *, RGE_Static_Object *, float, float, float);
  void (__thiscall *stop)(RGE_Static_Object *);
  void (__thiscall *set_attack)(RGE_Static_Object *, RGE_Static_Object *);
  void (__thiscall *play_command_sound)(RGE_Static_Object *);
  void (__thiscall *play_move_sound)(RGE_Static_Object *);
  void (__thiscall *new_angle)(RGE_Static_Object *, float);
  RGE_Static_Object *(__thiscall *spawn_death_obj)(RGE_Static_Object *);
  RGE_Master_Static_Object *(__thiscall *get_command_master)(RGE_Static_Object *, RGE_Static_Object *, float, float, float);
  void (__thiscall *set_being_worked_on)(RGE_Static_Object *, RGE_Action_Object *, __int16, unsigned __int8);
  void (__thiscall *release_being_worked_on)(RGE_Static_Object *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *is_moving)(RGE_Static_Object *);
  RGE_Static_Object *(__thiscall *get_target_obj)(RGE_Static_Object *);
  unsigned __int8 (__thiscall *more_room)(RGE_Static_Object *, RGE_Static_Object *);
  void (__thiscall *enter_obj)(RGE_Static_Object *, RGE_Static_Object *, unsigned __int8);
  void (__thiscall *exit_obj)(RGE_Static_Object *);
  void (__thiscall *add_obj)(RGE_Static_Object *, RGE_Static_Object *);
  void (__thiscall *remove_obj)(RGE_Static_Object *, RGE_Static_Object *);
  int (__thiscall *explore_terrain)(RGE_Static_Object *, RGE_Player *, unsigned __int8, int, int);
  void (__thiscall *unexplore_terrain)(RGE_Static_Object *, RGE_Player *, unsigned __int8, int, int);
  LOSTBL *(__thiscall *get_los_table)(RGE_Static_Object *);
  unsigned __int8 (__thiscall *get_visibility)(RGE_Static_Object *, RGE_Player *);
  int (__thiscall *inAttackRange)(RGE_Static_Object *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *underAttack)(RGE_Static_Object *);
  void (__thiscall *setUnderAttack)(RGE_Static_Object *, unsigned __int8);
  float (__thiscall *calc_attack_modifier)(RGE_Static_Object *, RGE_Static_Object *);
  float (__thiscall *getSpeed)(RGE_Static_Object *);
  float (__thiscall *getAngle)(RGE_Static_Object *);
  float (__thiscall *maximumSpeed)(RGE_Static_Object *);
  float (__thiscall *rateOfFire)(RGE_Static_Object *);
  float (__thiscall *damageCapability_2)(RGE_Static_Object *, RGE_Static_Object *);
  float (__thiscall *damageCapability_1)(RGE_Static_Object *);
  float (__thiscall *weaponRange)(RGE_Static_Object *);
  float (__thiscall *minimumWeaponRange)(RGE_Static_Object *);
  int (__thiscall *passableTile_2)(RGE_Static_Object *, float, float, int *, int);
  int (__thiscall *passableTile_1)(RGE_Static_Object *, float, float);
  int (__thiscall *currentTargetID)(RGE_Static_Object *);
  float (__thiscall *currentTargetX)(RGE_Static_Object *);
  float (__thiscall *currentTargetY)(RGE_Static_Object *);
  float (__thiscall *currentTargetZ)(RGE_Static_Object *);
  void (__thiscall *setWaitingToMove)(RGE_Static_Object *, unsigned __int8);
  unsigned __int8 (__thiscall *waitingToMove)(RGE_Static_Object *);
  unsigned __int8 (__thiscall *actionState)(RGE_Static_Object *);
  unsigned __int8 (__thiscall *keepGatheringWhenObjectIsOut)(RGE_Static_Object *, int);
  unsigned __int8 (__thiscall *produceWhenKilledBy)(RGE_Static_Object *, int);
  unsigned __int8 (__thiscall *useSameZoneDropsite)(RGE_Static_Object *);
  float (__thiscall *searchRadius)(RGE_Static_Object *);
  unsigned __int8 (__thiscall *is_idle)(RGE_Static_Object *);
  void (*logDebug)(RGE_Static_Object *, char *, ...);
  void (*debug)(RGE_Static_Object *, char *, ...);
  void (__thiscall *notify)(RGE_Static_Object *, int, int, int, int, int, int);
  int (__thiscall *attack_2)(RGE_Static_Object *, float, float, float, int);
  int (__thiscall *attack_1)(RGE_Static_Object *, int, int);
  int (__thiscall *moveTo_3)(RGE_Static_Object *, float, float, float, float, int, int);
  int (__thiscall *moveTo_2)(RGE_Static_Object *, int, float, int);
  int (__thiscall *moveTo_1)(RGE_Static_Object *, int, int);
  int (__thiscall *moveAwayFrom)(RGE_Static_Object *, int, int);
  int (__thiscall *hunt)(RGE_Static_Object *, int, int);
  int (__thiscall *gather)(RGE_Static_Object *, int, int);
  int (__thiscall *convert)(RGE_Static_Object *, int, int);
  int (__thiscall *repair)(RGE_Static_Object *, int, int);
  int (__thiscall *build)(RGE_Static_Object *, int, int);
  int (__thiscall *trade)(RGE_Static_Object *, int, int);
  int (__thiscall *explore)(RGE_Static_Object *, int, int, int);
  int (__thiscall *enter)(RGE_Static_Object *, int, int);
  int (__thiscall *unload)(RGE_Static_Object *, int, float, float, float);
  int (__thiscall *transport)(RGE_Static_Object *, float, float, float, int);
  int (__thiscall *stopAction)(RGE_Static_Object *);
  int (__thiscall *pause)(RGE_Static_Object *);
  int (__thiscall *canPath_2)(RGE_Static_Object *, int, float, float *, int, int, bool);
  int (__thiscall *canPath_1)(RGE_Static_Object *, XYZPoint, float, int, float *, int, int, bool);
  int (__thiscall *canQuickPath)(RGE_Static_Object *, int, float, float *);
  int (__thiscall *canPathWithObstructions)(RGE_Static_Object *, int, float, float *, int, int, ManagedArray_int_ *);
  int (__thiscall *canPathWithAdditionalPassability)(RGE_Static_Object *, XYZPoint, float, int, float *, int, int, int, int, int, BPath *);
  int (__thiscall *findFirstTerrainAlongExceptionPath)(RGE_Static_Object *, int, float *, float *, BPath *);
  int (__thiscall *canLinePath_2)(RGE_Static_Object *, int, int, int, int, float, int);
  int (__thiscall *canLinePath_1)(RGE_Static_Object *, const XYPoint *, const XYPoint *, float, XYPoint *, int);
  int (__thiscall *firstTileAlongLine)(RGE_Static_Object *, const XYPoint *, const XYPoint *, XYPoint *, int, int, int);
  unsigned __int8 (__thiscall *have_action)(RGE_Static_Object *);
  int (__thiscall *gameActionType)(RGE_Static_Object *);
  BVector *(__thiscall *userDefinedWaypoint)(RGE_Static_Object *, int);
  int (__thiscall *addUserDefinedWaypoint)(RGE_Static_Object *, float, float, float);
  void (__thiscall *zeroUserDefinedWaypoints)(RGE_Static_Object *);
  void (__thiscall *removeAllUserDefinedWaypoints)(RGE_Static_Object *);
  int (__thiscall *numberUserDefinedWaypoints)(RGE_Static_Object *);
  BPath *(__thiscall *getPatrolInformation)(RGE_Static_Object *, int *);
  float (__thiscall *distanceToHighestLevelPath_2)(RGE_Static_Object *, BVector);
  float (__thiscall *distanceToHighestLevelPath_1)(RGE_Static_Object *);
  BPath *(__thiscall *findAvoidancePath)(RGE_Static_Object *, XYZPoint *, float, int);
  int (__thiscall *get_action_checksum)(RGE_Static_Object *);
  int (__thiscall *get_waypoint_checksum)(RGE_Static_Object *);
  void (__thiscall *setPatrolMode)(RGE_Static_Object *, unsigned __int8);
  int (__thiscall *garrisoned_count)(RGE_Static_Object *);
  int (__thiscall *lock_down)(RGE_Static_Object *);
  int (__thiscall *unlock_down)(RGE_Static_Object *);
  int (__thiscall *get_locked_down_count)(RGE_Static_Object *);
  float (__thiscall *getTradeAmount)(RGE_Static_Object *, float, float, float, float);
  int (__thiscall *setup_2)(RGE_Static_Object *, int, RGE_Game_World *);
  int (__thiscall *setup_1)(RGE_Static_Object *, RGE_Master_Static_Object *, RGE_Player *, float, float, float);
  RGE_New_Object_List *(__thiscall *create_object_list)(RGE_Static_Object *);
  RGE_Active_Sprite_List *(__thiscall *create_sprite_list)(RGE_Static_Object *);
  BVector *(__thiscall *position)(RGE_Static_Object *, BVector *);
  BPathData *(__thiscall *getPathData)(RGE_Static_Object *);
  int (__thiscall *actionType)(RGE_Static_Object *);
  int (__thiscall *hasActionOfType)(RGE_Static_Object *, int);
  int (__thiscall *gbg_hasActionOfType2)(RGE_Static_Object *, int);
  int (__thiscall *addMove)(RGE_Static_Object *, int, float, int, int, int);
  int (__thiscall *addCurrentPath)(RGE_Static_Object *, BPath *, int, float, int);
  int (__thiscall *addFuturePath)(RGE_Static_Object *, BPath *, int, float, int);
  void (__thiscall *stopAllMovement)(RGE_Static_Object *);
  void (__thiscall *setOrientation)(RGE_Static_Object *, BVector *, BVector *);
  BVector *(__thiscall *velocity)(RGE_Static_Object *, BVector *);
  void (__thiscall *setVelocity)(RGE_Static_Object *, BVector *);
  BVector *(__thiscall *acceleration)(RGE_Static_Object *, BVector *);
  void (__thiscall *setAcceleration)(RGE_Static_Object *, BVector *);
  float (__thiscall *forwardVelocity)(RGE_Static_Object *);
  void (__thiscall *setForwardVelocity)(RGE_Static_Object *, float);
  float (__thiscall *forwardAcceleration)(RGE_Static_Object *);
  void (__thiscall *setForwardAcceleration)(RGE_Static_Object *, float);
  void (__thiscall *moveForward)(RGE_Static_Object *, float);
  void (__thiscall *setPosition)(RGE_Static_Object *, BVector *);
  void (__thiscall *yaw)(RGE_Static_Object *, float);
  int (__thiscall *isMoving)(RGE_Static_Object *);
  void (__thiscall *stopMoving)(RGE_Static_Object *);
  float (__thiscall *calculateFutureVelocity)(RGE_Static_Object *, float, float, float, BVector *);
  unsigned int (__thiscall *lastMoveTime)(RGE_Static_Object *);
  void (__thiscall *pauseMovement)(RGE_Static_Object *, float);
  int (__thiscall *movementPriority)(RGE_Static_Object *);
  int (__thiscall *intelligentMovementUpdate)(RGE_Static_Object *);
  float (__thiscall *calculateMaximumSpeed)(RGE_Static_Object *, int);
  int (__thiscall *calculateForward)(RGE_Static_Object *, BVector *, BVector *, BVector *);
  float (__thiscall *calculateYawAngle)(RGE_Static_Object *, BVector *, BVector *, float, int *);
  int (__thiscall *calculateReachedPoint)(RGE_Static_Object *, BVector *, BVector *, BVector *);
  float (__thiscall *calculateTurnRadius)(RGE_Static_Object *);
  int (__thiscall *checkAcceleration)(RGE_Static_Object *, BVector *, int, int);
  BVector *(__thiscall *straightProjectedPosition)(RGE_Static_Object *, BVector *, BVector *, float);
  int (__thiscall *onPatrol)(RGE_Static_Object *);
  BVector *(__thiscall *orientationForward)(RGE_Static_Object *, BVector *);
  int (__thiscall *setRunSprite)(RGE_Static_Object *);
  int (__thiscall *setMoveSprite)(RGE_Static_Object *);
  int (__thiscall *setFidgetSprite)(RGE_Static_Object *);
  int (__thiscall *getGateLocked)(RGE_Static_Object *);
  void (__thiscall *setGateLocked)(RGE_Static_Object *, int);
  int (__thiscall *isGateOpenable)(RGE_Static_Object *, int);
  int (__thiscall *getLinkedChild)(RGE_Static_Object *, int);
  int (__thiscall *get_next_selected_group)(RGE_Static_Object *, int);
  __int16 (__thiscall *get_Selected_Groups)(RGE_Static_Object *);
  void (__thiscall *set_Selected_Groups)(RGE_Static_Object *, __int16);
  int (__thiscall *get_num_Selected_groups)(RGE_Static_Object *);
};
#pragma pack(pop)

/* 959 */
#pragma pack(push, 8)
struct UnitAIModuleVtbl
{
  void *(__thiscall *__vecDelDtor)(UnitAIModule *, unsigned int);
  void (__thiscall *save)(UnitAIModule *, int);
  void (__thiscall *load)(UnitAIModule *, int);
  RGE_Player *(__thiscall *owner)(UnitAIModule *);
  int (__thiscall *order)(UnitAIModule *, int, int, int, int, float, float, float, float, int, int, int);
  int (__thiscall *notify)(UnitAIModule *, int, int, int, int, int, int);
  int (__thiscall *notifyCommander_2)(UnitAIModule *, int, int, int, int, int, int);
  int (__thiscall *notifyCommander_1)(UnitAIModule *, NotifyEvent *);
  void (__thiscall *search)(UnitAIModule *, float, float, bool);
  int (__thiscall *importantWhenDead)(UnitAIModule *, int);
  int (__thiscall *retryableOrder)(UnitAIModule *, int);
  int (__thiscall *actionRequiresLiveTarget)(UnitAIModule *, int);
  int (__thiscall *mostDangerousEnemy)(UnitAIModule *, float *);
  int (__thiscall *weakestEnemy)(UnitAIModule *, float *);
  int (__thiscall *closestAttacker)(UnitAIModule *, float *);
  int (__thiscall *closestObject)(UnitAIModule *, int, int, int, int, int, int *);
  int (__thiscall *closestResourceObject)(UnitAIModule *, int, int, int, int *);
  int (__thiscall *closestUndiscoveredTile)(UnitAIModule *, int *, int *, int);
  void (*logDebug)(UnitAIModule *, char *, ...);
  int (__thiscall *canAttackUnit)(UnitAIModule *, RGE_Static_Object *);
  int (__thiscall *canAttackUnitAtNeutrality)(UnitAIModule *, int);
  int (__thiscall *stopObject)(UnitAIModule *, int);
  int (__thiscall *attackObject)(UnitAIModule *, int, int);
  int (__thiscall *attackRoundupObject)(UnitAIModule *, int);
  int (__thiscall *huntObject)(UnitAIModule *, int, int);
  int (__thiscall *gatherObject)(UnitAIModule *, int, int);
  int (__thiscall *convertObject)(UnitAIModule *, int, int);
  int (__thiscall *healObject)(UnitAIModule *, int, int);
  int (__thiscall *repairObject)(UnitAIModule *, int, int);
  int (__thiscall *buildObject)(UnitAIModule *, int, int);
  int (__thiscall *tradeWithObject)(UnitAIModule *, int, int);
  int (__thiscall *explore)(UnitAIModule *, int, int, int);
  int (__thiscall *enterObject)(UnitAIModule *, int, int);
  int (__thiscall *unload)(UnitAIModule *, int, float, float);
  int (__thiscall *transportObject)(UnitAIModule *, float, float, float, int);
  int (__thiscall *moveTo_3)(UnitAIModule *, float, float, float, float, int, int);
  int (__thiscall *moveTo_2)(UnitAIModule *, int, float, int);
  int (__thiscall *moveTo_1)(UnitAIModule *, int, int);
  int (__thiscall *evasiveMoveTo)(UnitAIModule *, float, float, float, int);
  int (__thiscall *intelligentEvasiveMoveTo)(UnitAIModule *, float, float, float, int, int);
  int (__thiscall *runAwayFromAttackers)(UnitAIModule *, int, int);
  int (__thiscall *followObject)(UnitAIModule *, int, float, int);
  int (__thiscall *defendObject)(UnitAIModule *, int, float, int);
  int (__thiscall *defendPosition)(UnitAIModule *, float, float, float, int);
  int (__thiscall *seekAndDestroy)(UnitAIModule *, int, int, int, int);
  int (__thiscall *exploreAndDestroy)(UnitAIModule *, int, int, int);
  int (__thiscall *importantObject)(UnitAIModule *, int);
  int (__thiscall *convertToLOSResourceType)(UnitAIModule *, int);
  int (__thiscall *canConvert)(UnitAIModule *, int, int);
  void (__thiscall *setState)(UnitAIModule *, unsigned __int8);
  char *(__thiscall *stateName)(UnitAIModule *, int);
  int (__thiscall *canMoveToAttack)(UnitAIModule *, int);
  int (__thiscall *findAlertModeObject)(UnitAIModule *);
  int (__thiscall *processOrder)(UnitAIModule *, OrderEvent *, int);
  int (__thiscall *processNotify)(UnitAIModule *, NotifyEvent *, unsigned int);
  int (__thiscall *processIdle)(UnitAIModule *, int);
  int (__thiscall *processIdle_search)(UnitAIModule *, int, int);
  int (__thiscall *processMisc)(UnitAIModule *);
  int (__thiscall *processRetryableOrder)(UnitAIModule *);
};
#pragma pack(pop)

/* 66 */
#pragma pack(push, 8)
struct RGE_Combat_Object
{
  RGE_Combat_ObjectVtbl *vfptr;
  int gbg_unknown_1;
  float gbg_unknown_2;
  int gbg_unknown_3;
  int id;
  RGE_Master_Combat_Object *master_obj;
  TRIBE_Player *owner;
  RGE_Sprite *sprite;
  RGE_Sprite *old_sprite;
  RGE_Active_Sprite_List *sprite_list;
  RGE_Tile *tile;
  RGE_Static_Object *inside_obj;
  RGE_New_Object_List *objects;
  __int16 screen_x_offset;
  __int16 screen_y_offset;
  __int16 shadow_x_offset;
  __int16 shadow_y_offset;
  float hp;
  float sp;
  unsigned __int8 curr_damage_percent;
  unsigned __int8 facet;
  unsigned __int8 selected;
  float world_x;
  float world_y;
  float world_z;
  float attribute_amount_held;
  unsigned __int8 object_state;
  unsigned __int8 sleep_flag;
  unsigned __int8 dopple_flag;
  unsigned __int8 goto_sleep_flag;
  __int16 attribute_type_held;
  unsigned __int8 type;
  unsigned __int8 worker_num;
  ObsRecord *CurrentObstructionData;
  ObsRecord *ObstructionDataList;
  RGE_Static_Object **player_object_node;
  int *mPathingGroup;
  int mPathingGroupSize;
  int mMaximumPathingGroupSize;
  int damaged_lately_timer;
  UnitAIModule *unitAIValue;
  int zoneMapIndex;
  unsigned __int8 inObstructionMapValue;
  unsigned __int8 lastInObstructionMapValue;
  unsigned __int8 underAttackValue;
  int mGroupID;
  unsigned __int8 mROOAlreadyCalled;
  LOS_ExploreInfo ei;
  float speed;
  float trail_remainder;
  float velocity_x;
  float velocity_y;
  float velocity_z;
  float angle;
  float turn_towards_time;
  unsigned __int8 on_ground;
  float turnTimer;
  int continueCounter;
  int currentTerrainException1;
  int currentTerrainException2;
  unsigned __int8 waitingToMoveValue;
  unsigned __int8 numberWaitDelays;
  BVector *userDefinedWaypoints;
  int numberUserDefinedWaypointsValue;
  int maximumNumberUserDefinedWaypointsValue;
  BVector positionValue;
  BVector orientationForwardValue;
  BVector orientationRightValue;
  BPathData *pathData;
  BPathData *mFuturePathData;
  BMovementData *movementData;
  unsigned int lastMoveTimeValue;
  int mHasSubstitutePosition;
  BVector mSubstitutePosition;
  int mConsecutiveSubstituteCount;
  RGE_Action_List *actions;
  unsigned __int8 waiting;
  unsigned __int8 command_flag;
  __int16 Selected_Group_Info;
  VISIBLE_UNIT_REC *VUR_Ptrs[9];
  unsigned int Unified_Map_Value;
  unsigned __int8 Multi_Unified_Points;
  unsigned __int8 Large_Object_Radius;
  int attack_count;
  float attack_timer;
  unsigned __int8 capture_flag;
  unsigned __int8 formation_id;
  unsigned __int8 formation_row;
  unsigned __int8 formation_col;
};
#pragma pack(pop)

/* 221 */
#pragma pack(push, 8)
struct OrderEvent
{
  int issuer;
  int orderType;
  int priority;
  int target;
  int targetOwner;
  float targetX;
  float targetY;
  float targetZ;
  float range;
};
#pragma pack(pop)

/* 222 */
#pragma pack(push, 8)
struct NotifyEvent
{
  int caller;
  int recipient;
  int mType;
  int p1;
  int p2;
  int p3;
};
#pragma pack(pop)

/* 958 */
#pragma pack(push, 8)
struct UnitAIModule__UnitAIRetargetEntry
{
  int mTargetID;
  unsigned int mRetargetTimeout;
};
#pragma pack(pop)

/* 657 */
#pragma pack(push, 8)
struct RGE_Master_Static_ObjectVtbl
{
  unsigned __int8 (__thiscall *gbg_needs_power)(RGE_Master_Static_Object *);
  RGE_Sprite *(__thiscall *gbg_get_sprite_civ_override)(RGE_Master_Static_Object *, RGE_Static_Object *);
  RGE_Sprite *(__thiscall *gbg_get_sprite2_civ_override)(RGE_Master_Static_Object *, RGE_Static_Object *);
  RGE_Sprite *(__thiscall *gbg_get_death_sprite_civ_override)(RGE_Master_Static_Object *, RGE_Static_Object *);
  RGE_Sprite *(__thiscall *gbg_get_undead_sprite_civ_override)(RGE_Master_Static_Object *, RGE_Static_Object *);
  void *(__thiscall *__vecDelDtor)(RGE_Master_Static_Object *, unsigned int);
  void (__thiscall *copy_obj)(RGE_Master_Static_Object *, RGE_Master_Static_Object *);
  void (__thiscall *modify)(RGE_Master_Static_Object *, float, unsigned __int8);
  void (__thiscall *modify_delta)(RGE_Master_Static_Object *, float, unsigned __int8);
  void (__thiscall *modify_percent)(RGE_Master_Static_Object *, float, unsigned __int8);
  void (__thiscall *small_save)(RGE_Master_Static_Object *, int);
  void (__thiscall *save)(RGE_Master_Static_Object *, int);
  RGE_Static_Object *(__thiscall *make_new_obj)(RGE_Master_Static_Object *, RGE_Player *, float, float, float);
  RGE_Master_Static_Object *(__thiscall *make_new_master)(RGE_Master_Static_Object *);
  unsigned __int8 (__thiscall *check_placement)(RGE_Master_Static_Object *, RGE_Player *, float, float, int *, unsigned __int8, unsigned __int8, unsigned __int8, unsigned __int8, unsigned __int8, unsigned __int8, RGE_Static_Object *, unsigned __int8);
  unsigned __int8 (__thiscall *alignment)(RGE_Master_Static_Object *, float *, float *, RGE_Game_World *, unsigned __int8);
  int (__thiscall *calc_base_damage_ability)(RGE_Master_Static_Object *, RGE_Master_Combat_Object *);
  void (__thiscall *play_command_sound)(RGE_Master_Static_Object *, RGE_Player *);
  void (__thiscall *play_move_sound)(RGE_Master_Static_Object *, RGE_Player *);
  void (__thiscall *draw)(RGE_Master_Static_Object *, TDrawArea *, __int16, __int16, RGE_Color_Table *, int, int, int, unsigned __int8);
  float (__thiscall *maximumSpeed)(RGE_Master_Static_Object *, int);
  float (__thiscall *acceleration)(RGE_Master_Static_Object *, int);
  float (__thiscall *deceleration)(RGE_Master_Static_Object *, int);
  float (__thiscall *getTurnRadius)(RGE_Master_Static_Object *);
  float (__thiscall *getTurnRadiusSpeed)(RGE_Master_Static_Object *);
  int (__thiscall *setTurnRadiusOffTurnSpeed)(RGE_Master_Static_Object *);
  int (__thiscall *setTurnRadius)(RGE_Master_Static_Object *, float, float);
  float (__thiscall *getMaximumYawPerSecondMoving)(RGE_Master_Static_Object *);
  float (__thiscall *getMaximumYawPerSecondStationary)(RGE_Master_Static_Object *);
  void (__thiscall *setStationaryYawRevolutionTime)(RGE_Master_Static_Object *, float);
};
#pragma pack(pop)

/* 647 */
#pragma pack(push, 8)
struct RGE_PlayerVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Player *, unsigned int);
  int (__thiscall *unknown1)(RGE_Player *, int);
  void (__thiscall *set_game_status)(RGE_Player *, unsigned __int8);
  void (__thiscall *do_resign)(RGE_Player *, int);
  void (__thiscall *changeToHumanPlayer)(RGE_Player *);
  void (__thiscall *changeToComputerPlayer)(RGE_Player *);
  char *(__thiscall *aiStatus)(RGE_Player *, int);
  int (__thiscall *computerPlayer)(RGE_Player *);
  int (__thiscall *isEnemy)(RGE_Player *, int);
  int (__thiscall *isAlly)(RGE_Player *, int);
  int (__thiscall *isNeutral)(RGE_Player *, int);
  int (__thiscall *isAllNeutral)(RGE_Player *);
  void (__thiscall *setDiplomaticStance)(RGE_Player *, int, int);
  void (__thiscall *loadAIInformation)(RGE_Player *, char *, char *, char *, int, int);
  void (__thiscall *sendUnitAIOrder)(RGE_Player *, int, int, int, int, int, float, float, float, float, int, int, int);
  void (__thiscall *processAIOrder)(RGE_Player *, int, int, int, int, int, float, float, float, float, int, int, int);
  void (__thiscall *kickAI)(RGE_Player *, int);
  int (__thiscall *strategicNumber)(RGE_Player *, int);
  void (__thiscall *sendGameOrder)(RGE_Player *, RGE_Static_Object *, RGE_Static_Object *, float, float);
  void (__thiscall *sendAddWaypointCommand)(RGE_Player *, int, XYZBYTEPoint *, int);
  void (__thiscall *processAddWaypointCommand)(RGE_Player *, int, XYZBYTEPoint *, int);
  int (__thiscall *sendAICommand)(RGE_Player *, int, int, int, int, int);
  void (__thiscall *setTileExplored)(RGE_Player *, int, int);
  int (__thiscall *objectCostByType)(RGE_Player *, int);
  void (__thiscall *trackUnitGather)(RGE_Player *, int, int, int);
  RGE_Static_Object *(__thiscall *make_scenario_obj)(RGE_Player *, float, float, float, __int16, unsigned __int8, float);
  void (__thiscall *scenario_save)(RGE_Player *, int);
  void (__thiscall *scenario_load)(RGE_Player *, int, int *, float);
  void (__thiscall *scenario_postsave)(RGE_Player *, int);
  void (__thiscall *scenario_postload)(RGE_Player *, int, int *, float);
  void (__thiscall *load)(RGE_Player *, int);
  void (__thiscall *new_attribute_num)(RGE_Player *, __int16, float);
  void (__thiscall *add_attribute_num)(RGE_Player *, __int16, float, unsigned __int8);
  void (__thiscall *update)(RGE_Player *);
  void (__thiscall *update_dopplegangers)(RGE_Player *);
  void (__thiscall *save)(RGE_Player *, int);
  void (__thiscall *save2)(RGE_Player *, int);
  void (__thiscall *save_info)(RGE_Player *, int);
  void (__thiscall *random_start)(RGE_Player *);
  void (__thiscall *modify_tobj)(RGE_Player *, __int16, __int16, float, unsigned __int8);
  void (__thiscall *modify_tobj_delta)(RGE_Player *, __int16, __int16, float, unsigned __int8);
  void (__thiscall *modify_tobj_percent)(RGE_Player *, __int16, __int16, float, unsigned __int8);
  void (__thiscall *copy_obj)(RGE_Player *, __int16, __int16);
  void (__thiscall *effect_add_attribute)(RGE_Player *, __int16, float, unsigned __int8);
  void (__thiscall *effect_multiply_attribute)(RGE_Player *, __int16, float);
  RGE_Static_Object *(__thiscall *make_new_object)(RGE_Player *, int, float, float, float, int);
  unsigned __int8 (__thiscall *get_selected_objects_to_command)(RGE_Player *, RGE_Static_Object ***, __int16 *, __int16, __int16, __int16, __int16, unsigned __int8, unsigned __int8, unsigned int);
  void (__thiscall *analyize_selected_objects)(RGE_Player *);
  int (__thiscall *get_mouse_pointer_action_vars)(RGE_Player *, int, int, int, int, int, int *, int *);
  unsigned __int8 (__thiscall *command_make_move)(RGE_Player *, RGE_Static_Object *, float, float);
  unsigned __int8 (__thiscall *command_make_work)(RGE_Player *, RGE_Static_Object *, float, float);
  unsigned __int8 (__thiscall *command_make_do)(RGE_Player *, RGE_Static_Object *, float, float);
  unsigned __int8 (__thiscall *command_make_unit_do)(RGE_Player *, RGE_Static_Object *, RGE_Static_Object *, float, float);
  unsigned __int8 (__thiscall *command_stop)(RGE_Player *);
  unsigned __int8 (__thiscall *command_place_object)(RGE_Player *, __int16, float, float, float);
  unsigned __int8 (__thiscall *command_add_attribute)(RGE_Player *, int, float);
  unsigned __int8 (__thiscall *command_give_attribute)(RGE_Player *, int, int, float);
  unsigned __int8 (__thiscall *command_stand_ground)(RGE_Player *);
  unsigned __int8 (__thiscall *command_resign)(RGE_Player *, int, int);
  unsigned __int8 (__thiscall *command_add_waypoint)(RGE_Player *, float, float, float);
  unsigned __int8 (__thiscall *command_unit_ai_state)(RGE_Player *, unsigned __int8);
  unsigned __int8 (__thiscall *command_guard)(RGE_Player *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *command_follow)(RGE_Player *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *command_patrol)(RGE_Player *, unsigned __int8, float *, float *);
  unsigned __int8 (__thiscall *command_scout)(RGE_Player *, float, float);
  unsigned __int8 (__thiscall *command_form_formation)(RGE_Player *, int);
  unsigned __int8 (__thiscall *command_break_formation)(RGE_Player *, int);
  unsigned __int8 (__thiscall *command_wheel_formation)(RGE_Player *, int, int);
  unsigned __int8 (__thiscall *command_about_face_formation)(RGE_Player *, int);
  unsigned __int8 (__thiscall *command_lock_formation)(RGE_Player *, int, int);
  unsigned __int8 (__thiscall *command_formation_parameters)(RGE_Player *, int, int, int, int, float, int);
  unsigned __int8 (__thiscall *command_auto_formations)(RGE_Player *, int);
  RGE_Static_Object **(__thiscall *addObject)(RGE_Player *, RGE_Static_Object *, int, int);
  void (__thiscall *removeObject)(RGE_Player *, RGE_Static_Object *, int, int, RGE_Static_Object **);
  void (*logMessage)(RGE_Player *, char *, ...);
  void (__thiscall *notify)(RGE_Player *, int, int, int, int, int, int);
  void (__thiscall *notifyUnitDeath)(RGE_Player *, int, int);
  int (__thiscall *isInTacticalAIGroup)(RGE_Player *, int);
  void (__thiscall *logStatus)(RGE_Player *, FILE *, int);
  void (__thiscall *load_victory)(RGE_Player *, int, int *, unsigned __int8);
  void (__thiscall *new_victory)(RGE_Player *);
  void (__thiscall *open_gates_for_pathing)(RGE_Player *, int);
  void (__thiscall *close_gates_for_pathing)(RGE_Player *, int);
  int (__thiscall *isGateLocked)(RGE_Player *, int);
  void (__thiscall *setGateLocked)(RGE_Player *, int, int);
  int (__thiscall *closeGate)(RGE_Player *, int);
  int (__thiscall *openGate)(RGE_Player *, int);
};
#pragma pack(pop)

/* 805 */
typedef tagPALETTEENTRY PALETTEENTRY;

/* 99 */
#pragma pack(push, 8)
struct TDrawSystem
{
  HINSTANCE Inst;
  HWND Wnd;
  HPALETTE Pal;
  TDrawArea *DrawArea;
  TDrawArea *PrimaryArea;
  DrawAreaNode *DrawAreaList;
  IDirectDraw *DirDraw;
  IDirectDrawSurface *PrimarySurface;
  IDirectDrawClipper *Clipper;
  IDirectDrawPalette *DirDrawPal;
  unsigned int Flags;
  int ScreenWidth;
  int ScreenHeight;
  int ColorBits;
  int ErrorCode;
  unsigned __int8 DrawType;
  unsigned __int8 ScreenMode;
  int ChangedMode;
  int IsBanked;
  int CanSrcBlt;
  int Restored;
  int system_ignore_size_messages;
  int ModeAvail640;
  int ModeAvail800;
  int ModeAvail1024;
  int ModeAvail1280;
  int ModeAvail1600;
  int ModeAvail320_200;
  int ModeAvail320_240;
  int ModeAvail320_200_16;
  int ModeAvail320_240_16;
  int ModeAvail640_16;
  int ModeAvail800_16;
  int ModeAvail1024_16;
  int ModeAvail1600_16;
  int ModeAvail320_200_24;
  int ModeAvail320_240_24;
  int ModeAvail640_24;
  int ModeAvail800_24;
  int ModeAvail1024_24;
  int ModeAvail1600_24;
  int ModeAvail320_200_32;
  int ModeAvail320_240_32;
  int ModeAvail640_32;
  int ModeAvail800_32;
  int ModeAvail1024_32;
  int ModeAvail1600_32;
  PALETTEENTRY palette[256];
};
#pragma pack(pop)

/* 563 */
#pragma pack(push, 8)
struct DrawAreaNode
{
  TDrawArea *DrawArea;
  DrawAreaNode *PrevNode;
  DrawAreaNode *NextNode;
};
#pragma pack(pop)

/* 456 */
#pragma pack(push, 8)
struct TSpan_Node_List
{
  VSpan_Node **Zone_Ptrs;
  int *Zone_Size_Ptrs;
  int Used_Zones;
  int Max_Zones;
  VSpan_Node *Free_Head;
  int Free_Pool_Zone;
  int Free_Pool_Index;
  int Total_Blocks;
  int Free_Blocks;
  int Default_Grow_Size;
  int Element_Size;
  int Alloc_Count;
  int Dealloc_Count;
  int NewZone_Count;
  int Reset_Count;
};
#pragma pack(pop)

/* 239 */
#pragma pack(push, 8)
struct TSpan_List_Manager
{
  TSpan_Node_List VSList;
  VSpan_Node **Line_Head_Ptrs;
  VSpan_Node **Line_Tail_Ptrs;
  int *LeftMostPx;
  int *RightMostPx;
  int *Span_Count;
  int Num_Lines;
  int Num_Pixels;
  int Min_Span_Px;
  int Max_Span_Px;
  int Min_Line;
  int Max_Line;
};
#pragma pack(pop)

/* 591 */
#pragma pack(push, 8)
struct RGE_Color_TableVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Color_Table *, unsigned int);
  int (__thiscall *get_id)(RGE_Color_Table *);
  int (__thiscall *get_real_id)(RGE_Color_Table *);
};
#pragma pack(pop)

/* 759 */
#pragma pack(push, 8)
struct RGE_Action_ObjectVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Action_Object *, unsigned int);
  int (__thiscall *gbg_unknown1)(RGE_Action_Object *);
  int (__thiscall *gbg_get_civ_override)(RGE_Action_Object *);
  unsigned __int8 (__thiscall *gbg_unknown3)(RGE_Action_Object *);
  unsigned __int8 (__thiscall *gbg_unknown4)(RGE_Action_Object *);
  unsigned __int8 (__thiscall *gbg_unknown5)(RGE_Action_Object *);
  unsigned __int8 (__thiscall *gbg_unknown6)(RGE_Action_Object *);
  unsigned __int8 (__thiscall *gbg_unknown7)(RGE_Action_Object *);
  unsigned __int8 (__thiscall *gbg_unknown8)(RGE_Action_Object *);
  unsigned __int8 (__thiscall *gbg_unknown9)(RGE_Action_Object *);
  unsigned __int8 (__thiscall *gbg_unknown10)(RGE_Action_Object *);
  unsigned __int8 (__thiscall *gbg_unknown11)(RGE_Action_Object *);
  unsigned __int8 (__thiscall *gbg_isPadawan)(RGE_Action_Object *);
  unsigned __int8 (__thiscall *gbg_isMaster)(RGE_Action_Object *);
  unsigned __int8 (__thiscall *gbg_unknown14)(RGE_Action_Object *);
  unsigned __int8 (__thiscall *gbg_isShielded)(RGE_Action_Object *);
  void (__thiscall *gbg_unknown16)(RGE_Action_Object *);
  void (__thiscall *gbg_unknown17)(RGE_Action_Object *);
  unsigned __int8 (__thiscall *gbg_unknown18)(RGE_Action_Object *, int);
  unsigned __int8 (__thiscall *gbg_isDetector)(RGE_Action_Object *);
  unsigned __int8 (__thiscall *gbg_unknown20)(RGE_Action_Object *, int);
  unsigned __int8 (__thiscall *gbg_isPowered)(RGE_Action_Object *, int);
  void (__thiscall *gbg_unknown22)(RGE_Action_Object *);
  unsigned __int8 (__thiscall *gbg_unknown23)(RGE_Action_Object *);
  unsigned __int8 (__thiscall *gbg_isBiological)(RGE_Action_Object *);
  unsigned __int8 (__thiscall *gbg_isDamaged)(RGE_Action_Object *);
  unsigned __int8 (__thiscall *gbg_unknown26)(RGE_Action_Object *);
  unsigned __int8 (__thiscall *gbg_canBeHealedByPlayer)(RGE_Action_Object *, int);
  unsigned __int8 (__thiscall *gbg_canBeRepairedByPlayer)(RGE_Action_Object *, int);
  void (__thiscall *recycle_in_to_game)(RGE_Action_Object *, RGE_Master_Static_Object *, RGE_Player *, float, float, float);
  void (__thiscall *recycle_out_of_game)(RGE_Action_Object *);
  void (__thiscall *draw)(RGE_Action_Object *, TDrawArea *, __int16, __int16, RGE_Color_Table *);
  void (__thiscall *shadow_draw)(RGE_Action_Object *, TDrawArea *, __int16, __int16, unsigned __int8);
  void (__thiscall *normal_draw)(RGE_Action_Object *, TDrawArea *, __int16, __int16);
  void (__thiscall *draw_front_frame)(RGE_Action_Object *, TDrawArea *, __int16, __int16);
  void (__thiscall *draw_back_frame)(RGE_Action_Object *, TDrawArea *, __int16, __int16);
  void (__thiscall *draw_frame)(RGE_Action_Object *, TDrawArea *, __int16, __int16);
  unsigned __int8 (__thiscall *update)(RGE_Action_Object *);
  void (__thiscall *check_damage_sprites)(RGE_Action_Object *);
  void (__thiscall *rehook)(RGE_Action_Object *);
  void (__thiscall *save)(RGE_Action_Object *, int);
  void (__thiscall *teleport_off_map)(RGE_Action_Object *);
  float (__thiscall *teleport)(RGE_Action_Object *, float, float, float);
  float (__thiscall *handle_teleport_z_correction)(RGE_Action_Object *, float);
  void (__thiscall *new_sprite)(RGE_Action_Object *, RGE_Sprite *);
  void (__thiscall *add_overlay_sprite)(RGE_Action_Object *, RGE_Sprite *, unsigned __int8);
  void (__thiscall *remove_overlay_sprite)(RGE_Action_Object *, RGE_Sprite *);
  void (__thiscall *change_ownership)(RGE_Action_Object *, RGE_Player *);
  void (__thiscall *modify)(RGE_Action_Object *, float, unsigned __int8);
  void (__thiscall *modify_delta)(RGE_Action_Object *, float, unsigned __int8);
  void (__thiscall *modify_percent)(RGE_Action_Object *, float, unsigned __int8);
  void (__thiscall *transform)(RGE_Action_Object *, RGE_Master_Static_Object *);
  void (__thiscall *copy_obj)(RGE_Action_Object *, RGE_Master_Static_Object *);
  void (__thiscall *set_object_state)(RGE_Action_Object *, unsigned __int8);
  void (__thiscall *remove_visible_resource)(RGE_Action_Object *);
  void (__thiscall *create_doppleganger_when_dying)(RGE_Action_Object *);
  void (__thiscall *destroy_obj)(RGE_Action_Object *);
  void (__thiscall *die_die_die)(RGE_Action_Object *);
  void (__thiscall *damage)(RGE_Action_Object *, int, RGE_Armor_Weapon_Info *, float, RGE_Player *, RGE_Static_Object *, int);
  float (__thiscall *calculateDamage)(RGE_Action_Object *, int, RGE_Armor_Weapon_Info *, float, RGE_Player *, RGE_Static_Object *);
  void (__thiscall *rotate)(RGE_Action_Object *, int);
  unsigned __int8 (__thiscall *can_attack)(RGE_Action_Object *);
  void (__thiscall *set_attribute)(RGE_Action_Object *, __int16, float);
  void (__thiscall *set_attribute_amount)(RGE_Action_Object *, float, unsigned __int8, unsigned __int8);
  int (__thiscall *heal_2)(RGE_Action_Object *, int, int);
  unsigned __int8 (__thiscall *heal_1)(RGE_Action_Object *, float);
  int (__thiscall *canRepair)(RGE_Action_Object *);
  void (__thiscall *notify_of_relation)(RGE_Action_Object *, int, unsigned __int8);
  void (__thiscall *do_command)(RGE_Action_Object *, RGE_Static_Object *, float, float, float);
  int (__thiscall *actionTypeIfOrdered)(RGE_Action_Object *, RGE_Static_Object *, float, float, float, float *);
  unsigned __int8 (__thiscall *move_to)(RGE_Action_Object *, RGE_Static_Object *, float, float, float);
  void (__thiscall *work)(RGE_Action_Object *, RGE_Static_Object *, float, float, float);
  void (__thiscall *stop)(RGE_Action_Object *);
  void (__thiscall *set_attack)(RGE_Action_Object *, RGE_Static_Object *);
  void (__thiscall *play_command_sound)(RGE_Action_Object *);
  void (__thiscall *play_move_sound)(RGE_Action_Object *);
  void (__thiscall *new_angle)(RGE_Action_Object *, float);
  RGE_Static_Object *(__thiscall *spawn_death_obj)(RGE_Action_Object *);
  RGE_Master_Static_Object *(__thiscall *get_command_master)(RGE_Action_Object *, RGE_Static_Object *, float, float, float);
  void (__thiscall *set_being_worked_on)(RGE_Action_Object *, RGE_Action_Object *, __int16, unsigned __int8);
  void (__thiscall *release_being_worked_on)(RGE_Action_Object *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *is_moving)(RGE_Action_Object *);
  RGE_Static_Object *(__thiscall *get_target_obj)(RGE_Action_Object *);
  unsigned __int8 (__thiscall *more_room)(RGE_Action_Object *, RGE_Static_Object *);
  void (__thiscall *enter_obj)(RGE_Action_Object *, RGE_Static_Object *, unsigned __int8);
  void (__thiscall *exit_obj)(RGE_Action_Object *);
  void (__thiscall *add_obj)(RGE_Action_Object *, RGE_Static_Object *);
  void (__thiscall *remove_obj)(RGE_Action_Object *, RGE_Static_Object *);
  int (__thiscall *explore_terrain)(RGE_Action_Object *, RGE_Player *, unsigned __int8, int, int);
  void (__thiscall *unexplore_terrain)(RGE_Action_Object *, RGE_Player *, unsigned __int8, int, int);
  LOSTBL *(__thiscall *get_los_table)(RGE_Action_Object *);
  unsigned __int8 (__thiscall *get_visibility)(RGE_Action_Object *, RGE_Player *);
  int (__thiscall *inAttackRange)(RGE_Action_Object *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *underAttack)(RGE_Action_Object *);
  void (__thiscall *setUnderAttack)(RGE_Action_Object *, unsigned __int8);
  float (__thiscall *calc_attack_modifier)(RGE_Action_Object *, RGE_Static_Object *);
  float (__thiscall *getSpeed)(RGE_Action_Object *);
  float (__thiscall *getAngle)(RGE_Action_Object *);
  float (__thiscall *maximumSpeed)(RGE_Action_Object *);
  float (__thiscall *rateOfFire)(RGE_Action_Object *);
  float (__thiscall *damageCapability_2)(RGE_Action_Object *, RGE_Static_Object *);
  float (__thiscall *damageCapability_1)(RGE_Action_Object *);
  float (__thiscall *weaponRange)(RGE_Action_Object *);
  float (__thiscall *minimumWeaponRange)(RGE_Action_Object *);
  int (__thiscall *passableTile_2)(RGE_Action_Object *, float, float, int *, int);
  int (__thiscall *passableTile_1)(RGE_Action_Object *, float, float);
  int (__thiscall *currentTargetID)(RGE_Action_Object *);
  float (__thiscall *currentTargetX)(RGE_Action_Object *);
  float (__thiscall *currentTargetY)(RGE_Action_Object *);
  float (__thiscall *currentTargetZ)(RGE_Action_Object *);
  void (__thiscall *setWaitingToMove)(RGE_Action_Object *, unsigned __int8);
  unsigned __int8 (__thiscall *waitingToMove)(RGE_Action_Object *);
  unsigned __int8 (__thiscall *actionState)(RGE_Action_Object *);
  unsigned __int8 (__thiscall *keepGatheringWhenObjectIsOut)(RGE_Action_Object *, int);
  unsigned __int8 (__thiscall *produceWhenKilledBy)(RGE_Action_Object *, int);
  unsigned __int8 (__thiscall *useSameZoneDropsite)(RGE_Action_Object *);
  float (__thiscall *searchRadius)(RGE_Action_Object *);
  unsigned __int8 (__thiscall *is_idle)(RGE_Action_Object *);
  void (*logDebug)(RGE_Action_Object *, char *, ...);
  void (*debug)(RGE_Action_Object *, char *, ...);
  void (__thiscall *notify)(RGE_Action_Object *, int, int, int, int, int, int);
  int (__thiscall *attack_2)(RGE_Action_Object *, float, float, float, int);
  int (__thiscall *attack_1)(RGE_Action_Object *, int, int);
  int (__thiscall *moveTo_3)(RGE_Action_Object *, float, float, float, float, int, int);
  int (__thiscall *moveTo_2)(RGE_Action_Object *, int, float, int);
  int (__thiscall *moveTo_1)(RGE_Action_Object *, int, int);
  int (__thiscall *moveAwayFrom)(RGE_Action_Object *, int, int);
  int (__thiscall *hunt)(RGE_Action_Object *, int, int);
  int (__thiscall *gather)(RGE_Action_Object *, int, int);
  int (__thiscall *convert)(RGE_Action_Object *, int, int);
  int (__thiscall *repair)(RGE_Action_Object *, int, int);
  int (__thiscall *build)(RGE_Action_Object *, int, int);
  int (__thiscall *trade)(RGE_Action_Object *, int, int);
  int (__thiscall *explore)(RGE_Action_Object *, int, int, int);
  int (__thiscall *enter)(RGE_Action_Object *, int, int);
  int (__thiscall *unload)(RGE_Action_Object *, int, float, float, float);
  int (__thiscall *transport)(RGE_Action_Object *, float, float, float, int);
  int (__thiscall *stopAction)(RGE_Action_Object *);
  int (__thiscall *pause)(RGE_Action_Object *);
  int (__thiscall *canPath_2)(RGE_Action_Object *, int, float, float *, int, int, bool);
  int (__thiscall *canPath_1)(RGE_Action_Object *, XYZPoint, float, int, float *, int, int, bool);
  int (__thiscall *canQuickPath)(RGE_Action_Object *, int, float, float *);
  int (__thiscall *canPathWithObstructions)(RGE_Action_Object *, int, float, float *, int, int, ManagedArray_int_ *);
  int (__thiscall *canPathWithAdditionalPassability)(RGE_Action_Object *, XYZPoint, float, int, float *, int, int, int, int, int, BPath *);
  int (__thiscall *findFirstTerrainAlongExceptionPath)(RGE_Action_Object *, int, float *, float *, BPath *);
  int (__thiscall *canLinePath_2)(RGE_Action_Object *, int, int, int, int, float, int);
  int (__thiscall *canLinePath_1)(RGE_Action_Object *, const XYPoint *, const XYPoint *, float, XYPoint *, int);
  int (__thiscall *firstTileAlongLine)(RGE_Action_Object *, const XYPoint *, const XYPoint *, XYPoint *, int, int, int);
  unsigned __int8 (__thiscall *have_action)(RGE_Action_Object *);
  int (__thiscall *gameActionType)(RGE_Action_Object *);
  BVector *(__thiscall *userDefinedWaypoint)(RGE_Action_Object *, int);
  int (__thiscall *addUserDefinedWaypoint)(RGE_Action_Object *, float, float, float);
  void (__thiscall *zeroUserDefinedWaypoints)(RGE_Action_Object *);
  void (__thiscall *removeAllUserDefinedWaypoints)(RGE_Action_Object *);
  int (__thiscall *numberUserDefinedWaypoints)(RGE_Action_Object *);
  BPath *(__thiscall *getPatrolInformation)(RGE_Action_Object *, int *);
  float (__thiscall *distanceToHighestLevelPath_2)(RGE_Action_Object *, BVector);
  float (__thiscall *distanceToHighestLevelPath_1)(RGE_Action_Object *);
  BPath *(__thiscall *findAvoidancePath)(RGE_Action_Object *, XYZPoint *, float, int);
  int (__thiscall *get_action_checksum)(RGE_Action_Object *);
  int (__thiscall *get_waypoint_checksum)(RGE_Action_Object *);
  void (__thiscall *setPatrolMode)(RGE_Action_Object *, unsigned __int8);
  int (__thiscall *garrisoned_count)(RGE_Action_Object *);
  int (__thiscall *lock_down)(RGE_Action_Object *);
  int (__thiscall *unlock_down)(RGE_Action_Object *);
  int (__thiscall *get_locked_down_count)(RGE_Action_Object *);
  float (__thiscall *getTradeAmount)(RGE_Action_Object *, float, float, float, float);
  int (__thiscall *setup_2)(RGE_Action_Object *, int, RGE_Game_World *);
  int (__thiscall *setup_1)(RGE_Action_Object *, RGE_Master_Static_Object *, RGE_Player *, float, float, float);
  RGE_New_Object_List *(__thiscall *create_object_list)(RGE_Action_Object *);
  RGE_Active_Sprite_List *(__thiscall *create_sprite_list)(RGE_Action_Object *);
  BVector *(__thiscall *position)(RGE_Action_Object *, BVector *);
  BPathData *(__thiscall *getPathData)(RGE_Action_Object *);
  int (__thiscall *actionType)(RGE_Action_Object *);
  int (__thiscall *hasActionOfType)(RGE_Action_Object *, int);
  int (__thiscall *gbg_hasActionOfType2)(RGE_Action_Object *, int);
  int (__thiscall *addMove)(RGE_Action_Object *, int, float, int, int, int);
  int (__thiscall *addCurrentPath)(RGE_Action_Object *, BPath *, int, float, int);
  int (__thiscall *addFuturePath)(RGE_Action_Object *, BPath *, int, float, int);
  void (__thiscall *stopAllMovement)(RGE_Action_Object *);
  void (__thiscall *setOrientation)(RGE_Action_Object *, BVector *, BVector *);
  BVector *(__thiscall *velocity)(RGE_Action_Object *, BVector *);
  void (__thiscall *setVelocity)(RGE_Action_Object *, BVector *);
  BVector *(__thiscall *acceleration)(RGE_Action_Object *, BVector *);
  void (__thiscall *setAcceleration)(RGE_Action_Object *, BVector *);
  float (__thiscall *forwardVelocity)(RGE_Action_Object *);
  void (__thiscall *setForwardVelocity)(RGE_Action_Object *, float);
  float (__thiscall *forwardAcceleration)(RGE_Action_Object *);
  void (__thiscall *setForwardAcceleration)(RGE_Action_Object *, float);
  void (__thiscall *moveForward)(RGE_Action_Object *, float);
  void (__thiscall *setPosition)(RGE_Action_Object *, BVector *);
  void (__thiscall *yaw)(RGE_Action_Object *, float);
  int (__thiscall *isMoving)(RGE_Action_Object *);
  void (__thiscall *stopMoving)(RGE_Action_Object *);
  float (__thiscall *calculateFutureVelocity)(RGE_Action_Object *, float, float, float, BVector *);
  unsigned int (__thiscall *lastMoveTime)(RGE_Action_Object *);
  void (__thiscall *pauseMovement)(RGE_Action_Object *, float);
  int (__thiscall *movementPriority)(RGE_Action_Object *);
  int (__thiscall *intelligentMovementUpdate)(RGE_Action_Object *);
  float (__thiscall *calculateMaximumSpeed)(RGE_Action_Object *, int);
  int (__thiscall *calculateForward)(RGE_Action_Object *, BVector *, BVector *, BVector *);
  float (__thiscall *calculateYawAngle)(RGE_Action_Object *, BVector *, BVector *, float, int *);
  int (__thiscall *calculateReachedPoint)(RGE_Action_Object *, BVector *, BVector *, BVector *);
  float (__thiscall *calculateTurnRadius)(RGE_Action_Object *);
  int (__thiscall *checkAcceleration)(RGE_Action_Object *, BVector *, int, int);
  BVector *(__thiscall *straightProjectedPosition)(RGE_Action_Object *, BVector *, BVector *, float);
  int (__thiscall *onPatrol)(RGE_Action_Object *);
  BVector *(__thiscall *orientationForward)(RGE_Action_Object *, BVector *);
  int (__thiscall *setRunSprite)(RGE_Action_Object *);
  int (__thiscall *setMoveSprite)(RGE_Action_Object *);
  int (__thiscall *setFidgetSprite)(RGE_Action_Object *);
  int (__thiscall *getGateLocked)(RGE_Action_Object *);
  void (__thiscall *setGateLocked)(RGE_Action_Object *, int);
  int (__thiscall *isGateOpenable)(RGE_Action_Object *, int);
  int (__thiscall *getLinkedChild)(RGE_Action_Object *, int);
  int (__thiscall *get_next_selected_group)(RGE_Action_Object *, int);
  __int16 (__thiscall *get_Selected_Groups)(RGE_Action_Object *);
  void (__thiscall *set_Selected_Groups)(RGE_Action_Object *, __int16);
  int (__thiscall *get_num_Selected_groups)(RGE_Action_Object *);
  int (__thiscall *setup_3)(RGE_Action_Object *, RGE_Master_Animated_Object *, RGE_Player *, float, float, float);
  void (__thiscall *stop_moving)(RGE_Action_Object *);
  unsigned __int8 (__thiscall *turn_towards)(RGE_Action_Object *, RGE_Static_Object *, float, float);
  void (__thiscall *set_angle)(RGE_Action_Object *);
  int (__thiscall *canLinePath_4)(RGE_Action_Object *, int, int, int, int, float);
  int (__thiscall *canLinePath_3)(RGE_Action_Object *, XYPoint *, XYPoint *, float, XYPoint *);
  int (__thiscall *setup_4)(RGE_Action_Object *, RGE_Master_Moving_Object *, RGE_Player *, float, float, float);
  int (__thiscall *addMove_2)(RGE_Action_Object *, int, float, float, float, float, int, int, int);
  void (__thiscall *work2)(RGE_Action_Object *, RGE_Static_Object *, float, float, float, unsigned __int8, __int16);
  void (__thiscall *set_task)(RGE_Action_Object *, __int16);
  void (__thiscall *setTaskByTaskID)(RGE_Action_Object *, int);
  void (__thiscall *set_action)(RGE_Action_Object *, RGE_Action *);
  void (__thiscall *set_only_action)(RGE_Action_Object *, RGE_Action *);
  void (__thiscall *set_end_action)(RGE_Action_Object *, RGE_Action *);
  RGE_Task *(__thiscall *getTask)(RGE_Action_Object *, RGE_Static_Object *, float, float, float, __int16);
  void (__thiscall *setUnitAIAction)(RGE_Action_Object *, int, RGE_Static_Object *, float, float, float);
  int (__thiscall *setup_5)(RGE_Action_Object *, RGE_Master_Action_Object *, RGE_Player *, float, float, float);
  RGE_Action_List *(__thiscall *create_action_list)(RGE_Action_Object *);
};
#pragma pack(pop)

/* 65 */
#pragma pack(push, 8)
struct RGE_Master_Action_Object
{
  RGE_Master_Action_ObjectVtbl *vfptr;
  unsigned __int8 master_type;
  char *name;
  char *gbg_name2;
  __int16 unit_line;
  unsigned __int8 min_tech_level;
  __int16 string_id;
  __int16 string_id2;
  __int16 id;
  __int16 copy_id;
  __int16 base_id;
  __int16 object_group;
  RGE_Sprite *sprite;
  RGE_Sprite *sprite2;
  RGE_Sprite *death_sprite;
  RGE_Sprite *undead_sprite;
  unsigned __int8 undead_flag;
  __int16 hp;
  float los;
  unsigned __int8 obj_max;
  float radius_x;
  float radius_y;
  float radius_z;
  RGE_Sound *selected_sound;
  RGE_Sound *created_sound;
  RGE_Sound *death_sound;
  RGE_Sound *damage_sound;
  __int16 death_spawn_obj_id;
  unsigned __int8 sort_number;
  unsigned __int8 can_be_built_on;
  __int16 button_pict;
  unsigned __int8 hide_in_scenario_editor;
  __int16 portrait_pict;
  unsigned __int8 available;
  unsigned __int8 disabled;
  __int16 tile_req1;
  __int16 tile_req2;
  __int16 center_tile_req1;
  __int16 center_tile_req2;
  float construction_radius_x;
  float construction_radius_y;
  unsigned __int8 elevation_flag;
  unsigned __int8 fog_flag;
  __int16 terrain;
  unsigned __int8 movement_type;
  __int16 attribute_type_held[3];
  float attribute_amount_held[3];
  __int16 attribute_max_amount;
  float attribute_rot;
  float multiple_attribute_mod;
  unsigned __int8 attribute_flag[3];
  unsigned __int8 area_effect_object_level;
  unsigned __int8 combat_level;
  unsigned __int8 select_level;
  unsigned __int8 map_draw_level;
  unsigned __int8 unit_level;
  unsigned __int8 map_color;
  unsigned __int8 attack_reaction;
  unsigned __int8 convert_terrain_flag;
  unsigned __int8 damage_sprite_num;
  RGE_Damage_Sprite_Info *damage_sprites;
  unsigned __int8 occlusion_flag;
  unsigned __int8 obstruction_type;
  unsigned __int8 obstruction_class;
  unsigned int object_flags;
  int help_string_id;
  int help_page_id;
  int hotkey_id;
  unsigned __int8 recyclable;
  unsigned __int8 track_as_resource;
  unsigned __int8 create_doppleganger_on_death;
  unsigned __int8 resource_group;
  unsigned __int8 draw_flag;
  unsigned __int8 draw_color;
  float outline_radius_x;
  float outline_radius_y;
  float outline_radius_z;
  float speed;
  RGE_Sprite *move_sprite;
  RGE_Sprite *run_sprite;
  float turn_speed;
  unsigned __int8 size_class;
  __int16 obj_trail_id;
  unsigned __int8 obj_trail_options;
  float obj_trail_spacing;
  unsigned __int8 move_algorithem;
  float mTurnRadius;
  float mTurnRadiusSpeed;
  float mMaximumYawPerSecondMoving;
  float mStationaryYawRevolutionTime;
  float mMaximumYawPerSecondStationary;
  RGE_Task_List *tasks;
  __int16 default_task;
  float search_radius;
  float work_rate;
  float gbg_work_rate_2;
  __int16 drop_site;
  __int16 backup_drop_site;
  unsigned __int8 task_by_group;
  RGE_Sound *command_sound;
  RGE_Sound *move_sound;
  unsigned __int8 run_pattern;
  unsigned __int8 RGE_Master_Action_Object_gap[3];
};
#pragma pack(pop)

/* 206 */
#pragma pack(push, 8)
struct BMovementData
{
  BVector velocity;
  BVector acceleration;
};
#pragma pack(pop)

/* 146 */
#pragma pack(push, 8)
struct RGE_Action_List
{
  RGE_Action_ListVtbl *vfptr;
  RGE_Action_Object *obj;
  RGE_Action_Node *list;
};
#pragma pack(pop)

/* 655 */
#pragma pack(push, 8)
struct RGE_Game_WorldVtbl
{
  unsigned __int8 (__thiscall *data_load_world)(RGE_Game_World *, FILE *);
  unsigned __int8 (__thiscall *data_load_terrain_tables)(RGE_Game_World *, char *);
  unsigned __int8 (__thiscall *data_load_players)(RGE_Game_World *, char *);
  unsigned __int8 (__thiscall *data_load_tasks)(RGE_Game_World *, char *);
  unsigned __int8 (__thiscall *data_load_objects)(RGE_Game_World *, char *);
  unsigned __int8 (__thiscall *data_load_sounds)(RGE_Game_World *, char *);
  unsigned __int8 (__thiscall *data_load_color_tables)(RGE_Game_World *, char *);
  unsigned __int8 (__thiscall *data_load_sprites)(RGE_Game_World *, char *);
  void (__thiscall *data_load_players_type)(RGE_Game_World *, __int16, __int16, FILE *);
  void (__thiscall *data_load_effects)(RGE_Game_World *, char *);
  void (__thiscall *data_load_map)(RGE_Game_World *, char *, char *, char *, char *, __int16, __int16, __int16, RGE_Sound **, char *);
  void (__thiscall *data_load_random_map)(RGE_Game_World *, char *, char *, char *, char *);
  void (__thiscall *data_load_unitlines)(RGE_Game_World *, char *);
  unsigned __int8 (__thiscall *init_player_type)(RGE_Game_World *, int, __int16, unsigned __int8);
  unsigned __int8 (__thiscall *init_player)(RGE_Game_World *, int);
  void (__thiscall *load_player)(RGE_Game_World *, int, unsigned __int8, __int16);
  void (__thiscall *color_table_init)(RGE_Game_World *, int);
  void (__thiscall *terrain_tables_init)(RGE_Game_World *, int);
  void (__thiscall *init_sounds)(RGE_Game_World *, int, TSound_Driver *);
  void (__thiscall *init_sprites)(RGE_Game_World *, int);
  void (__thiscall *map_init)(RGE_Game_World *, int, TSound_Driver *);
  void (__thiscall *effects_init)(RGE_Game_World *, int);
  void (__thiscall *master_player_init)(RGE_Game_World *, int);
  void (__thiscall *command_init)(RGE_Game_World *, int, TCommunications_Handler *);
  void (__thiscall *world_init)(RGE_Game_World *, int, TSound_Driver *, TCommunications_Handler *);
  void (__thiscall *setup_gaia)(RGE_Game_World *);
  unsigned __int8 (__thiscall *modify_gaia)(RGE_Game_World *);
  void (__thiscall *setup_players)(RGE_Game_World *, RGE_Player_Info *);
  unsigned __int8 (__thiscall *new_random_game)(RGE_Game_World *, RGE_Player_Info *);
  void (__thiscall *save)(RGE_Game_World *, int, int);
  void (__thiscall *scenario_make_player)(RGE_Game_World *, __int16, unsigned __int8, unsigned __int8, unsigned __int8, char *);
  void (__thiscall *scenario_make_map)(RGE_Game_World *, int);
  unsigned __int8 (__thiscall *load_scenario_2)(RGE_Game_World *, RGE_Player_Info *);
  unsigned __int8 (__thiscall *load_scenario_1)(RGE_Game_World *, char *, RGE_Player_Info *, unsigned __int8);
  void (__thiscall *load_scenario1)(RGE_Game_World *, int, RGE_Player_Info *);
  void (__thiscall *load_scenario2)(RGE_Game_World *, int, RGE_Player_Info *);
  void (__thiscall *load_scenario3)(RGE_Game_World *, int, RGE_Player_Info *);
  void (__thiscall *load_scenario4)(RGE_Game_World *, int, RGE_Player_Info *);
  void (__thiscall *load_scenario5)(RGE_Game_World *, int, RGE_Player_Info *);
  void (__thiscall *load_scenario6)(RGE_Game_World *, int, RGE_Player_Info *);
  void (__thiscall *load_scenario7)(RGE_Game_World *, int, RGE_Player_Info *);
  void (__thiscall *load_scenario8)(RGE_Game_World *, int, RGE_Player_Info *);
  void (__thiscall *load_scenario9)(RGE_Game_World *, int, RGE_Player_Info *);
  void (__thiscall *load_scenario10)(RGE_Game_World *, int, RGE_Player_Info *);
  void (__thiscall *load_scenario11)(RGE_Game_World *, int, RGE_Player_Info *, int, unsigned __int8);
  void (__thiscall *logStatus)(RGE_Game_World *, FILE *, int);
  void *(__thiscall *__vecDelDtor)(RGE_Game_World *, unsigned int);
  void (__thiscall *setup_player_colors_2)(RGE_Game_World *);
  void (__thiscall *setup_player_colors_1)(RGE_Game_World *, RGE_Player_Info *);
  unsigned __int8 (__thiscall *data_load)(RGE_Game_World *, char *, char *);
  unsigned __int8 (__thiscall *init)(RGE_Game_World *, char *, TSound_Driver *, TCommunications_Handler *);
  void (__thiscall *turn_sound_off)(RGE_Game_World *);
  void (__thiscall *del_game_info)(RGE_Game_World *);
  unsigned __int8 (__thiscall *update)(RGE_Game_World *);
  void (__thiscall *perform_auto_save)(RGE_Game_World *);
  unsigned __int8 (__thiscall *get_game_state)(RGE_Game_World *);
  unsigned __int8 (__thiscall *check_game_state)(RGE_Game_World *);
  unsigned __int8 (__thiscall *load_world)(RGE_Game_World *, int, int);
  unsigned __int8 (__thiscall *load_game)(RGE_Game_World *, char *, int);
  unsigned __int8 (__thiscall *new_game)(RGE_Game_World *, RGE_Player_Info *, int);
  unsigned __int8 (__thiscall *new_scenario)(RGE_Game_World *, RGE_Player_Info *, int);
  unsigned __int8 (__thiscall *save_game)(RGE_Game_World *, char *, int, unsigned __int8);
  void (__thiscall *base_save_2)(RGE_Game_World *, char *);
  void (__thiscall *base_save_1)(RGE_Game_World *, int);
  unsigned __int8 (__thiscall *save_scenario)(RGE_Game_World *, char *);
  void (__thiscall *save_scenario_main)(RGE_Game_World *, int, char *);
  RGE_Scenario *(__thiscall *get_scenario_info)(RGE_Game_World *, char *);
  void (__thiscall *pause)(RGE_Game_World *, unsigned __int8);
  void (__thiscall *update_mutual_allies)(RGE_Game_World *);
  void (__thiscall *scenario_init_2)(RGE_Game_World *, RGE_Game_World *);
  void (__thiscall *scenario_init_1)(RGE_Game_World *, int, RGE_Game_World *, unsigned __int8);
  int (__thiscall *addObject)(RGE_Game_World *, RGE_Static_Object *);
  int (__thiscall *removeObject)(RGE_Game_World *, int);
};
#pragma pack(pop)

/* 514 */
typedef int COMMSTATUS;

/* 512 */
#pragma pack(push, 8)
struct FILE_XFER_STRUCT
{
  char FileName[400];
  int File;
  unsigned int Size;
  unsigned int LastAckTime;
  unsigned int Checksum;
  int Filetype;
  int Pos[10];
  int LastAckPos[10];
  int Status[10];
  int Rate[10];
  int LastRate[10];
};
#pragma pack(pop)

/* 515 */
typedef int COMMSTATES;

/* 516 */
typedef int PLAYERHUMANITY;

/* 230 */
#pragma pack(push, 8)
struct COMMPLAYEROPTIONS
{
  unsigned __int8 NeedsToBeSent;
  unsigned __int8 RestoringGame;
  unsigned int LastSentTime;
  COMMSTATES ProgramState;
  unsigned int CurrentTurn;
  unsigned __int8 TurnSpeedMsec;
  DPID dcoID[10];
  unsigned int AcknowledgeAfterMsec;
  unsigned __int8 CommandTurnIncrement;
  int PlayerReady[10];
  unsigned int User1[10];
  unsigned int User2[10];
  unsigned int User3[10];
  unsigned int User4[10];
  unsigned int User5[10];
  unsigned int User6[10];
  unsigned int User7[10];
  PLAYERHUMANITY Humanity[10];
  unsigned __int8 InvalidPlayer[10];
  unsigned int Initialized;
  unsigned int RandomSeed;
  GUID guid;
  unsigned int headerChecksum;
  unsigned __int16 HighPlayerNumber;
  unsigned __int16 LowPlayerNumber;
  unsigned int HostPlayerNumber;
  int GameHasStarted;
  unsigned int DataSizeToFollow;
  unsigned int SavedPos[10];
};
#pragma pack(pop)

/* 508 */
#pragma pack(push, 8)
struct PLAYER_SAVE_STRUCT
{
  char name[128];
  int color;
  int civ;
  int team;
};
#pragma pack(pop)

/* 509 */
#pragma pack(push, 8)
struct cPlayerSave
{
  int valid;
  int type;
  int commPosition;
  int gamePosition;
  char name[129];
  int color;
  int civ;
  int team;
};
#pragma pack(pop)

/* 510 */
#pragma pack(push, 8)
struct cGameSettings
{
  int scenarioGame;
  char scenarioName[500];
  int deathmatchGame;
  int regicideGame;
  int randomGame;
  int mapSize;
  int mapType;
  int victoryType;
  int victoryAmount;
  int startingAge;
  int resourceLevel;
  int difficulty;
  int randomizePositions;
  int visibilityType;
  int fullTechTree;
  int allowCheatCodes;
  int pathFinding;
  int popLimit;
  float gameSpeed;
  int gameSpeedLocked;
  int gameTeamsLocked;
};
#pragma pack(pop)

/* 227 */
#pragma pack(push, 8)
struct cHeaderInfo
{
  GUID guid;
  int version;
  int valid;
  int validSaveGame;
  char saveGameFileName[260];
  char saveGameName[500];
  char saveGameDateTime[500];
  char myFriendlyName[129];
  unsigned int saveGameChecksum;
  int mySavedCommPosition;
  int mySavedGamePosition;
  int randomSeed;
  int chatGroupPlayers[10];
  cPlayerSave playerSave[10];
  cGameSettings gameSettings;
};
#pragma pack(pop)

/* 511 */
#pragma pack(push, 8)
struct sRecvFilePacket
{
  char packet[512];
  unsigned int pos;
  unsigned int size;
  unsigned __int8 valid;
};
#pragma pack(pop)

/* 513 */
typedef int eGameOutcome;

/* 91 */
#pragma pack(push, 8)
struct TCommunications_Handler
{
  int OptionsChanged;
  char *OptionsData;
  int Steps;
  unsigned int TickStart;
  unsigned int TickCount;
  unsigned int TimeSinceLastCall;
  TChat *Chat;
  int MeHost;
  int HaveHostInit;
  char InCommBuff[4001];
  char TBuff[257];
  unsigned int current_turn;
  unsigned int next_command_turn;
  unsigned int sequence;
  int WaitOnPlayer;
  unsigned int TurnSpeedMsec;
  unsigned int AcknowledgeAfterMsec;
  unsigned int Me;
  int Multiplayer;
  int OutOfSyncFlag;
  unsigned int dwStopTime;
  float lastRXDataRate;
  float lastTXDataRate;
  int mHeaderSet;
  char MyFriendlyName[129];
  char MyFormalName[129];
  char MyGameTitle[129];
  unsigned int CurrentPlayers;
  int previous_last_world_random;
  int last_world_random;
  int StepMode;
  unsigned int turnstart;
  unsigned int lastcalltick;
  unsigned int mselapsed;
  int AvgTurnTime;
  int SkipFrames;
  int PauseChangePending;
  unsigned int CommunicationsVersionCode;
  int ShuttingDown;
  unsigned int ReturnElapsed;
  unsigned int ReturnRXPacketSize;
  unsigned int ReturnTXPacketSize;
  unsigned int RXPacketLength;
  unsigned int RXPacketLengthHigh;
  unsigned int TXPacketLength;
  unsigned int TXPacketLengthHigh;
  NAME *FriendlyName;
  NAME *FormalName;
  unsigned int LastTimeoutMessageTime;
  COMMSTATUS CommunicationsStatus;
  unsigned __int16 MaxGamePlayers;
  GUID ServiceGUID;
  GUID ApplicationGUID;
  GUID SessionGUID;
  HWND HostHWND;
  int LobbyLaunched;
  unsigned int MaxReceiveLatency;
  GUID NullGUID;
  unsigned int ResendAcknowledgements;
  unsigned int ResentToOther;
  unsigned int DroppedPacketCount;
  unsigned int RXPackets;
  unsigned int TXPackets;
  int IAmLagging;
  unsigned int ServiceTimeout;
  unsigned int LastPlayerCommunication[10];
  unsigned int LastPlayerWarning[10];
  unsigned int LastTXPing[10];
  unsigned int PlayerStopTurn[10];
  unsigned int LastSerialRequestedTX[10];
  unsigned int LastRequestHonoredTX[10];
  unsigned int LastSerialRepliedTX[10];
  unsigned int ResendsToPlayer[10];
  unsigned int TimeOutPlayer[10];
  int GotStartMessage;
  unsigned int LastRequestRepliedTX[10];
  unsigned int LastTXTime[10];
  unsigned int LastRXTime[10];
  int gameComm;
  unsigned int RequestedRouteTime[10];
  unsigned int RequestingRoute[10];
  unsigned int RoutingTable[10];
  unsigned int RequestedDirectTime[10];
  int Routing;
  unsigned int dwFlags;
  unsigned int dwMaxBufferSize;
  unsigned int dwMaxQueueSize;
  unsigned int dwMaxPlayers;
  unsigned int dwHundredBaud;
  unsigned int dwLatency;
  RGE_Communications_Queue *InQ;
  RGE_Communications_Queue *OutQ;
  RGE_Lobby *Lobby;
  RGE_TimeSinceLastCall *tslc;
  RGE_Communications_Speed *Speed;
  RGE_Communications_Synchronize *Sync;
  RGE_Communications_Addresses *Addresses;
  RGE_Comm_Error *Err;
  int logging;
  TCommLog *CommLog;
  TCommCommandLog *mCommandLog;
  unsigned int lastworldtime;
  unsigned __int8 Resynching;
  unsigned int ResynchStartTime;
  unsigned int ResynchTimer;
  unsigned int ResynchHostStartTime;
  int Votes[10];
  TribeVoteSystemDialog *VoteSystemDialog;
  FILE_XFER_STRUCT ReceivingFile;
  FILE_XFER_STRUCT SendingFile;
  unsigned int mRecvRate[20];
  unsigned int mRecvFileBytesCount;
  unsigned int mSendFileBytesCount[10];
  unsigned int mRecvRateTimer;
  unsigned int mSendRateTimer;
  unsigned int mRecvFileErrorsTimer;
  int mAnyRecvFileErrors;
  unsigned int mFileSendRateIncrease;
  int ReceiveErrors;
  int TransmitErrors[10];
  int TransmittedBytes;
  int TotalBytes;
  int FileXferPercentComplete[10];
  int PlayerStalled[10];
  int PlayerStalledOut[10];
  int RdyToRecv;
  char ScenarioFileName[255];
  unsigned int ScenarioFileSize;
  int KillRoute[10];
  int Pregame;
  unsigned int GTDSerialNo;
  unsigned int HighResendStore;
  unsigned int DestMap[10];
  unsigned __int8 RGE_Guaranteed_Delivery;
  int IntentionallyDropPackets;
  unsigned int WaitingForAck;
  RESENDER *Resend;
  HOLDER *OnHold;
  unsigned int PlayerHighSerialNumber[10];
  int KickPlayerAfterStart[10];
  COMMPLAYEROPTIONS PlayerOptions;
  unsigned int LastTurnAck[10];
  unsigned int HoldCount;
  int co_init;
  TribeVoteSystemDialog *mVoteDialog2;
  unsigned int mAllPlayersAckedTime;
  int ProblemPlayer[10];
  unsigned int MainProblemPlayer;
  int ReceivedClients;
  unsigned int ResynchTimeout;
  unsigned int NewHost;
  unsigned int HighestTurn;
  unsigned __int8 HighestSeq;
  unsigned int LowestTurn;
  unsigned __int8 LowestSeq;
  unsigned int selfTimedOutTimer;
  int ReceivedResponse[10];
  unsigned int BestPlayer;
  int HaveSavedThisGame;
  unsigned int SaveOnMsec;
  unsigned int StartedSavingTurn;
  unsigned int SaveGameChecksum;
  unsigned int mySavedPosition;
  int DroppedMyself;
  PLAYER_SAVE_STRUCT PlayerSaveStructure[10];
  int needToSendFile[10];
  int needToRecvFile;
  TRegistry *mMPRegs;
  int mHeaderInfoPosition;
  cHeaderInfo mHeaderInfo;
  int PregameUpdateSentTime;
  int PregameUpdateReceivedTime[10];
  int NeedToSaveHeader;
  int SendScenario;
  int NeedScenario;
  char NeedScenarioName[256];
  int WasKicked[10];
  sRecvFilePacket mRecvFilePackets[8];
  int mVoteCount;
  eGameOutcome mPlayerGameOutcome[9];
  unsigned int mRecvBytesRate;
  unsigned int mTotalRecvFileBytesTimer;
  unsigned int mTotalRecvFileBytes;
  unsigned int lastResendBytes;
  unsigned int LastLoggedNewTime;
  unsigned int LastLoggedOldTime;
  int ForceScenario;
  unsigned __int16 RestartedGameTurn;
  TRIBE_Screen_Game *gameScreen;
  int mRecordingStarted;
  int mDisplayedRecordingMessage;
  int mKillComm;
  unsigned int COMMOUT_BytesPerSecond;
  unsigned int COMMOUT_BytesPerSecondOld;
  unsigned int FASTSEND_BytesPerSecond;
  unsigned int FASTSEND_BytesPerSecondOld;
  unsigned int TimerTEST1;
  TTaunt *mTauntSystem;
  unsigned int mLastReceiveGameMessagesElapsed;
  unsigned int mLastReceiveGameMessagesTime;
  unsigned int mSendAllDoneMsgTimer;
  unsigned int mSavedAndExitedTurn;
  int mSavedVote[9];
  int errorReceivingFile;
  int mIncrementedChecksum;
  int mCreatingDialog;
  unsigned int turnMissedArray[20];
  unsigned int turnMissedCounter;
  unsigned int bufferFramesZeroTime;
  unsigned int highMissed;
  unsigned __int8 mRequestingRMS;
  unsigned int mRMSRequestTimer;
};
#pragma pack(pop)

/* 593 */
#pragma pack(push, 8)
struct RGE_Tile_Size
{
  __int16 width;
  __int16 height;
  __int16 y_delta;
};
#pragma pack(pop)

/* 594 */
#pragma pack(push, 8)
struct RGE_TOB_Picts
{
  __int16 count;
  __int16 animations;
  __int16 shape_index;
};
#pragma pack(pop)

/* 595 */
#pragma pack(push, 8)
struct RGE_Tile_Set
{
  unsigned __int8 loaded;
  unsigned __int8 random;
  char name[17];
  char pict_name[17];
  int resource_id;
  TShape *shape;
  RGE_Sound *sound;
  int draw_level;
  int draw_class;
  unsigned __int8 map_hi_color;
  unsigned __int8 map_med_color;
  unsigned __int8 map_low_color;
  unsigned __int8 map_lt_cliff_color;
  unsigned __int8 map_rt_cliff_color;
  unsigned __int8 passable_terrain;
  unsigned __int8 impassable_terrain;
  unsigned __int8 is_animated;
  __int16 animation_frames;
  __int16 pause_frames;
  float interval;
  float pause_between_loops;
  __int16 frame;
  __int16 draw_frame;
  float animate_last;
  unsigned __int8 frame_changed;
  unsigned __int8 drawn;
  RGE_TOB_Picts tiles[19];
  __int16 terrain_to_draw;
  __int16 rows;
  __int16 cols;
  __int16 borders[55];
  __int16 obj_types[30];
  __int16 obj_density[30];
  unsigned __int8 obj_placement_flag[30];
  __int16 num_obj_type;
};
#pragma pack(pop)

/* 596 */
#pragma pack(push, 8)
struct RGE_Border_Set
{
  unsigned __int8 loaded;
  unsigned __int8 random;
  char name[13];
  char pict_name[13];
  int resource_id;
  TShape *shape;
  RGE_Sound *sound;
  unsigned __int8 map_hi_color;
  unsigned __int8 map_med_color;
  unsigned __int8 map_low_color;
  unsigned __int8 is_animated;
  __int16 animation_frames;
  __int16 pause_frames;
  float interval;
  float pause_between_loops;
  __int16 frame;
  __int16 draw_frame;
  float animate_last;
  unsigned __int8 frame_changed;
  unsigned __int8 drawn;
  RGE_TOB_Picts borders[19][12];
  unsigned __int8 draw_tile;
  __int16 underlay_terrain;
  __int16 border_style;
};
#pragma pack(pop)

/* 441 */
#pragma pack(push, 8)
struct TOLM_Info
{
  RGE_Static_Object ***Zone_Ptrs;
  int *Zone_Node_Sizes;
  int *Zone_Size_Ptrs;
  int SizeZone;
  int Used_Zones;
  int Max_Zones;
  RGE_Static_Object **Free_Head;
  int Free_Pool_Zone;
  int Free_Pool_Index;
  int Total_Blocks;
  int Free_Blocks;
  int Default_Grow_Size;
  int Element_Size;
  int Alloc_Count;
  int Dealloc_Count;
  int NewZone_Count;
  int Reset_Count;
};
#pragma pack(pop)

/* 78 */
#pragma pack(push, 8)
struct RGE_Map
{
  RGE_MapVtbl *vfptr;
  RGE_Tile *map;
  int map_width;
  int map_height;
  int world_width;
  int world_height;
  RGE_Tile_Size tilesizes[19];
  RGE_Tile_Set terrain_types[55];
  RGE_Border_Set border_types[16];
  RGE_Tile **map_row_offset;
  float map_min_x;
  float map_min_y;
  float map_max_x;
  float map_max_y;
  float map_max_xplus1;
  float map_max_yplus1;
  __int16 num_terrain;
  __int16 num_borders;
  __int16 max_terrain;
  __int16 tile_width;
  __int16 tile_height;
  __int16 tile_half_height;
  __int16 tile_half_width;
  __int16 elev_height;
  __int16 cur_row;
  __int16 cur_col;
  __int16 block_beg_row;
  __int16 block_end_row;
  __int16 block_beg_col;
  __int16 block_end_col;
  unsigned __int8 *search_map;
  unsigned __int8 **search_map_rows;
  unsigned __int8 any_frame_change;
  unsigned __int8 map_visible_flag;
  unsigned __int8 fog_flag;
  int UMV_Data_List_Used;
  int UMV_Data_List_Size;
  unsigned int *UMV_Data_GUID;
  UMV_Offset_Point **UMV_Data_Points;
  RGE_Obstruction_Manager_Land *OB_Manager_Land;
  RGE_Obstruction_Manager_Air *OB_Manager_Air;
  RGE_RMM_Database_Controller *random_map;
  RGE_Game_World *game_world;
  RGE_Zone_Map_List *map_zones;
  RGE_Unified_Visible_Map *unified_vis_map;
  Visible_Unit_Manager *unit_manager;
  RGE_Map_Copy_Data *map_copy_data;
  int OL_SystemActive;
  unsigned __int8 *OL_ZoneNum;
  int OL_MaxListSize[4];
  int OL_HeapSize[4];
  TOLM_Info OL_Pool[4];
  RGE_View *theView;
  int DisableTileCaching;
  DynamicTileCacheNode *DynamicTileCache;
  int DynamicTileCacheSize;
  int DynamicTileCacheUsed;
  DynamicTileCacheNode *UsedByTypeHead[17];
  DynamicTileCacheNode *UsedByTypeTail[17];
  DynamicTileCacheNode *FreeByType[17];
  TShape *ScratchTile[17];
};
#pragma pack(pop)

/* 265 */
#pragma pack(push, 8)
struct RGE_Master_Player
{
  RGE_Master_PlayerVtbl *vfptr;
  char name[20];
  char gbg_name2[20];
  __int16 master_object_num;
  RGE_Master_Static_Object **master_objects;
  __int16 attribute_num;
  float *attributes;
  unsigned __int8 culture;
  unsigned __int8 type;
  __int16 tribe_effect;
  __int16 team_effect;
  __int16 gbg_unique_units_techs_1;
  __int16 gbg_unique_units_techs_2;
  __int16 gbg_unique_units_techs_3;
  __int16 gbg_unique_units_techs_4;
};
#pragma pack(pop)

/* 266 */
#pragma pack(push, 8)
struct RGE_Effects
{
  RGE_EffectsVtbl *vfptr;
  RGE_Effect *effects;
  int effect_num;
};
#pragma pack(pop)

/* 654 */
#pragma pack(push, 8)
struct RGE_Extra_Terrain_Table
{
  int exit_tile_sprite_id;
  int enter_tile_sprite_id;
  int walk_tile_sprite_id;
  int walk_sprite_rate;
};
#pragma pack(pop)

/* 148 */
#pragma pack(push, 8)
struct RGE_Obj_Info
{
  int id;
};
#pragma pack(pop)

/* 386 */
#pragma pack(push, 8)
struct RGE_Command_AI_Order
{
  unsigned __int8 command;
  unsigned __int8 unit_num;
  unsigned __int8 player_id;
  unsigned __int8 issuer;
  int recipient;
  __int16 orderType;
  unsigned __int8 orderPriority;
  int target;
  unsigned __int8 targetOwner;
  float targetX;
  float targetY;
  float targetZ;
  float range;
  unsigned __int8 immediate;
  unsigned __int8 inFront;
};
#pragma pack(pop)

/* 127 */
#pragma pack(push, 8)
struct RGE_Command
{
  RGE_CommandVtbl *vfptr;
  RGE_Game_World *world;
  unsigned __int8 *last_order;
  int last_order_size;
  int last_order_time;
  int mReplayViewOldUnitID;
  int mReplayViewOldTargetID;
  unsigned int mReplayViewTimer1;
  unsigned int mReplayViewTimer2;
  unsigned int mReplayViewTimer3;
  __int16 sent_commanded_count;
  int sent_commanded_valid;
  int sent_commanded_units[40];
  unsigned __int8 last_commanded_count[9];
  RGE_Obj_Info last_commanded_units[9][40];
  RGE_Command_AI_Order ai_orders[200];
  int ai_order_count;
  TCommunications_Handler *com_hand;
};
#pragma pack(pop)

/* 793 */
#pragma pack(push, 8)
struct PlayerName
{
  char Name[256];
};
#pragma pack(pop)

/* 93 */
#pragma pack(push, 8)
struct RGE_Scenario
{
  RGE_ScenarioVtbl *vfptr;
  RGE_Timeline *time_line;
  RGE_Game_World *world;
  unsigned __int8 victory_conquest;
  PlayerName player_name[16];
  int player_string_table[16];
  char *scenario_name;
  char *description;
  char *hints;
  char *win_message;
  char *loss_message;
  char *historicle_notes;
  char *scout_message;
  int description_string_table;
  int hints_string_table;
  int win_message_string_table;
  int loss_message_string_table;
  int historicle_notes_string_table;
  int scout_message_string_table;
  char TempText1[224];
  char TempText2[224];
  char TempText3[224];
  char *BuildList[16];
  char *CityPlan[16];
  char *AiRules[16];
  unsigned __int8 AiRulesType[16];
  unsigned __int8 *BuildListFile[16];
  unsigned __int8 *CityPlanFile[16];
  unsigned __int8 *AiRulesFile[16];
  int BuildListFileSize[16];
  int CityPlanFileSize[16];
  int AiRulesFileSize[16];
  char Cine_PreGame[224];
  char Cine_Victory[224];
  char Cine_Loss[224];
  char Mission_Bmp[224];
  float Version;
  int PlayerPosture[16];
  int PlType[16];
  int PlCivilization[16];
  int PlActive[16];
  TPicture *mission_picture;
};
#pragma pack(pop)

/* 142 */
#pragma pack(push, 8)
struct RGE_Sprite_Particle_System
{
  RGE_Sprite_Particle_mem_bank *sprite_memory_bank;
  RGE_Sprite_Particle *unused_list;
  RGE_Sprite_Particle *in_use_list;
  RGE_Sprite_Particle *update_array[60];
  int current_update_point;
  RGE_Game_World *world;
  int time;
  int add_particle_counter;
};
#pragma pack(pop)

/* 173 */
#pragma pack(push, 8)
struct RGE_Map_Analysis_System
{
  RGE_Map_Analysis **map_analysis_list;
  int map_analysis_list_num;
  RGE_Game_World *world;
};
#pragma pack(pop)

/* 102 */
#pragma pack(push, 8)
struct TSound_Driver
{
  int TSound_Driver_reserved;
  unsigned __int8 ready;
  unsigned __int8 mute;
  HWND main_wnd;
  IDirectSound *direct_sound;
  IDirectSoundBuffer *primary_buffer;
  HRESULT dsrval;
  int start_volume;
  int volume;
  char path[260];
  int frequency;
  int mixer_open;
  HMIXER mixer_handle;
  MIXERLINEA mixer_line_info;
  MIXERLINECONTROLSA mixer_line_controls;
  MIXERCONTROLA mixer_volume_control;
  MIXERCONTROLDETAILS mixer_volume_details;
  MIXERCONTROLDETAILS_UNSIGNED mixer_volume_value;
  TDigital *sound_play_list[256];
  unsigned __int8 restart_list[256];
  int play_list_count;
  void *waveDriver;
  int digitalRate;
  int digitalBits;
  int digitalChans;
};
#pragma pack(pop)

/* 220 */
#pragma pack(push, 8)
struct RGE_Task_List
{
  RGE_Task_ListVtbl *vfptr;
  RGE_Task **list;
  __int16 list_num;
  unsigned __int8 RGE_Task_List_gap[2];
};
#pragma pack(pop)

/* 542 */
#pragma pack(push, 8)
struct BPosition
{
  BVector mPosition;
  BVector mOrientationForward;
  BVector mOrientationUp;
  BVector mOrientationRight;
};
#pragma pack(pop)

/* 547 */
#pragma pack(push, 8)
struct BPointLineElement
{
  BVector mPoint;
  BVector mForward;
  BVector mUp;
  BVector mRight;
  BPointLineElement *next;
  BPointLineElement *prev;
};
#pragma pack(pop)

/* 161 */
#pragma pack(push, 8)
struct BPointLine
{
  int mNumberPoints;
  BPointLineElement mPoints;
  float mLength;
  float mDesiredLength;
};
#pragma pack(pop)

/* 163 */
#pragma pack(push, 8)
struct BUnitTypeStatistic
{
  BUnitTypeStatistic *next;
  BUnitTypeStatistic *prev;
  int mFormationCategory;
  int mNumberUnits;
  int mMaximumNumberUnits;
  int *mUnits;
  int mUsed;
  float mAttackRange;
  float mDesiredSpacing;
  int mNumberUnitTypes;
  int mUnitTypes[50];
  int mUnitTypeCounts[50];
};
#pragma pack(pop)

/* 162 */
#pragma pack(push, 8)
struct BUnitTypeStatisticManager
{
  int mNumberCategories;
  BUnitTypeStatistic mStatistics;
};
#pragma pack(pop)

/* 382 */
#pragma pack(push, 8)
struct BContextPlan
{
  int mNumberElements;
  int mMaximumNumberElements;
  BContextPlanElement *mPlan;
};
#pragma pack(pop)

/* 545 */
#pragma pack(push, 8)
struct BTargetData
{
  int mTarget;
  int mType;
  BVector mOriginalPosition;
  float mRange;
  float mTargetRadius;
};
#pragma pack(pop)

/* 546 */
#pragma pack(push, 8)
struct BGroupOrder
{
  int mCommand;
  int mTargetID;
  float mParm;
  BVector mPoint;
  unsigned int mExecuteTime;
  BGroupOrder *next;
  BGroupOrder *prev;
};
#pragma pack(pop)

/* 157 */
#pragma pack(push, 8)
struct BUnitGroup
{
  BUnitGroupVtbl *vfptr;
  BPosition mPosition;
  BPosition mNewPosition;
  BVector mVelocity;
  BVector mAcceleration;
  BVector mAngularVelocity;
  BVector mAngularAcceleration;
  float mTurnRadius;
  float mTurnRadiusSpeed;
  float mMaximumYawPerSecondMoving;
  float mStationaryYawRevolutionTime;
  float mMaximumYawPerSecondStationary;
  BPathData *mPathData;
  BBitVector mMotionFlags;
  float mMaximumVelocityForward;
  int mNumberWaitDelays;
  RGE_Moving_Object *mPathUnit;
  BUnitGroup *next;
  BUnitGroup *prev;
  int mID;
  int mOwner;
  int mState;
  int mNumberUnits;
  int mMaximumNumberUnits;
  int *mUnits;
  BSpecificMove *mSpecificMoves;
  int mDifferentiatorID;
  int *mDifferentiatorGroups;
  int mNumberDifferentiatorGroups;
  BFormation *mPreviousFormation;
  BFormation *mCurrentFormation;
  int mFormationLocked;
  int mFormationLockedType;
  BBitVector mGroupFlags;
  BVector mCentroid;
  float mDesiredHeight;
  float mLargestUnitRadius;
  float mSmallestUnitRadius;
  float mDesiredSpacing;
  float mSmallestUnitRange;
  float mSmallestRangedUnitRange;
  float mLargestUnitRange;
  float mLargestRangedUnitRange;
  float mTotalSpacing;
  BPointLine mStoredPositions;
  BUnitTypeStatisticManager mUnitTypes;
  BVector *mWaypoints;
  int mNumberWaypoints;
  int mMaximumNumberWaypoints;
  int mCurrentCommand;
  BContextPlan mCurrentAttackPlan;
  BTargetData mCurrentTarget;
  int mAttackPlanType;
  unsigned int mIdleTimer;
  BGroupOrder mOrderQueue;
  int mOrderQueueSize;
  int mAnyUnitSelected;
  float mSecondsNotUnderAttack;
  float *mSecondsSinceAttacking;
  int mNumberNonRetargetUnits;
  int mNonRetargetUnits[4];
  int mVisibleUnits[50];
  int mNumberVisibleUnits;
};
#pragma pack(pop)

/* 423 */
#pragma pack(push, 1)
struct BContextAnalyzer
{
};
#pragma pack(pop)

/* 67 */
#pragma pack(push, 8)
struct RGE_Master_Combat_Object
{
  RGE_Master_Combat_ObjectVtbl *vfptr;
  unsigned __int8 master_type;
  char *name;
  char *gbg_name2;
  __int16 unit_line;
  unsigned __int8 min_tech_level;
  __int16 string_id;
  __int16 string_id2;
  __int16 id;
  __int16 copy_id;
  __int16 base_id;
  __int16 object_group;
  RGE_Sprite *sprite;
  RGE_Sprite *sprite2;
  RGE_Sprite *death_sprite;
  RGE_Sprite *undead_sprite;
  unsigned __int8 undead_flag;
  __int16 hp;
  float los;
  unsigned __int8 obj_max;
  float radius_x;
  float radius_y;
  float radius_z;
  RGE_Sound *selected_sound;
  RGE_Sound *created_sound;
  RGE_Sound *death_sound;
  RGE_Sound *damage_sound;
  __int16 death_spawn_obj_id;
  unsigned __int8 sort_number;
  unsigned __int8 can_be_built_on;
  __int16 button_pict;
  unsigned __int8 hide_in_scenario_editor;
  __int16 portrait_pict;
  unsigned __int8 available;
  unsigned __int8 disabled;
  __int16 tile_req1;
  __int16 tile_req2;
  __int16 center_tile_req1;
  __int16 center_tile_req2;
  float construction_radius_x;
  float construction_radius_y;
  unsigned __int8 elevation_flag;
  unsigned __int8 fog_flag;
  __int16 terrain;
  unsigned __int8 movement_type;
  __int16 attribute_type_held[3];
  float attribute_amount_held[3];
  __int16 attribute_max_amount;
  float attribute_rot;
  float multiple_attribute_mod;
  unsigned __int8 attribute_flag[3];
  unsigned __int8 area_effect_object_level;
  unsigned __int8 combat_level;
  unsigned __int8 select_level;
  unsigned __int8 map_draw_level;
  unsigned __int8 unit_level;
  unsigned __int8 map_color;
  unsigned __int8 attack_reaction;
  unsigned __int8 convert_terrain_flag;
  unsigned __int8 damage_sprite_num;
  RGE_Damage_Sprite_Info *damage_sprites;
  unsigned __int8 occlusion_flag;
  unsigned __int8 obstruction_type;
  unsigned __int8 obstruction_class;
  unsigned int object_flags;
  int help_string_id;
  int help_page_id;
  int hotkey_id;
  unsigned __int8 recyclable;
  unsigned __int8 track_as_resource;
  unsigned __int8 create_doppleganger_on_death;
  unsigned __int8 resource_group;
  unsigned __int8 draw_flag;
  unsigned __int8 draw_color;
  float outline_radius_x;
  float outline_radius_y;
  float outline_radius_z;
  float speed;
  RGE_Sprite *move_sprite;
  RGE_Sprite *run_sprite;
  float turn_speed;
  unsigned __int8 size_class;
  __int16 obj_trail_id;
  unsigned __int8 obj_trail_options;
  float obj_trail_spacing;
  unsigned __int8 move_algorithem;
  float mTurnRadius;
  float mTurnRadiusSpeed;
  float mMaximumYawPerSecondMoving;
  float mStationaryYawRevolutionTime;
  float mMaximumYawPerSecondStationary;
  RGE_Task_List *tasks;
  __int16 default_task;
  float search_radius;
  float work_rate;
  float gbg_work_rate_2;
  __int16 drop_site;
  __int16 backup_drop_site;
  unsigned __int8 task_by_group;
  RGE_Sound *command_sound;
  RGE_Sound *move_sound;
  unsigned __int8 run_pattern;
  unsigned __int8 RGE_Master_Action_Object_gap[3];
  RGE_Sprite *fight_sprite;
  __int16 base_armor;
  __int16 armor_num;
  RGE_Armor_Weapon_Info *armor;
  __int16 weapon_num;
  RGE_Armor_Weapon_Info *weapon;
  __int16 defense_terrain_bonus;
  float weapon_range;
  float area_effect_range;
  unsigned __int8 area_effect_level;
  float speed_of_attack;
  __int16 missile_id;
  __int16 base_hit_chance;
  unsigned __int8 break_off_combat;
  __int16 fire_missile_at_frame;
  float weapon_offset_x;
  float weapon_offset_y;
  float weapon_offset_z;
  float minimum_weapon_range;
  __int16 orig_armor;
  __int16 orig_weapon;
  float orig_weapon_range;
  float orig_speed_of_attack;
  float missed_missile_spread;
};
#pragma pack(pop)

/* 520 */
#pragma pack(push, 8)
struct RGE_Sound_Info
{
  char name[13];
  int resource_id;
  __int16 percent;
  __int16 player_id;
  __int16 culture;
  TDigital *digital_sound;
  unsigned __int8 loaded;
  unsigned int time;
};
#pragma pack(pop)

/* 294 */
#pragma pack(push, 8)
struct XYZBYTEPoint
{
  unsigned __int8 x;
  unsigned __int8 y;
  unsigned __int8 z;
};
#pragma pack(pop)

/* 630 */
#pragma pack(push, 8)
struct RGE_Player_Object_ListVtbl
{
  void (__thiscall *Load)(RGE_Player_Object_List *, unsigned __int8, int, RGE_Game_World *);
};
#pragma pack(pop)

/* 825 */
#pragma pack(push, 8)
struct RGE_Victory_ConditionsVtbl
{
  void (__thiscall *handle_point_condition)(RGE_Victory_Conditions *, RGE_Victory_Point_Entry *);
  void (__thiscall *handle_condition)(RGE_Victory_Conditions *, RGE_Victory_Entry *);
  char *(__thiscall *condition_description)(RGE_Victory_Conditions *, RGE_Victory_Entry *);
  void (__thiscall *save)(RGE_Victory_Conditions *, int);
};
#pragma pack(pop)

/* 284 */
#pragma pack(push, 8)
struct RGE_Victory_Entry
{
  unsigned __int8 command;
  int obj_type;
  RGE_Player *target_player;
  float x0;
  float y0;
  float x1;
  float y1;
  int number;
  int count;
  RGE_Static_Object *this_obj;
  RGE_Static_Object *target_obj;
  unsigned __int8 victory_group;
  unsigned __int8 ally_flag;
  unsigned __int8 state;
  unsigned __int8 checked_flag;
  RGE_Victory_Entry *next;
};
#pragma pack(pop)

/* 295 */
#pragma pack(push, 8)
struct RGE_Victory_Point_Entry
{
  unsigned __int8 command;
  unsigned __int8 state;
  unsigned __int8 id;
  int group;
  int attribute;
  int attribute1;
  int amount;
  int points;
  int curr_points;
  float curr_attribute_amount;
  float curr_attribute_amount1;
  RGE_Victory_Point_Entry *next;
};
#pragma pack(pop)

/* 656 */
#pragma pack(push, 8)
struct TRIBE_WorldVtbl
{
  unsigned __int8 (__thiscall *data_load_world)(TRIBE_World *, FILE *);
  unsigned __int8 (__thiscall *data_load_terrain_tables)(TRIBE_World *, char *);
  unsigned __int8 (__thiscall *data_load_players)(TRIBE_World *, char *);
  unsigned __int8 (__thiscall *data_load_tasks)(TRIBE_World *, char *);
  unsigned __int8 (__thiscall *data_load_objects)(TRIBE_World *, char *);
  unsigned __int8 (__thiscall *data_load_sounds)(TRIBE_World *, char *);
  unsigned __int8 (__thiscall *data_load_color_tables)(TRIBE_World *, char *);
  unsigned __int8 (__thiscall *data_load_sprites)(TRIBE_World *, char *);
  void (__thiscall *data_load_players_type)(TRIBE_World *, __int16, __int16, FILE *);
  void (__thiscall *data_load_effects)(TRIBE_World *, char *);
  void (__thiscall *data_load_map)(TRIBE_World *, char *, char *, char *, char *, __int16, __int16, __int16, RGE_Sound **, char *);
  void (__thiscall *data_load_random_map)(TRIBE_World *, char *, char *, char *, char *);
  void (__thiscall *data_load_unitlines)(TRIBE_World *, char *);
  unsigned __int8 (__thiscall *init_player_type)(TRIBE_World *, int, __int16, unsigned __int8);
  unsigned __int8 (__thiscall *init_player)(TRIBE_World *, int);
  void (__thiscall *load_player)(TRIBE_World *, int, unsigned __int8, __int16);
  void (__thiscall *color_table_init)(TRIBE_World *, int);
  void (__thiscall *terrain_tables_init)(TRIBE_World *, int);
  void (__thiscall *init_sounds)(TRIBE_World *, int, TSound_Driver *);
  void (__thiscall *init_sprites)(TRIBE_World *, int);
  void (__thiscall *map_init)(TRIBE_World *, int, TSound_Driver *);
  void (__thiscall *effects_init)(TRIBE_World *, int);
  void (__thiscall *master_player_init)(TRIBE_World *, int);
  void (__thiscall *command_init)(TRIBE_World *, int, TCommunications_Handler *);
  void (__thiscall *world_init)(TRIBE_World *, int, TSound_Driver *, TCommunications_Handler *);
  void (__thiscall *setup_gaia)(TRIBE_World *);
  unsigned __int8 (__thiscall *modify_gaia)(TRIBE_World *);
  void (__thiscall *setup_players)(TRIBE_World *, RGE_Player_Info *);
  unsigned __int8 (__thiscall *new_random_game)(TRIBE_World *, RGE_Player_Info *);
  void (__thiscall *save)(TRIBE_World *, int, int);
  void (__thiscall *scenario_make_player)(TRIBE_World *, __int16, unsigned __int8, unsigned __int8, unsigned __int8, char *);
  void (__thiscall *scenario_make_map)(TRIBE_World *, int);
  unsigned __int8 (__thiscall *load_scenario_2)(TRIBE_World *, RGE_Player_Info *);
  unsigned __int8 (__thiscall *load_scenario_1)(TRIBE_World *, char *, RGE_Player_Info *, unsigned __int8);
  void (__thiscall *load_scenario1)(TRIBE_World *, int, RGE_Player_Info *);
  void (__thiscall *load_scenario2)(TRIBE_World *, int, RGE_Player_Info *);
  void (__thiscall *load_scenario3)(TRIBE_World *, int, RGE_Player_Info *);
  void (__thiscall *load_scenario4)(TRIBE_World *, int, RGE_Player_Info *);
  void (__thiscall *load_scenario5)(TRIBE_World *, int, RGE_Player_Info *);
  void (__thiscall *load_scenario6)(TRIBE_World *, int, RGE_Player_Info *);
  void (__thiscall *load_scenario7)(TRIBE_World *, int, RGE_Player_Info *);
  void (__thiscall *load_scenario8)(TRIBE_World *, int, RGE_Player_Info *);
  void (__thiscall *load_scenario9)(TRIBE_World *, int, RGE_Player_Info *);
  void (__thiscall *load_scenario10)(TRIBE_World *, int, RGE_Player_Info *);
  void (__thiscall *load_scenario11)(TRIBE_World *, int, RGE_Player_Info *, int, unsigned __int8);
  void (__thiscall *logStatus)(TRIBE_World *, FILE *, int);
  void *(__thiscall *__vecDelDtor)(TRIBE_World *, unsigned int);
  void (__thiscall *setup_player_colors_2)(TRIBE_World *);
  void (__thiscall *setup_player_colors_1)(TRIBE_World *, RGE_Player_Info *);
  unsigned __int8 (__thiscall *data_load)(TRIBE_World *, char *, char *);
  unsigned __int8 (__thiscall *init)(TRIBE_World *, char *, TSound_Driver *, TCommunications_Handler *);
  void (__thiscall *turn_sound_off)(TRIBE_World *);
  void (__thiscall *del_game_info)(TRIBE_World *);
  unsigned __int8 (__thiscall *update)(TRIBE_World *);
  void (__thiscall *perform_auto_save)(TRIBE_World *);
  unsigned __int8 (__thiscall *get_game_state)(TRIBE_World *);
  unsigned __int8 (__thiscall *check_game_state)(TRIBE_World *);
  unsigned __int8 (__thiscall *load_world)(TRIBE_World *, int, int);
  unsigned __int8 (__thiscall *load_game)(TRIBE_World *, char *, int);
  unsigned __int8 (__thiscall *new_game)(TRIBE_World *, RGE_Player_Info *, int);
  unsigned __int8 (__thiscall *new_scenario)(TRIBE_World *, RGE_Player_Info *, int);
  unsigned __int8 (__thiscall *save_game)(TRIBE_World *, char *, int, unsigned __int8);
  void (__thiscall *base_save_2)(TRIBE_World *, char *);
  void (__thiscall *base_save_1)(TRIBE_World *, int);
  unsigned __int8 (__thiscall *save_scenario)(TRIBE_World *, char *);
  void (__thiscall *save_scenario_main)(TRIBE_World *, int, char *);
  RGE_Scenario *(__thiscall *get_scenario_info)(TRIBE_World *, char *);
  void (__thiscall *pause)(TRIBE_World *, unsigned __int8);
  void (__thiscall *update_mutual_allies)(TRIBE_World *);
  void (__thiscall *scenario_init_2)(TRIBE_World *, RGE_Game_World *);
  void (__thiscall *scenario_init_1)(TRIBE_World *, int, RGE_Game_World *, unsigned __int8);
  int (__thiscall *addObject)(TRIBE_World *, RGE_Static_Object *);
  int (__thiscall *removeObject)(TRIBE_World *, int);
};
#pragma pack(pop)

/* 128 */
#pragma pack(push, 8)
struct TRIBE_Command
{
  TRIBE_CommandVtbl *vfptr;
  RGE_Game_World *world;
  unsigned __int8 *last_order;
  int last_order_size;
  int last_order_time;
  int mReplayViewOldUnitID;
  int mReplayViewOldTargetID;
  unsigned int mReplayViewTimer1;
  unsigned int mReplayViewTimer2;
  unsigned int mReplayViewTimer3;
  __int16 sent_commanded_count;
  int sent_commanded_valid;
  int sent_commanded_units[40];
  unsigned __int8 last_commanded_count[9];
  RGE_Obj_Info last_commanded_units[9][40];
  RGE_Command_AI_Order ai_orders[200];
  int ai_order_count;
  TCommunications_Handler *com_hand;
};
#pragma pack(pop)

/* 251 */
#pragma pack(push, 1)
struct TRIBE_Tech
{
};
#pragma pack(pop)

/* 129 */
#pragma pack(push, 1)
struct AIExpert
{
};
#pragma pack(pop)

/* 274 */
#pragma pack(push, 1)
struct TribeAIFacts
{
};
#pragma pack(pop)

/* 120 */
#pragma pack(push, 8)
struct TRIBE_Trigger_System
{
  TRIBE_World *world;
  unsigned __int8 objectives_updated;
  unsigned __int8 **shared_valid_condition_info;
  unsigned __int8 **shared_valid_effect_info;
  TRIBE_Trigger **trigger_list;
  int *trigger_order;
  int trigger_num;
  int max_trigger_num;
  float timer;
  int current_objective_order;
  int current_objective_index;
  int next_objective_order;
};
#pragma pack(pop)

/* 919 */
#pragma pack(push, 8)
struct vis_Upd_info
{
  RGE_Combat_Object *theObj;
  int Xpos;
  int Ypos;
  unsigned int UMV_Value;
};
#pragma pack(pop)

/* 327 */
#pragma pack(push, 8)
struct VISIBLE_RESOURCE_REC
{
  int object_id;
  unsigned __int8 distance;
  unsigned __int8 zone;
  unsigned __int8 pos_x;
  unsigned __int8 pos_y;
};
#pragma pack(pop)

/* 920 */
#pragma pack(push, 8)
struct TRIBE_History_Entry
{
  __int16 civilian_pop;
  __int16 military_pop;
};
#pragma pack(pop)

/* 323 */
#pragma pack(push, 8)
struct TRIBE_History_Events
{
  unsigned __int8 event;
  int time_slice;
  unsigned int world_time;
  float data1;
  float data2;
  float data3;
  TRIBE_History_Events *next;
};
#pragma pack(pop)

/* 554 */
#pragma pack(push, 8)
struct RGE_Object_ListVtbl
{
  void (__thiscall *load)(RGE_Object_List *, unsigned __int8, int, RGE_Game_World *);
};
#pragma pack(pop)

/* 317 */
#pragma pack(push, 8)
struct RGE_Object_Node
{
  RGE_Static_Object *node;
  RGE_Object_Node *next;
  RGE_Object_Node *prev;
  unsigned __int8 centered;
};
#pragma pack(pop)

/* 451 */
#pragma pack(push, 8)
struct Shape_Clip_Mask
{
  int Width;
  int Height;
  int Node_Count;
  Shape_Clip_Node **LineList;
  Shape_Clip_Node *NodeHeap;
};
#pragma pack(pop)

/* 518 */
#pragma pack(push, 8)
struct Shape_File_Header
{
  char Version[4];
  int Num_Shapes;
  char Comment[24];
};
#pragma pack(pop)

/* 85 */
#pragma pack(push, 8)
struct Shape_Info
{
  unsigned int Shape_Data_Offsets;
  unsigned int Shape_Outline_Offset;
  unsigned int Palette_Offset;
  unsigned int Properties;
  int Width;
  int Height;
  int Hotspot_X;
  int Hotspot_Y;
};
#pragma pack(pop)

/* 79 */
#pragma pack(push, 8)
struct RGE_Active_Sprite
{
  RGE_Active_SpriteVtbl *vfptr;
  RGE_Sprite *sprite;
  unsigned __int8 type;
  int offset_x;
  int offset_y;
  __int16 frame;
  unsigned __int8 invis_flag;
  unsigned __int8 RGE_Active_Sprite_gap;
};
#pragma pack(pop)

/* 760 */
#pragma pack(push, 8)
struct RGE_Combat_ObjectVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Combat_Object *, unsigned int);
  int (__thiscall *gbg_unknown1)(RGE_Combat_Object *);
  int (__thiscall *gbg_get_civ_override)(RGE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_unknown3)(RGE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_unknown4)(RGE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_unknown5)(RGE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_unknown6)(RGE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_unknown7)(RGE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_unknown8)(RGE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_unknown9)(RGE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_unknown10)(RGE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_unknown11)(RGE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_isPadawan)(RGE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_isMaster)(RGE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_unknown14)(RGE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_isShielded)(RGE_Combat_Object *);
  void (__thiscall *gbg_unknown16)(RGE_Combat_Object *);
  void (__thiscall *gbg_unknown17)(RGE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_unknown18)(RGE_Combat_Object *, int);
  unsigned __int8 (__thiscall *gbg_isDetector)(RGE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_unknown20)(RGE_Combat_Object *, int);
  unsigned __int8 (__thiscall *gbg_isPowered)(RGE_Combat_Object *, int);
  void (__thiscall *gbg_unknown22)(RGE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_unknown23)(RGE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_isBiological)(RGE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_isDamaged)(RGE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_unknown26)(RGE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_canBeHealedByPlayer)(RGE_Combat_Object *, int);
  unsigned __int8 (__thiscall *gbg_canBeRepairedByPlayer)(RGE_Combat_Object *, int);
  void (__thiscall *recycle_in_to_game)(RGE_Combat_Object *, RGE_Master_Static_Object *, RGE_Player *, float, float, float);
  void (__thiscall *recycle_out_of_game)(RGE_Combat_Object *);
  void (__thiscall *draw)(RGE_Combat_Object *, TDrawArea *, __int16, __int16, RGE_Color_Table *);
  void (__thiscall *shadow_draw)(RGE_Combat_Object *, TDrawArea *, __int16, __int16, unsigned __int8);
  void (__thiscall *normal_draw)(RGE_Combat_Object *, TDrawArea *, __int16, __int16);
  void (__thiscall *draw_front_frame)(RGE_Combat_Object *, TDrawArea *, __int16, __int16);
  void (__thiscall *draw_back_frame)(RGE_Combat_Object *, TDrawArea *, __int16, __int16);
  void (__thiscall *draw_frame)(RGE_Combat_Object *, TDrawArea *, __int16, __int16);
  unsigned __int8 (__thiscall *update)(RGE_Combat_Object *);
  void (__thiscall *check_damage_sprites)(RGE_Combat_Object *);
  void (__thiscall *rehook)(RGE_Combat_Object *);
  void (__thiscall *save)(RGE_Combat_Object *, int);
  void (__thiscall *teleport_off_map)(RGE_Combat_Object *);
  float (__thiscall *teleport)(RGE_Combat_Object *, float, float, float);
  float (__thiscall *handle_teleport_z_correction)(RGE_Combat_Object *, float);
  void (__thiscall *new_sprite)(RGE_Combat_Object *, RGE_Sprite *);
  void (__thiscall *add_overlay_sprite)(RGE_Combat_Object *, RGE_Sprite *, unsigned __int8);
  void (__thiscall *remove_overlay_sprite)(RGE_Combat_Object *, RGE_Sprite *);
  void (__thiscall *change_ownership)(RGE_Combat_Object *, RGE_Player *);
  void (__thiscall *modify)(RGE_Combat_Object *, float, unsigned __int8);
  void (__thiscall *modify_delta)(RGE_Combat_Object *, float, unsigned __int8);
  void (__thiscall *modify_percent)(RGE_Combat_Object *, float, unsigned __int8);
  void (__thiscall *transform)(RGE_Combat_Object *, RGE_Master_Static_Object *);
  void (__thiscall *copy_obj)(RGE_Combat_Object *, RGE_Master_Static_Object *);
  void (__thiscall *set_object_state)(RGE_Combat_Object *, unsigned __int8);
  void (__thiscall *remove_visible_resource)(RGE_Combat_Object *);
  void (__thiscall *create_doppleganger_when_dying)(RGE_Combat_Object *);
  void (__thiscall *destroy_obj)(RGE_Combat_Object *);
  void (__thiscall *die_die_die)(RGE_Combat_Object *);
  void (__thiscall *damage)(RGE_Combat_Object *, int, RGE_Armor_Weapon_Info *, float, RGE_Player *, RGE_Static_Object *, int);
  float (__thiscall *calculateDamage)(RGE_Combat_Object *, int, RGE_Armor_Weapon_Info *, float, RGE_Player *, RGE_Static_Object *);
  void (__thiscall *rotate)(RGE_Combat_Object *, int);
  unsigned __int8 (__thiscall *can_attack)(RGE_Combat_Object *);
  void (__thiscall *set_attribute)(RGE_Combat_Object *, __int16, float);
  void (__thiscall *set_attribute_amount)(RGE_Combat_Object *, float, unsigned __int8, unsigned __int8);
  int (__thiscall *heal_2)(RGE_Combat_Object *, int, int);
  unsigned __int8 (__thiscall *heal_1)(RGE_Combat_Object *, float);
  int (__thiscall *canRepair)(RGE_Combat_Object *);
  void (__thiscall *notify_of_relation)(RGE_Combat_Object *, int, unsigned __int8);
  void (__thiscall *do_command)(RGE_Combat_Object *, RGE_Static_Object *, float, float, float);
  int (__thiscall *actionTypeIfOrdered)(RGE_Combat_Object *, RGE_Static_Object *, float, float, float, float *);
  unsigned __int8 (__thiscall *move_to)(RGE_Combat_Object *, RGE_Static_Object *, float, float, float);
  void (__thiscall *work)(RGE_Combat_Object *, RGE_Static_Object *, float, float, float);
  void (__thiscall *stop)(RGE_Combat_Object *);
  void (__thiscall *set_attack)(RGE_Combat_Object *, RGE_Static_Object *);
  void (__thiscall *play_command_sound)(RGE_Combat_Object *);
  void (__thiscall *play_move_sound)(RGE_Combat_Object *);
  void (__thiscall *new_angle)(RGE_Combat_Object *, float);
  RGE_Static_Object *(__thiscall *spawn_death_obj)(RGE_Combat_Object *);
  RGE_Master_Static_Object *(__thiscall *get_command_master)(RGE_Combat_Object *, RGE_Static_Object *, float, float, float);
  void (__thiscall *set_being_worked_on)(RGE_Combat_Object *, RGE_Action_Object *, __int16, unsigned __int8);
  void (__thiscall *release_being_worked_on)(RGE_Combat_Object *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *is_moving)(RGE_Combat_Object *);
  RGE_Static_Object *(__thiscall *get_target_obj)(RGE_Combat_Object *);
  unsigned __int8 (__thiscall *more_room)(RGE_Combat_Object *, RGE_Static_Object *);
  void (__thiscall *enter_obj)(RGE_Combat_Object *, RGE_Static_Object *, unsigned __int8);
  void (__thiscall *exit_obj)(RGE_Combat_Object *);
  void (__thiscall *add_obj)(RGE_Combat_Object *, RGE_Static_Object *);
  void (__thiscall *remove_obj)(RGE_Combat_Object *, RGE_Static_Object *);
  int (__thiscall *explore_terrain)(RGE_Combat_Object *, RGE_Player *, unsigned __int8, int, int);
  void (__thiscall *unexplore_terrain)(RGE_Combat_Object *, RGE_Player *, unsigned __int8, int, int);
  LOSTBL *(__thiscall *get_los_table)(RGE_Combat_Object *);
  unsigned __int8 (__thiscall *get_visibility)(RGE_Combat_Object *, RGE_Player *);
  int (__thiscall *inAttackRange)(RGE_Combat_Object *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *underAttack)(RGE_Combat_Object *);
  void (__thiscall *setUnderAttack)(RGE_Combat_Object *, unsigned __int8);
  float (__thiscall *calc_attack_modifier)(RGE_Combat_Object *, RGE_Static_Object *);
  float (__thiscall *getSpeed)(RGE_Combat_Object *);
  float (__thiscall *getAngle)(RGE_Combat_Object *);
  float (__thiscall *maximumSpeed)(RGE_Combat_Object *);
  float (__thiscall *rateOfFire)(RGE_Combat_Object *);
  float (__thiscall *damageCapability_2)(RGE_Combat_Object *, RGE_Static_Object *);
  float (__thiscall *damageCapability_1)(RGE_Combat_Object *);
  float (__thiscall *weaponRange)(RGE_Combat_Object *);
  float (__thiscall *minimumWeaponRange)(RGE_Combat_Object *);
  int (__thiscall *passableTile_2)(RGE_Combat_Object *, float, float, int *, int);
  int (__thiscall *passableTile_1)(RGE_Combat_Object *, float, float);
  int (__thiscall *currentTargetID)(RGE_Combat_Object *);
  float (__thiscall *currentTargetX)(RGE_Combat_Object *);
  float (__thiscall *currentTargetY)(RGE_Combat_Object *);
  float (__thiscall *currentTargetZ)(RGE_Combat_Object *);
  void (__thiscall *setWaitingToMove)(RGE_Combat_Object *, unsigned __int8);
  unsigned __int8 (__thiscall *waitingToMove)(RGE_Combat_Object *);
  unsigned __int8 (__thiscall *actionState)(RGE_Combat_Object *);
  unsigned __int8 (__thiscall *keepGatheringWhenObjectIsOut)(RGE_Combat_Object *, int);
  unsigned __int8 (__thiscall *produceWhenKilledBy)(RGE_Combat_Object *, int);
  unsigned __int8 (__thiscall *useSameZoneDropsite)(RGE_Combat_Object *);
  float (__thiscall *searchRadius)(RGE_Combat_Object *);
  unsigned __int8 (__thiscall *is_idle)(RGE_Combat_Object *);
  void (*logDebug)(RGE_Combat_Object *, char *, ...);
  void (*debug)(RGE_Combat_Object *, char *, ...);
  void (__thiscall *notify)(RGE_Combat_Object *, int, int, int, int, int, int);
  int (__thiscall *attack_2)(RGE_Combat_Object *, float, float, float, int);
  int (__thiscall *attack_1)(RGE_Combat_Object *, int, int);
  int (__thiscall *moveTo_3)(RGE_Combat_Object *, float, float, float, float, int, int);
  int (__thiscall *moveTo_2)(RGE_Combat_Object *, int, float, int);
  int (__thiscall *moveTo_1)(RGE_Combat_Object *, int, int);
  int (__thiscall *moveAwayFrom)(RGE_Combat_Object *, int, int);
  int (__thiscall *hunt)(RGE_Combat_Object *, int, int);
  int (__thiscall *gather)(RGE_Combat_Object *, int, int);
  int (__thiscall *convert)(RGE_Combat_Object *, int, int);
  int (__thiscall *repair)(RGE_Combat_Object *, int, int);
  int (__thiscall *build)(RGE_Combat_Object *, int, int);
  int (__thiscall *trade)(RGE_Combat_Object *, int, int);
  int (__thiscall *explore)(RGE_Combat_Object *, int, int, int);
  int (__thiscall *enter)(RGE_Combat_Object *, int, int);
  int (__thiscall *unload)(RGE_Combat_Object *, int, float, float, float);
  int (__thiscall *transport)(RGE_Combat_Object *, float, float, float, int);
  int (__thiscall *stopAction)(RGE_Combat_Object *);
  int (__thiscall *pause)(RGE_Combat_Object *);
  int (__thiscall *canPath_2)(RGE_Combat_Object *, int, float, float *, int, int, bool);
  int (__thiscall *canPath_1)(RGE_Combat_Object *, XYZPoint, float, int, float *, int, int, bool);
  int (__thiscall *canQuickPath)(RGE_Combat_Object *, int, float, float *);
  int (__thiscall *canPathWithObstructions)(RGE_Combat_Object *, int, float, float *, int, int, ManagedArray_int_ *);
  int (__thiscall *canPathWithAdditionalPassability)(RGE_Combat_Object *, XYZPoint, float, int, float *, int, int, int, int, int, BPath *);
  int (__thiscall *findFirstTerrainAlongExceptionPath)(RGE_Combat_Object *, int, float *, float *, BPath *);
  int (__thiscall *canLinePath_2)(RGE_Combat_Object *, int, int, int, int, float, int);
  int (__thiscall *canLinePath_1)(RGE_Combat_Object *, const XYPoint *, const XYPoint *, float, XYPoint *, int);
  int (__thiscall *firstTileAlongLine)(RGE_Combat_Object *, const XYPoint *, const XYPoint *, XYPoint *, int, int, int);
  unsigned __int8 (__thiscall *have_action)(RGE_Combat_Object *);
  int (__thiscall *gameActionType)(RGE_Combat_Object *);
  BVector *(__thiscall *userDefinedWaypoint)(RGE_Combat_Object *, int);
  int (__thiscall *addUserDefinedWaypoint)(RGE_Combat_Object *, float, float, float);
  void (__thiscall *zeroUserDefinedWaypoints)(RGE_Combat_Object *);
  void (__thiscall *removeAllUserDefinedWaypoints)(RGE_Combat_Object *);
  int (__thiscall *numberUserDefinedWaypoints)(RGE_Combat_Object *);
  BPath *(__thiscall *getPatrolInformation)(RGE_Combat_Object *, int *);
  float (__thiscall *distanceToHighestLevelPath_2)(RGE_Combat_Object *, BVector);
  float (__thiscall *distanceToHighestLevelPath_1)(RGE_Combat_Object *);
  BPath *(__thiscall *findAvoidancePath)(RGE_Combat_Object *, XYZPoint *, float, int);
  int (__thiscall *get_action_checksum)(RGE_Combat_Object *);
  int (__thiscall *get_waypoint_checksum)(RGE_Combat_Object *);
  void (__thiscall *setPatrolMode)(RGE_Combat_Object *, unsigned __int8);
  int (__thiscall *garrisoned_count)(RGE_Combat_Object *);
  int (__thiscall *lock_down)(RGE_Combat_Object *);
  int (__thiscall *unlock_down)(RGE_Combat_Object *);
  int (__thiscall *get_locked_down_count)(RGE_Combat_Object *);
  float (__thiscall *getTradeAmount)(RGE_Combat_Object *, float, float, float, float);
  int (__thiscall *setup_2)(RGE_Combat_Object *, int, RGE_Game_World *);
  int (__thiscall *setup_1)(RGE_Combat_Object *, RGE_Master_Static_Object *, RGE_Player *, float, float, float);
  RGE_New_Object_List *(__thiscall *create_object_list)(RGE_Combat_Object *);
  RGE_Active_Sprite_List *(__thiscall *create_sprite_list)(RGE_Combat_Object *);
  BVector *(__thiscall *position)(RGE_Combat_Object *, BVector *);
  BPathData *(__thiscall *getPathData)(RGE_Combat_Object *);
  int (__thiscall *actionType)(RGE_Combat_Object *);
  int (__thiscall *hasActionOfType)(RGE_Combat_Object *, int);
  int (__thiscall *gbg_hasActionOfType2)(RGE_Combat_Object *, int);
  int (__thiscall *addMove)(RGE_Combat_Object *, int, float, int, int, int);
  int (__thiscall *addCurrentPath)(RGE_Combat_Object *, BPath *, int, float, int);
  int (__thiscall *addFuturePath)(RGE_Combat_Object *, BPath *, int, float, int);
  void (__thiscall *stopAllMovement)(RGE_Combat_Object *);
  void (__thiscall *setOrientation)(RGE_Combat_Object *, BVector *, BVector *);
  BVector *(__thiscall *velocity)(RGE_Combat_Object *, BVector *);
  void (__thiscall *setVelocity)(RGE_Combat_Object *, BVector *);
  BVector *(__thiscall *acceleration)(RGE_Combat_Object *, BVector *);
  void (__thiscall *setAcceleration)(RGE_Combat_Object *, BVector *);
  float (__thiscall *forwardVelocity)(RGE_Combat_Object *);
  void (__thiscall *setForwardVelocity)(RGE_Combat_Object *, float);
  float (__thiscall *forwardAcceleration)(RGE_Combat_Object *);
  void (__thiscall *setForwardAcceleration)(RGE_Combat_Object *, float);
  void (__thiscall *moveForward)(RGE_Combat_Object *, float);
  void (__thiscall *setPosition)(RGE_Combat_Object *, BVector *);
  void (__thiscall *yaw)(RGE_Combat_Object *, float);
  int (__thiscall *isMoving)(RGE_Combat_Object *);
  void (__thiscall *stopMoving)(RGE_Combat_Object *);
  float (__thiscall *calculateFutureVelocity)(RGE_Combat_Object *, float, float, float, BVector *);
  unsigned int (__thiscall *lastMoveTime)(RGE_Combat_Object *);
  void (__thiscall *pauseMovement)(RGE_Combat_Object *, float);
  int (__thiscall *movementPriority)(RGE_Combat_Object *);
  int (__thiscall *intelligentMovementUpdate)(RGE_Combat_Object *);
  float (__thiscall *calculateMaximumSpeed)(RGE_Combat_Object *, int);
  int (__thiscall *calculateForward)(RGE_Combat_Object *, BVector *, BVector *, BVector *);
  float (__thiscall *calculateYawAngle)(RGE_Combat_Object *, BVector *, BVector *, float, int *);
  int (__thiscall *calculateReachedPoint)(RGE_Combat_Object *, BVector *, BVector *, BVector *);
  float (__thiscall *calculateTurnRadius)(RGE_Combat_Object *);
  int (__thiscall *checkAcceleration)(RGE_Combat_Object *, BVector *, int, int);
  BVector *(__thiscall *straightProjectedPosition)(RGE_Combat_Object *, BVector *, BVector *, float);
  int (__thiscall *onPatrol)(RGE_Combat_Object *);
  BVector *(__thiscall *orientationForward)(RGE_Combat_Object *, BVector *);
  int (__thiscall *setRunSprite)(RGE_Combat_Object *);
  int (__thiscall *setMoveSprite)(RGE_Combat_Object *);
  int (__thiscall *setFidgetSprite)(RGE_Combat_Object *);
  int (__thiscall *getGateLocked)(RGE_Combat_Object *);
  void (__thiscall *setGateLocked)(RGE_Combat_Object *, int);
  int (__thiscall *isGateOpenable)(RGE_Combat_Object *, int);
  int (__thiscall *getLinkedChild)(RGE_Combat_Object *, int);
  int (__thiscall *get_next_selected_group)(RGE_Combat_Object *, int);
  __int16 (__thiscall *get_Selected_Groups)(RGE_Combat_Object *);
  void (__thiscall *set_Selected_Groups)(RGE_Combat_Object *, __int16);
  int (__thiscall *get_num_Selected_groups)(RGE_Combat_Object *);
  int (__thiscall *setup_3)(RGE_Combat_Object *, RGE_Master_Animated_Object *, RGE_Player *, float, float, float);
  void (__thiscall *stop_moving)(RGE_Combat_Object *);
  unsigned __int8 (__thiscall *turn_towards)(RGE_Combat_Object *, RGE_Static_Object *, float, float);
  void (__thiscall *set_angle)(RGE_Combat_Object *);
  int (__thiscall *canLinePath_4)(RGE_Combat_Object *, int, int, int, int, float);
  int (__thiscall *canLinePath_3)(RGE_Combat_Object *, XYPoint *, XYPoint *, float, XYPoint *);
  int (__thiscall *setup_4)(RGE_Combat_Object *, RGE_Master_Moving_Object *, RGE_Player *, float, float, float);
  int (__thiscall *addMove_2)(RGE_Combat_Object *, int, float, float, float, float, int, int, int);
  void (__thiscall *work2)(RGE_Combat_Object *, RGE_Static_Object *, float, float, float, unsigned __int8, __int16);
  void (__thiscall *set_task)(RGE_Combat_Object *, __int16);
  void (__thiscall *setTaskByTaskID)(RGE_Combat_Object *, int);
  void (__thiscall *set_action)(RGE_Combat_Object *, RGE_Action *);
  void (__thiscall *set_only_action)(RGE_Combat_Object *, RGE_Action *);
  void (__thiscall *set_end_action)(RGE_Combat_Object *, RGE_Action *);
  RGE_Task *(__thiscall *getTask)(RGE_Combat_Object *, RGE_Static_Object *, float, float, float, __int16);
  void (__thiscall *setUnitAIAction)(RGE_Combat_Object *, int, RGE_Static_Object *, float, float, float);
  int (__thiscall *setup_5)(RGE_Combat_Object *, RGE_Master_Action_Object *, RGE_Player *, float, float, float);
  RGE_Action_List *(__thiscall *create_action_list)(RGE_Combat_Object *);
  unsigned __int8 (__thiscall *area_attack)(RGE_Combat_Object *, float, float, float, RGE_Combat_Object *, RGE_Static_Object *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *attack_4)(RGE_Combat_Object *, float, float, float, RGE_Combat_Object *);
  unsigned __int8 (__thiscall *attack_3)(RGE_Combat_Object *, RGE_Static_Object *, RGE_Combat_Object *);
  unsigned __int8 (__thiscall *do_attack)(RGE_Combat_Object *, RGE_Static_Object *, RGE_Combat_Object *, float, float, float, float);
  void (__thiscall *get_armor)(RGE_Combat_Object *, __int16 *, __int16 *);
  void (__thiscall *get_weapon)(RGE_Combat_Object *, __int16 *, __int16 *);
  void (__thiscall *get_weapon_range)(RGE_Combat_Object *, float *, float *);
  void (__thiscall *get_speed_of_attack)(RGE_Combat_Object *, float *, float *);
  int (__thiscall *inAttackRange_2)(RGE_Combat_Object *, RGE_Static_Object *, int *);
  int (__thiscall *setup_6)(RGE_Combat_Object *, RGE_Master_Combat_Object *, RGE_Player *, float, float, float);
};
#pragma pack(pop)

/* 194 */
#pragma pack(push, 8)
struct VISIBLE_UNIT_REC
{
  int object_id;
  unsigned __int8 distance;
  unsigned __int8 player;
  unsigned __int8 pos_x;
  unsigned __int8 pos_y;
};
#pragma pack(pop)

/* 455 */
#pragma pack(push, 8)
struct VSpan_Node
{
  VSpan_Node *Next;
  VSpan_Node *Prev;
  int StartPx;
  int EndPx;
};
#pragma pack(pop)

/* 63 */
#pragma pack(push, 8)
struct RGE_Master_Moving_Object
{
  RGE_Master_Moving_ObjectVtbl *vfptr;
  unsigned __int8 master_type;
  char *name;
  char *gbg_name2;
  __int16 unit_line;
  unsigned __int8 min_tech_level;
  __int16 string_id;
  __int16 string_id2;
  __int16 id;
  __int16 copy_id;
  __int16 base_id;
  __int16 object_group;
  RGE_Sprite *sprite;
  RGE_Sprite *sprite2;
  RGE_Sprite *death_sprite;
  RGE_Sprite *undead_sprite;
  unsigned __int8 undead_flag;
  __int16 hp;
  float los;
  unsigned __int8 obj_max;
  float radius_x;
  float radius_y;
  float radius_z;
  RGE_Sound *selected_sound;
  RGE_Sound *created_sound;
  RGE_Sound *death_sound;
  RGE_Sound *damage_sound;
  __int16 death_spawn_obj_id;
  unsigned __int8 sort_number;
  unsigned __int8 can_be_built_on;
  __int16 button_pict;
  unsigned __int8 hide_in_scenario_editor;
  __int16 portrait_pict;
  unsigned __int8 available;
  unsigned __int8 disabled;
  __int16 tile_req1;
  __int16 tile_req2;
  __int16 center_tile_req1;
  __int16 center_tile_req2;
  float construction_radius_x;
  float construction_radius_y;
  unsigned __int8 elevation_flag;
  unsigned __int8 fog_flag;
  __int16 terrain;
  unsigned __int8 movement_type;
  __int16 attribute_type_held[3];
  float attribute_amount_held[3];
  __int16 attribute_max_amount;
  float attribute_rot;
  float multiple_attribute_mod;
  unsigned __int8 attribute_flag[3];
  unsigned __int8 area_effect_object_level;
  unsigned __int8 combat_level;
  unsigned __int8 select_level;
  unsigned __int8 map_draw_level;
  unsigned __int8 unit_level;
  unsigned __int8 map_color;
  unsigned __int8 attack_reaction;
  unsigned __int8 convert_terrain_flag;
  unsigned __int8 damage_sprite_num;
  RGE_Damage_Sprite_Info *damage_sprites;
  unsigned __int8 occlusion_flag;
  unsigned __int8 obstruction_type;
  unsigned __int8 obstruction_class;
  unsigned int object_flags;
  int help_string_id;
  int help_page_id;
  int hotkey_id;
  unsigned __int8 recyclable;
  unsigned __int8 track_as_resource;
  unsigned __int8 create_doppleganger_on_death;
  unsigned __int8 resource_group;
  unsigned __int8 draw_flag;
  unsigned __int8 draw_color;
  float outline_radius_x;
  float outline_radius_y;
  float outline_radius_z;
  float speed;
  RGE_Sprite *move_sprite;
  RGE_Sprite *run_sprite;
  float turn_speed;
  unsigned __int8 size_class;
  __int16 obj_trail_id;
  unsigned __int8 obj_trail_options;
  float obj_trail_spacing;
  unsigned __int8 move_algorithem;
  float mTurnRadius;
  float mTurnRadiusSpeed;
  float mMaximumYawPerSecondMoving;
  float mStationaryYawRevolutionTime;
  float mMaximumYawPerSecondStationary;
};
#pragma pack(pop)

/* 145 */
#pragma pack(push, 8)
struct RGE_Action
{
  RGE_ActionVtbl *vfptr;
  __int16 action_type;
  RGE_Action_Object *obj;
  unsigned __int8 state;
  RGE_Static_Object *target_obj;
  RGE_Static_Object *target_obj2;
  int targetID;
  int target2ID;
  float target_x;
  float target_y;
  float target_z;
  float timer;
  RGE_Task *task;
  RGE_Action_List *sub_actions;
  RGE_Sprite *sprite;
  unsigned __int8 subActionValue;
  unsigned __int8 mTargetMovedState;
  unsigned __int8 RGE_Action_gap[2];
};
#pragma pack(pop)

/* 208 */
#pragma pack(push, 8)
struct RGE_Task
{
  __int16 task_type;
  __int16 id;
  unsigned __int8 is_default;
  __int16 action_type;
  __int16 object_group;
  __int16 object_id;
  unsigned __int8 combat_level;
  unsigned __int8 combat_level_flag;
  __int16 terrain_id;
  unsigned __int8 owner_type;
  unsigned __int8 holding_attr;
  unsigned __int8 state_building;
  __int16 attribute_type;
  __int16 attribute_type2;
  __int16 attribute_type3;
  __int16 attribute_type4;
  float work_val1;
  float work_val2;
  float work_range;
  unsigned __int8 search_flag;
  float search_wait_time;
  __int16 work_flag;
  __int16 work_flag2;
  RGE_Sprite *move_sprite;
  RGE_Sprite *work_sprite;
  RGE_Sprite *work_sprite2;
  RGE_Sprite *carry_sprite;
  RGE_Sound *work_sound;
  RGE_Sound *work_sound2;
};
#pragma pack(pop)

/* 769 */
#pragma pack(push, 8)
struct RGE_Master_Action_ObjectVtbl
{
  unsigned __int8 (__thiscall *gbg_needs_power)(RGE_Master_Action_Object *);
  RGE_Sprite *(__thiscall *gbg_get_sprite_civ_override)(RGE_Master_Action_Object *, RGE_Static_Object *);
  RGE_Sprite *(__thiscall *gbg_get_sprite2_civ_override)(RGE_Master_Action_Object *, RGE_Static_Object *);
  RGE_Sprite *(__thiscall *gbg_get_death_sprite_civ_override)(RGE_Master_Action_Object *, RGE_Static_Object *);
  RGE_Sprite *(__thiscall *gbg_get_undead_sprite_civ_override)(RGE_Master_Action_Object *, RGE_Static_Object *);
  void *(__thiscall *__vecDelDtor)(RGE_Master_Action_Object *, unsigned int);
  void (__thiscall *copy_obj)(RGE_Master_Action_Object *, RGE_Master_Static_Object *);
  void (__thiscall *modify)(RGE_Master_Action_Object *, float, unsigned __int8);
  void (__thiscall *modify_delta)(RGE_Master_Action_Object *, float, unsigned __int8);
  void (__thiscall *modify_percent)(RGE_Master_Action_Object *, float, unsigned __int8);
  void (__thiscall *small_save)(RGE_Master_Action_Object *, int);
  void (__thiscall *save)(RGE_Master_Action_Object *, int);
  RGE_Static_Object *(__thiscall *make_new_obj)(RGE_Master_Action_Object *, RGE_Player *, float, float, float);
  RGE_Master_Static_Object *(__thiscall *make_new_master)(RGE_Master_Action_Object *);
  unsigned __int8 (__thiscall *check_placement)(RGE_Master_Action_Object *, RGE_Player *, float, float, int *, unsigned __int8, unsigned __int8, unsigned __int8, unsigned __int8, unsigned __int8, unsigned __int8, RGE_Static_Object *, unsigned __int8);
  unsigned __int8 (__thiscall *alignment)(RGE_Master_Action_Object *, float *, float *, RGE_Game_World *, unsigned __int8);
  int (__thiscall *calc_base_damage_ability)(RGE_Master_Action_Object *, RGE_Master_Combat_Object *);
  void (__thiscall *play_command_sound)(RGE_Master_Action_Object *, RGE_Player *);
  void (__thiscall *play_move_sound)(RGE_Master_Action_Object *, RGE_Player *);
  void (__thiscall *draw)(RGE_Master_Action_Object *, TDrawArea *, __int16, __int16, RGE_Color_Table *, int, int, int, unsigned __int8);
  float (__thiscall *maximumSpeed)(RGE_Master_Action_Object *, int);
  float (__thiscall *acceleration)(RGE_Master_Action_Object *, int);
  float (__thiscall *deceleration)(RGE_Master_Action_Object *, int);
  float (__thiscall *getTurnRadius)(RGE_Master_Action_Object *);
  float (__thiscall *getTurnRadiusSpeed)(RGE_Master_Action_Object *);
  int (__thiscall *setTurnRadiusOffTurnSpeed)(RGE_Master_Action_Object *);
  int (__thiscall *setTurnRadius)(RGE_Master_Action_Object *, float, float);
  float (__thiscall *getMaximumYawPerSecondMoving)(RGE_Master_Action_Object *);
  float (__thiscall *getMaximumYawPerSecondStationary)(RGE_Master_Action_Object *);
  void (__thiscall *setStationaryYawRevolutionTime)(RGE_Master_Action_Object *, float);
  RGE_Sprite *(__thiscall *gbg_get_move_sprite_civ_override)(RGE_Master_Action_Object *, RGE_Static_Object *);
  RGE_Sprite *(__thiscall *gbg_get_run_sprite_civ_override)(RGE_Master_Action_Object *, RGE_Static_Object *);
  RGE_Task_List *(__thiscall *create_task_list)(RGE_Master_Action_Object *);
};
#pragma pack(pop)

/* 754 */
#pragma pack(push, 8)
struct RGE_Action_ListVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Action_List *, unsigned int);
  RGE_Action *(__thiscall *create_action)(RGE_Action_List *, int, __int16);
  RGE_Action *(__thiscall *create_task_action)(RGE_Action_List *, RGE_Task *, RGE_Static_Object *, float, float, float);
  unsigned __int8 (__thiscall *inside_obj_update)(RGE_Action_List *);
  unsigned __int8 (__thiscall *update)(RGE_Action_List *);
  void (__thiscall *get_action_name)(RGE_Action_List *, char *);
  void (__thiscall *copy_obj)(RGE_Action_List *, RGE_Master_Action_Object *);
  void (__thiscall *copy_obj_sprites)(RGE_Action_List *, RGE_Master_Action_Object *, RGE_Task *, RGE_Task *);
};
#pragma pack(pop)

/* 755 */
#pragma pack(push, 8)
struct RGE_Action_Node
{
  RGE_Action *action;
  RGE_Action_Node *next;
};
#pragma pack(pop)

/* 272 */
#pragma pack(push, 8)
struct RGE_Player_Info
{
  char name[9][65];
  char type[9];
  char tribe[9];
  __int16 color[9];
  int player_id_hash[9];
  __int16 player_num;
  char *scenario;
  RGE_Map_Gen_Info *map_info;
  __int16 map_type;
  __int16 map_width;
  __int16 map_height;
  __int16 ai_info;
  unsigned __int8 campaign;
  char map_script_name[260];
};
#pragma pack(pop)

/* 108 */
#pragma pack(push, 8)
struct TChat
{
  HWND HostWnd;
  int chatGroupPlayers[10];
  int chatGroupPlayersMuted[10];
  char *Chat[51];
  int has_looped;
  int CurrentMsgNo;
  TTaunt *taunt;
};
#pragma pack(pop)

/* 507 */
#pragma pack(push, 8)
struct NAME
{
  char Text[128];
};
#pragma pack(pop)

/* 223 */
#pragma pack(push, 8)
struct RGE_Communications_Queue
{
  unsigned int QueueDepth;
  unsigned int HighQueueDepth;
  unsigned int MaxQSize;
  char TBuff[255];
  unsigned int LastCurrentTurn;
  unsigned __int8 Sequence;
  MsgQueue *Queue;
  int OldList[500];
  int CurListPtr;
  unsigned int head;
  unsigned int tail;
  unsigned __int8 SeqRetrievalPtr;
  unsigned int TurnRetrievalPtr;
  int commandsPerSec[8][4];
  int CPSptr;
  int highestCPS;
  int highestCPSPlayer;
  int highestCPSTurn;
  int lastCPSRefreshTime;
};
#pragma pack(pop)

/* 926 */
#pragma pack(push, 8)
struct AgePresetData
{
  unsigned __int8 m_bCivAvail[20];
  unsigned __int8 m_bLockCivAvail;
  unsigned __int8 m_bGameType;
  unsigned __int8 m_bLockGameType;
  char m_sGameFilename[260];
  unsigned __int8 m_bMapTypeAvail[51];
  unsigned __int8 m_bLockMapTypeAvail;
  unsigned __int8 m_bMapSize;
  unsigned __int8 m_bLockMapSize;
  unsigned __int8 m_bDifficulty;
  unsigned __int8 m_bLockDifficulty;
  unsigned __int8 m_bResources;
  unsigned __int8 m_bLockResources;
  int m_dPopulation;
  unsigned __int8 m_bLockPopulation;
  unsigned __int8 m_bGamespeed;
  unsigned __int8 m_bLockGamespeed;
  unsigned __int8 m_bStartingAge;
  unsigned __int8 m_bLockStartingAge;
  unsigned __int8 m_bVictory;
  unsigned __int8 m_bLockVictory;
  int m_bVictoryAmount;
  unsigned __int8 m_bLockVictoryAmount;
  unsigned __int8 m_bTeamTogether;
  unsigned __int8 m_bLockTeamTogether;
  unsigned __int8 m_bSetTeams;
  unsigned __int8 m_bLockSetTeams;
  unsigned __int8 m_bLockedGamespeed;
  unsigned __int8 m_bLockLockedGamespeed;
  unsigned __int8 m_bRecordGame;
  unsigned __int8 m_bLockRecordGame;
  unsigned __int8 m_bVisibility;
  unsigned __int8 m_bLockVisibility;
  unsigned __int8 m_bAllTechs;
  unsigned __int8 m_bLockAllTechs;
  unsigned __int8 m_bAllowCheats;
  unsigned __int8 m_bLockAllowCheats;
  unsigned __int8 m_bMyCiv;
  unsigned __int8 m_bLockMyCiv;
  unsigned __int8 m_bMyPlayernum;
  unsigned __int8 m_bLockMyPlayernum;
  unsigned __int8 m_bMyTeam;
  unsigned __int8 m_bLockMyTeam;
  unsigned __int8 m_bTeamBonuses;
  unsigned __int8 m_bLockTeamBonuses;
  unsigned __int8 m_bVersion;
  int m_dRandomMapSeed;
};
#pragma pack(pop)

/* 124 */
#pragma pack(push, 8)
struct RGE_Lobby
{
  HWND HostHWND;
  LPVOID *glpDPL;
  LPVOID *glpDPL3;
  TCommLog *Log;
  LPVOID *glpDP;
  LPVOID *glpdplConnection;
  unsigned __int8 lobby_game;
  RGE_Comm_Error *Err;
  AgePresetData PresetData;
  int preset_data_valid;
  int lobby_type;
  int launched;
  int presets_retrieved;
  int player_id_set;
  int waiting_for_settings;
};
#pragma pack(pop)

/* 368 */
#pragma pack(push, 8)
struct RGE_TimeSinceLastCall
{
  char TBuff[255];
  unsigned int lowTSLC;
  unsigned int highTSLC;
  unsigned int TSLC;
  unsigned int aTSLC[101];
  int Offset;
  unsigned int LastCall;
  unsigned int FirstCall;
  unsigned int Now;
  FILE *mLogFile;
  unsigned int mLastMeanAvg;
  unsigned int mLastAvg;
};
#pragma pack(pop)

/* 233 */
#pragma pack(push, 8)
struct RGE_Communications_Speed
{
  char TBuff[255];
  RGE_TimeSinceLastCall *TurnTSLC;
  RGE_TimeSinceLastCall *FrameTSLC;
  TCommunications_Handler *Comm;
  double AccumDiff;
  int SpeedControlEnabled;
  unsigned int CurrentBufferFrames;
  unsigned int FutureBufferFrames;
  unsigned int TotalBufferFramesRemaining;
  unsigned int TargetTurnLengthMsec;
  unsigned int CurrentBufferGranularity;
  unsigned int FutureBufferGranularity;
  unsigned int OverheadFactor;
  unsigned int TimeSinceLastBuffer;
  unsigned int FutureSpeedChangeTurn;
  unsigned int NextLatencyChangeTurn;
  unsigned int ActualLatency[10];
  unsigned int AverageTSLC[10];
  unsigned __int8 PlayerOptimalFrames[10];
  unsigned __int8 PlayerOptimalGranularity[10];
  unsigned __int16 RequestFasterOrSlower[10];
  unsigned int PlayerAvgFramesMsec[10];
  unsigned int PlayerHighLatencyMsec[10];
  unsigned int HighestLatencyMsec;
  unsigned int SkipFrames;
  unsigned int OptimalBufferFrames;
  unsigned int OptimalBufferGranularity;
  unsigned int DiffOffset;
  unsigned int AllAcknowledgedBuffersRemaining;
  unsigned int LastAdjusted;
  unsigned int RealTimePassed;
  unsigned int BufferTimePassed;
  unsigned int DroppedFrames;
  unsigned int DroppedFramesTurn;
  unsigned int AdjustmentCount;
  int LastFrameHadTime;
  unsigned int mLatencyHistoryOffset;
  unsigned int mLatencyHistory[10][20];
  char mCharBuf[2048];
  char mTempBuf[1024];
};
#pragma pack(pop)

/* 552 */
#pragma pack(push, 8)
struct RGE_Communications_Synchronize__CHECKSUMARRAY
{
  unsigned int PlayerNo;
  unsigned int WTime;
  unsigned int WTurn;
  int cs1;
  int cs2;
  int cs3;
  int cs4;
  int cs5;
  unsigned int Random;
};
#pragma pack(pop)

/* 151 */
#pragma pack(push, 8)
struct RGE_Communications_Synchronize
{
  TCommunications_Handler *Comm;
  unsigned int CheckTime;
  unsigned int CheckTurn;
  int StopOnSyncFail;
  int DialogOnSyncFail;
  int SendChatMsgs;
  int NewData;
  int LastResult;
  unsigned int Offset;
  int DoChecksums;
  unsigned int LastWorldRandom;
  unsigned int GameWorldChecksum;
  unsigned int mOOSwt;
  int mChecksumTurnIncrement;
  RGE_Communications_Synchronize__CHECKSUMARRAY Check[55];
};
#pragma pack(pop)

/* 364 */
#pragma pack(push, 8)
struct RGE_Communications_Addresses
{
  TCommunications_Handler *comm;
  WSAData wsaData;
  char hostname[128];
  int Status;
  unsigned int AddressesAvailable;
  unsigned int AliasesAvailable;
  IPAD *pIPAD;
};
#pragma pack(pop)

/* 226 */
#pragma pack(push, 8)
struct RGE_Comm_Error
{
  HWND HostHWND;
  HRESULT LastReportedError;
};
#pragma pack(pop)

/* 383 */
#pragma pack(push, 8)
struct TCommLog
{
  TCommLogVtbl *vfptr;
  int Timestamp;
  int DateTimestamp;
  int LogToFile;
  int LogToOutput;
  int Sequence;
  int Flush;
  int LogIsOpen;
  int LogError;
  unsigned int LogStartTickCount;
  unsigned int SeqNo;
  int NetworkLogging;
  char TBuff[2000];
  char osbuf[1000];
  char Filename[128];
  char BaseFilename[128];
  FILE *logstream;
  char mTBuff[1000];
  int LoggingResynch;
  int LoggingRouting;
  int LoggingFilexfer;
  int LoggingMultsave;
  int LoggingPregame;
  int LoggingGamestart;
  int LoggingTemp;
  int LoggingLobby;
  int LoggingSync;
  int LastType;
};
#pragma pack(pop)

/* 555 */
typedef int TCommCommandLog__eSpeeds;

/* 117 */
#pragma pack(push, 8)
struct TCommCommandLog
{
  int mLogging;
  int mReplaying;
  int mFileHandle;
  int mSyncCounter;
  int mStartingSyncCounter;
  unsigned __int8 mSequence;
  int mSequencing;
  int mLogHandle;
  char mLogBuffer[1024];
  char mFileName[260];
  int mVersion;
  int mType;
  int mViewingLocked;
  int mDemoloop;
  int mFogOfWar;
  int mRecordedPlayer;
  int mIgnoreSync;
  TCommCommandLog__eSpeeds mReplaySpeed;
  int mVisibility;
  int mHeaderPosition;
  int mHeaderSize;
  int mOldRecord;
  int mFlush;
  int mMaxChapters;
  int mNumChapters;
  int *mChapterPos;
  int mCurrChapter;
  int mCurrChapterPos;
  int mPrevChapterPos;
  int mNextChapterPos;
};
#pragma pack(pop)

/* 631 */
typedef int TPanel__PositionMode;

/* 632 */
typedef int TPanel__RedrawMode;

/* 125 */
#pragma pack(push, 8)
struct TribeVoteSystemDialog
{
  TribeVoteSystemDialogVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  HWND dlg_wnd;
  TPanel *save_parent_child;
  TPanel *save_parent;
  int text_font_id;
  int input_font_id;
  int button_font_id;
  int button_sound_id;
  TTextPanel *title;
  TTextPanel *playerTitle;
  TTextPanel *pingTitle;
  TTextPanel *statusTitle;
  TTextPanel *playerName[8];
  TTextPanel *playerPing[8];
  TTextPanel *playerStatus[8];
  TButtonPanel *waitButton;
  TButtonPanel *continueButton;
  TButtonPanel *restartButton;
  TButtonPanel *quitButton;
  TScrollBarPanel *chatScrollbar;
  TEditPanel *chatInput;
  TTextPanel *chatTitle;
  TTextPanel *voteTitle;
  TTextPanel *chatBox;
  TButtonPanel *help_button;
  TShape *backgroundPics;
  int commPlayers[8];
  int gamePlayers[8];
  unsigned int mCreationTime;
  unsigned int mSentVoteTime;
  int mPlayerStatus[10];
  int mOldPlayerStatusBeforeProblem[10];
  int mMyVote;
  int mStartingPlayers;
  TCommLog *mCommLog;
  int mDropping;
  char mSaveFileName[260];
  unsigned int mSaveChecksum;
  unsigned int last_update_ping;
};
#pragma pack(pop)

/* 224 */
#pragma pack(push, 8)
struct RESENDER
{
  unsigned int TimeSent;
  unsigned int Serial;
  char *ResendMsg;
  unsigned int Length;
  unsigned int DestMap[10];
};
#pragma pack(pop)

/* 225 */
#pragma pack(push, 8)
struct HOLDER
{
  char *HoldMsg;
  unsigned int Serial;
  unsigned int Length;
  DPID dcoFromID;
  DPID dcoReceiveID;
  unsigned int fromPlayer;
};
#pragma pack(pop)

/* 101 */
#pragma pack(push, 8)
struct TRegistry
{
  HKEY ghMachineKey;
  HKEY ghUserKey;
  HKEY ghMachineKeyRead;
  unsigned int gdwDisp;
  char Data[255];
};
#pragma pack(pop)

/* 811 */
#pragma pack(push, 8)
struct TRIBE_Screen_Game__$91EDBBD19DB18B16267A1193AF8CCBDB
{
  __int16 player_id;
  TRIBE_Player *player;
  TRIBE_Building_Object *port;
  __int16 money;
};
#pragma pack(pop)

/* 126 */
#pragma pack(push, 8)
struct TRIBE_Screen_Game
{
  TRIBE_Screen_GameVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  int combat_area_num;
  int combat_area_index;
  int combat_area_add_index;
  float combat_area_x[5];
  float combat_area_y[5];
  unsigned int combat_area_time[5];
  int score_mode;
  int buildingList[250];
  int buildingListIndex;
  int militaryBuildingList[250];
  int militaryListIndex;
  TShape *game_screen_pic;
  TShape *button_border1_pic;
  TShape *button_other_pic;
  TShape *button_border2_pic;
  TShape *button_border3_pic;
  TShape *button_cmd_pic;
  TShape *button_bldg_pics[3][9];
  TShape *more_cancel_pic;
  TShape *button_icon_pic;
  TShape *button_icon_pic2;
  TShape *game_icon_pic;
  TShape *cursor_pic;
  TShape *meat_pic;
  TShape *misc_icon_pic;
  TShape *d_map_icon_pic1;
  TShape *d_map_icon_pic2;
  TShape *d_map_icon_pic3;
  TShape *es_logo_pic;
  TRIBE_Main_View *main_view;
  TRIBE_Diamond_Map_View *map_view;
  TRIBE_Panel_Inven *inven_panel;
  TRIBE_Panel_Object *object_panel;
  TRIBE_Panel_Button *buttons[30];
  TRIBE_Panel_Button *restart_button;
  TRIBE_Panel_Button *viewlock_button;
  TRIBE_Panel_Button *fog_of_war_button;
  TRIBE_Panel_Button *demoloop_button;
  TRIBE_Panel_Button *pause_button;
  TRIBE_Panel_Button *speedup_button;
  TRIBE_Panel_Button *slowdown_button;
  TRIBE_Panel_Button *default_speed_button;
  TRIBE_Panel_Button *prev_chapter_button;
  TRIBE_Panel_Button *next_chapter_button;
  TPicturePanel *replay_background;
  TShape *replay_buttons;
  int mReplayBackgroundWidth;
  TTextPanel *watching_player_title;
  TTextPanel *viewlock_title;
  TTextPanel *fog_of_war_title;
  TTextPanel *demoloop_title;
  TDropDownPanel *watching_player_drop;
  TMessagePanel *text_line_panel;
  TMessagePanel *text_line_panel2;
  TTextPanel *rollover_help_panel;
  TTextPanel *quit_message_panel;
  TRIBE_Panel_Time *time_panel;
  TRIBE_Panel_Time *countdown_clock[10];
  TMessagePanel *message_panel;
  TMessagePanel *message_panel2;
  TMessagePanel *message_panel3;
  TMessagePanel *message_panel4;
  TMessagePanel *message_panel5;
  TMessagePanel *message_panel6;
  TMessagePanel *chat_panel[8];
  TTextPanel *chat_word_wrap_panel;
  int chat_panel_count;
  RGE_Panel_Tool_Box *tool_box;
  TTextPanel *age_panel;
  TTextPanel *pause_text;
  TTextPanel *fps_panel;
  TMessagePanel *score_panel[15];
  TTextPanel *log_text;
  TScrollBarPanel *log_scrollbar;
  TMessagePanel *instructions_panel[3];
  TTextPanel *objectives_changed_text;
  TRIBE_World *world;
  unsigned int update_interval;
  unsigned int last_update_time;
  unsigned int map_redraw_interval;
  unsigned int last_map_redraw_time;
  RGE_Static_Object *game_obj;
  __int16 sel_count;
  Item_Avail *tech_list;
  Item_Avail *make_list;
  Item_Avail *bldg_list;
  Trade_Avail *trade_list;
  __int16 item_cnt;
  __int16 make_cnt;
  __int16 tech_cnt;
  __int16 start_item;
  __int16 last_item;
  struct TRIBE_Screen_Game__$91EDBBD19DB18B16267A1193AF8CCBDB port_info[9];
  unsigned int terrain_sound_interval;
  unsigned int last_terrain_sound_time;
  int terrain_playing;
  unsigned int terrain_sound_start_time;
  int mouse_last_x;
  int mouse_last_y;
  unsigned int point_at_time;
  int point_at_processed;
  TPanel *point_at_panel;
  int point_at_item;
  int point_at_sub_item;
  int point_at_extended;
  int point_at_parser_id;
  int point_at_parser_tech;
  int point_at_string_id;
  int point_at_string_id2;
  char point_at_text[1024];
  int save_age;
  int save_culture;
  int save_screen_width;
  unsigned int game_over_time;
  int showing_game_over;
  int chat_line;
  unsigned int view_interval;
  unsigned int last_view_time;
  unsigned int market_interval;
  unsigned int last_market_time;
  int player_quit;
  int view_mode;
  int command_mode;
  int focus_area;
  int military_command_mode;
  int ship_command_mode;
  int villager_command_mode;
  int building_command_mode;
  int trade_command_mode;
  int offmap_trade_command_mode;
  int seige_command_mode;
  int cheat_code_entry;
  char cheat_code_entry_str[52];
  int reset_after_update;
  unsigned int score_interval;
  unsigned int last_score_time;
  unsigned int gbg_unknown_interval;
  unsigned int gbg_last_unknown_time;
  int watch_mode;
  int game_ended;
  int done_replaying;
  TDigital *game_over_sound;
  unsigned int last_game_speed_change;
  unsigned int last_pause_change;
  unsigned __int8 flash_diplomacy;
  unsigned int last_diplomacy_flash;
  unsigned int last_objectives_flash;
  unsigned int Group_Selection_Time;
  unsigned int Last_Group_Selection_Time;
  int Last_Group_Num_Selected;
  int button_state;
  int chat_state;
  int recieved_chat_message;
  int current_chat_line_displayed;
  int line_num_last_message_recieved;
  int start_line;
  int last_line;
  int current_top_line;
  int current_bottom_line;
  unsigned __int8 first_time;
  int last_idle_villager_id;
  int last_idle_unit_id;
  int last_idle_military_unit_id;
  int last_idle_garrison_object_id;
  unsigned __int8 function_called;
  unsigned __int8 imminent_enemy_victory;
  unsigned __int8 enemy_id;
  int resound_warning_time;
  int last_warn_enemy_victory_time;
  int terrainSoundID;
  unsigned int player_has_wonder;
  unsigned __int8 numComputerPlayers;
  unsigned __int8 numHumanPlayers;
  unsigned __int8 numTotalPlayers;
  unsigned int mFogOfWarButtonPressed;
  int advanced_buttons;
  int reveal_map_at_end;
  int unhook_save_game_mode;
  int unhook_save_clock_player_id[10];
};
#pragma pack(pop)

/* 109 */
#pragma pack(push, 8)
struct TTaunt
{
  TDigital *Audio[4];
  int LastAudioPlayed;
  char TBuff[255];
  char TauntDir[128];
  int Mute;
};
#pragma pack(pop)

/* 598 */
#pragma pack(push, 8)
struct RGE_MapVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Map *, unsigned int);
  void (__thiscall *data_load_random_map)(RGE_Map *, int);
  void (__thiscall *load_random_map)(RGE_Map *, char *, char *, char *, char *);
  unsigned __int8 (__thiscall *do_terrain_brush)(RGE_Map *, int, int, int, unsigned __int8);
  unsigned __int8 (__thiscall *do_terrain_brush_stroke)(RGE_Map *, int, int, int, int, int, unsigned __int8);
  unsigned __int8 (__thiscall *do_elevation_brush)(RGE_Map *, int, int, int, unsigned __int8);
  unsigned __int8 (__thiscall *do_elevation_brush_stroke)(RGE_Map *, int, int, int, int, int, unsigned __int8);
  unsigned __int8 (__thiscall *do_cliff_brush)(RGE_Map *, int, int, unsigned __int8, unsigned __int8);
  unsigned __int8 (__thiscall *do_cliff_brush_stroke)(RGE_Map *, int, int, int, int, unsigned __int8, unsigned __int8);
  unsigned __int8 (__thiscall *do_map_copy_brush)(RGE_Map *, int, int, int *, int *, int *, int *);
  unsigned __int8 (__thiscall *do_map_copy_brush_stroke)(RGE_Map *, int, int, int, int);
  void (__thiscall *map_generate)(RGE_Map *, int, int, char *, RGE_Player_Info *, int);
  void (__thiscall *map_generate2)(RGE_Map *, RGE_Game_World *, int, int, unsigned __int8, int);
  void (__thiscall *save)(RGE_Map *, int);
  void (__thiscall *init_tile_sizes)(RGE_Map *);
};
#pragma pack(pop)

/* 601 */
#pragma pack(push, 8)
struct UMV_Offset_Point
{
  int Xoffset;
  int Yoffset;
};
#pragma pack(pop)

/* 971 */
#pragma pack(push, 8)
struct QTLevelInfo
{
  int Level;
  int ShiftCount;
  int YScale;
  int NodeIndex;
  NodeArrayInfo *NodeBase;
};
#pragma pack(pop)

/* 191 */
#pragma pack(push, 8)
struct RGE_Obstruction_Manager_Land
{
  RGE_Obstruction_Manager_LandVtbl *vfptr;
  unsigned __int8 Active;
  RGE_Game_World *World;
  int Width;
  int Height;
  float mfwidth;
  float mfheight;
  unsigned int *HardObArrayData;
  unsigned int **HardObArray;
  int TempNodes;
  int TempNodes2;
  ILine *DebugLines[8];
  int *LineColor[8];
  int NumDebugLines[8];
  int CurrentDebugLine;
  int NumLevels;
  NodeArrayInfo *NodeArray;
  int NodeArraySize;
  int NodeLevelIndex[32];
  QTLevelInfo LevelInfo[8];
  MShortPather *ShortPathFinder;
  TDebuggingLog *OL;
  FILE *oslogfile;
  SoftOb_ArrayList *SoftNodeManager;
  ObListControl *ListPool;
  int ListPoolSize;
  unsigned __int8 UseIgnoreList;
  int NumIgnoreIDs;
  int *IgnoreIDList;
  IntersectRecord *IntersectionList;
  int *NumIntersections;
  int MaxIntersections;
  unsigned __int8 DetailIntersect;
  unsigned __int8 IgnoreMoving;
  unsigned __int8 UseBufferRadius;
  float BufferRadius;
  void (__cdecl **CallBackPtr)(void *, int, int, int, int);
  void *CallBackObj;
  ObsRecord *TerrainObjectsList;
  int mnplayernum;
  ObsRecord *mpEdgeCollisions[4];
};
#pragma pack(pop)

/* 192 */
#pragma pack(push, 8)
struct RGE_Obstruction_Manager_Air
{
  RGE_Obstruction_Manager_AirVtbl *vfptr;
  unsigned __int8 Active;
  RGE_Game_World *World;
  int Width;
  int Height;
  float mfwidth;
  float mfheight;
  unsigned int *HardObArrayData;
  unsigned int **HardObArray;
  int TempNodes;
  int TempNodes2;
  ILine *DebugLines[8];
  int *LineColor[8];
  int NumDebugLines[8];
  int CurrentDebugLine;
  int NumLevels;
  NodeArrayInfo *NodeArray;
  int NodeArraySize;
  int NodeLevelIndex[32];
  QTLevelInfo LevelInfo[8];
  MShortPather *ShortPathFinder;
  TDebuggingLog *OL;
  FILE *oslogfile;
  SoftOb_ArrayList *SoftNodeManager;
  ObListControl *ListPool;
  int ListPoolSize;
  unsigned __int8 UseIgnoreList;
  int NumIgnoreIDs;
  int *IgnoreIDList;
  IntersectRecord *IntersectionList;
  int *NumIntersections;
  int MaxIntersections;
  unsigned __int8 DetailIntersect;
  unsigned __int8 IgnoreMoving;
  unsigned __int8 UseBufferRadius;
  float BufferRadius;
  void (__cdecl **CallBackPtr)(void *, int, int, int, int);
  void *CallBackObj;
  ObsRecord *TerrainObjectsList;
  int mnplayernum;
  ObsRecord *mpEdgeCollisions[4];
};
#pragma pack(pop)

/* 465 */
#pragma pack(push, 8)
struct RGE_Land_Info_Line
{
  int land_size;
  int terrain_type;
  int x;
  int y;
  int base_size;
  int area;
  unsigned __int8 zone;
  int clumpiness_factor;
  int wall_1_avoidance_line;
  int wall_2_avoidance_line;
  int wall_3_avoidance_line;
  int wall_4_avoidance_line;
  unsigned __int8 wall_fade;
};
#pragma pack(pop)

/* 464 */
#pragma pack(push, 8)
struct RGE_Land_Info
{
  RGE_Land_Info_Line land[99];
  int land_num;
  unsigned __int8 base_terrain;
  int wall_1_avoidance_line;
  int wall_2_avoidance_line;
  int wall_3_avoidance_line;
  int wall_4_avoidance_line;
  unsigned __int8 wall_fade;
};
#pragma pack(pop)

/* 461 */
#pragma pack(push, 8)
struct RGE_Terrain_Info_Line
{
  int terrain_size;
  int terrain_generated;
  int terrain_type;
  int clumps;
  int spacing;
  int base_terrain_type;
  int clumpiness_factor;
  int avoid_hot_spots;
  int min_height;
  int max_height;
  int flat_only;
};
#pragma pack(pop)

/* 462 */
#pragma pack(push, 8)
struct RGE_Terrain_Hot_Spots
{
  int x;
  int y;
  int radius;
  int fade;
};
#pragma pack(pop)

/* 460 */
#pragma pack(push, 8)
struct RGE_Terrain_Info
{
  RGE_Terrain_Info_Line terrain[99];
  int terrain_num;
  RGE_Terrain_Hot_Spots hot_spots[99];
  int hot_spot_num;
};
#pragma pack(pop)

/* 281 */
#pragma pack(push, 8)
struct RGE_Object_Info_Line
{
  int obj_id;
  int terrain;
  unsigned __int8 group_flag;
  unsigned __int8 scale_flag;
  int object_number_per_group;
  int object_number_varience;
  int number_of_groups;
  int group_area;
  int player_id;
  int land_id;
  int land_inner_radius;
  int land_outer_radius;
  int object_exclusion_zone;
  int personal_exclusion_zone;
  int zone_edge_distance;
  int gbg_unknown;
};
#pragma pack(pop)

/* 466 */
#pragma pack(push, 8)
struct RGE_Land_Point_Info_Line
{
  int x;
  int y;
  int id;
  int player_id;
};
#pragma pack(pop)

/* 280 */
#pragma pack(push, 8)
struct RGE_Object_Info
{
  RGE_Object_Info_Line objects[99];
  int object_num;
  RGE_Land_Point_Info_Line lands[99];
  int land_num;
};
#pragma pack(pop)

/* 469 */
#pragma pack(push, 8)
struct RGE_Elevation_Info_Line
{
  int elevation_size;
  int elevation;
  int clumps;
  int spacing;
  int base_elevation;
  int base_terrain_type;
};
#pragma pack(pop)

/* 470 */
#pragma pack(push, 8)
struct RGE_Elevation_Hot_Spots
{
  int x;
  int y;
  int radius;
  int fade;
};
#pragma pack(pop)

/* 468 */
#pragma pack(push, 8)
struct RGE_Elevation_Info
{
  RGE_Elevation_Info_Line elevation[99];
  int elevation_num;
  RGE_Elevation_Hot_Spots hot_spots[99];
  int hot_spot_num;
};
#pragma pack(pop)

/* 844 */
#pragma pack(push, 8)
struct RGE_Map_Data
{
  int map_num;
  RGE_Map_Data_Entry *maps;
};
#pragma pack(pop)

/* 268 */
#pragma pack(push, 8)
struct RGE_RMM_Database_Controller
{
  RGE_RMM_Database_ControllerVtbl *vfptr;
  RGE_Random_Map_Module *parent;
  RGE_Random_Map_Module_List *list;
  RGE_Map *map;
  RGE_Tile **map_row_offset;
  int map_width;
  int map_height;
  int max_map_width;
  int max_map_height;
  float schedule;
  unsigned __int8 *search_map;
  unsigned __int8 **search_map_rows;
  Map_Stack *stack_array;
  Map_Stack **stack_offsets;
  RGE_Game_World *world;
  int map_type;
  int number_of_players;
  RGE_Land_Info land_info;
  RGE_Terrain_Info terrain_info;
  RGE_Object_Info object_info;
  RGE_Elevation_Info elevation_info;
  RGE_Map_Data map_info;
};
#pragma pack(pop)

/* 170 */
#pragma pack(push, 8)
struct RGE_Zone_Map_List
{
  RGE_Zone_Map **zone_maps;
  int zone_map_num;
  RGE_Map *map;
};
#pragma pack(pop)

/* 278 */
#pragma pack(push, 1)
struct RGE_Unified_Visible_Map
{
};
#pragma pack(pop)

/* 195 */
#pragma pack(push, 8)
struct Visible_Unit_Manager
{
  VISIBLE_UNIT_PTR **PlayerDataPtrs;
  VISIBLE_UNIT_REC *Return_Buffer[5];
  int Player_Count;
  int Category_Count;
  unsigned __int8 *distanceTable;
};
#pragma pack(pop)

/* 600 */
#pragma pack(push, 8)
struct RGE_Map_Copy_Data
{
  int object_count;
  int width;
  int height;
  RGE_Map_Copy_Object_Data *objects;
  unsigned __int8 *terrain;
  unsigned __int8 *heights;
};
#pragma pack(pop)

/* 133 */
#pragma pack(push, 1)
struct RGE_View
{
};
#pragma pack(pop)

/* 597 */
#pragma pack(push, 8)
struct DynamicTileCacheNode
{
  RGE_Tile *Tile;
  DynamicTileCacheNode *NextInType;
};
#pragma pack(pop)

/* 915 */
#pragma pack(push, 8)
struct RGE_Master_PlayerVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Master_Player *, unsigned int);
  void (__thiscall *finish_init)(RGE_Master_Player *, int, RGE_Sprite **, RGE_Sound **);
  void (__thiscall *load_master_object)(RGE_Master_Player *, int, unsigned __int8, RGE_Sprite **, RGE_Sound **, __int16);
  void (__thiscall *create_master_object_space)(RGE_Master_Player *, __int16);
  void (__thiscall *load_object)(RGE_Master_Player *, FILE *, unsigned __int8, RGE_Sprite **, RGE_Sound **, __int16);
  void (__thiscall *save)(RGE_Master_Player *, int);
};
#pragma pack(pop)

/* 624 */
#pragma pack(push, 8)
struct RGE_EffectsVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Effects *, unsigned int);
  void (__thiscall *save)(RGE_Effects *, int);
  void (__thiscall *do_effect)(RGE_Effects *, __int16, RGE_Player *);
};
#pragma pack(pop)

/* 325 */
#pragma pack(push, 8)
struct RGE_Effect
{
  __int16 id;
  char name[31];
  __int16 string_table_id;
  __int16 effect_list_num;
  RGE_Effect_Command *effect_list;
};
#pragma pack(pop)

/* 592 */
#pragma pack(push, 8)
struct RGE_CommandVtbl
{
  void (__thiscall *do_command_create)(RGE_Command *, RGE_Command_Create *);
  void (__thiscall *do_command_give_attribute)(RGE_Command *, RGE_Command_Give_Attribute *);
  void *(__thiscall *__vecDelDtor)(RGE_Command *, unsigned int);
  void (__thiscall *do_command)(RGE_Command *, void *);
  void (__thiscall *command_give_attribute)(RGE_Command *, int, int, int, float);
};
#pragma pack(pop)

/* 794 */
#pragma pack(push, 8)
struct RGE_ScenarioVtbl
{
  RGE_Static_Object *(__thiscall *get_object_pointer)(RGE_Scenario *, int);
  void *(__thiscall *__vecDelDtor)(RGE_Scenario *, unsigned int);
  void (__thiscall *rehook)(RGE_Scenario *);
  void (__thiscall *save)(RGE_Scenario *, int);
};
#pragma pack(pop)

/* 95 */
#pragma pack(push, 8)
struct RGE_Timeline
{
  RGE_TimelineVtbl *vfptr;
  RGE_Game_World *world;
  RGE_Time_Entry *time_list;
  __int16 list_num;
  __int16 avail_id;
  float old_time;
};
#pragma pack(pop)

/* 248 */
#pragma pack(push, 8)
struct TPicture
{
  BITMAPINFOHEADER *Dib;
  BITMAPINFO256 *BitmapInfo;
  unsigned __int8 *Bits;
  TRANSINFO *TransInfo;
  int OwnMemory;
  int Width;
  int Height;
  __int16 Orien;
  int frame;
};
#pragma pack(pop)

/* 861 */
#pragma pack(push, 8)
struct RGE_Sprite_Particle_mem_bank
{
  RGE_Sprite_Particle mem_bank[100];
  RGE_Sprite_Particle_mem_bank *next;
};
#pragma pack(pop)

/* 175 */
#pragma pack(push, 8)
struct Path_Stack
{
  Mip_Square *mip_square;
  int x;
  int y;
  int mip_level;
  int map_x;
  int map_y;
  float cost;
  float distance_cost;
  Path_Stack *next_node;
  Path_Stack *spawning_node;
  unsigned __int8 path_direction;
  unsigned __int8 diagonel_flag;
};
#pragma pack(pop)

/* 172 */
#pragma pack(push, 8)
struct RGE_Map_Analysis
{
  Mip_Square ***mip_maps;
  int max_mip_size;
  Path_Stack search_stack;
  Path_Stack searched_stack;
  Path_Stack unused_nodes;
  Path_Stack *closest_node;
  float closest_distance;
  RGE_Game_World *world;
  RGE_Tile **tile;
  float *terrain_rules;
  int terrain_num;
  int mip_map_width[4];
  int mip_map_height[4];
  int max_mip_map_width[4];
  int max_mip_map_height[4];
  int map_width;
  int map_height;
  int max_map_width;
  int max_map_height;
  int update_x1;
  int update_y1;
  int update_x2;
  int update_y2;
  int target_x;
  int target_y;
  int old_waypoint_x;
  int old_waypoint_y;
  int last_waypoint_x;
  int last_waypoint_y;
  unsigned __int8 **ai_zone_map;
  unsigned __int8 **ai_wall_map;
};
#pragma pack(pop)

/* 90 */
#pragma pack(push, 8)
struct TDigital
{
  TDigital *owner;
  unsigned __int8 loaded;
  unsigned __int8 failed;
  int resource_id;
  int volume;
  unsigned int pitch;
  int pan;
  unsigned __int8 loop;
  IDirectSoundBuffer *sound_buffer;
};
#pragma pack(pop)

/* 776 */
#pragma pack(push, 8)
struct RGE_Task_ListVtbl
{
  RGE_Task *(__thiscall *create_task)(RGE_Task_List *, __int16, __int16);
  RGE_Task *(__thiscall *get_target_task)(RGE_Task_List *, RGE_Action_Object *, RGE_Master_Action_Object *, RGE_Static_Object *, float, float, float, __int16, int);
  int (__thiscall *is_attack_task)(RGE_Task_List *, RGE_Task *);
  int (__thiscall *check_task)(RGE_Task_List *, RGE_Task *, RGE_Action_Object *, RGE_Static_Object *);
};
#pragma pack(pop)

/* 548 */
#pragma pack(push, 8)
struct BUnitGroupVtbl
{
  void *(__thiscall *__vecDelDtor)(BUnitGroup *, unsigned int);
  BVector *(__thiscall *getPosition)(BUnitGroup *);
  void (__thiscall *setPosition)(BUnitGroup *, BVector);
  BVector *(__thiscall *getOrientationForward)(BUnitGroup *);
  BVector *(__thiscall *getOrientationUp)(BUnitGroup *);
  BVector *(__thiscall *getOrientationRight)(BUnitGroup *);
  int (__thiscall *setOrientation)(BUnitGroup *, BVector, BVector, int);
  BVector *(__thiscall *getVelocity)(BUnitGroup *);
  void (__thiscall *setVelocity)(BUnitGroup *, BVector *);
  float (__thiscall *getVelocityForward)(BUnitGroup *);
  void (__thiscall *setVelocityForward)(BUnitGroup *, float);
  void (__thiscall *setMaximumVelocityForward)(BUnitGroup *, float);
  float (__thiscall *getVelocityUp)(BUnitGroup *);
  void (__thiscall *setVelocityUp)(BUnitGroup *, float);
  float (__thiscall *getVelocityRight)(BUnitGroup *);
  void (__thiscall *setVelocityRight)(BUnitGroup *, float);
  BVector *(__thiscall *getAcceleration)(BUnitGroup *);
  void (__thiscall *setAcceleration)(BUnitGroup *, BVector *);
  float (__thiscall *getAccelerationForward)(BUnitGroup *);
  void (__thiscall *setAccelerationForward)(BUnitGroup *, float);
  float (__thiscall *getAccelerationUp)(BUnitGroup *);
  void (__thiscall *setAccelerationUp)(BUnitGroup *, float);
  float (__thiscall *getAccelerationRight)(BUnitGroup *);
  void (__thiscall *setAccelerationRight)(BUnitGroup *, float);
  float (__thiscall *getTurnRadius)(BUnitGroup *);
  float (__thiscall *getTurnRadiusSpeed)(BUnitGroup *);
  int (__thiscall *setTurnRadius)(BUnitGroup *, float, float);
  float (__thiscall *getMaximumYawPerSecondMoving)(BUnitGroup *);
  float (__thiscall *getMaximumYawPerSecondStationary)(BUnitGroup *);
  int (__thiscall *setStationaryYawRevolutionTime)(BUnitGroup *, float);
  int (__thiscall *isMoving)(BUnitGroup *);
  void (__thiscall *stopMoving)(BUnitGroup *);
  void (__thiscall *stopAllMovement)(BUnitGroup *);
  int (__thiscall *update)(BUnitGroup *, int, BUnitGroup *);
  void (__thiscall *updateEnd)(BUnitGroup *);
  void (__thiscall *checkPositionNotifies_2)(BUnitGroup *, BVector *);
  void (__thiscall *checkPositionNotifies_1)(BUnitGroup *, BVector *, BVector *);
  int (__thiscall *getFlag)(BUnitGroup *, int);
  void (__thiscall *setFlag)(BUnitGroup *, int, int);
  void (__thiscall *initFlags)(BUnitGroup *, int);
  void (__thiscall *save)(BUnitGroup *, int);
  void (__thiscall *load)(BUnitGroup *, int);
  int (__thiscall *update_2)(BUnitGroup *);
};
#pragma pack(pop)

/* 62 */
#pragma pack(push, 8)
struct RGE_Moving_Object
{
  RGE_Moving_ObjectVtbl *vfptr;
  int gbg_unknown_1;
  float gbg_unknown_2;
  int gbg_unknown_3;
  int id;
  RGE_Master_Moving_Object *master_obj;
  TRIBE_Player *owner;
  RGE_Sprite *sprite;
  RGE_Sprite *old_sprite;
  RGE_Active_Sprite_List *sprite_list;
  RGE_Tile *tile;
  RGE_Static_Object *inside_obj;
  RGE_New_Object_List *objects;
  __int16 screen_x_offset;
  __int16 screen_y_offset;
  __int16 shadow_x_offset;
  __int16 shadow_y_offset;
  float hp;
  float sp;
  unsigned __int8 curr_damage_percent;
  unsigned __int8 facet;
  unsigned __int8 selected;
  float world_x;
  float world_y;
  float world_z;
  float attribute_amount_held;
  unsigned __int8 object_state;
  unsigned __int8 sleep_flag;
  unsigned __int8 dopple_flag;
  unsigned __int8 goto_sleep_flag;
  __int16 attribute_type_held;
  unsigned __int8 type;
  unsigned __int8 worker_num;
  ObsRecord *CurrentObstructionData;
  ObsRecord *ObstructionDataList;
  RGE_Static_Object **player_object_node;
  int *mPathingGroup;
  int mPathingGroupSize;
  int mMaximumPathingGroupSize;
  int damaged_lately_timer;
  UnitAIModule *unitAIValue;
  int zoneMapIndex;
  unsigned __int8 inObstructionMapValue;
  unsigned __int8 lastInObstructionMapValue;
  unsigned __int8 underAttackValue;
  int mGroupID;
  unsigned __int8 mROOAlreadyCalled;
  LOS_ExploreInfo ei;
  float speed;
  float trail_remainder;
  float velocity_x;
  float velocity_y;
  float velocity_z;
  float angle;
  float turn_towards_time;
  unsigned __int8 on_ground;
  float turnTimer;
  int continueCounter;
  int currentTerrainException1;
  int currentTerrainException2;
  unsigned __int8 waitingToMoveValue;
  unsigned __int8 numberWaitDelays;
  BVector *userDefinedWaypoints;
  int numberUserDefinedWaypointsValue;
  int maximumNumberUserDefinedWaypointsValue;
  BVector positionValue;
  BVector orientationForwardValue;
  BVector orientationRightValue;
  BPathData *pathData;
  BPathData *mFuturePathData;
  BMovementData *movementData;
  unsigned int lastMoveTimeValue;
  int mHasSubstitutePosition;
  BVector mSubstitutePosition;
  int mConsecutiveSubstituteCount;
};
#pragma pack(pop)

/* 543 */
#pragma pack(push, 8)
struct BSpecificMove
{
  int mActive;
  int mPathID;
  int mReason;
  BVector mGoal;
  float mTimer;
  int mConsecutiveMoveFailures;
  float mDistance;
  BVector mLastPosition;
};
#pragma pack(pop)

/* 422 */
#pragma pack(push, 8)
struct BFormation
{
  int mType;
  int mNumberSlots;
  int mMaximumNumberSlots;
  BFormationSlot *mSlots;
  int mNumberTransformedSlots;
  int mMaximumWidth;
  int mMaximumDepth;
  int mAboutFaced;
  int mMaximumNumberLines;
  int mNumberLines;
  BFormationLine *mLines;
  int mTransformType;
  BVector mTransformOrientation;
};
#pragma pack(pop)

/* 544 */
#pragma pack(push, 8)
struct BContextPlanElement
{
  int mUnitID1;
  int mUnitID2;
  int mType;
  BVector mPoint;
  BVector mOffset;
  int mDepth;
};
#pragma pack(pop)

/* 770 */
#pragma pack(push, 8)
struct RGE_Master_Combat_ObjectVtbl
{
  unsigned __int8 (__thiscall *gbg_needs_power)(RGE_Master_Combat_Object *);
  RGE_Sprite *(__thiscall *gbg_get_sprite_civ_override)(RGE_Master_Combat_Object *, RGE_Static_Object *);
  RGE_Sprite *(__thiscall *gbg_get_sprite2_civ_override)(RGE_Master_Combat_Object *, RGE_Static_Object *);
  RGE_Sprite *(__thiscall *gbg_get_death_sprite_civ_override)(RGE_Master_Combat_Object *, RGE_Static_Object *);
  RGE_Sprite *(__thiscall *gbg_get_undead_sprite_civ_override)(RGE_Master_Combat_Object *, RGE_Static_Object *);
  void *(__thiscall *__vecDelDtor)(RGE_Master_Combat_Object *, unsigned int);
  void (__thiscall *copy_obj)(RGE_Master_Combat_Object *, RGE_Master_Static_Object *);
  void (__thiscall *modify)(RGE_Master_Combat_Object *, float, unsigned __int8);
  void (__thiscall *modify_delta)(RGE_Master_Combat_Object *, float, unsigned __int8);
  void (__thiscall *modify_percent)(RGE_Master_Combat_Object *, float, unsigned __int8);
  void (__thiscall *small_save)(RGE_Master_Combat_Object *, int);
  void (__thiscall *save)(RGE_Master_Combat_Object *, int);
  RGE_Static_Object *(__thiscall *make_new_obj)(RGE_Master_Combat_Object *, RGE_Player *, float, float, float);
  RGE_Master_Static_Object *(__thiscall *make_new_master)(RGE_Master_Combat_Object *);
  unsigned __int8 (__thiscall *check_placement)(RGE_Master_Combat_Object *, RGE_Player *, float, float, int *, unsigned __int8, unsigned __int8, unsigned __int8, unsigned __int8, unsigned __int8, unsigned __int8, RGE_Static_Object *, unsigned __int8);
  unsigned __int8 (__thiscall *alignment)(RGE_Master_Combat_Object *, float *, float *, RGE_Game_World *, unsigned __int8);
  int (__thiscall *calc_base_damage_ability)(RGE_Master_Combat_Object *, RGE_Master_Combat_Object *);
  void (__thiscall *play_command_sound)(RGE_Master_Combat_Object *, RGE_Player *);
  void (__thiscall *play_move_sound)(RGE_Master_Combat_Object *, RGE_Player *);
  void (__thiscall *draw)(RGE_Master_Combat_Object *, TDrawArea *, __int16, __int16, RGE_Color_Table *, int, int, int, unsigned __int8);
  float (__thiscall *maximumSpeed)(RGE_Master_Combat_Object *, int);
  float (__thiscall *acceleration)(RGE_Master_Combat_Object *, int);
  float (__thiscall *deceleration)(RGE_Master_Combat_Object *, int);
  float (__thiscall *getTurnRadius)(RGE_Master_Combat_Object *);
  float (__thiscall *getTurnRadiusSpeed)(RGE_Master_Combat_Object *);
  int (__thiscall *setTurnRadiusOffTurnSpeed)(RGE_Master_Combat_Object *);
  int (__thiscall *setTurnRadius)(RGE_Master_Combat_Object *, float, float);
  float (__thiscall *getMaximumYawPerSecondMoving)(RGE_Master_Combat_Object *);
  float (__thiscall *getMaximumYawPerSecondStationary)(RGE_Master_Combat_Object *);
  void (__thiscall *setStationaryYawRevolutionTime)(RGE_Master_Combat_Object *, float);
  RGE_Sprite *(__thiscall *gbg_get_move_sprite_civ_override)(RGE_Master_Combat_Object *, RGE_Static_Object *);
  RGE_Sprite *(__thiscall *gbg_get_run_sprite_civ_override)(RGE_Master_Combat_Object *, RGE_Static_Object *);
  RGE_Task_List *(__thiscall *create_task_list)(RGE_Master_Combat_Object *);
  RGE_Sprite *(__thiscall *gbg_get_fight_sprite_civ_override)(RGE_Master_Combat_Object *, RGE_Static_Object *);
};
#pragma pack(pop)

/* 862 */
#pragma pack(push, 8)
struct TRIBE_CommandVtbl
{
  void (__thiscall *do_command_create)(TRIBE_Command *, RGE_Command_Create *);
  void (__thiscall *do_command_give_attribute)(TRIBE_Command *, RGE_Command_Give_Attribute *);
  void *(__thiscall *__vecDelDtor)(TRIBE_Command *, unsigned int);
  void (__thiscall *do_command)(TRIBE_Command *, void *);
  void (__thiscall *command_give_attribute)(TRIBE_Command *, int, int, int, float);
  void (__thiscall *do_command_give_attribute_2)(TRIBE_Command *, TRIBE_Command_Give_Attribute *);
  void (__thiscall *command_give_attribute_2)(TRIBE_Command *, int, int, int, float, float);
};
#pragma pack(pop)

/* 850 */
typedef int TRIBE_Trigger__Trigger_State;

/* 276 */
#pragma pack(push, 8)
struct TRIBE_Trigger
{
  TRIBE_Trigger__Trigger_State state;
  unsigned __int8 loopable;
  unsigned __int8 description_display_during_game;
  int description_display_order;
  char *description;
  int description_string_id;
  char *name;
  TRIBE_Trigger_Condition **condition_list;
  int *condition_order;
  int condition_num;
  int max_condition_num;
  TRIBE_Trigger_Effect **effect_list;
  int *effect_order;
  int effect_num;
  int max_effect_num;
  int timer;
  TRIBE_Trigger_System *system;
};
#pragma pack(pop)

/* 517 */
#pragma pack(push, 8)
struct Shape_Clip_Node
{
  int Start;
  int End;
};
#pragma pack(pop)

/* 855 */
#pragma pack(push, 8)
struct RGE_Active_SpriteVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Active_Sprite *, unsigned int);
  void (__thiscall *set_offset)(RGE_Active_Sprite *, int, int);
  void (__thiscall *save)(RGE_Active_Sprite *, int);
  void (__thiscall *update)(RGE_Active_Sprite *, float, float);
  void (__thiscall *draw)(RGE_Active_Sprite *, __int16, int, int, int, int, RGE_Color_Table *, TDrawArea *, RGE_Static_Object *);
  void (__thiscall *normal_draw)(RGE_Active_Sprite *, __int16, int, int, RGE_Color_Table *, TDrawArea *, RGE_Static_Object *);
  void (__thiscall *shadow_draw)(RGE_Active_Sprite *, __int16, int, int, RGE_Color_Table *, TDrawArea *, unsigned __int8);
  __int16 (__thiscall *what_frame)(RGE_Active_Sprite *);
  unsigned __int8 (__thiscall *is_animating)(RGE_Active_Sprite *);
  void (__thiscall *set_frame)(RGE_Active_Sprite *, __int16);
  void (__thiscall *set_facet)(RGE_Active_Sprite *, __int16, RGE_Static_Object *);
  unsigned __int8 (__thiscall *frame_passed)(RGE_Active_Sprite *, __int16);
  unsigned __int8 (__thiscall *looped)(RGE_Active_Sprite *);
  __int16 (__thiscall *get_facetindex)(RGE_Active_Sprite *, __int16);
  unsigned __int8 (__thiscall *get_frame)(RGE_Active_Sprite *, __int16 *, __int16 *, __int16 *, __int16 *, int);
  void (__thiscall *setToFirstFrame)(RGE_Active_Sprite *);
};
#pragma pack(pop)

/* 768 */
#pragma pack(push, 8)
struct RGE_Master_Moving_ObjectVtbl
{
  unsigned __int8 (__thiscall *gbg_needs_power)(RGE_Master_Moving_Object *);
  RGE_Sprite *(__thiscall *gbg_get_sprite_civ_override)(RGE_Master_Moving_Object *, RGE_Static_Object *);
  RGE_Sprite *(__thiscall *gbg_get_sprite2_civ_override)(RGE_Master_Moving_Object *, RGE_Static_Object *);
  RGE_Sprite *(__thiscall *gbg_get_death_sprite_civ_override)(RGE_Master_Moving_Object *, RGE_Static_Object *);
  RGE_Sprite *(__thiscall *gbg_get_undead_sprite_civ_override)(RGE_Master_Moving_Object *, RGE_Static_Object *);
  void *(__thiscall *__vecDelDtor)(RGE_Master_Moving_Object *, unsigned int);
  void (__thiscall *copy_obj)(RGE_Master_Moving_Object *, RGE_Master_Static_Object *);
  void (__thiscall *modify)(RGE_Master_Moving_Object *, float, unsigned __int8);
  void (__thiscall *modify_delta)(RGE_Master_Moving_Object *, float, unsigned __int8);
  void (__thiscall *modify_percent)(RGE_Master_Moving_Object *, float, unsigned __int8);
  void (__thiscall *small_save)(RGE_Master_Moving_Object *, int);
  void (__thiscall *save)(RGE_Master_Moving_Object *, int);
  RGE_Static_Object *(__thiscall *make_new_obj)(RGE_Master_Moving_Object *, RGE_Player *, float, float, float);
  RGE_Master_Static_Object *(__thiscall *make_new_master)(RGE_Master_Moving_Object *);
  unsigned __int8 (__thiscall *check_placement)(RGE_Master_Moving_Object *, RGE_Player *, float, float, int *, unsigned __int8, unsigned __int8, unsigned __int8, unsigned __int8, unsigned __int8, unsigned __int8, RGE_Static_Object *, unsigned __int8);
  unsigned __int8 (__thiscall *alignment)(RGE_Master_Moving_Object *, float *, float *, RGE_Game_World *, unsigned __int8);
  int (__thiscall *calc_base_damage_ability)(RGE_Master_Moving_Object *, RGE_Master_Combat_Object *);
  void (__thiscall *play_command_sound)(RGE_Master_Moving_Object *, RGE_Player *);
  void (__thiscall *play_move_sound)(RGE_Master_Moving_Object *, RGE_Player *);
  void (__thiscall *draw)(RGE_Master_Moving_Object *, TDrawArea *, __int16, __int16, RGE_Color_Table *, int, int, int, unsigned __int8);
  float (__thiscall *maximumSpeed)(RGE_Master_Moving_Object *, int);
  float (__thiscall *acceleration)(RGE_Master_Moving_Object *, int);
  float (__thiscall *deceleration)(RGE_Master_Moving_Object *, int);
  float (__thiscall *getTurnRadius)(RGE_Master_Moving_Object *);
  float (__thiscall *getTurnRadiusSpeed)(RGE_Master_Moving_Object *);
  int (__thiscall *setTurnRadiusOffTurnSpeed)(RGE_Master_Moving_Object *);
  int (__thiscall *setTurnRadius)(RGE_Master_Moving_Object *, float, float);
  float (__thiscall *getMaximumYawPerSecondMoving)(RGE_Master_Moving_Object *);
  float (__thiscall *getMaximumYawPerSecondStationary)(RGE_Master_Moving_Object *);
  void (__thiscall *setStationaryYawRevolutionTime)(RGE_Master_Moving_Object *, float);
  RGE_Sprite *(__thiscall *gbg_get_move_sprite_civ_override)(RGE_Master_Moving_Object *, RGE_Static_Object *);
  RGE_Sprite *(__thiscall *gbg_get_run_sprite_civ_override)(RGE_Master_Moving_Object *, RGE_Static_Object *);
};
#pragma pack(pop)

/* 721 */
#pragma pack(push, 8)
struct RGE_ActionVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Action *, unsigned int);
  int (__thiscall *setup_2)(RGE_Action *, RGE_Action_Object *);
  int (__thiscall *setup_1)(RGE_Action *, int, RGE_Action_Object *);
  RGE_Action_List *(__thiscall *create_action_list)(RGE_Action *, RGE_Action_Object *);
  void (__thiscall *rehook)(RGE_Action *);
  void (__thiscall *save)(RGE_Action *, int);
  __int16 (__thiscall *type)(RGE_Action *);
  void (__thiscall *first_in_stack)(RGE_Action *, unsigned __int8);
  unsigned __int8 (__thiscall *inside_obj_update)(RGE_Action *);
  unsigned __int8 (__thiscall *idle_update)(RGE_Action *);
  unsigned __int8 (__thiscall *update)(RGE_Action *);
  int (__thiscall *stop)(RGE_Action *);
  int (__thiscall *move_to)(RGE_Action *, RGE_Static_Object *, float, float, float);
  int (__thiscall *work)(RGE_Action *, RGE_Static_Object *, float, float, float);
  int (__thiscall *gbg_unknown1)(RGE_Action *, int, int);
  unsigned __int8 (__thiscall *attack_response)(RGE_Action *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *relation_response)(RGE_Action *, int, unsigned __int8);
  void (__thiscall *copy_obj)(RGE_Action *, RGE_Master_Action_Object *);
  void (__thiscall *copy_obj_sprites)(RGE_Action *, RGE_Master_Action_Object *, RGE_Task *, RGE_Task *);
  void (__thiscall *get_state_name)(RGE_Action *, char *);
  RGE_Static_Object *(__thiscall *get_target_obj)(RGE_Action *);
  RGE_Static_Object *(__thiscall *get_target_obj2)(RGE_Action *);
  void (__thiscall *set_target_obj)(RGE_Action *, RGE_Static_Object *);
  void (__thiscall *set_target_obj2)(RGE_Action *, RGE_Static_Object *);
  void (__thiscall *set_state)(RGE_Action *, unsigned __int8);
};
#pragma pack(pop)

/* 604 */
#pragma pack(push, 8)
struct RGE_Info_Line
{
  float clump_num;
  __int16 percent_of_tiles_covered;
  __int16 percent_updown;
  __int16 min_elevation;
  __int16 max_elevation;
  __int16 terrain_type;
  __int16 terrain_base;
  char obj_id;
};
#pragma pack(pop)

/* 605 */
#pragma pack(push, 8)
struct RGE_Map_Gen_Info
{
  __int16 base_terrain;
  RGE_Info_Line land;
  RGE_Info_Line elevation[20];
  __int16 elevation_num;
  RGE_Info_Line terrain[20];
  __int16 terrain_num;
  RGE_Info_Line objects[20];
  __int16 objects_num;
  __int16 player_num;
  __int16 player_x[9];
  __int16 player_y[9];
  __int16 player_connect[9];
  __int16 player_base_land[9];
  __int16 space_between_islands_or_edge;
};
#pragma pack(pop)

/* 396 */
#pragma pack(push, 8)
struct MsgQueue
{
  unsigned int Code;
  unsigned int ExecTurn;
  unsigned __int8 SeqNo;
  char *msgptr;
  unsigned int From;
  unsigned int Size;
  int ControlCommand;
  int OldListPos;
  unsigned __int8 InSequence;
};
#pragma pack(pop)

/* 365 */
#pragma pack(push, 1)
struct IPAD
{
};
#pragma pack(pop)

/* 556 */
#pragma pack(push, 8)
struct TCommLogVtbl
{
  void *(__thiscall *__vecDelDtor)(TCommLog *, unsigned int);
};
#pragma pack(pop)

/* 642 */
typedef int TInputPanel__FormatType;

/* 643 */
typedef TInputPanel__FormatType TEditPanel__FormatType;

/* 901 */
#pragma pack(push, 8)
struct TribeVoteSystemDialogVtbl
{
  void *(__thiscall *__vecDelDtor)(TribeVoteSystemDialog *, unsigned int);
  int (__thiscall *setup)(TribeVoteSystemDialog *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TribeVoteSystemDialog *, RECT);
  void (__thiscall *set_rect_1)(TribeVoteSystemDialog *, int, int, int, int);
  void (__thiscall *set_color)(TribeVoteSystemDialog *, unsigned __int8);
  void (__thiscall *set_active)(TribeVoteSystemDialog *, int);
  void (__thiscall *unknown1)(TribeVoteSystemDialog *);
  void (__thiscall *unknown2)(TribeVoteSystemDialog *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TribeVoteSystemDialog *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TribeVoteSystemDialog *, int);
  void (__thiscall *set_fixed_position)(TribeVoteSystemDialog *, int, int, int, int);
  void (__thiscall *set_redraw)(TribeVoteSystemDialog *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TribeVoteSystemDialog *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TribeVoteSystemDialog *, int);
  void (__thiscall *draw_finish)(TribeVoteSystemDialog *);
  void (__thiscall *draw)(TribeVoteSystemDialog *);
  void (__thiscall *draw_rect)(TribeVoteSystemDialog *, RECT *);
  void (__thiscall *draw_offset)(TribeVoteSystemDialog *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TribeVoteSystemDialog *, RECT *);
  void (__thiscall *draw_offset2)(TribeVoteSystemDialog *, int, int, RECT *);
  void (__thiscall *paint)(TribeVoteSystemDialog *);
  int (__thiscall *wnd_proc)(TribeVoteSystemDialog *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TribeVoteSystemDialog *);
  int (__thiscall *handle_size)(TribeVoteSystemDialog *, int, int);
  int (__thiscall *handle_paint)(TribeVoteSystemDialog *);
  int (__thiscall *handle_key_down)(TribeVoteSystemDialog *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TribeVoteSystemDialog *, int, __int16);
  int (__thiscall *handle_command)(TribeVoteSystemDialog *, unsigned int, int);
  int (__thiscall *handle_user_command)(TribeVoteSystemDialog *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TribeVoteSystemDialog *, unsigned int, int);
  int (__thiscall *handle_scroll)(TribeVoteSystemDialog *, int, int);
  int (__thiscall *handle_mouse_down)(TribeVoteSystemDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TribeVoteSystemDialog *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TribeVoteSystemDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TribeVoteSystemDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TribeVoteSystemDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TribeVoteSystemDialog *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TribeVoteSystemDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TribeVoteSystemDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TribeVoteSystemDialog *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TribeVoteSystemDialog *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TribeVoteSystemDialog *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TribeVoteSystemDialog *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TribeVoteSystemDialog *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TribeVoteSystemDialog *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TribeVoteSystemDialog *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TribeVoteSystemDialog *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TribeVoteSystemDialog *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TribeVoteSystemDialog *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TribeVoteSystemDialog *, int, int, int, int);
  int (__thiscall *key_down_action)(TribeVoteSystemDialog *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TribeVoteSystemDialog *, int, __int16);
  int (__thiscall *action)(TribeVoteSystemDialog *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TribeVoteSystemDialog *, RECT *);
  int (__thiscall *is_inside)(TribeVoteSystemDialog *, int, int);
  void (__thiscall *set_focus)(TribeVoteSystemDialog *, int);
  void (__thiscall *set_tab_order_2)(TribeVoteSystemDialog *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TribeVoteSystemDialog *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TribeVoteSystemDialog *);
  unsigned __int8 (__thiscall *get_help_info)(TribeVoteSystemDialog *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TribeVoteSystemDialog *);
  int (__thiscall *restart_sound_system)(TribeVoteSystemDialog *);
  void (__thiscall *take_snapshot)(TribeVoteSystemDialog *);
  void (__thiscall *handle_reactivate)(TribeVoteSystemDialog *);
  int (__thiscall *pointing_at)(TribeVoteSystemDialog *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TribeVoteSystemDialog *);
  int (__thiscall *get_ideal_width)(TribeVoteSystemDialog *);
  void (__thiscall *draw_background)(TribeVoteSystemDialog *, int);
  void (__thiscall *set_ideal_size)(TribeVoteSystemDialog *, int, int);
  int (__thiscall *create_button_2)(TribeVoteSystemDialog *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TribeVoteSystemDialog *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TribeVoteSystemDialog *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TribeVoteSystemDialog *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TribeVoteSystemDialog *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TribeVoteSystemDialog *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TribeVoteSystemDialog *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TribeVoteSystemDialog *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TribeVoteSystemDialog *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TribeVoteSystemDialog *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TribeVoteSystemDialog *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TribeVoteSystemDialog *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TribeVoteSystemDialog *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TribeVoteSystemDialog *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TribeVoteSystemDialog *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TribeVoteSystemDialog *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TribeVoteSystemDialog *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TribeVoteSystemDialog *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TribeVoteSystemDialog *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TribeVoteSystemDialog *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TribeVoteSystemDialog *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TribeVoteSystemDialog *, TPanel *, int, int, int, int);
  int (__thiscall *setup_3)(TribeVoteSystemDialog *, TDrawArea *, TPanel *, int, int, unsigned __int8, int);
  int (__thiscall *setup_2)(TribeVoteSystemDialog *, TDrawArea *, TPanel *, int, int, char *, int, int);
};
#pragma pack(pop)

/* 112 */
#pragma pack(push, 8)
struct TPanel
{
  TPanelVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
};
#pragma pack(pop)

/* 449 */
#pragma pack(push, 8)
struct PanelNode
{
  TPanel *panel;
  PanelNode *prev_node;
  PanelNode *next_node;
};
#pragma pack(pop)

/* 634 */
typedef int TTextPanel__Alignment;

/* 639 */
typedef int TTextPanel__Style;

/* 635 */
typedef int TTextPanel__BackType;

/* 105 */
#pragma pack(push, 8)
struct TTextPanel
{
  TTextPanelVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  TTextPanel__TextNode *list;
  __int16 num_lines;
  __int16 draw_lines;
  __int16 top_line;
  __int16 bot_line;
  __int16 cur_line;
  __int16 cur_col;
  HFONT font[4];
  int font_wid;
  int font_hgt;
  TTextPanel__Alignment vert_align;
  TTextPanel__Alignment horz_align;
  TTextPanel__Alignment horz_align2;
  int word_wrap;
  TTextPanel__Style text_style;
  TTextPanel__Style highlight_style;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int highlightTextColor1;
  unsigned int highlightTextColor2;
  TScrollBarPanel *scbar_panel;
  int auto_scbar;
  __int16 fixed_len;
  int text_wid;
  int text_hgt;
  TShape *back_pic;
  __int16 back_pic_wid;
  __int16 back_pic_hgt;
  TTextPanel__BackType fill_back;
  unsigned __int8 back_color;
  unsigned __int8 progress_bar_color;
  int progress_bar_width;
  int progress_bar_current;
  int outline;
  unsigned __int8 outline_color;
  int sorted;
  int second_column_pos;
  int full_width;
  int scbar_width;
  int scbar_active;
  int bevel_type;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  HRGN clip_rgn2;
  int border_size;
  int spacer_size;
  int formatted_text;
  int use_large_font_for_wordwrap;
};
#pragma pack(pop)

/* 813 */
typedef int TButtonPanel__ButtonType;

/* 814 */
typedef int TButtonPanel__DrawType;

/* 815 */
typedef int TButtonPanel__NotifyType;

/* 118 */
#pragma pack(push, 8)
struct TButtonPanel
{
  TButtonPanelVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int id[9];
  int id2[9];
  int shift_id1;
  int shift_id2;
  TButtonPanel__ButtonType buttonTypeValue;
  TButtonPanel__DrawType drawTypeValue;
  TButtonPanel__NotifyType notifyTypeValue;
  TDigital *sound;
  TShape *pic[9];
  __int16 pic_index[9];
  int auto_pic_pos;
  int pic_x;
  int pic_y;
  int all_hot;
  int draw_reverse;
  char *text1[9];
  char *text2[9];
  int text_x;
  int text_y;
  HFONT font;
  int font_wid;
  int font_hgt;
  __int16 num_states;
  __int16 cur_state;
  int is_down;
  TButtonPanel **radio_buttons;
  __int16 num_radio_buttons;
  unsigned int button_down_time;
  unsigned int text_color1[9];
  unsigned int text_color2[9];
  unsigned int highlight_text_color1[9];
  unsigned int highlight_text_color2[9];
  int text_style;
  int hotkey;
  int hotkey_shift;
  int hotkey_ctrl;
  int hotkey_alt;
  int bevel_type;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  int key_down;
  int disabled;
  int sound_number;
  unsigned __int8 allow_right_action;
  unsigned __int8 TButtonPanel_gap[3];
};
#pragma pack(pop)

/* 882 */
typedef int TScrollBarPanel__Orientation;

/* 244 */
#pragma pack(push, 8)
struct TScrollBarPanel
{
  TScrollBarPanelVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  TPanel *list_panel;
  int list_len;
  int one_step;
  int page_step;
  int list_num;
  TShape *button_pics;
  int back_frame;
  int up_frame;
  int down_frame;
  int tab_frame;
  int arrowSize;
  int tabSize;
  int tab_y;
  int tab_min_y;
  int tab_max_y;
  int tab_mouse_y;
  int tab_x;
  int tab_min_x;
  int tab_max_x;
  int tab_mouse_x;
  unsigned __int8 item_down;
  int item_is_down;
  int item_x;
  int item_y;
  unsigned __int8 item_mode;
  unsigned int item_last_time;
  unsigned int item_hold_interval;
  unsigned int item_down_interval;
  RECT up_rect;
  RECT down_rect;
  RECT tab_rect;
  RECT top_rect;
  RECT bottom_rect;
  TScrollBarPanel__Orientation orientationValue;
  int bevel_type;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned __int8 TScrollBarPanel_gap[2];
};
#pragma pack(pop)

/* 243 */
#pragma pack(push, 8)
struct TEditPanel
{
  TEditPanelVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  HWND edit_wnd;
  __int16 fixed_len;
  char *text;
  int text_len;
  int hidden;
  HBRUSH brush;
  int stock_brush;
  int (__stdcall *old_sub_wnd_proc)(HWND, unsigned int, unsigned int, int);
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int highlight_text_color1;
  unsigned int highlight_text_color2;
  unsigned int back_color;
  TEditPanel__FormatType format;
  HFONT font;
  int multi_line;
  RECT draw_rect;
  unsigned int draw_format;
  int auto_sel;
  int sel_len;
  int bevel_type;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  int bevel_size;
  HIMC imc;
  int enable_ime;
  int turn_ime_on;
  int remember_ime_status;
};
#pragma pack(pop)

/* 809 */
#pragma pack(push, 8)
struct TRIBE_Screen_GameVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Screen_Game *, unsigned int);
  int (__thiscall *setup)(TRIBE_Screen_Game *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TRIBE_Screen_Game *, RECT);
  void (__thiscall *set_rect_1)(TRIBE_Screen_Game *, int, int, int, int);
  void (__thiscall *set_color)(TRIBE_Screen_Game *, unsigned __int8);
  void (__thiscall *set_active)(TRIBE_Screen_Game *, int);
  void (__thiscall *unknown1)(TRIBE_Screen_Game *);
  void (__thiscall *unknown2)(TRIBE_Screen_Game *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TRIBE_Screen_Game *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TRIBE_Screen_Game *, int);
  void (__thiscall *set_fixed_position)(TRIBE_Screen_Game *, int, int, int, int);
  void (__thiscall *set_redraw)(TRIBE_Screen_Game *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TRIBE_Screen_Game *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TRIBE_Screen_Game *, int);
  void (__thiscall *draw_finish)(TRIBE_Screen_Game *);
  void (__thiscall *draw)(TRIBE_Screen_Game *);
  void (__thiscall *draw_rect)(TRIBE_Screen_Game *, RECT *);
  void (__thiscall *draw_offset)(TRIBE_Screen_Game *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TRIBE_Screen_Game *, RECT *);
  void (__thiscall *draw_offset2)(TRIBE_Screen_Game *, int, int, RECT *);
  void (__thiscall *paint)(TRIBE_Screen_Game *);
  int (__thiscall *wnd_proc)(TRIBE_Screen_Game *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TRIBE_Screen_Game *);
  int (__thiscall *handle_size)(TRIBE_Screen_Game *, int, int);
  int (__thiscall *handle_paint)(TRIBE_Screen_Game *);
  int (__thiscall *handle_key_down)(TRIBE_Screen_Game *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TRIBE_Screen_Game *, int, __int16);
  int (__thiscall *handle_command)(TRIBE_Screen_Game *, unsigned int, int);
  int (__thiscall *handle_user_command)(TRIBE_Screen_Game *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TRIBE_Screen_Game *, unsigned int, int);
  int (__thiscall *handle_scroll)(TRIBE_Screen_Game *, int, int);
  int (__thiscall *handle_mouse_down)(TRIBE_Screen_Game *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TRIBE_Screen_Game *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TRIBE_Screen_Game *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TRIBE_Screen_Game *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TRIBE_Screen_Game *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TRIBE_Screen_Game *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TRIBE_Screen_Game *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TRIBE_Screen_Game *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TRIBE_Screen_Game *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TRIBE_Screen_Game *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TRIBE_Screen_Game *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TRIBE_Screen_Game *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TRIBE_Screen_Game *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TRIBE_Screen_Game *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TRIBE_Screen_Game *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TRIBE_Screen_Game *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TRIBE_Screen_Game *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TRIBE_Screen_Game *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TRIBE_Screen_Game *, int, int, int, int);
  int (__thiscall *key_down_action)(TRIBE_Screen_Game *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TRIBE_Screen_Game *, int, __int16);
  int (__thiscall *action)(TRIBE_Screen_Game *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TRIBE_Screen_Game *, RECT *);
  int (__thiscall *is_inside)(TRIBE_Screen_Game *, int, int);
  void (__thiscall *set_focus)(TRIBE_Screen_Game *, int);
  void (__thiscall *set_tab_order_2)(TRIBE_Screen_Game *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TRIBE_Screen_Game *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TRIBE_Screen_Game *);
  unsigned __int8 (__thiscall *get_help_info)(TRIBE_Screen_Game *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TRIBE_Screen_Game *);
  int (__thiscall *restart_sound_system)(TRIBE_Screen_Game *);
  void (__thiscall *take_snapshot)(TRIBE_Screen_Game *);
  void (__thiscall *handle_reactivate)(TRIBE_Screen_Game *);
  int (__thiscall *pointing_at)(TRIBE_Screen_Game *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TRIBE_Screen_Game *);
  int (__thiscall *get_ideal_width)(TRIBE_Screen_Game *);
  void (__thiscall *draw_background)(TRIBE_Screen_Game *, int);
  void (__thiscall *set_ideal_size)(TRIBE_Screen_Game *, int, int);
  int (__thiscall *create_button_2)(TRIBE_Screen_Game *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TRIBE_Screen_Game *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TRIBE_Screen_Game *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TRIBE_Screen_Game *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TRIBE_Screen_Game *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TRIBE_Screen_Game *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TRIBE_Screen_Game *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TRIBE_Screen_Game *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TRIBE_Screen_Game *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TRIBE_Screen_Game *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TRIBE_Screen_Game *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TRIBE_Screen_Game *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TRIBE_Screen_Game *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TRIBE_Screen_Game *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TRIBE_Screen_Game *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TRIBE_Screen_Game *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TRIBE_Screen_Game *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TRIBE_Screen_Game *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TRIBE_Screen_Game *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TRIBE_Screen_Game *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TRIBE_Screen_Game *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TRIBE_Screen_Game *, TPanel *, int, int, int, int);
};
#pragma pack(pop)

/* 260 */
#pragma pack(push, 1)
struct TRIBE_Main_View
{
};
#pragma pack(pop)

/* 181 */
#pragma pack(push, 8)
struct TRIBE_Diamond_Map_View
{
  TRIBE_Diamond_Map_ViewVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  RGE_Game_World *world;
  RGE_Player *player;
  RGE_Map *map;
  int all_visible;
  int render_all;
  int mouse_last_x;
  int mouse_last_y;
  int repos_mouse;
  RECT view_rect;
  RGE_Player *last_player;
  RGE_Map_Image_Line *map_image_lines;
  RGE_Map_Tile_Row *map_tile_rows;
  __int16 map_wid;
  __int16 map_hgt;
  __int16 map_image_start_y;
  __int16 map_image_wid;
  __int16 map_image_hgt;
  __int16 map_tile_row_cnt;
  float map_row_step;
  float map_col_ratio;
  float map_row_ratio;
  __int16 map_tile_draw_hgt;
  __int16 map_tile_draw_wid;
  __int16 view_col;
  __int16 view_row;
  RGE_View *main_view;
  int scrolling;
  unsigned __int8 fog_color;
  int draw_objects_mode;
  unsigned int cur_player_bit;
  int own_save_area;
  TDrawArea *save_area;
  int view_mode;
  unsigned __int8 colors_installed;
  unsigned int last_attack_time;
  int flags;
  unsigned int flare_blink_timer;
  int outline;
  int outlineSize;
  unsigned __int8 outlineColor;
  unsigned __int8 focus_area_index;
  unsigned __int8 focus_area_cycle_index;
  unsigned __int8 focus_area_looped;
  int previous_area;
  float last_x;
  float last_y;
  float last_z;
  float prev_x;
  float prev_y;
  float prev_z;
  int last_focus_area_added;
  int focus_area[5];
  int focus_area_id[5];
  unsigned int focus_area_time[5];
  float focus_area_x[5];
  float focus_area_y[5];
  float focus_area_z[5];
};
#pragma pack(pop)

/* 345 */
#pragma pack(push, 8)
struct TRIBE_Panel_Inven
{
  TRIBE_Panel_InvenVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  TShape *pics;
  TRIBE_Player *player;
  float save_food;
  float save_wood;
  float save_stone;
  float save_gold;
  float save_ore;
  float save_pop;
  float save_max_pop;
  unsigned int idle_time;
  unsigned int idle_interval;
  HFONT font;
  unsigned int font_color;
  unsigned int back_color;
  unsigned __int8 highlight[7];
  unsigned int last_flash_time;
  unsigned __int8 any_highlight_on;
  unsigned __int8 flash_on;
  RECT item_rects[5];
  TShape *flash_pic;
};
#pragma pack(pop)

/* 319 */
#pragma pack(push, 1)
struct TRIBE_Panel_Object
{
};
#pragma pack(pop)

/* 166 */
#pragma pack(push, 8)
struct TRIBE_Panel_Button
{
  TRIBE_Panel_ButtonVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int id[9];
  int id2[9];
  int shift_id1;
  int shift_id2;
  TButtonPanel__ButtonType buttonTypeValue;
  TButtonPanel__DrawType drawTypeValue;
  TButtonPanel__NotifyType notifyTypeValue;
  TDigital *sound;
  TShape *pic[9];
  __int16 pic_index[9];
  int auto_pic_pos;
  int pic_x;
  int pic_y;
  int all_hot;
  int draw_reverse;
  char *text1[9];
  char *text2[9];
  int text_x;
  int text_y;
  HFONT font;
  int font_wid;
  int font_hgt;
  __int16 num_states;
  __int16 cur_state;
  int is_down;
  TButtonPanel **radio_buttons;
  __int16 num_radio_buttons;
  unsigned int button_down_time;
  unsigned int text_color1[9];
  unsigned int text_color2[9];
  unsigned int highlight_text_color1[9];
  unsigned int highlight_text_color2[9];
  int text_style;
  int hotkey;
  int hotkey_shift;
  int hotkey_ctrl;
  int hotkey_alt;
  int bevel_type;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  int key_down;
  int disabled;
  int sound_number;
  unsigned __int8 allow_right_action;
  unsigned __int8 TButtonPanel_gap[3];
  unsigned __int8 mapview_check;
  int display_garrison;
  int garrison_number;
  int garrison_number2;
  unsigned __int8 tribe_button_type;
  TShape *border_pic;
  unsigned __int8 *color_table;
  int border_frame;
  char text_msg[256];
  int in_use;
  int shaded;
  char help_msg[512];
  unsigned __int8 animation_enabled;
  unsigned __int8 incremented_frame;
  unsigned __int8 animate_button;
  int base_frame;
  int num_frames_animation;
  int frame_count;
  unsigned int animation_frequency;
  unsigned int last_time;
  int hotkeyID;
  int isSelected;
  int isSelectedFrameEnabled;
  int selectedFrame;
};
#pragma pack(pop)

/* 892 */
typedef int TPicturePanel__PictureType;

/* 237 */
#pragma pack(push, 8)
struct TPicturePanel
{
  TPicturePanelVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  char pic_name[260];
  int res_id;
  int size_from_pic;
  int keep_loaded;
  int own_pic;
  TPicturePanel__PictureType pic_type;
  TPicture *pic;
  TShape *shape;
  int frame;
  int animated;
  int first_frame;
  int last_frame;
  unsigned int frame_duration;
  unsigned int last_time;
  int hot_x;
  int hot_y;
  TShape *back_pic;
  unsigned __int8 fill_back_mode;
  unsigned __int8 back_color;
  RGE_Sprite *sprite;
};
#pragma pack(pop)

/* 820 */
typedef int TDropDownPanel__DropdownMode;

/* 819 */
typedef int TDropDownPanel__DrawStyle;

/* 119 */
#pragma pack(push, 8)
struct TDropDownPanel
{
  TDropDownPanelVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  TTextPanel *val_panel;
  TButtonPanel *btn_panel;
  TListPanel *list_panel;
  TScrollBarPanel *scbar_panel;
  TDropDownPanel__DropdownMode mode;
  __int16 val_num;
  int val_wid;
  int val_hgt;
  int btn_wid;
  int btn_hgt;
  int list_wid;
  int list_hgt;
  int max_list_hgt;
  int scbar_wid;
  int scbar_arrow_hgt;
  int scbar_tab_hgt;
  unsigned __int8 list_is_above;
  int font_hgt;
  int outline_color;
  TDropDownPanel__DrawStyle draw_style;
  int draw_val_rect;
  int disabled;
  int bevel_type;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int disabled_text_color1;
  unsigned int disabled_text_color2;
  int text_style;
  int disabled_text_style;
};
#pragma pack(pop)

/* 876 */
typedef int TMessagePanel__MessageType;

/* 875 */
typedef int TMessagePanel__JustType;

/* 354 */
#pragma pack(push, 8)
struct TMessagePanel
{
  TMessagePanelVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  TMessagePanel__MessageType message_type;
  char text[512];
  int showing_message;
  unsigned int start_time;
  int show_message_interval;
  HFONT font;
  int font_wid;
  int font_hgt;
  unsigned __int8 font_color;
  unsigned __int8 back_color;
  int index_color;
  unsigned int font_color1;
  unsigned int font_color2;
  TMessagePanel__JustType horz_just;
  TMessagePanel__JustType vert_just;
  int word_wrap;
  HRGN image_clip_region;
  TDrawArea *ImageBuffer;
  RECT ImageRect;
  RECT UsedImageRect;
  RECT UsedScreenRect;
  int LastIBWidth;
  int LastIBHeight;
  int ImageTextActive;
  TShape *Icon1;
  TShape *Icon2;
  int IconFrame1;
  int IconFrame2;
  int sound_id;
  unsigned int sound_time;
  Message_Node *queue;
  TMessagePanel *linked_panel1;
  TMessagePanel *linked_panel2;
};
#pragma pack(pop)

/* 341 */
#pragma pack(push, 8)
struct TRIBE_Panel_Time
{
  TRIBE_Panel_TimeVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  HFONT font;
  unsigned int color1;
  unsigned int color2;
  int clock_type;
  int old_clock_type;
  int clock_format;
  int old_clock_format;
  int player_id;
  TRIBE_World *world;
  TRIBE_Player *player;
  unsigned int start_real_time;
  unsigned int game_time;
  unsigned int last_game_time;
  unsigned int display_time;
  unsigned int last_display_time;
  HRGN image_clip_region;
  TDrawArea *ImageBuffer;
  RECT ImageRect;
  RECT UsedImageRect;
  RECT UsedScreenRect;
  int ImageTextActive;
  int LastIBWidth;
  int LastIBHeight;
};
#pragma pack(pop)

/* 255 */
#pragma pack(push, 8)
struct RGE_Panel_Tool_Box
{
  RGE_Panel_Tool_BoxVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  TScreenPanel *screen_panel;
  RGE_View *view;
  RGE_Diamond_Map *map;
  TButtonPanel *game_mode_button;
  TButtonPanel *object_mode_button;
  TButtonPanel *delete_mode_button;
  TButtonPanel *move_mode_button;
  TButtonPanel *terrain_mode_button;
  TButtonPanel *elevation_mode_button;
  TButtonPanel *command_button;
  TPanel *dialog;
};
#pragma pack(pop)

/* 167 */
#pragma pack(push, 8)
struct Item_Avail
{
  char *name;
  __int16 id;
  __int16 pict;
  __int16 inventory_item_1;
  float inventory_cost_1;
  __int16 inventory_item_2;
  float inventory_cost_2;
  __int16 inventory_item_3;
  float inventory_cost_3;
  int help_string_id;
  int help_page_id;
};
#pragma pack(pop)

/* 810 */
#pragma pack(push, 8)
struct Trade_Avail
{
  RGE_Player *player;
  RGE_Static_Object *dock;
  float inventory;
};
#pragma pack(pop)

/* 70 */
#pragma pack(push, 8)
struct TRIBE_Building_Object
{
  TRIBE_Building_ObjectVtbl *vfptr;
  int gbg_unknown_1;
  float gbg_unknown_2;
  int gbg_unknown_3;
  int id;
  TRIBE_Master_Building_Object *master_obj;
  TRIBE_Player *owner;
  RGE_Sprite *sprite;
  RGE_Sprite *old_sprite;
  RGE_Active_Sprite_List *sprite_list;
  RGE_Tile *tile;
  RGE_Static_Object *inside_obj;
  RGE_New_Object_List *objects;
  __int16 screen_x_offset;
  __int16 screen_y_offset;
  __int16 shadow_x_offset;
  __int16 shadow_y_offset;
  float hp;
  float sp;
  unsigned __int8 curr_damage_percent;
  unsigned __int8 facet;
  unsigned __int8 selected;
  float world_x;
  float world_y;
  float world_z;
  float attribute_amount_held;
  unsigned __int8 object_state;
  unsigned __int8 sleep_flag;
  unsigned __int8 dopple_flag;
  unsigned __int8 goto_sleep_flag;
  __int16 attribute_type_held;
  unsigned __int8 type;
  unsigned __int8 worker_num;
  ObsRecord *CurrentObstructionData;
  ObsRecord *ObstructionDataList;
  RGE_Static_Object **player_object_node;
  int *mPathingGroup;
  int mPathingGroupSize;
  int mMaximumPathingGroupSize;
  int damaged_lately_timer;
  UnitAIModule *unitAIValue;
  int zoneMapIndex;
  unsigned __int8 inObstructionMapValue;
  unsigned __int8 lastInObstructionMapValue;
  unsigned __int8 underAttackValue;
  int mGroupID;
  unsigned __int8 mROOAlreadyCalled;
  LOS_ExploreInfo ei;
  float speed;
  float trail_remainder;
  float velocity_x;
  float velocity_y;
  float velocity_z;
  float angle;
  float turn_towards_time;
  unsigned __int8 on_ground;
  float turnTimer;
  int continueCounter;
  int currentTerrainException1;
  int currentTerrainException2;
  unsigned __int8 waitingToMoveValue;
  unsigned __int8 numberWaitDelays;
  BVector *userDefinedWaypoints;
  int numberUserDefinedWaypointsValue;
  int maximumNumberUserDefinedWaypointsValue;
  BVector positionValue;
  BVector orientationForwardValue;
  BVector orientationRightValue;
  BPathData *pathData;
  BPathData *mFuturePathData;
  BMovementData *movementData;
  unsigned int lastMoveTimeValue;
  int mHasSubstitutePosition;
  BVector mSubstitutePosition;
  int mConsecutiveSubstituteCount;
  RGE_Action_List *actions;
  unsigned __int8 waiting;
  unsigned __int8 command_flag;
  __int16 Selected_Group_Info;
  VISIBLE_UNIT_REC *VUR_Ptrs[9];
  unsigned int Unified_Map_Value;
  unsigned __int8 Multi_Unified_Points;
  unsigned __int8 Large_Object_Radius;
  int attack_count;
  float attack_timer;
  unsigned __int8 capture_flag;
  unsigned __int8 formation_id;
  unsigned __int8 formation_row;
  unsigned __int8 formation_col;
  __int16 attr_amt[6];
  __int16 decay_timer;
  int raider_build_countdown;
  unsigned __int8 inside_garrison_count;
  unsigned __int8 town_bell_flag;
  int town_bell_target_id;
  int town_bell_target_type;
  int town_bell_action;
  int town_bell_target_id2;
  float town_bell_target_x;
  float town_bell_target_y;
  unsigned __int8 num_builders;
  unsigned __int8 num_healers;
  unsigned __int8 own_master;
  float current_volley_fire_amount;
  unsigned __int8 next_volley;
  unsigned __int8 using_special_attack_animation;
  int locked_down_count;
  unsigned __int8 user_released;
  float berserker_timer;
  unsigned __int8 burning;
  unsigned int last_burn_time;
  unsigned __int8 save_damage_percent;
  unsigned __int8 captured_unit_count;
  RGE_Action_List *extra_actions;
  RGE_Action_List *research_actions;
  int villager_count;
  TRIBE_Building_Object *linked_owner;
  TRIBE_Building_Object *linked_child[4];
  unsigned int last_garrison_time;
  Production_Queue_Record *production_queue;
  __int16 production_queue_size;
  __int16 production_queue_count;
  __int16 production_queue_total_units;
  unsigned __int8 production_queue_enabled;
  RGE_Action_List *production_queue_actions;
  unsigned __int8 production_queue_change_flag;
  unsigned __int8 production_queue_auto_paused;
  __int16 production_queue_need_attr;
  int relic_count;
  int specific_relic_count;
  int raider_transform_count;
  int gather_point_exists;
  float gather_point_x;
  float gather_point_y;
  float gather_point_z;
  int gather_point_target;
  __int16 gather_point_target_master;
  RGE_Object_Node *wonder_node;
  float build_pts;
  unsigned __int8 default_frame;
  unsigned __int8 desolid_flag;
  int pending_order;
  unsigned __int8 snow_flag;
  BVector mEndpoint1;
  BVector mEndpoint2;
  int mGateLocked;
  int mFirstUpdate;
  float mCloseTimer;
  unsigned __int8 building_terrain_type;
  unsigned __int8 semi_asleep;
  int unique_build_id;
  unsigned __int8 culture;
  unsigned __int8 built;
  int DoppleInstalled;
  int gbg_building_unknown_4;
};
#pragma pack(pop)

/* 966 */
#pragma pack(push, 8)
struct RGE_Obstruction_Manager_LandVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Obstruction_Manager_Land *, unsigned int);
  bool (__thiscall *Init)(RGE_Obstruction_Manager_Land *, RGE_Game_World *);
  bool (__thiscall *DeInit)(RGE_Obstruction_Manager_Land *);
  bool (__thiscall *InstallTerrain)(RGE_Obstruction_Manager_Land *);
  void (__thiscall *ResetTerrainObjects)(RGE_Obstruction_Manager_Land *);
  void (__thiscall *AddTerrainObject)(RGE_Obstruction_Manager_Land *, int, int);
  bool (__thiscall *CheckForTerrainCollisions)(RGE_Obstruction_Manager_Land *, float, float, float, float, int);
  int (__thiscall *GetTerrainMask)(RGE_Obstruction_Manager_Land *, float *);
  bool (__thiscall *AddHardObstruction)(RGE_Obstruction_Manager_Land *, int, int, int, int, int, int, RGE_Static_Object *);
  bool (__thiscall *RemoveHardObstruction)(RGE_Obstruction_Manager_Land *, int, int, int, int, RGE_Static_Object *);
  bool (__thiscall *UpdateObjectObstruction)(RGE_Obstruction_Manager_Land *, RGE_Static_Object *);
  bool (__thiscall *RemoveObjectObstruction)(RGE_Obstruction_Manager_Land *, RGE_Static_Object *);
  void (__thiscall *ModifyObjectObstruction)(RGE_Obstruction_Manager_Land *, RGE_Static_Object *, int);
  bool (__thiscall *unknown1)(RGE_Obstruction_Manager_Land *, int, int);
  bool (__thiscall *unknown2)(RGE_Obstruction_Manager_Land *, int, int, int);
  bool (__thiscall *unknown3)(RGE_Obstruction_Manager_Land *, int, int, int);
  bool (__thiscall *DeleteObList)(RGE_Obstruction_Manager_Land *, RGE_Static_Object *);
  int (__thiscall *unknown4)(RGE_Obstruction_Manager_Land *, int);
  bool (__thiscall *unknown5)(RGE_Obstruction_Manager_Land *, int);
  bool (__thiscall *CheckForCollisions)(RGE_Obstruction_Manager_Land *, float, float, float, float, int, int *, ObsRecord **, int, int, int *, int);
  bool (__thiscall *CheckForSingleCollision)(RGE_Obstruction_Manager_Land *, float, float, float, float, int, int, int *, int);
  void (__thiscall *SetIgnoreList)(RGE_Obstruction_Manager_Land *, bool, int *, int);
  void (__thiscall *SetDetailList)(RGE_Obstruction_Manager_Land *, IntersectRecord *, int *, int);
  void (__thiscall *SetBufferRadius)(RGE_Obstruction_Manager_Land *, bool, float);
  void (__thiscall *DeleteObRecord)(RGE_Obstruction_Manager_Land *, ObsRecord *);
  int (__thiscall *unknown6)(RGE_Obstruction_Manager_Land *);
  int (__thiscall *unknown7)(RGE_Obstruction_Manager_Land *);
  bool (__thiscall *DisplayObstructionInView)(RGE_Obstruction_Manager_Land *, ObsRecord *, int, int, int, int);
  bool (__thiscall *unknown8)(RGE_Obstruction_Manager_Land *, int);
  void (__thiscall *AddDebugLine)(RGE_Obstruction_Manager_Land *, float, float, float, float, int, int);
  void (__thiscall *AddDebugLine2)(RGE_Obstruction_Manager_Land *, int, int, int, int, int, int);
  void (__thiscall *ClearDebugLines)(RGE_Obstruction_Manager_Land *, int);
  void (__thiscall *SetUpdateCallback)(RGE_Obstruction_Manager_Land *, void (__fastcall **)(void *, int, int, int, int), void *);
  void (__thiscall *Reset)(RGE_Obstruction_Manager_Land *);
  bool (__thiscall *CheckForCollisionsInNode)(RGE_Obstruction_Manager_Land *, int, int, int *, ObsRecord **, int, int *, int);
  bool (__thiscall *CheckLineCollision)(RGE_Obstruction_Manager_Land *, float, float, float, float, ObsRecord *);
  int (__thiscall *unknown9)(RGE_Obstruction_Manager_Land *, int);
  bool (__thiscall *CheckBoxCollision)(RGE_Obstruction_Manager_Land *, ObsRecord *);
  bool (__thiscall *CheckCircleCollision)(RGE_Obstruction_Manager_Land *, ObsRecord *);
  bool (__thiscall *RecordDetails)(RGE_Obstruction_Manager_Land *, ObsRecord *, Point *);
  bool (__thiscall *CheckForContainedPointInNode)(RGE_Obstruction_Manager_Land *, int, int, int *, ObsRecord **, int, int *, int);
  bool (__thiscall *CheckForSingleCollisionsInNode)(RGE_Obstruction_Manager_Land *, int, int, int *, int, int);
  bool (__thiscall *CheckSingleBoxCollision)(RGE_Obstruction_Manager_Land *, ObsRecord *);
  bool (__thiscall *CheckSingleCircleCollision)(RGE_Obstruction_Manager_Land *, ObsRecord *);
  void (__thiscall *addEdgeCollision)(RGE_Obstruction_Manager_Land *, float, float, float, float, int *, ObsRecord **, int);
};
#pragma pack(pop)

/* 968 */
#pragma pack(push, 8)
struct IPoint
{
  int X;
  int Y;
};
#pragma pack(pop)

/* 969 */
#pragma pack(push, 8)
struct ILine
{
  IPoint P0;
  IPoint P1;
};
#pragma pack(pop)

/* 970 */
#pragma pack(push, 8)
struct NodeArrayInfo
{
  ObsRecord **RecList;
  int NumActive;
  int BlockSize;
};
#pragma pack(pop)

/* 203 */
#pragma pack(push, 1)
struct MShortPather
{
};
#pragma pack(pop)

/* 288 */
#pragma pack(push, 8)
struct TDebuggingLog
{
  TDebuggingLogVtbl *vfptr;
  int Timestamp;
  int DateTimestamp;
  int LogToFile;
  int LogToOutput;
  int Sequence;
  int Flush;
  int LogIsOpen;
  int LogError;
  unsigned int LogStartTickCount;
  unsigned int SeqNo;
  int NetworkLogging;
  char TBuff[2000];
  char osbuf[1000];
  char Filename[128];
  char BaseFilename[128];
  FILE *logstream;
};
#pragma pack(pop)

/* 965 */
#pragma pack(push, 8)
struct SoftOb_ArrayList
{
  ObsRecord **Zone_Ptrs;
  int *Zone_Size_Ptrs;
  int Used_Zones;
  int Max_Zones;
  ObsRecord *Free_Head;
  int Free_Pool_Zone;
  int Free_Pool_Index;
  int Total_Blocks;
  int Free_Blocks;
  int Default_Grow_Size;
};
#pragma pack(pop)

/* 972 */
#pragma pack(push, 8)
struct ObListControl
{
  RGE_Static_Object *Object;
  ObsRecord **Records;
  int NumRecords;
  int AllocSize;
};
#pragma pack(pop)

/* 502 */
#pragma pack(push, 8)
struct IntersectRecord
{
  ObsRecord *ObRec;
  int ObjId;
  Point IntPoint;
};
#pragma pack(pop)

/* 967 */
#pragma pack(push, 8)
struct RGE_Obstruction_Manager_AirVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Obstruction_Manager_Air *, unsigned int);
  bool (__thiscall *Init)(RGE_Obstruction_Manager_Air *, RGE_Game_World *);
  bool (__thiscall *DeInit)(RGE_Obstruction_Manager_Air *);
  bool (__thiscall *InstallTerrain)(RGE_Obstruction_Manager_Air *);
  void (__thiscall *ResetTerrainObjects)(RGE_Obstruction_Manager_Air *);
  void (__thiscall *AddTerrainObject)(RGE_Obstruction_Manager_Air *, int, int);
  bool (__thiscall *CheckForTerrainCollisions)(RGE_Obstruction_Manager_Air *, float, float, float, float, int);
  int (__thiscall *GetTerrainMask)(RGE_Obstruction_Manager_Air *, float *);
  bool (__thiscall *AddHardObstruction)(RGE_Obstruction_Manager_Air *, int, int, int, int, int, int, RGE_Static_Object *);
  bool (__thiscall *RemoveHardObstruction)(RGE_Obstruction_Manager_Air *, int, int, int, int, RGE_Static_Object *);
  bool (__thiscall *UpdateObjectObstruction)(RGE_Obstruction_Manager_Air *, RGE_Static_Object *);
  bool (__thiscall *RemoveObjectObstruction)(RGE_Obstruction_Manager_Air *, RGE_Static_Object *);
  void (__thiscall *ModifyObjectObstruction)(RGE_Obstruction_Manager_Air *, RGE_Static_Object *, int);
  bool (__thiscall *unknown1)(RGE_Obstruction_Manager_Air *, int, int);
  bool (__thiscall *unknown2)(RGE_Obstruction_Manager_Air *, int, int, int);
  bool (__thiscall *unknown3)(RGE_Obstruction_Manager_Air *, int, int, int);
  bool (__thiscall *DeleteObList)(RGE_Obstruction_Manager_Air *, RGE_Static_Object *);
  int (__thiscall *unknown4)(RGE_Obstruction_Manager_Air *, int);
  bool (__thiscall *unknown5)(RGE_Obstruction_Manager_Air *, int);
  bool (__thiscall *CheckForCollisions)(RGE_Obstruction_Manager_Air *, float, float, float, float, int, int *, ObsRecord **, int, int, int *, int);
  bool (__thiscall *CheckForSingleCollision)(RGE_Obstruction_Manager_Air *, float, float, float, float, int, int, int *, int);
  void (__thiscall *SetIgnoreList)(RGE_Obstruction_Manager_Air *, bool, int *, int);
  void (__thiscall *SetDetailList)(RGE_Obstruction_Manager_Air *, IntersectRecord *, int *, int);
  void (__thiscall *SetBufferRadius)(RGE_Obstruction_Manager_Air *, bool, float);
  void (__thiscall *DeleteObRecord)(RGE_Obstruction_Manager_Air *, ObsRecord *);
  int (__thiscall *unknown6)(RGE_Obstruction_Manager_Air *);
  int (__thiscall *unknown7)(RGE_Obstruction_Manager_Air *);
  bool (__thiscall *DisplayObstructionInView)(RGE_Obstruction_Manager_Air *, ObsRecord *, int, int, int, int);
  bool (__thiscall *unknown8)(RGE_Obstruction_Manager_Air *, int);
  void (__thiscall *AddDebugLine)(RGE_Obstruction_Manager_Air *, float, float, float, float, int, int);
  void (__thiscall *AddDebugLine2)(RGE_Obstruction_Manager_Air *, int, int, int, int, int, int);
  void (__thiscall *ClearDebugLines)(RGE_Obstruction_Manager_Air *, int);
  void (__thiscall *SetUpdateCallback)(RGE_Obstruction_Manager_Air *, void (__fastcall **)(void *, int, int, int, int), void *);
  void (__thiscall *Reset)(RGE_Obstruction_Manager_Air *);
  bool (__thiscall *CheckForCollisionsInNode)(RGE_Obstruction_Manager_Air *, int, int, int *, ObsRecord **, int, int *, int);
  bool (__thiscall *CheckLineCollision)(RGE_Obstruction_Manager_Air *, float, float, float, float, ObsRecord *);
  int (__thiscall *unknown9)(RGE_Obstruction_Manager_Air *, int);
  bool (__thiscall *CheckBoxCollision)(RGE_Obstruction_Manager_Air *, ObsRecord *);
  bool (__thiscall *CheckCircleCollision)(RGE_Obstruction_Manager_Air *, ObsRecord *);
  bool (__thiscall *RecordDetails)(RGE_Obstruction_Manager_Air *, ObsRecord *, Point *);
  bool (__thiscall *CheckForContainedPointInNode)(RGE_Obstruction_Manager_Air *, int, int, int *, ObsRecord **, int, int *, int);
  bool (__thiscall *CheckForSingleCollisionsInNode)(RGE_Obstruction_Manager_Air *, int, int, int *, int, int);
  bool (__thiscall *CheckSingleBoxCollision)(RGE_Obstruction_Manager_Air *, ObsRecord *);
  bool (__thiscall *CheckSingleCircleCollision)(RGE_Obstruction_Manager_Air *, ObsRecord *);
  void (__thiscall *addEdgeCollision)(RGE_Obstruction_Manager_Air *, float, float, float, float, int *, ObsRecord **, int);
};
#pragma pack(pop)

/* 835 */
#pragma pack(push, 8)
struct RGE_RMM_Database_ControllerVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_RMM_Database_Controller *, unsigned int);
  unsigned __int8 (__thiscall *generate)(RGE_RMM_Database_Controller *);
  void (__thiscall *add_land_module)(RGE_RMM_Database_Controller *, unsigned __int8);
  void (__thiscall *add_terrain_module)(RGE_RMM_Database_Controller *);
  void (__thiscall *add_object_module)(RGE_RMM_Database_Controller *);
  void (__thiscall *add_elevation_module)(RGE_RMM_Database_Controller *);
  unsigned __int8 (__thiscall *init)(RGE_RMM_Database_Controller *, RGE_Map *, RGE_Game_World *, unsigned __int8, int, unsigned __int8);
  unsigned __int8 (__thiscall *de_init)(RGE_RMM_Database_Controller *);
};
#pragma pack(pop)

/* 269 */
#pragma pack(push, 8)
struct RGE_Random_Map_Module
{
  RGE_Random_Map_ModuleVtbl *vfptr;
  RGE_Random_Map_Module *parent;
  RGE_Random_Map_Module_List *list;
  RGE_Map *map;
  RGE_Tile **map_row_offset;
  int map_width;
  int map_height;
  int max_map_width;
  int max_map_height;
  float schedule;
  unsigned __int8 *search_map;
  unsigned __int8 **search_map_rows;
  Map_Stack *stack_array;
  Map_Stack **stack_offsets;
};
#pragma pack(pop)

/* 828 */
#pragma pack(push, 8)
struct RGE_Random_Map_Module_List
{
  RGE_Random_Map_Module *module;
  RGE_Random_Map_Module_List *next;
};
#pragma pack(pop)

/* 282 */
#pragma pack(push, 1)
struct Map_Stack
{
};
#pragma pack(pop)

/* 836 */
#pragma pack(push, 8)
struct RGE_Land_Data
{
  int map_edge_buffer[4];
  int map_edge_fade;
  int land_placement_edge;
  int base_terrain;
  int grown_land_percent;
  int id;
  int land_num;
  RGE_Land_Data_Entry *land;
};
#pragma pack(pop)

/* 838 */
#pragma pack(push, 8)
struct RGE_Terrain_Data
{
  int terrain_num;
  RGE_Terrain_Data_Entry *terrain;
};
#pragma pack(pop)

/* 840 */
#pragma pack(push, 8)
struct RGE_Object_Data
{
  int object_num;
  RGE_Object_Data_Entry *objects;
};
#pragma pack(pop)

/* 842 */
#pragma pack(push, 8)
struct RGE_Elevation_Data
{
  int elevation_num;
  RGE_Elevation_Data_Entry *elevation;
};
#pragma pack(pop)

/* 843 */
#pragma pack(push, 8)
struct RGE_Map_Data_Entry
{
  int map_id;
  RGE_Land_Data land_info;
  RGE_Terrain_Data terrain_info;
  RGE_Object_Data object_info;
  RGE_Elevation_Data elevation_info;
};
#pragma pack(pop)

/* 171 */
#pragma pack(push, 8)
struct RGE_Zone_Map
{
  int numberTilesInZoneValue[257];
  unsigned __int8 *zone_map;
  unsigned __int8 **zone_map_rows;
  unsigned __int8 zone_info[257];
  float *terrain_passability_rules;
  int terrain_passability_rules_num;
  RGE_Map *map;
  int mNumberZones;
  unsigned __int8 *mConnected;
  unsigned __int8 *mConnectedByZone;
  CMemoryPool *mpZonePool;
};
#pragma pack(pop)

/* 606 */
#pragma pack(push, 8)
struct VISIBLE_UNIT_PTR
{
  VISIBLE_UNIT_REC *unit_list;
  __int16 list_size;
  __int16 used;
};
#pragma pack(pop)

/* 599 */
#pragma pack(push, 8)
struct RGE_Map_Copy_Object_Data
{
  int id;
  int owner;
  float angle;
  float x;
  float y;
};
#pragma pack(pop)

/* 623 */
#pragma pack(push, 8)
struct RGE_Effect_Command
{
  unsigned __int8 command;
  __int16 change_num1;
  __int16 change_num2;
  __int16 change_num3;
  float change_amount;
};
#pragma pack(pop)

/* 270 */
#pragma pack(push, 8)
struct RGE_Command_Create
{
  unsigned __int8 command;
  __int16 obj_catagory;
  unsigned __int8 player_id;
  float location_x;
  float location_y;
  float location_z;
};
#pragma pack(pop)

/* 271 */
#pragma pack(push, 8)
struct RGE_Command_Give_Attribute
{
  unsigned __int8 command;
  unsigned __int8 player_id;
  unsigned __int8 to_player_id;
  unsigned __int8 attr_id;
  float attr_amount;
};
#pragma pack(pop)

/* 924 */
#pragma pack(push, 8)
struct RGE_TimelineVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Timeline *, unsigned int);
};
#pragma pack(pop)

/* 925 */
#pragma pack(push, 8)
struct RGE_Time_Entry
{
  float time;
  unsigned __int8 command;
  __int16 obj_type;
  unsigned __int8 player;
  float x;
  float y;
  float z;
  __int16 task;
  RGE_Static_Object *this_obj;
  __int16 this_obj_id;
  RGE_Static_Object *target_obj;
  __int16 target_obj_id;
  RGE_Time_Entry *next;
};
#pragma pack(pop)

/* 104 */
#pragma pack(push, 1)
struct TRANSINFO
{
};
#pragma pack(pop)

/* 629 */
#pragma pack(push, 8)
struct Mip_Square
{
  unsigned __int8 connection_flag;
  unsigned __int8 flags;
};
#pragma pack(pop)

/* 758 */
#pragma pack(push, 8)
struct RGE_Moving_ObjectVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Moving_Object *, unsigned int);
  int (__thiscall *gbg_unknown1)(RGE_Moving_Object *);
  int (__thiscall *gbg_get_civ_override)(RGE_Moving_Object *);
  unsigned __int8 (__thiscall *gbg_unknown3)(RGE_Moving_Object *);
  unsigned __int8 (__thiscall *gbg_unknown4)(RGE_Moving_Object *);
  unsigned __int8 (__thiscall *gbg_unknown5)(RGE_Moving_Object *);
  unsigned __int8 (__thiscall *gbg_unknown6)(RGE_Moving_Object *);
  unsigned __int8 (__thiscall *gbg_unknown7)(RGE_Moving_Object *);
  unsigned __int8 (__thiscall *gbg_unknown8)(RGE_Moving_Object *);
  unsigned __int8 (__thiscall *gbg_unknown9)(RGE_Moving_Object *);
  unsigned __int8 (__thiscall *gbg_unknown10)(RGE_Moving_Object *);
  unsigned __int8 (__thiscall *gbg_unknown11)(RGE_Moving_Object *);
  unsigned __int8 (__thiscall *gbg_isPadawan)(RGE_Moving_Object *);
  unsigned __int8 (__thiscall *gbg_isMaster)(RGE_Moving_Object *);
  unsigned __int8 (__thiscall *gbg_unknown14)(RGE_Moving_Object *);
  unsigned __int8 (__thiscall *gbg_isShielded)(RGE_Moving_Object *);
  void (__thiscall *gbg_unknown16)(RGE_Moving_Object *);
  void (__thiscall *gbg_unknown17)(RGE_Moving_Object *);
  unsigned __int8 (__thiscall *gbg_unknown18)(RGE_Moving_Object *, int);
  unsigned __int8 (__thiscall *gbg_isDetector)(RGE_Moving_Object *);
  unsigned __int8 (__thiscall *gbg_unknown20)(RGE_Moving_Object *, int);
  unsigned __int8 (__thiscall *gbg_isPowered)(RGE_Moving_Object *, int);
  void (__thiscall *gbg_unknown22)(RGE_Moving_Object *);
  unsigned __int8 (__thiscall *gbg_unknown23)(RGE_Moving_Object *);
  unsigned __int8 (__thiscall *gbg_isBiological)(RGE_Moving_Object *);
  unsigned __int8 (__thiscall *gbg_isDamaged)(RGE_Moving_Object *);
  unsigned __int8 (__thiscall *gbg_unknown26)(RGE_Moving_Object *);
  unsigned __int8 (__thiscall *gbg_canBeHealedByPlayer)(RGE_Moving_Object *, int);
  unsigned __int8 (__thiscall *gbg_canBeRepairedByPlayer)(RGE_Moving_Object *, int);
  void (__thiscall *recycle_in_to_game)(RGE_Moving_Object *, RGE_Master_Static_Object *, RGE_Player *, float, float, float);
  void (__thiscall *recycle_out_of_game)(RGE_Moving_Object *);
  void (__thiscall *draw)(RGE_Moving_Object *, TDrawArea *, __int16, __int16, RGE_Color_Table *);
  void (__thiscall *shadow_draw)(RGE_Moving_Object *, TDrawArea *, __int16, __int16, unsigned __int8);
  void (__thiscall *normal_draw)(RGE_Moving_Object *, TDrawArea *, __int16, __int16);
  void (__thiscall *draw_front_frame)(RGE_Moving_Object *, TDrawArea *, __int16, __int16);
  void (__thiscall *draw_back_frame)(RGE_Moving_Object *, TDrawArea *, __int16, __int16);
  void (__thiscall *draw_frame)(RGE_Moving_Object *, TDrawArea *, __int16, __int16);
  unsigned __int8 (__thiscall *update)(RGE_Moving_Object *);
  void (__thiscall *check_damage_sprites)(RGE_Moving_Object *);
  void (__thiscall *rehook)(RGE_Moving_Object *);
  void (__thiscall *save)(RGE_Moving_Object *, int);
  void (__thiscall *teleport_off_map)(RGE_Moving_Object *);
  float (__thiscall *teleport)(RGE_Moving_Object *, float, float, float);
  float (__thiscall *handle_teleport_z_correction)(RGE_Moving_Object *, float);
  void (__thiscall *new_sprite)(RGE_Moving_Object *, RGE_Sprite *);
  void (__thiscall *add_overlay_sprite)(RGE_Moving_Object *, RGE_Sprite *, unsigned __int8);
  void (__thiscall *remove_overlay_sprite)(RGE_Moving_Object *, RGE_Sprite *);
  void (__thiscall *change_ownership)(RGE_Moving_Object *, RGE_Player *);
  void (__thiscall *modify)(RGE_Moving_Object *, float, unsigned __int8);
  void (__thiscall *modify_delta)(RGE_Moving_Object *, float, unsigned __int8);
  void (__thiscall *modify_percent)(RGE_Moving_Object *, float, unsigned __int8);
  void (__thiscall *transform)(RGE_Moving_Object *, RGE_Master_Static_Object *);
  void (__thiscall *copy_obj)(RGE_Moving_Object *, RGE_Master_Static_Object *);
  void (__thiscall *set_object_state)(RGE_Moving_Object *, unsigned __int8);
  void (__thiscall *remove_visible_resource)(RGE_Moving_Object *);
  void (__thiscall *create_doppleganger_when_dying)(RGE_Moving_Object *);
  void (__thiscall *destroy_obj)(RGE_Moving_Object *);
  void (__thiscall *die_die_die)(RGE_Moving_Object *);
  void (__thiscall *damage)(RGE_Moving_Object *, int, RGE_Armor_Weapon_Info *, float, RGE_Player *, RGE_Static_Object *, int);
  float (__thiscall *calculateDamage)(RGE_Moving_Object *, int, RGE_Armor_Weapon_Info *, float, RGE_Player *, RGE_Static_Object *);
  void (__thiscall *rotate)(RGE_Moving_Object *, int);
  unsigned __int8 (__thiscall *can_attack)(RGE_Moving_Object *);
  void (__thiscall *set_attribute)(RGE_Moving_Object *, __int16, float);
  void (__thiscall *set_attribute_amount)(RGE_Moving_Object *, float, unsigned __int8, unsigned __int8);
  int (__thiscall *heal_2)(RGE_Moving_Object *, int, int);
  unsigned __int8 (__thiscall *heal_1)(RGE_Moving_Object *, float);
  int (__thiscall *canRepair)(RGE_Moving_Object *);
  void (__thiscall *notify_of_relation)(RGE_Moving_Object *, int, unsigned __int8);
  void (__thiscall *do_command)(RGE_Moving_Object *, RGE_Static_Object *, float, float, float);
  int (__thiscall *actionTypeIfOrdered)(RGE_Moving_Object *, RGE_Static_Object *, float, float, float, float *);
  unsigned __int8 (__thiscall *move_to)(RGE_Moving_Object *, RGE_Static_Object *, float, float, float);
  void (__thiscall *work)(RGE_Moving_Object *, RGE_Static_Object *, float, float, float);
  void (__thiscall *stop)(RGE_Moving_Object *);
  void (__thiscall *set_attack)(RGE_Moving_Object *, RGE_Static_Object *);
  void (__thiscall *play_command_sound)(RGE_Moving_Object *);
  void (__thiscall *play_move_sound)(RGE_Moving_Object *);
  void (__thiscall *new_angle)(RGE_Moving_Object *, float);
  RGE_Static_Object *(__thiscall *spawn_death_obj)(RGE_Moving_Object *);
  RGE_Master_Static_Object *(__thiscall *get_command_master)(RGE_Moving_Object *, RGE_Static_Object *, float, float, float);
  void (__thiscall *set_being_worked_on)(RGE_Moving_Object *, RGE_Action_Object *, __int16, unsigned __int8);
  void (__thiscall *release_being_worked_on)(RGE_Moving_Object *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *is_moving)(RGE_Moving_Object *);
  RGE_Static_Object *(__thiscall *get_target_obj)(RGE_Moving_Object *);
  unsigned __int8 (__thiscall *more_room)(RGE_Moving_Object *, RGE_Static_Object *);
  void (__thiscall *enter_obj)(RGE_Moving_Object *, RGE_Static_Object *, unsigned __int8);
  void (__thiscall *exit_obj)(RGE_Moving_Object *);
  void (__thiscall *add_obj)(RGE_Moving_Object *, RGE_Static_Object *);
  void (__thiscall *remove_obj)(RGE_Moving_Object *, RGE_Static_Object *);
  int (__thiscall *explore_terrain)(RGE_Moving_Object *, RGE_Player *, unsigned __int8, int, int);
  void (__thiscall *unexplore_terrain)(RGE_Moving_Object *, RGE_Player *, unsigned __int8, int, int);
  LOSTBL *(__thiscall *get_los_table)(RGE_Moving_Object *);
  unsigned __int8 (__thiscall *get_visibility)(RGE_Moving_Object *, RGE_Player *);
  int (__thiscall *inAttackRange)(RGE_Moving_Object *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *underAttack)(RGE_Moving_Object *);
  void (__thiscall *setUnderAttack)(RGE_Moving_Object *, unsigned __int8);
  float (__thiscall *calc_attack_modifier)(RGE_Moving_Object *, RGE_Static_Object *);
  float (__thiscall *getSpeed)(RGE_Moving_Object *);
  float (__thiscall *getAngle)(RGE_Moving_Object *);
  float (__thiscall *maximumSpeed)(RGE_Moving_Object *);
  float (__thiscall *rateOfFire)(RGE_Moving_Object *);
  float (__thiscall *damageCapability_2)(RGE_Moving_Object *, RGE_Static_Object *);
  float (__thiscall *damageCapability_1)(RGE_Moving_Object *);
  float (__thiscall *weaponRange)(RGE_Moving_Object *);
  float (__thiscall *minimumWeaponRange)(RGE_Moving_Object *);
  int (__thiscall *passableTile_2)(RGE_Moving_Object *, float, float, int *, int);
  int (__thiscall *passableTile_1)(RGE_Moving_Object *, float, float);
  int (__thiscall *currentTargetID)(RGE_Moving_Object *);
  float (__thiscall *currentTargetX)(RGE_Moving_Object *);
  float (__thiscall *currentTargetY)(RGE_Moving_Object *);
  float (__thiscall *currentTargetZ)(RGE_Moving_Object *);
  void (__thiscall *setWaitingToMove)(RGE_Moving_Object *, unsigned __int8);
  unsigned __int8 (__thiscall *waitingToMove)(RGE_Moving_Object *);
  unsigned __int8 (__thiscall *actionState)(RGE_Moving_Object *);
  unsigned __int8 (__thiscall *keepGatheringWhenObjectIsOut)(RGE_Moving_Object *, int);
  unsigned __int8 (__thiscall *produceWhenKilledBy)(RGE_Moving_Object *, int);
  unsigned __int8 (__thiscall *useSameZoneDropsite)(RGE_Moving_Object *);
  float (__thiscall *searchRadius)(RGE_Moving_Object *);
  unsigned __int8 (__thiscall *is_idle)(RGE_Moving_Object *);
  void (*logDebug)(RGE_Moving_Object *, char *, ...);
  void (*debug)(RGE_Moving_Object *, char *, ...);
  void (__thiscall *notify)(RGE_Moving_Object *, int, int, int, int, int, int);
  int (__thiscall *attack_2)(RGE_Moving_Object *, float, float, float, int);
  int (__thiscall *attack_1)(RGE_Moving_Object *, int, int);
  int (__thiscall *moveTo_3)(RGE_Moving_Object *, float, float, float, float, int, int);
  int (__thiscall *moveTo_2)(RGE_Moving_Object *, int, float, int);
  int (__thiscall *moveTo_1)(RGE_Moving_Object *, int, int);
  int (__thiscall *moveAwayFrom)(RGE_Moving_Object *, int, int);
  int (__thiscall *hunt)(RGE_Moving_Object *, int, int);
  int (__thiscall *gather)(RGE_Moving_Object *, int, int);
  int (__thiscall *convert)(RGE_Moving_Object *, int, int);
  int (__thiscall *repair)(RGE_Moving_Object *, int, int);
  int (__thiscall *build)(RGE_Moving_Object *, int, int);
  int (__thiscall *trade)(RGE_Moving_Object *, int, int);
  int (__thiscall *explore)(RGE_Moving_Object *, int, int, int);
  int (__thiscall *enter)(RGE_Moving_Object *, int, int);
  int (__thiscall *unload)(RGE_Moving_Object *, int, float, float, float);
  int (__thiscall *transport)(RGE_Moving_Object *, float, float, float, int);
  int (__thiscall *stopAction)(RGE_Moving_Object *);
  int (__thiscall *pause)(RGE_Moving_Object *);
  int (__thiscall *canPath_2)(RGE_Moving_Object *, int, float, float *, int, int, bool);
  int (__thiscall *canPath_1)(RGE_Moving_Object *, XYZPoint, float, int, float *, int, int, bool);
  int (__thiscall *canQuickPath)(RGE_Moving_Object *, int, float, float *);
  int (__thiscall *canPathWithObstructions)(RGE_Moving_Object *, int, float, float *, int, int, ManagedArray_int_ *);
  int (__thiscall *canPathWithAdditionalPassability)(RGE_Moving_Object *, XYZPoint, float, int, float *, int, int, int, int, int, BPath *);
  int (__thiscall *findFirstTerrainAlongExceptionPath)(RGE_Moving_Object *, int, float *, float *, BPath *);
  int (__thiscall *canLinePath_2)(RGE_Moving_Object *, int, int, int, int, float, int);
  int (__thiscall *canLinePath_1)(RGE_Moving_Object *, const XYPoint *, const XYPoint *, float, XYPoint *, int);
  int (__thiscall *firstTileAlongLine)(RGE_Moving_Object *, const XYPoint *, const XYPoint *, XYPoint *, int, int, int);
  unsigned __int8 (__thiscall *have_action)(RGE_Moving_Object *);
  int (__thiscall *gameActionType)(RGE_Moving_Object *);
  BVector *(__thiscall *userDefinedWaypoint)(RGE_Moving_Object *, int);
  int (__thiscall *addUserDefinedWaypoint)(RGE_Moving_Object *, float, float, float);
  void (__thiscall *zeroUserDefinedWaypoints)(RGE_Moving_Object *);
  void (__thiscall *removeAllUserDefinedWaypoints)(RGE_Moving_Object *);
  int (__thiscall *numberUserDefinedWaypoints)(RGE_Moving_Object *);
  BPath *(__thiscall *getPatrolInformation)(RGE_Moving_Object *, int *);
  float (__thiscall *distanceToHighestLevelPath_2)(RGE_Moving_Object *, BVector);
  float (__thiscall *distanceToHighestLevelPath_1)(RGE_Moving_Object *);
  BPath *(__thiscall *findAvoidancePath)(RGE_Moving_Object *, XYZPoint *, float, int);
  int (__thiscall *get_action_checksum)(RGE_Moving_Object *);
  int (__thiscall *get_waypoint_checksum)(RGE_Moving_Object *);
  void (__thiscall *setPatrolMode)(RGE_Moving_Object *, unsigned __int8);
  int (__thiscall *garrisoned_count)(RGE_Moving_Object *);
  int (__thiscall *lock_down)(RGE_Moving_Object *);
  int (__thiscall *unlock_down)(RGE_Moving_Object *);
  int (__thiscall *get_locked_down_count)(RGE_Moving_Object *);
  float (__thiscall *getTradeAmount)(RGE_Moving_Object *, float, float, float, float);
  int (__thiscall *setup_2)(RGE_Moving_Object *, int, RGE_Game_World *);
  int (__thiscall *setup_1)(RGE_Moving_Object *, RGE_Master_Static_Object *, RGE_Player *, float, float, float);
  RGE_New_Object_List *(__thiscall *create_object_list)(RGE_Moving_Object *);
  RGE_Active_Sprite_List *(__thiscall *create_sprite_list)(RGE_Moving_Object *);
  BVector *(__thiscall *position)(RGE_Moving_Object *, BVector *);
  BPathData *(__thiscall *getPathData)(RGE_Moving_Object *);
  int (__thiscall *actionType)(RGE_Moving_Object *);
  int (__thiscall *hasActionOfType)(RGE_Moving_Object *, int);
  int (__thiscall *gbg_hasActionOfType2)(RGE_Moving_Object *, int);
  int (__thiscall *addMove)(RGE_Moving_Object *, int, float, int, int, int);
  int (__thiscall *addCurrentPath)(RGE_Moving_Object *, BPath *, int, float, int);
  int (__thiscall *addFuturePath)(RGE_Moving_Object *, BPath *, int, float, int);
  void (__thiscall *stopAllMovement)(RGE_Moving_Object *);
  void (__thiscall *setOrientation)(RGE_Moving_Object *, BVector *, BVector *);
  BVector *(__thiscall *velocity)(RGE_Moving_Object *, BVector *);
  void (__thiscall *setVelocity)(RGE_Moving_Object *, BVector *);
  BVector *(__thiscall *acceleration)(RGE_Moving_Object *, BVector *);
  void (__thiscall *setAcceleration)(RGE_Moving_Object *, BVector *);
  float (__thiscall *forwardVelocity)(RGE_Moving_Object *);
  void (__thiscall *setForwardVelocity)(RGE_Moving_Object *, float);
  float (__thiscall *forwardAcceleration)(RGE_Moving_Object *);
  void (__thiscall *setForwardAcceleration)(RGE_Moving_Object *, float);
  void (__thiscall *moveForward)(RGE_Moving_Object *, float);
  void (__thiscall *setPosition)(RGE_Moving_Object *, BVector *);
  void (__thiscall *yaw)(RGE_Moving_Object *, float);
  int (__thiscall *isMoving)(RGE_Moving_Object *);
  void (__thiscall *stopMoving)(RGE_Moving_Object *);
  float (__thiscall *calculateFutureVelocity)(RGE_Moving_Object *, float, float, float, BVector *);
  unsigned int (__thiscall *lastMoveTime)(RGE_Moving_Object *);
  void (__thiscall *pauseMovement)(RGE_Moving_Object *, float);
  int (__thiscall *movementPriority)(RGE_Moving_Object *);
  int (__thiscall *intelligentMovementUpdate)(RGE_Moving_Object *);
  float (__thiscall *calculateMaximumSpeed)(RGE_Moving_Object *, int);
  int (__thiscall *calculateForward)(RGE_Moving_Object *, BVector *, BVector *, BVector *);
  float (__thiscall *calculateYawAngle)(RGE_Moving_Object *, BVector *, BVector *, float, int *);
  int (__thiscall *calculateReachedPoint)(RGE_Moving_Object *, BVector *, BVector *, BVector *);
  float (__thiscall *calculateTurnRadius)(RGE_Moving_Object *);
  int (__thiscall *checkAcceleration)(RGE_Moving_Object *, BVector *, int, int);
  BVector *(__thiscall *straightProjectedPosition)(RGE_Moving_Object *, BVector *, BVector *, float);
  int (__thiscall *onPatrol)(RGE_Moving_Object *);
  BVector *(__thiscall *orientationForward)(RGE_Moving_Object *, BVector *);
  int (__thiscall *setRunSprite)(RGE_Moving_Object *);
  int (__thiscall *setMoveSprite)(RGE_Moving_Object *);
  int (__thiscall *setFidgetSprite)(RGE_Moving_Object *);
  int (__thiscall *getGateLocked)(RGE_Moving_Object *);
  void (__thiscall *setGateLocked)(RGE_Moving_Object *, int);
  int (__thiscall *isGateOpenable)(RGE_Moving_Object *, int);
  int (__thiscall *getLinkedChild)(RGE_Moving_Object *, int);
  int (__thiscall *get_next_selected_group)(RGE_Moving_Object *, int);
  __int16 (__thiscall *get_Selected_Groups)(RGE_Moving_Object *);
  void (__thiscall *set_Selected_Groups)(RGE_Moving_Object *, __int16);
  int (__thiscall *get_num_Selected_groups)(RGE_Moving_Object *);
  int (__thiscall *setup_3)(RGE_Moving_Object *, RGE_Master_Animated_Object *, RGE_Player *, float, float, float);
  void (__thiscall *stop_moving)(RGE_Moving_Object *);
  unsigned __int8 (__thiscall *turn_towards)(RGE_Moving_Object *, RGE_Static_Object *, float, float);
  void (__thiscall *set_angle)(RGE_Moving_Object *);
  int (__thiscall *canLinePath_4)(RGE_Moving_Object *, int, int, int, int, float);
  int (__thiscall *canLinePath_3)(RGE_Moving_Object *, XYPoint *, XYPoint *, float, XYPoint *);
  int (__thiscall *setup_4)(RGE_Moving_Object *, RGE_Master_Moving_Object *, RGE_Player *, float, float, float);
  int (__thiscall *addMove_2)(RGE_Moving_Object *, int, float, float, float, float, int, int, int);
};
#pragma pack(pop)

/* 425 */
#pragma pack(push, 8)
struct BFormationSlot
{
  int mUnitID;
  BVector mOffset;
  BVector mDesiredTransformPosition;
  BVector mTransformPosition;
  unsigned int mTime;
  int mState;
  int mDepth;
  int mPositionFilled;
  int mDesiredCategory;
  int mDesiredSubCategory;
  int mActive;
  int mPositionTransformed;
};
#pragma pack(pop)

/* 424 */
#pragma pack(push, 8)
struct BFormationLine
{
  int mWidth;
  int mDepth;
  int *mLineIndices;
  float mAttackRange;
  float mDistanceBack;
};
#pragma pack(pop)

/* 153 */
#pragma pack(push, 1)
struct TRIBE_Command_Give_Attribute
{
};
#pragma pack(pop)

/* 852 */
typedef int TRIBE_Trigger_Condition__Conditions;

/* 290 */
#pragma pack(push, 8)
struct TRIBE_Trigger_Condition
{
  unsigned __int8 **track_valid_info;
  TRIBE_Trigger_Condition__Conditions condition;
  int id;
  int values[16];
};
#pragma pack(pop)

/* 851 */
typedef int TRIBE_Trigger_Effect__Effects;

/* 277 */
#pragma pack(push, 8)
struct TRIBE_Trigger_Effect
{
  unsigned __int8 **track_valid_info;
  TRIBE_Trigger_Effect__Effects effect;
  int id;
  int values[23];
  int *objects;
  char *chat_text;
  char *wave_file;
};
#pragma pack(pop)

/* 242 */
#pragma pack(push, 8)
struct TInputPanel
{
  TInputPanelVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  TTextPanel__TextNode *list;
  __int16 num_lines;
  __int16 draw_lines;
  __int16 top_line;
  __int16 bot_line;
  __int16 cur_line;
  __int16 cur_col;
  HFONT font[4];
  int font_wid;
  int font_hgt;
  TTextPanel__Alignment vert_align;
  TTextPanel__Alignment horz_align;
  TTextPanel__Alignment horz_align2;
  int word_wrap;
  TTextPanel__Style text_style;
  TTextPanel__Style highlight_style;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int highlightTextColor1;
  unsigned int highlightTextColor2;
  TScrollBarPanel *scbar_panel;
  int auto_scbar;
  __int16 fixed_len;
  int text_wid;
  int text_hgt;
  TShape *back_pic;
  __int16 back_pic_wid;
  __int16 back_pic_hgt;
  TTextPanel__BackType fill_back;
  unsigned __int8 back_color;
  unsigned __int8 progress_bar_color;
  int progress_bar_width;
  int progress_bar_current;
  int outline;
  unsigned __int8 outline_color;
  int sorted;
  int second_column_pos;
  int full_width;
  int scbar_width;
  int scbar_active;
  int bevel_type;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  HRGN clip_rgn2;
  int border_size;
  int spacer_size;
  int formatted_text;
  int use_large_font_for_wordwrap;
  unsigned __int8 caret_color;
  unsigned int caret_interval;
  unsigned int caret_last_time;
  int draw_caret;
  TDigital *overLengthSound;
  TInputPanel__FormatType format_type;
  char *input_buffer;
  char *input_buffer1;
  char *input_buffer2;
  __int16 input_len;
  __int16 max_len;
  int insert_mode;
  __int16 input_pos;
};
#pragma pack(pop)

/* 228 */
#pragma pack(push, 8)
struct TListPanel
{
  TListPanelVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  TTextPanel__TextNode *list;
  __int16 num_lines;
  __int16 draw_lines;
  __int16 top_line;
  __int16 bot_line;
  __int16 cur_line;
  __int16 cur_col;
  HFONT font[4];
  int font_wid;
  int font_hgt;
  TTextPanel__Alignment vert_align;
  TTextPanel__Alignment horz_align;
  TTextPanel__Alignment horz_align2;
  int word_wrap;
  TTextPanel__Style text_style;
  TTextPanel__Style highlight_style;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int highlightTextColor1;
  unsigned int highlightTextColor2;
  TScrollBarPanel *scbar_panel;
  int auto_scbar;
  __int16 fixed_len;
  int text_wid;
  int text_hgt;
  TShape *back_pic;
  __int16 back_pic_wid;
  __int16 back_pic_hgt;
  TTextPanel__BackType fill_back;
  unsigned __int8 back_color;
  unsigned __int8 progress_bar_color;
  int progress_bar_width;
  int progress_bar_current;
  int outline;
  unsigned __int8 outline_color;
  int sorted;
  int second_column_pos;
  int full_width;
  int scbar_width;
  int scbar_active;
  int bevel_type;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  HRGN clip_rgn2;
  int border_size;
  int spacer_size;
  int formatted_text;
  int use_large_font_for_wordwrap;
  int auto_track;
  unsigned int mouse_scroll_last_time;
  unsigned int mouse_scroll_interval;
  int mouse_scroll_up;
  int mouse_scroll_down;
  int drawHighlightBar;
  int draw_sep;
  unsigned __int8 sep_color;
  int force_highlight;
  TTextPanel *rollover_text_panel;
};
#pragma pack(pop)

/* 246 */
#pragma pack(push, 8)
struct TVerticalSliderPanel
{
  TVerticalSliderPanelVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  TPanel *list_panel;
  int list_len;
  int one_step;
  int page_step;
  int list_num;
  TShape *button_pics;
  int back_frame;
  int up_frame;
  int down_frame;
  int tab_frame;
  int arrowSize;
  int tabSize;
  int tab_y;
  int tab_min_y;
  int tab_max_y;
  int tab_mouse_y;
  int tab_x;
  int tab_min_x;
  int tab_max_x;
  int tab_mouse_x;
  unsigned __int8 item_down;
  int item_is_down;
  int item_x;
  int item_y;
  unsigned __int8 item_mode;
  unsigned int item_last_time;
  unsigned int item_hold_interval;
  unsigned int item_down_interval;
  RECT up_rect;
  RECT down_rect;
  RECT tab_rect;
  RECT top_rect;
  RECT bottom_rect;
  TScrollBarPanel__Orientation orientationValue;
  int bevel_type;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned __int8 TScrollBarPanel_gap[2];
  int drawBox;
  int spineWidth;
};
#pragma pack(pop)

/* 247 */
#pragma pack(push, 8)
struct THorizontalSliderPanel
{
  THorizontalSliderPanelVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  TPanel *list_panel;
  int list_len;
  int one_step;
  int page_step;
  int list_num;
  TShape *button_pics;
  int back_frame;
  int up_frame;
  int down_frame;
  int tab_frame;
  int arrowSize;
  int tabSize;
  int tab_y;
  int tab_min_y;
  int tab_max_y;
  int tab_mouse_y;
  int tab_x;
  int tab_min_x;
  int tab_max_x;
  int tab_mouse_x;
  unsigned __int8 item_down;
  int item_is_down;
  int item_x;
  int item_y;
  unsigned __int8 item_mode;
  unsigned int item_last_time;
  unsigned int item_hold_interval;
  unsigned int item_down_interval;
  RECT up_rect;
  RECT down_rect;
  RECT tab_rect;
  RECT top_rect;
  RECT bottom_rect;
  TScrollBarPanel__Orientation orientationValue;
  int bevel_type;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned __int8 TScrollBarPanel_gap[2];
  int drawBox;
  int spineWidth;
};
#pragma pack(pop)

/* 928 */
typedef TTextPanel__Style Time_Line_Panel__Style;

/* 249 */
#pragma pack(push, 8)
struct Time_Line_Panel
{
  Time_Line_PanelVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  HFONT axis_font;
  int axis_font_wid;
  int axis_font_hgt;
  HFONT body_font;
  int body_font_wid;
  int body_font_hgt;
  HFONT icon_font;
  int icon_font_wid;
  int icon_font_hgt;
  HFONT legend_font;
  int legend_font_wid;
  int legend_font_hgt;
  Time_Line_Panel__Style text_style;
  unsigned int text_color_white;
  unsigned int text_color_black;
  unsigned int text_color_yellow;
  unsigned __int8 black_color;
  unsigned __int8 white_color;
  unsigned __int8 grey_color;
  unsigned int axis_text_color;
  unsigned int icon_text_color;
  unsigned int body_text_color;
  unsigned int legend_text_color;
  TShape *background_pic;
  __int16 background_pic_wid;
  __int16 background_pic_hgt;
  TShape *special_events_pic;
  __int16 special_events_pic_wid;
  __int16 special_events_pic_hgt;
  TShape *player_banner_pic;
  __int16 banner_pic_wid;
  __int16 banner_pic_hgt;
  int fill_back;
  unsigned __int8 back_color;
  int outline;
  unsigned __int8 outline_color;
  int sorted;
  int bevel_type;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  int X_start_line_pos;
  int Y_start_line_pos;
  int X_line_max_width;
  int Y_line_max_length;
  int X_axis_length;
  int Y_axis_length;
  float bar_thickness;
  int pop_reading_rate;
  int num_entries_page;
  int max_num_history_entries;
  int max_world_pop;
  int max_pop_time_slice;
  unsigned __int8 graph_type;
  int timeline_flag;
  int seperate_pop_flag;
  int number_of_players;
  int max_number_slices;
  int total_local_time_slices_to_drop;
  float total_local_time_slices_to_drop_rate;
  int max_number_slices_per_player;
  int number_time_slice_data;
  Player_Time_Slice_Data **players_time_slice_data;
  int number_time_slice_special_events;
  Time_Slice_Special_Event **time_slice_special_events;
  TTextPanel *legend_entry_text1[10];
  TTextPanel *legend_entry_text2[10];
  TTextPanel *civ_name_text[8];
  TTextPanel *player_name_text[8];
};
#pragma pack(pop)

/* 633 */
#pragma pack(push, 8)
struct TPanelVtbl
{
  void *(__thiscall *__vecDelDtor)(TPanel *, unsigned int);
  int (__thiscall *setup)(TPanel *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TPanel *, RECT);
  void (__thiscall *set_rect_1)(TPanel *, int, int, int, int);
  void (__thiscall *set_color)(TPanel *, unsigned __int8);
  void (__thiscall *set_active)(TPanel *, int);
  void (__thiscall *unknown1)(TPanel *);
  void (__thiscall *unknown2)(TPanel *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TPanel *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TPanel *, int);
  void (__thiscall *set_fixed_position)(TPanel *, int, int, int, int);
  void (__thiscall *set_redraw)(TPanel *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TPanel *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TPanel *, int);
  void (__thiscall *draw_finish)(TPanel *);
  void (__thiscall *draw)(TPanel *);
  void (__thiscall *draw_rect)(TPanel *, RECT *);
  void (__thiscall *draw_offset)(TPanel *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TPanel *, RECT *);
  void (__thiscall *draw_offset2)(TPanel *, int, int, RECT *);
  void (__thiscall *paint)(TPanel *);
  int (__thiscall *wnd_proc)(TPanel *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TPanel *);
  int (__thiscall *handle_size)(TPanel *, int, int);
  int (__thiscall *handle_paint)(TPanel *);
  int (__thiscall *handle_key_down)(TPanel *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TPanel *, int, __int16);
  int (__thiscall *handle_command)(TPanel *, unsigned int, int);
  int (__thiscall *handle_user_command)(TPanel *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TPanel *, unsigned int, int);
  int (__thiscall *handle_scroll)(TPanel *, int, int);
  int (__thiscall *handle_mouse_down)(TPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TPanel *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TPanel *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TPanel *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TPanel *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TPanel *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TPanel *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TPanel *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TPanel *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TPanel *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TPanel *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TPanel *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TPanel *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TPanel *, int, int, int, int);
  int (__thiscall *key_down_action)(TPanel *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TPanel *, int, __int16);
  int (__thiscall *action)(TPanel *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TPanel *, RECT *);
  int (__thiscall *is_inside)(TPanel *, int, int);
  void (__thiscall *set_focus)(TPanel *, int);
  void (__thiscall *set_tab_order_2)(TPanel *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TPanel *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TPanel *);
  unsigned __int8 (__thiscall *get_help_info)(TPanel *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TPanel *);
  int (__thiscall *restart_sound_system)(TPanel *);
  void (__thiscall *take_snapshot)(TPanel *);
  void (__thiscall *handle_reactivate)(TPanel *);
  int (__thiscall *pointing_at)(TPanel *, int, int, int *, int *, int *, int *, char *, int);
};
#pragma pack(pop)

/* 641 */
#pragma pack(push, 8)
struct TTextPanelVtbl
{
  void *(__thiscall *__vecDelDtor)(TTextPanel *, unsigned int);
  int (__thiscall *setup)(TTextPanel *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TTextPanel *, RECT);
  void (__thiscall *set_rect_1)(TTextPanel *, int, int, int, int);
  void (__thiscall *set_color)(TTextPanel *, unsigned __int8);
  void (__thiscall *set_active)(TTextPanel *, int);
  void (__thiscall *unknown1)(TTextPanel *);
  void (__thiscall *unknown2)(TTextPanel *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TTextPanel *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TTextPanel *, int);
  void (__thiscall *set_fixed_position)(TTextPanel *, int, int, int, int);
  void (__thiscall *set_redraw)(TTextPanel *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TTextPanel *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TTextPanel *, int);
  void (__thiscall *draw_finish)(TTextPanel *);
  void (__thiscall *draw)(TTextPanel *);
  void (__thiscall *draw_rect)(TTextPanel *, RECT *);
  void (__thiscall *draw_offset)(TTextPanel *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TTextPanel *, RECT *);
  void (__thiscall *draw_offset2)(TTextPanel *, int, int, RECT *);
  void (__thiscall *paint)(TTextPanel *);
  int (__thiscall *wnd_proc)(TTextPanel *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TTextPanel *);
  int (__thiscall *handle_size)(TTextPanel *, int, int);
  int (__thiscall *handle_paint)(TTextPanel *);
  int (__thiscall *handle_key_down)(TTextPanel *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TTextPanel *, int, __int16);
  int (__thiscall *handle_command)(TTextPanel *, unsigned int, int);
  int (__thiscall *handle_user_command)(TTextPanel *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TTextPanel *, unsigned int, int);
  int (__thiscall *handle_scroll)(TTextPanel *, int, int);
  int (__thiscall *handle_mouse_down)(TTextPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TTextPanel *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TTextPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TTextPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TTextPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TTextPanel *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TTextPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TTextPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TTextPanel *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TTextPanel *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TTextPanel *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TTextPanel *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TTextPanel *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TTextPanel *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TTextPanel *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TTextPanel *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TTextPanel *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TTextPanel *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TTextPanel *, int, int, int, int);
  int (__thiscall *key_down_action)(TTextPanel *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TTextPanel *, int, __int16);
  int (__thiscall *action)(TTextPanel *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TTextPanel *, RECT *);
  int (__thiscall *is_inside)(TTextPanel *, int, int);
  void (__thiscall *set_focus)(TTextPanel *, int);
  void (__thiscall *set_tab_order_2)(TTextPanel *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TTextPanel *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TTextPanel *);
  unsigned __int8 (__thiscall *get_help_info)(TTextPanel *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TTextPanel *);
  int (__thiscall *restart_sound_system)(TTextPanel *);
  void (__thiscall *take_snapshot)(TTextPanel *);
  void (__thiscall *handle_reactivate)(TTextPanel *);
  int (__thiscall *pointing_at)(TTextPanel *, int, int, int *, int *, int *, int *, char *, int);
  void (__thiscall *set_text)(TTextPanel *, char **, __int16);
  void (__thiscall *set_text2)(TTextPanel *, int);
  void (__thiscall *set_text3)(TTextPanel *, const char *, TTextPanel__FontChangeNode *);
  void (__thiscall *set_text_parsed)(TTextPanel *, char **, __int16, int, int);
  void (__thiscall *set_text_parsed2)(TTextPanel *, int, int, int);
  void (__thiscall *set_text_parsed3)(TTextPanel *, const char *, int, int);
  void (__thiscall *set_bevel_info)(TTextPanel *, int, int, int, int, int, int, int);
  void (__thiscall *set_bevel_type)(TTextPanel *, int);
  void (__thiscall *draw_line)(TTextPanel *, HDC, __int16, __int16, unsigned __int8);
  int (__thiscall *insert_line)(TTextPanel *, int, char *, char *, int, TTextPanel__FontChangeNode *);
  char *(__thiscall *get_text)(TTextPanel *, int);
  void (__thiscall *free_text)(TTextPanel *);
};
#pragma pack(pop)

/* 640 */
#pragma pack(push, 8)
struct TTextPanel__TextNode
{
  char *text;
  char *text2;
  int id;
  TTextPanel__FontChangeNode *fontChange;
  unsigned __int8 overide_default_color_flag;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int highlightTextColor1;
  unsigned int highlightTextColor2;
  unsigned __int8 disabled;
  int rollover_string_id;
  TTextPanel__TextNode *next_node;
};
#pragma pack(pop)

/* 816 */
#pragma pack(push, 8)
struct TButtonPanelVtbl
{
  void *(__thiscall *__vecDelDtor)(TButtonPanel *, unsigned int);
  int (__thiscall *setup)(TButtonPanel *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TButtonPanel *, RECT);
  void (__thiscall *set_rect_1)(TButtonPanel *, int, int, int, int);
  void (__thiscall *set_color)(TButtonPanel *, unsigned __int8);
  void (__thiscall *set_active)(TButtonPanel *, int);
  void (__thiscall *unknown1)(TButtonPanel *);
  void (__thiscall *unknown2)(TButtonPanel *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TButtonPanel *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TButtonPanel *, int);
  void (__thiscall *set_fixed_position)(TButtonPanel *, int, int, int, int);
  void (__thiscall *set_redraw)(TButtonPanel *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TButtonPanel *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TButtonPanel *, int);
  void (__thiscall *draw_finish)(TButtonPanel *);
  void (__thiscall *draw)(TButtonPanel *);
  void (__thiscall *draw_rect)(TButtonPanel *, RECT *);
  void (__thiscall *draw_offset)(TButtonPanel *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TButtonPanel *, RECT *);
  void (__thiscall *draw_offset2)(TButtonPanel *, int, int, RECT *);
  void (__thiscall *paint)(TButtonPanel *);
  int (__thiscall *wnd_proc)(TButtonPanel *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TButtonPanel *);
  int (__thiscall *handle_size)(TButtonPanel *, int, int);
  int (__thiscall *handle_paint)(TButtonPanel *);
  int (__thiscall *handle_key_down)(TButtonPanel *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TButtonPanel *, int, __int16);
  int (__thiscall *handle_command)(TButtonPanel *, unsigned int, int);
  int (__thiscall *handle_user_command)(TButtonPanel *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TButtonPanel *, unsigned int, int);
  int (__thiscall *handle_scroll)(TButtonPanel *, int, int);
  int (__thiscall *handle_mouse_down)(TButtonPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TButtonPanel *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TButtonPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TButtonPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TButtonPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TButtonPanel *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TButtonPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TButtonPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TButtonPanel *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TButtonPanel *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TButtonPanel *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TButtonPanel *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TButtonPanel *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TButtonPanel *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TButtonPanel *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TButtonPanel *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TButtonPanel *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TButtonPanel *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TButtonPanel *, int, int, int, int);
  int (__thiscall *key_down_action)(TButtonPanel *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TButtonPanel *, int, __int16);
  int (__thiscall *action)(TButtonPanel *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TButtonPanel *, RECT *);
  int (__thiscall *is_inside)(TButtonPanel *, int, int);
  void (__thiscall *set_focus)(TButtonPanel *, int);
  void (__thiscall *set_tab_order_2)(TButtonPanel *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TButtonPanel *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TButtonPanel *);
  unsigned __int8 (__thiscall *get_help_info)(TButtonPanel *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TButtonPanel *);
  int (__thiscall *restart_sound_system)(TButtonPanel *);
  void (__thiscall *take_snapshot)(TButtonPanel *);
  void (__thiscall *handle_reactivate)(TButtonPanel *);
  int (__thiscall *pointing_at)(TButtonPanel *, int, int, int *, int *, int *, int *, char *, int);
  void (__thiscall *set_state)(TButtonPanel *, __int16);
  int (__thiscall *hit_button)(TButtonPanel *, int, int);
};
#pragma pack(pop)

/* 880 */
#pragma pack(push, 8)
struct TScrollBarPanelVtbl
{
  void *(__thiscall *__vecDelDtor)(TScrollBarPanel *, unsigned int);
  int (__thiscall *setup)(TScrollBarPanel *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TScrollBarPanel *, RECT);
  void (__thiscall *set_rect_1)(TScrollBarPanel *, int, int, int, int);
  void (__thiscall *set_color)(TScrollBarPanel *, unsigned __int8);
  void (__thiscall *set_active)(TScrollBarPanel *, int);
  void (__thiscall *unknown1)(TScrollBarPanel *);
  void (__thiscall *unknown2)(TScrollBarPanel *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TScrollBarPanel *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TScrollBarPanel *, int);
  void (__thiscall *set_fixed_position)(TScrollBarPanel *, int, int, int, int);
  void (__thiscall *set_redraw)(TScrollBarPanel *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TScrollBarPanel *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TScrollBarPanel *, int);
  void (__thiscall *draw_finish)(TScrollBarPanel *);
  void (__thiscall *draw)(TScrollBarPanel *);
  void (__thiscall *draw_rect)(TScrollBarPanel *, RECT *);
  void (__thiscall *draw_offset)(TScrollBarPanel *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TScrollBarPanel *, RECT *);
  void (__thiscall *draw_offset2)(TScrollBarPanel *, int, int, RECT *);
  void (__thiscall *paint)(TScrollBarPanel *);
  int (__thiscall *wnd_proc)(TScrollBarPanel *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TScrollBarPanel *);
  int (__thiscall *handle_size)(TScrollBarPanel *, int, int);
  int (__thiscall *handle_paint)(TScrollBarPanel *);
  int (__thiscall *handle_key_down)(TScrollBarPanel *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TScrollBarPanel *, int, __int16);
  int (__thiscall *handle_command)(TScrollBarPanel *, unsigned int, int);
  int (__thiscall *handle_user_command)(TScrollBarPanel *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TScrollBarPanel *, unsigned int, int);
  int (__thiscall *handle_scroll)(TScrollBarPanel *, int, int);
  int (__thiscall *handle_mouse_down)(TScrollBarPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TScrollBarPanel *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TScrollBarPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TScrollBarPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TScrollBarPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TScrollBarPanel *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TScrollBarPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TScrollBarPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TScrollBarPanel *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TScrollBarPanel *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TScrollBarPanel *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TScrollBarPanel *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TScrollBarPanel *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TScrollBarPanel *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TScrollBarPanel *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TScrollBarPanel *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TScrollBarPanel *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TScrollBarPanel *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TScrollBarPanel *, int, int, int, int);
  int (__thiscall *key_down_action)(TScrollBarPanel *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TScrollBarPanel *, int, __int16);
  int (__thiscall *action)(TScrollBarPanel *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TScrollBarPanel *, RECT *);
  int (__thiscall *is_inside)(TScrollBarPanel *, int, int);
  void (__thiscall *set_focus)(TScrollBarPanel *, int);
  void (__thiscall *set_tab_order_2)(TScrollBarPanel *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TScrollBarPanel *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TScrollBarPanel *);
  unsigned __int8 (__thiscall *get_help_info)(TScrollBarPanel *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TScrollBarPanel *);
  int (__thiscall *restart_sound_system)(TScrollBarPanel *);
  void (__thiscall *take_snapshot)(TScrollBarPanel *);
  void (__thiscall *handle_reactivate)(TScrollBarPanel *);
  int (__thiscall *pointing_at)(TScrollBarPanel *, int, int, int *, int *, int *, int *, char *, int);
};
#pragma pack(pop)

/* 817 */
#pragma pack(push, 8)
struct TEditPanelVtbl
{
  void *(__thiscall *__vecDelDtor)(TEditPanel *, unsigned int);
  int (__thiscall *setup)(TEditPanel *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TEditPanel *, RECT);
  void (__thiscall *set_rect_1)(TEditPanel *, int, int, int, int);
  void (__thiscall *set_color)(TEditPanel *, unsigned __int8);
  void (__thiscall *set_active)(TEditPanel *, int);
  void (__thiscall *unknown1)(TEditPanel *);
  void (__thiscall *unknown2)(TEditPanel *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TEditPanel *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TEditPanel *, int);
  void (__thiscall *set_fixed_position)(TEditPanel *, int, int, int, int);
  void (__thiscall *set_redraw)(TEditPanel *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TEditPanel *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TEditPanel *, int);
  void (__thiscall *draw_finish)(TEditPanel *);
  void (__thiscall *draw)(TEditPanel *);
  void (__thiscall *draw_rect)(TEditPanel *, RECT *);
  void (__thiscall *draw_offset)(TEditPanel *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TEditPanel *, RECT *);
  void (__thiscall *draw_offset2)(TEditPanel *, int, int, RECT *);
  void (__thiscall *paint)(TEditPanel *);
  int (__thiscall *wnd_proc)(TEditPanel *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TEditPanel *);
  int (__thiscall *handle_size)(TEditPanel *, int, int);
  int (__thiscall *handle_paint)(TEditPanel *);
  int (__thiscall *handle_key_down)(TEditPanel *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TEditPanel *, int, __int16);
  int (__thiscall *handle_command)(TEditPanel *, unsigned int, int);
  int (__thiscall *handle_user_command)(TEditPanel *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TEditPanel *, unsigned int, int);
  int (__thiscall *handle_scroll)(TEditPanel *, int, int);
  int (__thiscall *handle_mouse_down)(TEditPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TEditPanel *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TEditPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TEditPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TEditPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TEditPanel *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TEditPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TEditPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TEditPanel *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TEditPanel *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TEditPanel *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TEditPanel *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TEditPanel *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TEditPanel *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TEditPanel *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TEditPanel *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TEditPanel *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TEditPanel *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TEditPanel *, int, int, int, int);
  int (__thiscall *key_down_action)(TEditPanel *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TEditPanel *, int, __int16);
  int (__thiscall *action)(TEditPanel *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TEditPanel *, RECT *);
  int (__thiscall *is_inside)(TEditPanel *, int, int);
  void (__thiscall *set_focus)(TEditPanel *, int);
  void (__thiscall *set_tab_order_2)(TEditPanel *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TEditPanel *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TEditPanel *);
  unsigned __int8 (__thiscall *get_help_info)(TEditPanel *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TEditPanel *);
  int (__thiscall *restart_sound_system)(TEditPanel *);
  void (__thiscall *take_snapshot)(TEditPanel *);
  void (__thiscall *handle_reactivate)(TEditPanel *);
  int (__thiscall *pointing_at)(TEditPanel *, int, int, int *, int *, int *, int *, char *, int);
};
#pragma pack(pop)

/* 993 */
#pragma pack(push, 8)
struct TRIBE_Diamond_Map_ViewVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Diamond_Map_View *, unsigned int);
  int (__thiscall *setup)(TRIBE_Diamond_Map_View *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TRIBE_Diamond_Map_View *, RECT);
  void (__thiscall *set_rect_1)(TRIBE_Diamond_Map_View *, int, int, int, int);
  void (__thiscall *set_color)(TRIBE_Diamond_Map_View *, unsigned __int8);
  void (__thiscall *set_active)(TRIBE_Diamond_Map_View *, int);
  void (__thiscall *unknown1)(TRIBE_Diamond_Map_View *);
  void (__thiscall *unknown2)(TRIBE_Diamond_Map_View *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TRIBE_Diamond_Map_View *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TRIBE_Diamond_Map_View *, int);
  void (__thiscall *set_fixed_position)(TRIBE_Diamond_Map_View *, int, int, int, int);
  void (__thiscall *set_redraw)(TRIBE_Diamond_Map_View *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TRIBE_Diamond_Map_View *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TRIBE_Diamond_Map_View *, int);
  void (__thiscall *draw_finish)(TRIBE_Diamond_Map_View *);
  void (__thiscall *draw)(TRIBE_Diamond_Map_View *);
  void (__thiscall *draw_rect)(TRIBE_Diamond_Map_View *, RECT *);
  void (__thiscall *draw_offset)(TRIBE_Diamond_Map_View *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TRIBE_Diamond_Map_View *, RECT *);
  void (__thiscall *draw_offset2)(TRIBE_Diamond_Map_View *, int, int, RECT *);
  void (__thiscall *paint)(TRIBE_Diamond_Map_View *);
  int (__thiscall *wnd_proc)(TRIBE_Diamond_Map_View *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TRIBE_Diamond_Map_View *);
  int (__thiscall *handle_size)(TRIBE_Diamond_Map_View *, int, int);
  int (__thiscall *handle_paint)(TRIBE_Diamond_Map_View *);
  int (__thiscall *handle_key_down)(TRIBE_Diamond_Map_View *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TRIBE_Diamond_Map_View *, int, __int16);
  int (__thiscall *handle_command)(TRIBE_Diamond_Map_View *, unsigned int, int);
  int (__thiscall *handle_user_command)(TRIBE_Diamond_Map_View *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TRIBE_Diamond_Map_View *, unsigned int, int);
  int (__thiscall *handle_scroll)(TRIBE_Diamond_Map_View *, int, int);
  int (__thiscall *handle_mouse_down)(TRIBE_Diamond_Map_View *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TRIBE_Diamond_Map_View *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TRIBE_Diamond_Map_View *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TRIBE_Diamond_Map_View *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TRIBE_Diamond_Map_View *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TRIBE_Diamond_Map_View *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TRIBE_Diamond_Map_View *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TRIBE_Diamond_Map_View *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TRIBE_Diamond_Map_View *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TRIBE_Diamond_Map_View *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TRIBE_Diamond_Map_View *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TRIBE_Diamond_Map_View *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TRIBE_Diamond_Map_View *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TRIBE_Diamond_Map_View *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TRIBE_Diamond_Map_View *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TRIBE_Diamond_Map_View *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TRIBE_Diamond_Map_View *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TRIBE_Diamond_Map_View *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TRIBE_Diamond_Map_View *, int, int, int, int);
  int (__thiscall *key_down_action)(TRIBE_Diamond_Map_View *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TRIBE_Diamond_Map_View *, int, __int16);
  int (__thiscall *action)(TRIBE_Diamond_Map_View *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TRIBE_Diamond_Map_View *, RECT *);
  int (__thiscall *is_inside)(TRIBE_Diamond_Map_View *, int, int);
  void (__thiscall *set_focus)(TRIBE_Diamond_Map_View *, int);
  void (__thiscall *set_tab_order_2)(TRIBE_Diamond_Map_View *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TRIBE_Diamond_Map_View *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TRIBE_Diamond_Map_View *);
  unsigned __int8 (__thiscall *get_help_info)(TRIBE_Diamond_Map_View *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TRIBE_Diamond_Map_View *);
  int (__thiscall *restart_sound_system)(TRIBE_Diamond_Map_View *);
  void (__thiscall *take_snapshot)(TRIBE_Diamond_Map_View *);
  void (__thiscall *handle_reactivate)(TRIBE_Diamond_Map_View *);
  int (__thiscall *pointing_at)(TRIBE_Diamond_Map_View *, int, int, int *, int *, int *, int *, char *, int);
  void (__thiscall *draw_tile)(TRIBE_Diamond_Map_View *, __int16, __int16, int, unsigned __int8);
  void (__thiscall *draw_selected_area)(TRIBE_Diamond_Map_View *);
  void (__thiscall *draw_objects)(TRIBE_Diamond_Map_View *);
  void (__thiscall *draw_visible_object)(TRIBE_Diamond_Map_View *, RGE_Static_Object *, unsigned __int8, unsigned __int8);
  void (__thiscall *draw_object)(TRIBE_Diamond_Map_View *, __int16, __int16, unsigned __int8, __int16, RGE_Static_Object *);
  void (__thiscall *draw_view_rect)(TRIBE_Diamond_Map_View *);
  int (__thiscall *command_make_do)(TRIBE_Diamond_Map_View *, int, int);
  int (__thiscall *command_make_move)(TRIBE_Diamond_Map_View *, int, int);
  int (__thiscall *command_make_work)(TRIBE_Diamond_Map_View *, int, int);
};
#pragma pack(pop)

/* 990 */
#pragma pack(push, 8)
struct RGE_Map_Image_Line
{
  __int16 tile_row;
  __int16 start_x;
  __int16 line_len;
};
#pragma pack(pop)

/* 991 */
#pragma pack(push, 8)
struct RGE_Map_Tile_Row
{
  __int16 image_line;
  unsigned __int8 draw;
  __int16 row_len;
  float col_step;
  float col_extra;
  __int16 map_col;
  __int16 map_row;
  __int16 draw_wid;
  float draw_step;
  __int16 num_tiles;
  float ratio;
};
#pragma pack(pop)

/* 897 */
#pragma pack(push, 8)
struct TRIBE_Panel_InvenVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Panel_Inven *, unsigned int);
  int (__thiscall *setup)(TRIBE_Panel_Inven *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TRIBE_Panel_Inven *, RECT);
  void (__thiscall *set_rect_1)(TRIBE_Panel_Inven *, int, int, int, int);
  void (__thiscall *set_color)(TRIBE_Panel_Inven *, unsigned __int8);
  void (__thiscall *set_active)(TRIBE_Panel_Inven *, int);
  void (__thiscall *unknown1)(TRIBE_Panel_Inven *);
  void (__thiscall *unknown2)(TRIBE_Panel_Inven *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TRIBE_Panel_Inven *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TRIBE_Panel_Inven *, int);
  void (__thiscall *set_fixed_position)(TRIBE_Panel_Inven *, int, int, int, int);
  void (__thiscall *set_redraw)(TRIBE_Panel_Inven *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TRIBE_Panel_Inven *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TRIBE_Panel_Inven *, int);
  void (__thiscall *draw_finish)(TRIBE_Panel_Inven *);
  void (__thiscall *draw)(TRIBE_Panel_Inven *);
  void (__thiscall *draw_rect)(TRIBE_Panel_Inven *, RECT *);
  void (__thiscall *draw_offset)(TRIBE_Panel_Inven *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TRIBE_Panel_Inven *, RECT *);
  void (__thiscall *draw_offset2)(TRIBE_Panel_Inven *, int, int, RECT *);
  void (__thiscall *paint)(TRIBE_Panel_Inven *);
  int (__thiscall *wnd_proc)(TRIBE_Panel_Inven *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TRIBE_Panel_Inven *);
  int (__thiscall *handle_size)(TRIBE_Panel_Inven *, int, int);
  int (__thiscall *handle_paint)(TRIBE_Panel_Inven *);
  int (__thiscall *handle_key_down)(TRIBE_Panel_Inven *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TRIBE_Panel_Inven *, int, __int16);
  int (__thiscall *handle_command)(TRIBE_Panel_Inven *, unsigned int, int);
  int (__thiscall *handle_user_command)(TRIBE_Panel_Inven *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TRIBE_Panel_Inven *, unsigned int, int);
  int (__thiscall *handle_scroll)(TRIBE_Panel_Inven *, int, int);
  int (__thiscall *handle_mouse_down)(TRIBE_Panel_Inven *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TRIBE_Panel_Inven *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TRIBE_Panel_Inven *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TRIBE_Panel_Inven *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TRIBE_Panel_Inven *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TRIBE_Panel_Inven *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TRIBE_Panel_Inven *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TRIBE_Panel_Inven *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TRIBE_Panel_Inven *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TRIBE_Panel_Inven *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TRIBE_Panel_Inven *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TRIBE_Panel_Inven *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TRIBE_Panel_Inven *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TRIBE_Panel_Inven *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TRIBE_Panel_Inven *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TRIBE_Panel_Inven *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TRIBE_Panel_Inven *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TRIBE_Panel_Inven *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TRIBE_Panel_Inven *, int, int, int, int);
  int (__thiscall *key_down_action)(TRIBE_Panel_Inven *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TRIBE_Panel_Inven *, int, __int16);
  int (__thiscall *action)(TRIBE_Panel_Inven *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TRIBE_Panel_Inven *, RECT *);
  int (__thiscall *is_inside)(TRIBE_Panel_Inven *, int, int);
  void (__thiscall *set_focus)(TRIBE_Panel_Inven *, int);
  void (__thiscall *set_tab_order_2)(TRIBE_Panel_Inven *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TRIBE_Panel_Inven *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TRIBE_Panel_Inven *);
  unsigned __int8 (__thiscall *get_help_info)(TRIBE_Panel_Inven *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TRIBE_Panel_Inven *);
  int (__thiscall *restart_sound_system)(TRIBE_Panel_Inven *);
  void (__thiscall *take_snapshot)(TRIBE_Panel_Inven *);
  void (__thiscall *handle_reactivate)(TRIBE_Panel_Inven *);
  int (__thiscall *pointing_at)(TRIBE_Panel_Inven *, int, int, int *, int *, int *, int *, char *, int);
};
#pragma pack(pop)

/* 894 */
#pragma pack(push, 8)
struct TRIBE_Panel_ButtonVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Panel_Button *, unsigned int);
  int (__thiscall *setup)(TRIBE_Panel_Button *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TRIBE_Panel_Button *, RECT);
  void (__thiscall *set_rect_1)(TRIBE_Panel_Button *, int, int, int, int);
  void (__thiscall *set_color)(TRIBE_Panel_Button *, unsigned __int8);
  void (__thiscall *set_active)(TRIBE_Panel_Button *, int);
  void (__thiscall *unknown1)(TRIBE_Panel_Button *);
  void (__thiscall *unknown2)(TRIBE_Panel_Button *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TRIBE_Panel_Button *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TRIBE_Panel_Button *, int);
  void (__thiscall *set_fixed_position)(TRIBE_Panel_Button *, int, int, int, int);
  void (__thiscall *set_redraw)(TRIBE_Panel_Button *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TRIBE_Panel_Button *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TRIBE_Panel_Button *, int);
  void (__thiscall *draw_finish)(TRIBE_Panel_Button *);
  void (__thiscall *draw)(TRIBE_Panel_Button *);
  void (__thiscall *draw_rect)(TRIBE_Panel_Button *, RECT *);
  void (__thiscall *draw_offset)(TRIBE_Panel_Button *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TRIBE_Panel_Button *, RECT *);
  void (__thiscall *draw_offset2)(TRIBE_Panel_Button *, int, int, RECT *);
  void (__thiscall *paint)(TRIBE_Panel_Button *);
  int (__thiscall *wnd_proc)(TRIBE_Panel_Button *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TRIBE_Panel_Button *);
  int (__thiscall *handle_size)(TRIBE_Panel_Button *, int, int);
  int (__thiscall *handle_paint)(TRIBE_Panel_Button *);
  int (__thiscall *handle_key_down)(TRIBE_Panel_Button *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TRIBE_Panel_Button *, int, __int16);
  int (__thiscall *handle_command)(TRIBE_Panel_Button *, unsigned int, int);
  int (__thiscall *handle_user_command)(TRIBE_Panel_Button *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TRIBE_Panel_Button *, unsigned int, int);
  int (__thiscall *handle_scroll)(TRIBE_Panel_Button *, int, int);
  int (__thiscall *handle_mouse_down)(TRIBE_Panel_Button *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TRIBE_Panel_Button *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TRIBE_Panel_Button *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TRIBE_Panel_Button *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TRIBE_Panel_Button *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TRIBE_Panel_Button *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TRIBE_Panel_Button *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TRIBE_Panel_Button *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TRIBE_Panel_Button *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TRIBE_Panel_Button *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TRIBE_Panel_Button *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TRIBE_Panel_Button *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TRIBE_Panel_Button *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TRIBE_Panel_Button *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TRIBE_Panel_Button *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TRIBE_Panel_Button *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TRIBE_Panel_Button *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TRIBE_Panel_Button *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TRIBE_Panel_Button *, int, int, int, int);
  int (__thiscall *key_down_action)(TRIBE_Panel_Button *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TRIBE_Panel_Button *, int, __int16);
  int (__thiscall *action)(TRIBE_Panel_Button *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TRIBE_Panel_Button *, RECT *);
  int (__thiscall *is_inside)(TRIBE_Panel_Button *, int, int);
  void (__thiscall *set_focus)(TRIBE_Panel_Button *, int);
  void (__thiscall *set_tab_order_2)(TRIBE_Panel_Button *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TRIBE_Panel_Button *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TRIBE_Panel_Button *);
  unsigned __int8 (__thiscall *get_help_info)(TRIBE_Panel_Button *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TRIBE_Panel_Button *);
  int (__thiscall *restart_sound_system)(TRIBE_Panel_Button *);
  void (__thiscall *take_snapshot)(TRIBE_Panel_Button *);
  void (__thiscall *handle_reactivate)(TRIBE_Panel_Button *);
  int (__thiscall *pointing_at)(TRIBE_Panel_Button *, int, int, int *, int *, int *, int *, char *, int);
  void (__thiscall *set_state)(TRIBE_Panel_Button *, __int16);
  int (__thiscall *hit_button)(TRIBE_Panel_Button *, int, int);
};
#pragma pack(pop)

/* 891 */
#pragma pack(push, 8)
struct TPicturePanelVtbl
{
  void *(__thiscall *__vecDelDtor)(TPicturePanel *, unsigned int);
  int (__thiscall *setup)(TPicturePanel *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TPicturePanel *, RECT);
  void (__thiscall *set_rect_1)(TPicturePanel *, int, int, int, int);
  void (__thiscall *set_color)(TPicturePanel *, unsigned __int8);
  void (__thiscall *set_active)(TPicturePanel *, int);
  void (__thiscall *unknown1)(TPicturePanel *);
  void (__thiscall *unknown2)(TPicturePanel *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TPicturePanel *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TPicturePanel *, int);
  void (__thiscall *set_fixed_position)(TPicturePanel *, int, int, int, int);
  void (__thiscall *set_redraw)(TPicturePanel *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TPicturePanel *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TPicturePanel *, int);
  void (__thiscall *draw_finish)(TPicturePanel *);
  void (__thiscall *draw)(TPicturePanel *);
  void (__thiscall *draw_rect)(TPicturePanel *, RECT *);
  void (__thiscall *draw_offset)(TPicturePanel *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TPicturePanel *, RECT *);
  void (__thiscall *draw_offset2)(TPicturePanel *, int, int, RECT *);
  void (__thiscall *paint)(TPicturePanel *);
  int (__thiscall *wnd_proc)(TPicturePanel *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TPicturePanel *);
  int (__thiscall *handle_size)(TPicturePanel *, int, int);
  int (__thiscall *handle_paint)(TPicturePanel *);
  int (__thiscall *handle_key_down)(TPicturePanel *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TPicturePanel *, int, __int16);
  int (__thiscall *handle_command)(TPicturePanel *, unsigned int, int);
  int (__thiscall *handle_user_command)(TPicturePanel *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TPicturePanel *, unsigned int, int);
  int (__thiscall *handle_scroll)(TPicturePanel *, int, int);
  int (__thiscall *handle_mouse_down)(TPicturePanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TPicturePanel *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TPicturePanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TPicturePanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TPicturePanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TPicturePanel *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TPicturePanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TPicturePanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TPicturePanel *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TPicturePanel *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TPicturePanel *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TPicturePanel *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TPicturePanel *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TPicturePanel *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TPicturePanel *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TPicturePanel *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TPicturePanel *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TPicturePanel *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TPicturePanel *, int, int, int, int);
  int (__thiscall *key_down_action)(TPicturePanel *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TPicturePanel *, int, __int16);
  int (__thiscall *action)(TPicturePanel *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TPicturePanel *, RECT *);
  int (__thiscall *is_inside)(TPicturePanel *, int, int);
  void (__thiscall *set_focus)(TPicturePanel *, int);
  void (__thiscall *set_tab_order_2)(TPicturePanel *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TPicturePanel *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TPicturePanel *);
  unsigned __int8 (__thiscall *get_help_info)(TPicturePanel *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TPicturePanel *);
  int (__thiscall *restart_sound_system)(TPicturePanel *);
  void (__thiscall *take_snapshot)(TPicturePanel *);
  void (__thiscall *handle_reactivate)(TPicturePanel *);
  int (__thiscall *pointing_at)(TPicturePanel *, int, int, int *, int *, int *, int *, char *, int);
};
#pragma pack(pop)

/* 818 */
#pragma pack(push, 8)
struct TDropDownPanelVtbl
{
  void *(__thiscall *__vecDelDtor)(TDropDownPanel *, unsigned int);
  int (__thiscall *setup)(TDropDownPanel *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TDropDownPanel *, RECT);
  void (__thiscall *set_rect_1)(TDropDownPanel *, int, int, int, int);
  void (__thiscall *set_color)(TDropDownPanel *, unsigned __int8);
  void (__thiscall *set_active)(TDropDownPanel *, int);
  void (__thiscall *unknown1)(TDropDownPanel *);
  void (__thiscall *unknown2)(TDropDownPanel *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TDropDownPanel *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TDropDownPanel *, int);
  void (__thiscall *set_fixed_position)(TDropDownPanel *, int, int, int, int);
  void (__thiscall *set_redraw)(TDropDownPanel *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TDropDownPanel *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TDropDownPanel *, int);
  void (__thiscall *draw_finish)(TDropDownPanel *);
  void (__thiscall *draw)(TDropDownPanel *);
  void (__thiscall *draw_rect)(TDropDownPanel *, RECT *);
  void (__thiscall *draw_offset)(TDropDownPanel *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TDropDownPanel *, RECT *);
  void (__thiscall *draw_offset2)(TDropDownPanel *, int, int, RECT *);
  void (__thiscall *paint)(TDropDownPanel *);
  int (__thiscall *wnd_proc)(TDropDownPanel *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TDropDownPanel *);
  int (__thiscall *handle_size)(TDropDownPanel *, int, int);
  int (__thiscall *handle_paint)(TDropDownPanel *);
  int (__thiscall *handle_key_down)(TDropDownPanel *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TDropDownPanel *, int, __int16);
  int (__thiscall *handle_command)(TDropDownPanel *, unsigned int, int);
  int (__thiscall *handle_user_command)(TDropDownPanel *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TDropDownPanel *, unsigned int, int);
  int (__thiscall *handle_scroll)(TDropDownPanel *, int, int);
  int (__thiscall *handle_mouse_down)(TDropDownPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TDropDownPanel *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TDropDownPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TDropDownPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TDropDownPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TDropDownPanel *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TDropDownPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TDropDownPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TDropDownPanel *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TDropDownPanel *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TDropDownPanel *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TDropDownPanel *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TDropDownPanel *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TDropDownPanel *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TDropDownPanel *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TDropDownPanel *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TDropDownPanel *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TDropDownPanel *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TDropDownPanel *, int, int, int, int);
  int (__thiscall *key_down_action)(TDropDownPanel *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TDropDownPanel *, int, __int16);
  int (__thiscall *action)(TDropDownPanel *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TDropDownPanel *, RECT *);
  int (__thiscall *is_inside)(TDropDownPanel *, int, int);
  void (__thiscall *set_focus)(TDropDownPanel *, int);
  void (__thiscall *set_tab_order_2)(TDropDownPanel *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TDropDownPanel *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TDropDownPanel *);
  unsigned __int8 (__thiscall *get_help_info)(TDropDownPanel *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TDropDownPanel *);
  int (__thiscall *restart_sound_system)(TDropDownPanel *);
  void (__thiscall *take_snapshot)(TDropDownPanel *);
  void (__thiscall *handle_reactivate)(TDropDownPanel *);
  int (__thiscall *pointing_at)(TDropDownPanel *, int, int, int *, int *, int *, int *, char *, int);
};
#pragma pack(pop)

/* 874 */
#pragma pack(push, 8)
struct TMessagePanelVtbl
{
  void *(__thiscall *__vecDelDtor)(TMessagePanel *, unsigned int);
  int (__thiscall *setup)(TMessagePanel *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TMessagePanel *, RECT);
  void (__thiscall *set_rect_1)(TMessagePanel *, int, int, int, int);
  void (__thiscall *set_color)(TMessagePanel *, unsigned __int8);
  void (__thiscall *set_active)(TMessagePanel *, int);
  void (__thiscall *unknown1)(TMessagePanel *);
  void (__thiscall *unknown2)(TMessagePanel *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TMessagePanel *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TMessagePanel *, int);
  void (__thiscall *set_fixed_position)(TMessagePanel *, int, int, int, int);
  void (__thiscall *set_redraw)(TMessagePanel *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TMessagePanel *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TMessagePanel *, int);
  void (__thiscall *draw_finish)(TMessagePanel *);
  void (__thiscall *draw)(TMessagePanel *);
  void (__thiscall *draw_rect)(TMessagePanel *, RECT *);
  void (__thiscall *draw_offset)(TMessagePanel *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TMessagePanel *, RECT *);
  void (__thiscall *draw_offset2)(TMessagePanel *, int, int, RECT *);
  void (__thiscall *paint)(TMessagePanel *);
  int (__thiscall *wnd_proc)(TMessagePanel *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TMessagePanel *);
  int (__thiscall *handle_size)(TMessagePanel *, int, int);
  int (__thiscall *handle_paint)(TMessagePanel *);
  int (__thiscall *handle_key_down)(TMessagePanel *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TMessagePanel *, int, __int16);
  int (__thiscall *handle_command)(TMessagePanel *, unsigned int, int);
  int (__thiscall *handle_user_command)(TMessagePanel *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TMessagePanel *, unsigned int, int);
  int (__thiscall *handle_scroll)(TMessagePanel *, int, int);
  int (__thiscall *handle_mouse_down)(TMessagePanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TMessagePanel *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TMessagePanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TMessagePanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TMessagePanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TMessagePanel *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TMessagePanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TMessagePanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TMessagePanel *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TMessagePanel *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TMessagePanel *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TMessagePanel *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TMessagePanel *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TMessagePanel *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TMessagePanel *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TMessagePanel *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TMessagePanel *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TMessagePanel *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TMessagePanel *, int, int, int, int);
  int (__thiscall *key_down_action)(TMessagePanel *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TMessagePanel *, int, __int16);
  int (__thiscall *action)(TMessagePanel *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TMessagePanel *, RECT *);
  int (__thiscall *is_inside)(TMessagePanel *, int, int);
  void (__thiscall *set_focus)(TMessagePanel *, int);
  void (__thiscall *set_tab_order_2)(TMessagePanel *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TMessagePanel *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TMessagePanel *);
  unsigned __int8 (__thiscall *get_help_info)(TMessagePanel *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TMessagePanel *);
  int (__thiscall *restart_sound_system)(TMessagePanel *);
  void (__thiscall *take_snapshot)(TMessagePanel *);
  void (__thiscall *handle_reactivate)(TMessagePanel *);
  int (__thiscall *pointing_at)(TMessagePanel *, int, int, int *, int *, int *, int *, char *, int);
  void (__thiscall *set_font)(TMessagePanel *, HFONT, int, int);
};
#pragma pack(pop)

/* 877 */
#pragma pack(push, 8)
struct Message_Node
{
  unsigned int queued_time;
  int message_type;
  char text[512];
  char wave_file[32];
  int notify_sound;
  int time;
  HFONT font;
  int font_wid;
  int font_hgt;
  unsigned __int8 font_color;
  unsigned __int8 back_color;
  Message_Node *next_node;
};
#pragma pack(pop)

/* 896 */
#pragma pack(push, 8)
struct TRIBE_Panel_TimeVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Panel_Time *, unsigned int);
  int (__thiscall *setup)(TRIBE_Panel_Time *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TRIBE_Panel_Time *, RECT);
  void (__thiscall *set_rect_1)(TRIBE_Panel_Time *, int, int, int, int);
  void (__thiscall *set_color)(TRIBE_Panel_Time *, unsigned __int8);
  void (__thiscall *set_active)(TRIBE_Panel_Time *, int);
  void (__thiscall *unknown1)(TRIBE_Panel_Time *);
  void (__thiscall *unknown2)(TRIBE_Panel_Time *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TRIBE_Panel_Time *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TRIBE_Panel_Time *, int);
  void (__thiscall *set_fixed_position)(TRIBE_Panel_Time *, int, int, int, int);
  void (__thiscall *set_redraw)(TRIBE_Panel_Time *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TRIBE_Panel_Time *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TRIBE_Panel_Time *, int);
  void (__thiscall *draw_finish)(TRIBE_Panel_Time *);
  void (__thiscall *draw)(TRIBE_Panel_Time *);
  void (__thiscall *draw_rect)(TRIBE_Panel_Time *, RECT *);
  void (__thiscall *draw_offset)(TRIBE_Panel_Time *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TRIBE_Panel_Time *, RECT *);
  void (__thiscall *draw_offset2)(TRIBE_Panel_Time *, int, int, RECT *);
  void (__thiscall *paint)(TRIBE_Panel_Time *);
  int (__thiscall *wnd_proc)(TRIBE_Panel_Time *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TRIBE_Panel_Time *);
  int (__thiscall *handle_size)(TRIBE_Panel_Time *, int, int);
  int (__thiscall *handle_paint)(TRIBE_Panel_Time *);
  int (__thiscall *handle_key_down)(TRIBE_Panel_Time *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TRIBE_Panel_Time *, int, __int16);
  int (__thiscall *handle_command)(TRIBE_Panel_Time *, unsigned int, int);
  int (__thiscall *handle_user_command)(TRIBE_Panel_Time *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TRIBE_Panel_Time *, unsigned int, int);
  int (__thiscall *handle_scroll)(TRIBE_Panel_Time *, int, int);
  int (__thiscall *handle_mouse_down)(TRIBE_Panel_Time *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TRIBE_Panel_Time *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TRIBE_Panel_Time *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TRIBE_Panel_Time *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TRIBE_Panel_Time *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TRIBE_Panel_Time *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TRIBE_Panel_Time *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TRIBE_Panel_Time *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TRIBE_Panel_Time *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TRIBE_Panel_Time *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TRIBE_Panel_Time *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TRIBE_Panel_Time *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TRIBE_Panel_Time *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TRIBE_Panel_Time *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TRIBE_Panel_Time *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TRIBE_Panel_Time *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TRIBE_Panel_Time *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TRIBE_Panel_Time *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TRIBE_Panel_Time *, int, int, int, int);
  int (__thiscall *key_down_action)(TRIBE_Panel_Time *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TRIBE_Panel_Time *, int, __int16);
  int (__thiscall *action)(TRIBE_Panel_Time *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TRIBE_Panel_Time *, RECT *);
  int (__thiscall *is_inside)(TRIBE_Panel_Time *, int, int);
  void (__thiscall *set_focus)(TRIBE_Panel_Time *, int);
  void (__thiscall *set_tab_order_2)(TRIBE_Panel_Time *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TRIBE_Panel_Time *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TRIBE_Panel_Time *);
  unsigned __int8 (__thiscall *get_help_info)(TRIBE_Panel_Time *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TRIBE_Panel_Time *);
  int (__thiscall *restart_sound_system)(TRIBE_Panel_Time *);
  void (__thiscall *take_snapshot)(TRIBE_Panel_Time *);
  void (__thiscall *handle_reactivate)(TRIBE_Panel_Time *);
  int (__thiscall *pointing_at)(TRIBE_Panel_Time *, int, int, int *, int *, int *, int *, char *, int);
};
#pragma pack(pop)

/* 889 */
#pragma pack(push, 8)
struct RGE_Panel_Tool_BoxVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Panel_Tool_Box *, unsigned int);
  int (__thiscall *setup)(RGE_Panel_Tool_Box *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(RGE_Panel_Tool_Box *, RECT);
  void (__thiscall *set_rect_1)(RGE_Panel_Tool_Box *, int, int, int, int);
  void (__thiscall *set_color)(RGE_Panel_Tool_Box *, unsigned __int8);
  void (__thiscall *set_active)(RGE_Panel_Tool_Box *, int);
  void (__thiscall *unknown1)(RGE_Panel_Tool_Box *);
  void (__thiscall *unknown2)(RGE_Panel_Tool_Box *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(RGE_Panel_Tool_Box *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(RGE_Panel_Tool_Box *, int);
  void (__thiscall *set_fixed_position)(RGE_Panel_Tool_Box *, int, int, int, int);
  void (__thiscall *set_redraw)(RGE_Panel_Tool_Box *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(RGE_Panel_Tool_Box *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(RGE_Panel_Tool_Box *, int);
  void (__thiscall *draw_finish)(RGE_Panel_Tool_Box *);
  void (__thiscall *draw)(RGE_Panel_Tool_Box *);
  void (__thiscall *draw_rect)(RGE_Panel_Tool_Box *, RECT *);
  void (__thiscall *draw_offset)(RGE_Panel_Tool_Box *, int, int, RECT *);
  void (__thiscall *draw_rect2)(RGE_Panel_Tool_Box *, RECT *);
  void (__thiscall *draw_offset2)(RGE_Panel_Tool_Box *, int, int, RECT *);
  void (__thiscall *paint)(RGE_Panel_Tool_Box *);
  int (__thiscall *wnd_proc)(RGE_Panel_Tool_Box *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(RGE_Panel_Tool_Box *);
  int (__thiscall *handle_size)(RGE_Panel_Tool_Box *, int, int);
  int (__thiscall *handle_paint)(RGE_Panel_Tool_Box *);
  int (__thiscall *handle_key_down)(RGE_Panel_Tool_Box *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(RGE_Panel_Tool_Box *, int, __int16);
  int (__thiscall *handle_command)(RGE_Panel_Tool_Box *, unsigned int, int);
  int (__thiscall *handle_user_command)(RGE_Panel_Tool_Box *, unsigned int, int);
  int (__thiscall *handle_timer_command)(RGE_Panel_Tool_Box *, unsigned int, int);
  int (__thiscall *handle_scroll)(RGE_Panel_Tool_Box *, int, int);
  int (__thiscall *handle_mouse_down)(RGE_Panel_Tool_Box *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(RGE_Panel_Tool_Box *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(RGE_Panel_Tool_Box *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(RGE_Panel_Tool_Box *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(RGE_Panel_Tool_Box *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(RGE_Panel_Tool_Box *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(RGE_Panel_Tool_Box *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(RGE_Panel_Tool_Box *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(RGE_Panel_Tool_Box *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(RGE_Panel_Tool_Box *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(RGE_Panel_Tool_Box *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(RGE_Panel_Tool_Box *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(RGE_Panel_Tool_Box *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(RGE_Panel_Tool_Box *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(RGE_Panel_Tool_Box *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(RGE_Panel_Tool_Box *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(RGE_Panel_Tool_Box *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(RGE_Panel_Tool_Box *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(RGE_Panel_Tool_Box *, int, int, int, int);
  int (__thiscall *key_down_action)(RGE_Panel_Tool_Box *, int, __int16, int, int, int);
  int (__thiscall *char_action)(RGE_Panel_Tool_Box *, int, __int16);
  int (__thiscall *action)(RGE_Panel_Tool_Box *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(RGE_Panel_Tool_Box *, RECT *);
  int (__thiscall *is_inside)(RGE_Panel_Tool_Box *, int, int);
  void (__thiscall *set_focus)(RGE_Panel_Tool_Box *, int);
  void (__thiscall *set_tab_order_2)(RGE_Panel_Tool_Box *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(RGE_Panel_Tool_Box *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(RGE_Panel_Tool_Box *);
  unsigned __int8 (__thiscall *get_help_info)(RGE_Panel_Tool_Box *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(RGE_Panel_Tool_Box *);
  int (__thiscall *restart_sound_system)(RGE_Panel_Tool_Box *);
  void (__thiscall *take_snapshot)(RGE_Panel_Tool_Box *);
  void (__thiscall *handle_reactivate)(RGE_Panel_Tool_Box *);
  int (__thiscall *pointing_at)(RGE_Panel_Tool_Box *, int, int, int *, int *, int *, int *, char *, int);
};
#pragma pack(pop)

/* 110 */
#pragma pack(push, 8)
struct TScreenPanel
{
  TScreenPanelVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
};
#pragma pack(pop)

/* 330 */
#pragma pack(push, 8)
struct RGE_Diamond_Map
{
  RGE_Diamond_MapVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  RGE_Game_World *world;
  RGE_Player *player;
  RGE_Map *map;
  int all_visible;
  int render_all;
  int mouse_last_x;
  int mouse_last_y;
  int repos_mouse;
  RECT view_rect;
  RGE_Player *last_player;
  RGE_Map_Image_Line *map_image_lines;
  RGE_Map_Tile_Row *map_tile_rows;
  __int16 map_wid;
  __int16 map_hgt;
  __int16 map_image_start_y;
  __int16 map_image_wid;
  __int16 map_image_hgt;
  __int16 map_tile_row_cnt;
  float map_row_step;
  float map_col_ratio;
  float map_row_ratio;
  __int16 map_tile_draw_hgt;
  __int16 map_tile_draw_wid;
  __int16 view_col;
  __int16 view_row;
  RGE_View *main_view;
  int scrolling;
  unsigned __int8 fog_color;
  int draw_objects_mode;
  unsigned int cur_player_bit;
  int own_save_area;
  TDrawArea *save_area;
};
#pragma pack(pop)

/* 764 */
#pragma pack(push, 8)
struct TRIBE_Building_ObjectVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Building_Object *, unsigned int);
  int (__thiscall *gbg_unknown1)(TRIBE_Building_Object *);
  int (__thiscall *gbg_get_civ_override)(TRIBE_Building_Object *);
  unsigned __int8 (__thiscall *gbg_unknown3)(TRIBE_Building_Object *);
  unsigned __int8 (__thiscall *gbg_unknown4)(TRIBE_Building_Object *);
  unsigned __int8 (__thiscall *gbg_unknown5)(TRIBE_Building_Object *);
  unsigned __int8 (__thiscall *gbg_unknown6)(TRIBE_Building_Object *);
  unsigned __int8 (__thiscall *gbg_unknown7)(TRIBE_Building_Object *);
  unsigned __int8 (__thiscall *gbg_unknown8)(TRIBE_Building_Object *);
  unsigned __int8 (__thiscall *gbg_unknown9)(TRIBE_Building_Object *);
  unsigned __int8 (__thiscall *gbg_unknown10)(TRIBE_Building_Object *);
  unsigned __int8 (__thiscall *gbg_unknown11)(TRIBE_Building_Object *);
  unsigned __int8 (__thiscall *gbg_isPadawan)(TRIBE_Building_Object *);
  unsigned __int8 (__thiscall *gbg_isMaster)(TRIBE_Building_Object *);
  unsigned __int8 (__thiscall *gbg_unknown14)(TRIBE_Building_Object *);
  unsigned __int8 (__thiscall *gbg_isShielded)(TRIBE_Building_Object *);
  void (__thiscall *gbg_unknown16)(TRIBE_Building_Object *);
  void (__thiscall *gbg_unknown17)(TRIBE_Building_Object *);
  unsigned __int8 (__thiscall *gbg_unknown18)(TRIBE_Building_Object *, int);
  unsigned __int8 (__thiscall *gbg_isDetector)(TRIBE_Building_Object *);
  unsigned __int8 (__thiscall *gbg_unknown20)(TRIBE_Building_Object *, int);
  unsigned __int8 (__thiscall *gbg_isPowered)(TRIBE_Building_Object *, int);
  void (__thiscall *gbg_unknown22)(TRIBE_Building_Object *);
  unsigned __int8 (__thiscall *gbg_unknown23)(TRIBE_Building_Object *);
  unsigned __int8 (__thiscall *gbg_isBiological)(TRIBE_Building_Object *);
  unsigned __int8 (__thiscall *gbg_isDamaged)(TRIBE_Building_Object *);
  unsigned __int8 (__thiscall *gbg_unknown26)(TRIBE_Building_Object *);
  unsigned __int8 (__thiscall *gbg_canBeHealedByPlayer)(TRIBE_Building_Object *, int);
  unsigned __int8 (__thiscall *gbg_canBeRepairedByPlayer)(TRIBE_Building_Object *, int);
  void (__thiscall *recycle_in_to_game)(TRIBE_Building_Object *, RGE_Master_Static_Object *, RGE_Player *, float, float, float);
  void (__thiscall *recycle_out_of_game)(TRIBE_Building_Object *);
  void (__thiscall *draw)(TRIBE_Building_Object *, TDrawArea *, __int16, __int16, RGE_Color_Table *);
  void (__thiscall *shadow_draw)(TRIBE_Building_Object *, TDrawArea *, __int16, __int16, unsigned __int8);
  void (__thiscall *normal_draw)(TRIBE_Building_Object *, TDrawArea *, __int16, __int16);
  void (__thiscall *draw_front_frame)(TRIBE_Building_Object *, TDrawArea *, __int16, __int16);
  void (__thiscall *draw_back_frame)(TRIBE_Building_Object *, TDrawArea *, __int16, __int16);
  void (__thiscall *draw_frame)(TRIBE_Building_Object *, TDrawArea *, __int16, __int16);
  unsigned __int8 (__thiscall *update)(TRIBE_Building_Object *);
  void (__thiscall *check_damage_sprites)(TRIBE_Building_Object *);
  void (__thiscall *rehook)(TRIBE_Building_Object *);
  void (__thiscall *save)(TRIBE_Building_Object *, int);
  void (__thiscall *teleport_off_map)(TRIBE_Building_Object *);
  float (__thiscall *teleport)(TRIBE_Building_Object *, float, float, float);
  float (__thiscall *handle_teleport_z_correction)(TRIBE_Building_Object *, float);
  void (__thiscall *new_sprite)(TRIBE_Building_Object *, RGE_Sprite *);
  void (__thiscall *add_overlay_sprite)(TRIBE_Building_Object *, RGE_Sprite *, unsigned __int8);
  void (__thiscall *remove_overlay_sprite)(TRIBE_Building_Object *, RGE_Sprite *);
  void (__thiscall *change_ownership)(TRIBE_Building_Object *, RGE_Player *);
  void (__thiscall *modify)(TRIBE_Building_Object *, float, unsigned __int8);
  void (__thiscall *modify_delta)(TRIBE_Building_Object *, float, unsigned __int8);
  void (__thiscall *modify_percent)(TRIBE_Building_Object *, float, unsigned __int8);
  void (__thiscall *transform)(TRIBE_Building_Object *, RGE_Master_Static_Object *);
  void (__thiscall *copy_obj)(TRIBE_Building_Object *, RGE_Master_Static_Object *);
  void (__thiscall *set_object_state)(TRIBE_Building_Object *, unsigned __int8);
  void (__thiscall *remove_visible_resource)(TRIBE_Building_Object *);
  void (__thiscall *create_doppleganger_when_dying)(TRIBE_Building_Object *);
  void (__thiscall *destroy_obj)(TRIBE_Building_Object *);
  void (__thiscall *die_die_die)(TRIBE_Building_Object *);
  void (__thiscall *damage)(TRIBE_Building_Object *, int, RGE_Armor_Weapon_Info *, float, RGE_Player *, RGE_Static_Object *, int);
  float (__thiscall *calculateDamage)(TRIBE_Building_Object *, int, RGE_Armor_Weapon_Info *, float, RGE_Player *, RGE_Static_Object *);
  void (__thiscall *rotate)(TRIBE_Building_Object *, int);
  unsigned __int8 (__thiscall *can_attack)(TRIBE_Building_Object *);
  void (__thiscall *set_attribute)(TRIBE_Building_Object *, __int16, float);
  void (__thiscall *set_attribute_amount)(TRIBE_Building_Object *, float, unsigned __int8, unsigned __int8);
  int (__thiscall *heal_2)(TRIBE_Building_Object *, int, int);
  unsigned __int8 (__thiscall *heal_1)(TRIBE_Building_Object *, float);
  int (__thiscall *canRepair)(TRIBE_Building_Object *);
  void (__thiscall *notify_of_relation)(TRIBE_Building_Object *, int, unsigned __int8);
  void (__thiscall *do_command)(TRIBE_Building_Object *, RGE_Static_Object *, float, float, float);
  int (__thiscall *actionTypeIfOrdered)(TRIBE_Building_Object *, RGE_Static_Object *, float, float, float, float *);
  unsigned __int8 (__thiscall *move_to)(TRIBE_Building_Object *, RGE_Static_Object *, float, float, float);
  void (__thiscall *work)(TRIBE_Building_Object *, RGE_Static_Object *, float, float, float);
  void (__thiscall *stop)(TRIBE_Building_Object *);
  void (__thiscall *set_attack)(TRIBE_Building_Object *, RGE_Static_Object *);
  void (__thiscall *play_command_sound)(TRIBE_Building_Object *);
  void (__thiscall *play_move_sound)(TRIBE_Building_Object *);
  void (__thiscall *new_angle)(TRIBE_Building_Object *, float);
  RGE_Static_Object *(__thiscall *spawn_death_obj)(TRIBE_Building_Object *);
  RGE_Master_Static_Object *(__thiscall *get_command_master)(TRIBE_Building_Object *, RGE_Static_Object *, float, float, float);
  void (__thiscall *set_being_worked_on)(TRIBE_Building_Object *, RGE_Action_Object *, __int16, unsigned __int8);
  void (__thiscall *release_being_worked_on)(TRIBE_Building_Object *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *is_moving)(TRIBE_Building_Object *);
  RGE_Static_Object *(__thiscall *get_target_obj)(TRIBE_Building_Object *);
  unsigned __int8 (__thiscall *more_room)(TRIBE_Building_Object *, RGE_Static_Object *);
  void (__thiscall *enter_obj)(TRIBE_Building_Object *, RGE_Static_Object *, unsigned __int8);
  void (__thiscall *exit_obj)(TRIBE_Building_Object *);
  void (__thiscall *add_obj)(TRIBE_Building_Object *, RGE_Static_Object *);
  void (__thiscall *remove_obj)(TRIBE_Building_Object *, RGE_Static_Object *);
  int (__thiscall *explore_terrain)(TRIBE_Building_Object *, RGE_Player *, unsigned __int8, int, int);
  void (__thiscall *unexplore_terrain)(TRIBE_Building_Object *, RGE_Player *, unsigned __int8, int, int);
  LOSTBL *(__thiscall *get_los_table)(TRIBE_Building_Object *);
  unsigned __int8 (__thiscall *get_visibility)(TRIBE_Building_Object *, RGE_Player *);
  int (__thiscall *inAttackRange)(TRIBE_Building_Object *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *underAttack)(TRIBE_Building_Object *);
  void (__thiscall *setUnderAttack)(TRIBE_Building_Object *, unsigned __int8);
  float (__thiscall *calc_attack_modifier)(TRIBE_Building_Object *, RGE_Static_Object *);
  float (__thiscall *getSpeed)(TRIBE_Building_Object *);
  float (__thiscall *getAngle)(TRIBE_Building_Object *);
  float (__thiscall *maximumSpeed)(TRIBE_Building_Object *);
  float (__thiscall *rateOfFire)(TRIBE_Building_Object *);
  float (__thiscall *damageCapability_2)(TRIBE_Building_Object *, RGE_Static_Object *);
  float (__thiscall *damageCapability_1)(TRIBE_Building_Object *);
  float (__thiscall *weaponRange)(TRIBE_Building_Object *);
  float (__thiscall *minimumWeaponRange)(TRIBE_Building_Object *);
  int (__thiscall *passableTile_2)(TRIBE_Building_Object *, float, float, int *, int);
  int (__thiscall *passableTile_1)(TRIBE_Building_Object *, float, float);
  int (__thiscall *currentTargetID)(TRIBE_Building_Object *);
  float (__thiscall *currentTargetX)(TRIBE_Building_Object *);
  float (__thiscall *currentTargetY)(TRIBE_Building_Object *);
  float (__thiscall *currentTargetZ)(TRIBE_Building_Object *);
  void (__thiscall *setWaitingToMove)(TRIBE_Building_Object *, unsigned __int8);
  unsigned __int8 (__thiscall *waitingToMove)(TRIBE_Building_Object *);
  unsigned __int8 (__thiscall *actionState)(TRIBE_Building_Object *);
  unsigned __int8 (__thiscall *keepGatheringWhenObjectIsOut)(TRIBE_Building_Object *, int);
  unsigned __int8 (__thiscall *produceWhenKilledBy)(TRIBE_Building_Object *, int);
  unsigned __int8 (__thiscall *useSameZoneDropsite)(TRIBE_Building_Object *);
  float (__thiscall *searchRadius)(TRIBE_Building_Object *);
  unsigned __int8 (__thiscall *is_idle)(TRIBE_Building_Object *);
  void (*logDebug)(TRIBE_Building_Object *, char *, ...);
  void (*debug)(TRIBE_Building_Object *, char *, ...);
  void (__thiscall *notify)(TRIBE_Building_Object *, int, int, int, int, int, int);
  int (__thiscall *attack_2)(TRIBE_Building_Object *, float, float, float, int);
  int (__thiscall *attack_1)(TRIBE_Building_Object *, int, int);
  int (__thiscall *moveTo_3)(TRIBE_Building_Object *, float, float, float, float, int, int);
  int (__thiscall *moveTo_2)(TRIBE_Building_Object *, int, float, int);
  int (__thiscall *moveTo_1)(TRIBE_Building_Object *, int, int);
  int (__thiscall *moveAwayFrom)(TRIBE_Building_Object *, int, int);
  int (__thiscall *hunt)(TRIBE_Building_Object *, int, int);
  int (__thiscall *gather)(TRIBE_Building_Object *, int, int);
  int (__thiscall *convert)(TRIBE_Building_Object *, int, int);
  int (__thiscall *repair)(TRIBE_Building_Object *, int, int);
  int (__thiscall *build)(TRIBE_Building_Object *, int, int);
  int (__thiscall *trade)(TRIBE_Building_Object *, int, int);
  int (__thiscall *explore)(TRIBE_Building_Object *, int, int, int);
  int (__thiscall *enter)(TRIBE_Building_Object *, int, int);
  int (__thiscall *unload)(TRIBE_Building_Object *, int, float, float, float);
  int (__thiscall *transport)(TRIBE_Building_Object *, float, float, float, int);
  int (__thiscall *stopAction)(TRIBE_Building_Object *);
  int (__thiscall *pause)(TRIBE_Building_Object *);
  int (__thiscall *canPath_2)(TRIBE_Building_Object *, int, float, float *, int, int, bool);
  int (__thiscall *canPath_1)(TRIBE_Building_Object *, XYZPoint, float, int, float *, int, int, bool);
  int (__thiscall *canQuickPath)(TRIBE_Building_Object *, int, float, float *);
  int (__thiscall *canPathWithObstructions)(TRIBE_Building_Object *, int, float, float *, int, int, ManagedArray_int_ *);
  int (__thiscall *canPathWithAdditionalPassability)(TRIBE_Building_Object *, XYZPoint, float, int, float *, int, int, int, int, int, BPath *);
  int (__thiscall *findFirstTerrainAlongExceptionPath)(TRIBE_Building_Object *, int, float *, float *, BPath *);
  int (__thiscall *canLinePath_2)(TRIBE_Building_Object *, int, int, int, int, float, int);
  int (__thiscall *canLinePath_1)(TRIBE_Building_Object *, const XYPoint *, const XYPoint *, float, XYPoint *, int);
  int (__thiscall *firstTileAlongLine)(TRIBE_Building_Object *, const XYPoint *, const XYPoint *, XYPoint *, int, int, int);
  unsigned __int8 (__thiscall *have_action)(TRIBE_Building_Object *);
  int (__thiscall *gameActionType)(TRIBE_Building_Object *);
  BVector *(__thiscall *userDefinedWaypoint)(TRIBE_Building_Object *, int);
  int (__thiscall *addUserDefinedWaypoint)(TRIBE_Building_Object *, float, float, float);
  void (__thiscall *zeroUserDefinedWaypoints)(TRIBE_Building_Object *);
  void (__thiscall *removeAllUserDefinedWaypoints)(TRIBE_Building_Object *);
  int (__thiscall *numberUserDefinedWaypoints)(TRIBE_Building_Object *);
  BPath *(__thiscall *getPatrolInformation)(TRIBE_Building_Object *, int *);
  float (__thiscall *distanceToHighestLevelPath_2)(TRIBE_Building_Object *, BVector);
  float (__thiscall *distanceToHighestLevelPath_1)(TRIBE_Building_Object *);
  BPath *(__thiscall *findAvoidancePath)(TRIBE_Building_Object *, XYZPoint *, float, int);
  int (__thiscall *get_action_checksum)(TRIBE_Building_Object *);
  int (__thiscall *get_waypoint_checksum)(TRIBE_Building_Object *);
  void (__thiscall *setPatrolMode)(TRIBE_Building_Object *, unsigned __int8);
  int (__thiscall *garrisoned_count)(TRIBE_Building_Object *);
  int (__thiscall *lock_down)(TRIBE_Building_Object *);
  int (__thiscall *unlock_down)(TRIBE_Building_Object *);
  int (__thiscall *get_locked_down_count)(TRIBE_Building_Object *);
  float (__thiscall *getTradeAmount)(TRIBE_Building_Object *, float, float, float, float);
  int (__thiscall *setup_2)(TRIBE_Building_Object *, int, RGE_Game_World *);
  int (__thiscall *setup_1)(TRIBE_Building_Object *, RGE_Master_Static_Object *, RGE_Player *, float, float, float);
  RGE_New_Object_List *(__thiscall *create_object_list)(TRIBE_Building_Object *);
  RGE_Active_Sprite_List *(__thiscall *create_sprite_list)(TRIBE_Building_Object *);
  BVector *(__thiscall *position)(TRIBE_Building_Object *, BVector *);
  BPathData *(__thiscall *getPathData)(TRIBE_Building_Object *);
  int (__thiscall *actionType)(TRIBE_Building_Object *);
  int (__thiscall *hasActionOfType)(TRIBE_Building_Object *, int);
  int (__thiscall *gbg_hasActionOfType2)(TRIBE_Building_Object *, int);
  int (__thiscall *addMove)(TRIBE_Building_Object *, int, float, int, int, int);
  int (__thiscall *addCurrentPath)(TRIBE_Building_Object *, BPath *, int, float, int);
  int (__thiscall *addFuturePath)(TRIBE_Building_Object *, BPath *, int, float, int);
  void (__thiscall *stopAllMovement)(TRIBE_Building_Object *);
  void (__thiscall *setOrientation)(TRIBE_Building_Object *, BVector *, BVector *);
  BVector *(__thiscall *velocity)(TRIBE_Building_Object *, BVector *);
  void (__thiscall *setVelocity)(TRIBE_Building_Object *, BVector *);
  BVector *(__thiscall *acceleration)(TRIBE_Building_Object *, BVector *);
  void (__thiscall *setAcceleration)(TRIBE_Building_Object *, BVector *);
  float (__thiscall *forwardVelocity)(TRIBE_Building_Object *);
  void (__thiscall *setForwardVelocity)(TRIBE_Building_Object *, float);
  float (__thiscall *forwardAcceleration)(TRIBE_Building_Object *);
  void (__thiscall *setForwardAcceleration)(TRIBE_Building_Object *, float);
  void (__thiscall *moveForward)(TRIBE_Building_Object *, float);
  void (__thiscall *setPosition)(TRIBE_Building_Object *, BVector *);
  void (__thiscall *yaw)(TRIBE_Building_Object *, float);
  int (__thiscall *isMoving)(TRIBE_Building_Object *);
  void (__thiscall *stopMoving)(TRIBE_Building_Object *);
  float (__thiscall *calculateFutureVelocity)(TRIBE_Building_Object *, float, float, float, BVector *);
  unsigned int (__thiscall *lastMoveTime)(TRIBE_Building_Object *);
  void (__thiscall *pauseMovement)(TRIBE_Building_Object *, float);
  int (__thiscall *movementPriority)(TRIBE_Building_Object *);
  int (__thiscall *intelligentMovementUpdate)(TRIBE_Building_Object *);
  float (__thiscall *calculateMaximumSpeed)(TRIBE_Building_Object *, int);
  int (__thiscall *calculateForward)(TRIBE_Building_Object *, BVector *, BVector *, BVector *);
  float (__thiscall *calculateYawAngle)(TRIBE_Building_Object *, BVector *, BVector *, float, int *);
  int (__thiscall *calculateReachedPoint)(TRIBE_Building_Object *, BVector *, BVector *, BVector *);
  float (__thiscall *calculateTurnRadius)(TRIBE_Building_Object *);
  int (__thiscall *checkAcceleration)(TRIBE_Building_Object *, BVector *, int, int);
  BVector *(__thiscall *straightProjectedPosition)(TRIBE_Building_Object *, BVector *, BVector *, float);
  int (__thiscall *onPatrol)(TRIBE_Building_Object *);
  BVector *(__thiscall *orientationForward)(TRIBE_Building_Object *, BVector *);
  int (__thiscall *setRunSprite)(TRIBE_Building_Object *);
  int (__thiscall *setMoveSprite)(TRIBE_Building_Object *);
  int (__thiscall *setFidgetSprite)(TRIBE_Building_Object *);
  int (__thiscall *getGateLocked)(TRIBE_Building_Object *);
  void (__thiscall *setGateLocked)(TRIBE_Building_Object *, int);
  int (__thiscall *isGateOpenable)(TRIBE_Building_Object *, int);
  int (__thiscall *getLinkedChild)(TRIBE_Building_Object *, int);
  int (__thiscall *get_next_selected_group)(TRIBE_Building_Object *, int);
  __int16 (__thiscall *get_Selected_Groups)(TRIBE_Building_Object *);
  void (__thiscall *set_Selected_Groups)(TRIBE_Building_Object *, __int16);
  int (__thiscall *get_num_Selected_groups)(TRIBE_Building_Object *);
  int (__thiscall *setup_3)(TRIBE_Building_Object *, RGE_Master_Animated_Object *, RGE_Player *, float, float, float);
  void (__thiscall *stop_moving)(TRIBE_Building_Object *);
  unsigned __int8 (__thiscall *turn_towards)(TRIBE_Building_Object *, RGE_Static_Object *, float, float);
  void (__thiscall *set_angle)(TRIBE_Building_Object *);
  int (__thiscall *canLinePath_4)(TRIBE_Building_Object *, int, int, int, int, float);
  int (__thiscall *canLinePath_3)(TRIBE_Building_Object *, XYPoint *, XYPoint *, float, XYPoint *);
  int (__thiscall *setup_4)(TRIBE_Building_Object *, RGE_Master_Moving_Object *, RGE_Player *, float, float, float);
  int (__thiscall *addMove_2)(TRIBE_Building_Object *, int, float, float, float, float, int, int, int);
  void (__thiscall *work2)(TRIBE_Building_Object *, RGE_Static_Object *, float, float, float, unsigned __int8, __int16);
  void (__thiscall *set_task)(TRIBE_Building_Object *, __int16);
  void (__thiscall *setTaskByTaskID)(TRIBE_Building_Object *, int);
  void (__thiscall *set_action)(TRIBE_Building_Object *, RGE_Action *);
  void (__thiscall *set_only_action)(TRIBE_Building_Object *, RGE_Action *);
  void (__thiscall *set_end_action)(TRIBE_Building_Object *, RGE_Action *);
  RGE_Task *(__thiscall *getTask)(TRIBE_Building_Object *, RGE_Static_Object *, float, float, float, __int16);
  void (__thiscall *setUnitAIAction)(TRIBE_Building_Object *, int, RGE_Static_Object *, float, float, float);
  int (__thiscall *setup_5)(TRIBE_Building_Object *, RGE_Master_Action_Object *, RGE_Player *, float, float, float);
  RGE_Action_List *(__thiscall *create_action_list)(TRIBE_Building_Object *);
  unsigned __int8 (__thiscall *area_attack)(TRIBE_Building_Object *, float, float, float, RGE_Combat_Object *, RGE_Static_Object *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *attack_4)(TRIBE_Building_Object *, float, float, float, RGE_Combat_Object *);
  unsigned __int8 (__thiscall *attack_3)(TRIBE_Building_Object *, RGE_Static_Object *, RGE_Combat_Object *);
  unsigned __int8 (__thiscall *do_attack)(TRIBE_Building_Object *, RGE_Static_Object *, RGE_Combat_Object *, float, float, float, float);
  void (__thiscall *get_armor)(TRIBE_Building_Object *, __int16 *, __int16 *);
  void (__thiscall *get_weapon)(TRIBE_Building_Object *, __int16 *, __int16 *);
  void (__thiscall *get_weapon_range)(TRIBE_Building_Object *, float *, float *);
  void (__thiscall *get_speed_of_attack)(TRIBE_Building_Object *, float *, float *);
  int (__thiscall *inAttackRange_2)(TRIBE_Building_Object *, RGE_Static_Object *, int *);
  int (__thiscall *setup_6)(TRIBE_Building_Object *, RGE_Master_Combat_Object *, RGE_Player *, float, float, float);
  void (__thiscall *cancel_object)(TRIBE_Building_Object *);
  void (__thiscall *get_pierce_armor)(TRIBE_Building_Object *, __int16 *, __int16 *);
  void (__thiscall *calc_sprite_frame)(TRIBE_Building_Object *);
  int (__thiscall *higher_check_for_cliff)(TRIBE_Building_Object *, RGE_Static_Object *, int, int, float, float, float, float, RGE_Map *, RGE_Static_Object *, float *, int *);
  int (__thiscall *higher_than_target)(TRIBE_Building_Object *, RGE_Static_Object *);
  int (__thiscall *work_status)(TRIBE_Building_Object *, __int16 *, __int16 *, __int16 *, char *, __int16);
  unsigned __int8 (__thiscall *heal_other)(TRIBE_Building_Object *, float, RGE_Player *, int);
  void (__thiscall *initUnitAI)(TRIBE_Building_Object *);
  int (__thiscall *setup_7)(TRIBE_Building_Object *, TRIBE_Master_Combat_Object *, RGE_Player *, float, float, float);
  void (__thiscall *take_building_attribute_from_owner)(TRIBE_Building_Object *);
  void (__thiscall *give_building_attribute_to_owner)(TRIBE_Building_Object *);
  int (__thiscall *setup_8)(TRIBE_Building_Object *, TRIBE_Master_Building_Object *, RGE_Player *, float, float, float);
};
#pragma pack(pop)

/* 773 */
#pragma pack(push, 8)
struct Attribute_Cost
{
  __int16 type;
  __int16 amount;
  unsigned __int8 flag;
};
#pragma pack(pop)

/* 71 */
#pragma pack(push, 8)
struct TRIBE_Master_Building_Object
{
  TRIBE_Master_Building_ObjectVtbl *vfptr;
  unsigned __int8 master_type;
  char *name;
  char *gbg_name2;
  __int16 unit_line;
  unsigned __int8 min_tech_level;
  __int16 string_id;
  __int16 string_id2;
  __int16 id;
  __int16 copy_id;
  __int16 base_id;
  __int16 object_group;
  RGE_Sprite *sprite;
  RGE_Sprite *sprite2;
  RGE_Sprite *death_sprite;
  RGE_Sprite *undead_sprite;
  unsigned __int8 undead_flag;
  __int16 hp;
  float los;
  unsigned __int8 obj_max;
  float radius_x;
  float radius_y;
  float radius_z;
  RGE_Sound *selected_sound;
  RGE_Sound *created_sound;
  RGE_Sound *death_sound;
  RGE_Sound *damage_sound;
  __int16 death_spawn_obj_id;
  unsigned __int8 sort_number;
  unsigned __int8 can_be_built_on;
  __int16 button_pict;
  unsigned __int8 hide_in_scenario_editor;
  __int16 portrait_pict;
  unsigned __int8 available;
  unsigned __int8 disabled;
  __int16 tile_req1;
  __int16 tile_req2;
  __int16 center_tile_req1;
  __int16 center_tile_req2;
  float construction_radius_x;
  float construction_radius_y;
  unsigned __int8 elevation_flag;
  unsigned __int8 fog_flag;
  __int16 terrain;
  unsigned __int8 movement_type;
  __int16 attribute_type_held[3];
  float attribute_amount_held[3];
  __int16 attribute_max_amount;
  float attribute_rot;
  float multiple_attribute_mod;
  unsigned __int8 attribute_flag[3];
  unsigned __int8 area_effect_object_level;
  unsigned __int8 combat_level;
  unsigned __int8 select_level;
  unsigned __int8 map_draw_level;
  unsigned __int8 unit_level;
  unsigned __int8 map_color;
  unsigned __int8 attack_reaction;
  unsigned __int8 convert_terrain_flag;
  unsigned __int8 damage_sprite_num;
  RGE_Damage_Sprite_Info *damage_sprites;
  unsigned __int8 occlusion_flag;
  unsigned __int8 obstruction_type;
  unsigned __int8 obstruction_class;
  unsigned int object_flags;
  int help_string_id;
  int help_page_id;
  int hotkey_id;
  unsigned __int8 recyclable;
  unsigned __int8 track_as_resource;
  unsigned __int8 create_doppleganger_on_death;
  unsigned __int8 resource_group;
  unsigned __int8 draw_flag;
  unsigned __int8 draw_color;
  float outline_radius_x;
  float outline_radius_y;
  float outline_radius_z;
  float speed;
  RGE_Sprite *move_sprite;
  RGE_Sprite *run_sprite;
  float turn_speed;
  unsigned __int8 size_class;
  __int16 obj_trail_id;
  unsigned __int8 obj_trail_options;
  float obj_trail_spacing;
  unsigned __int8 move_algorithem;
  float mTurnRadius;
  float mTurnRadiusSpeed;
  float mMaximumYawPerSecondMoving;
  float mStationaryYawRevolutionTime;
  float mMaximumYawPerSecondStationary;
  RGE_Task_List *tasks;
  __int16 default_task;
  float search_radius;
  float work_rate;
  float gbg_work_rate_2;
  __int16 drop_site;
  __int16 backup_drop_site;
  unsigned __int8 task_by_group;
  RGE_Sound *command_sound;
  RGE_Sound *move_sound;
  unsigned __int8 run_pattern;
  unsigned __int8 RGE_Master_Action_Object_gap[3];
  RGE_Sprite *fight_sprite;
  __int16 base_armor;
  __int16 armor_num;
  RGE_Armor_Weapon_Info *armor;
  __int16 weapon_num;
  RGE_Armor_Weapon_Info *weapon;
  __int16 defense_terrain_bonus;
  float weapon_range;
  float area_effect_range;
  unsigned __int8 area_effect_level;
  float speed_of_attack;
  __int16 missile_id;
  __int16 base_hit_chance;
  unsigned __int8 break_off_combat;
  __int16 fire_missile_at_frame;
  float weapon_offset_x;
  float weapon_offset_y;
  float weapon_offset_z;
  float minimum_weapon_range;
  __int16 orig_armor;
  __int16 orig_weapon;
  float orig_weapon_range;
  float orig_speed_of_attack;
  float missed_missile_spread;
  Attribute_Cost build_inventory[3];
  __int16 build_pts_required;
  __int16 id_of_building_obj;
  unsigned __int8 button_location;
  __int16 orig_pierce_armor;
  float rear_attack_modifier;
  float flank_attack_modifier;
  unsigned __int8 tribe_unit_type;
  float volley_fire_amount;
  unsigned __int8 max_attacks_in_volley;
  float volley_x_spread;
  float volley_y_spread;
  float volley_start_spread_adjustment;
  int volley_missile_id;
  int special_attack_sprite_id;
  unsigned __int8 special_attack_flag;
  unsigned __int8 hero_flag;
  RGE_Sprite *garrison_sprite;
  RGE_Sound *construction_sound;
  RGE_Sprite *construction_sprite;
  RGE_Sprite *snow_sprite;
  unsigned __int8 building_connect_flag;
  __int16 building_facet;
  unsigned __int8 build_and_go_away;
  __int16 on_build_make_obj;
  __int16 on_build_make_tile;
  __int16 on_build_make_overlay;
  __int16 on_build_make_tech;
  unsigned __int8 can_burn;
  __int16 linked_id[4];
  float linked_x[4];
  float linked_y[4];
  __int16 construction_id;
  __int16 open_close_id;
  RGE_Sound *open_close_sound;
  unsigned __int8 garrison_units;
  float garrison_heal_rate;
  float garrison_repair_rate;
  __int16 salvage_id;
  unsigned __int8 pillage_attr[6];
};
#pragma pack(pop)

/* 765 */
#pragma pack(push, 8)
struct Production_Queue_Record
{
  __int16 master_id;
  __int16 unit_count;
};
#pragma pack(pop)

/* 561 */
#pragma pack(push, 8)
struct TDebuggingLogVtbl
{
  void *(__thiscall *__vecDelDtor)(TDebuggingLog *, unsigned int);
};
#pragma pack(pop)

/* 827 */
#pragma pack(push, 8)
struct RGE_Random_Map_ModuleVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Random_Map_Module *, unsigned int);
  unsigned __int8 (__thiscall *generate)(RGE_Random_Map_Module *);
};
#pragma pack(pop)

/* 478 */
#pragma pack(push, 8)
struct RGE_Land_Data_Entry
{
  int land_id;
  unsigned __int8 terrain_type;
  int land_avoidance_tiles;
  int base_square_radius;
  unsigned __int8 zone;
  unsigned __int8 placement_type;
  int x;
  int y;
  unsigned __int8 amount_of_land_used_percent;
  unsigned __int8 by_player_flag;
  int radius;
  int fade;
  int clumpiness_factor;
};
#pragma pack(pop)

/* 837 */
#pragma pack(push, 8)
struct RGE_Terrain_Data_Entry
{
  int terrain_percent;
  int terrain_type;
  int clumps;
  int spacing;
  int base_terrain_type;
  int clumpiness_factor;
};
#pragma pack(pop)

/* 839 */
#pragma pack(push, 8)
struct RGE_Object_Data_Entry
{
  int obj_id;
  int terrain;
  unsigned __int8 group_flag;
  unsigned __int8 scale_flag;
  int object_number_per_group;
  int object_number_varience;
  int number_of_groups;
  int group_area;
  int player_id;
  int land_id;
  int land_inner_radius;
  int land_outer_radius;
};
#pragma pack(pop)

/* 841 */
#pragma pack(push, 8)
struct RGE_Elevation_Data_Entry
{
  int elevation_percent;
  int elevation;
  int clumps;
  int spacing;
  int base_terrain_type;
  int base_elevation_type;
};
#pragma pack(pop)

/* 445 */
#pragma pack(push, 8)
struct CMemoryPool
{
  CMemoryBlock *mpMemoryBlocks;
  size_t mdwEntrySize;
  size_t mdwBlockEntries;
  size_t mdwFreeEntries;
  size_t mdwMaxFreeEntries;
  unsigned int *mpFreeList;
  bool mbZeroMem;
};
#pragma pack(pop)

/* 878 */
#pragma pack(push, 8)
struct TInputPanelVtbl
{
  void *(__thiscall *__vecDelDtor)(TInputPanel *, unsigned int);
  int (__thiscall *setup)(TInputPanel *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TInputPanel *, RECT);
  void (__thiscall *set_rect_1)(TInputPanel *, int, int, int, int);
  void (__thiscall *set_color)(TInputPanel *, unsigned __int8);
  void (__thiscall *set_active)(TInputPanel *, int);
  void (__thiscall *unknown1)(TInputPanel *);
  void (__thiscall *unknown2)(TInputPanel *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TInputPanel *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TInputPanel *, int);
  void (__thiscall *set_fixed_position)(TInputPanel *, int, int, int, int);
  void (__thiscall *set_redraw)(TInputPanel *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TInputPanel *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TInputPanel *, int);
  void (__thiscall *draw_finish)(TInputPanel *);
  void (__thiscall *draw)(TInputPanel *);
  void (__thiscall *draw_rect)(TInputPanel *, RECT *);
  void (__thiscall *draw_offset)(TInputPanel *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TInputPanel *, RECT *);
  void (__thiscall *draw_offset2)(TInputPanel *, int, int, RECT *);
  void (__thiscall *paint)(TInputPanel *);
  int (__thiscall *wnd_proc)(TInputPanel *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TInputPanel *);
  int (__thiscall *handle_size)(TInputPanel *, int, int);
  int (__thiscall *handle_paint)(TInputPanel *);
  int (__thiscall *handle_key_down)(TInputPanel *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TInputPanel *, int, __int16);
  int (__thiscall *handle_command)(TInputPanel *, unsigned int, int);
  int (__thiscall *handle_user_command)(TInputPanel *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TInputPanel *, unsigned int, int);
  int (__thiscall *handle_scroll)(TInputPanel *, int, int);
  int (__thiscall *handle_mouse_down)(TInputPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TInputPanel *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TInputPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TInputPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TInputPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TInputPanel *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TInputPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TInputPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TInputPanel *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TInputPanel *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TInputPanel *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TInputPanel *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TInputPanel *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TInputPanel *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TInputPanel *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TInputPanel *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TInputPanel *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TInputPanel *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TInputPanel *, int, int, int, int);
  int (__thiscall *key_down_action)(TInputPanel *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TInputPanel *, int, __int16);
  int (__thiscall *action)(TInputPanel *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TInputPanel *, RECT *);
  int (__thiscall *is_inside)(TInputPanel *, int, int);
  void (__thiscall *set_focus)(TInputPanel *, int);
  void (__thiscall *set_tab_order_2)(TInputPanel *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TInputPanel *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TInputPanel *);
  unsigned __int8 (__thiscall *get_help_info)(TInputPanel *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TInputPanel *);
  int (__thiscall *restart_sound_system)(TInputPanel *);
  void (__thiscall *take_snapshot)(TInputPanel *);
  void (__thiscall *handle_reactivate)(TInputPanel *);
  int (__thiscall *pointing_at)(TInputPanel *, int, int, int *, int *, int *, int *, char *, int);
  void (__thiscall *set_text)(TInputPanel *, char **, __int16);
  void (__thiscall *set_text2)(TInputPanel *, int);
  void (__thiscall *set_text3)(TInputPanel *, const char *, TTextPanel__FontChangeNode *);
  void (__thiscall *set_text_parsed)(TInputPanel *, char **, __int16, int, int);
  void (__thiscall *set_text_parsed2)(TInputPanel *, int, int, int);
  void (__thiscall *set_text_parsed3)(TInputPanel *, const char *, int, int);
  void (__thiscall *set_bevel_info)(TInputPanel *, int, int, int, int, int, int, int);
  void (__thiscall *set_bevel_type)(TInputPanel *, int);
  void (__thiscall *draw_line)(TInputPanel *, HDC, __int16, __int16, unsigned __int8);
  int (__thiscall *insert_line)(TInputPanel *, int, char *, char *, int, TTextPanel__FontChangeNode *);
  char *(__thiscall *get_text)(TInputPanel *, int);
  void (__thiscall *free_text)(TInputPanel *);
  void (__thiscall *set_text4)(TInputPanel *, char *);
};
#pragma pack(pop)

/* 868 */
#pragma pack(push, 8)
struct TListPanelVtbl
{
  void *(__thiscall *__vecDelDtor)(TListPanel *, unsigned int);
  int (__thiscall *setup)(TListPanel *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TListPanel *, RECT);
  void (__thiscall *set_rect_1)(TListPanel *, int, int, int, int);
  void (__thiscall *set_color)(TListPanel *, unsigned __int8);
  void (__thiscall *set_active)(TListPanel *, int);
  void (__thiscall *unknown1)(TListPanel *);
  void (__thiscall *unknown2)(TListPanel *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TListPanel *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TListPanel *, int);
  void (__thiscall *set_fixed_position)(TListPanel *, int, int, int, int);
  void (__thiscall *set_redraw)(TListPanel *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TListPanel *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TListPanel *, int);
  void (__thiscall *draw_finish)(TListPanel *);
  void (__thiscall *draw)(TListPanel *);
  void (__thiscall *draw_rect)(TListPanel *, RECT *);
  void (__thiscall *draw_offset)(TListPanel *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TListPanel *, RECT *);
  void (__thiscall *draw_offset2)(TListPanel *, int, int, RECT *);
  void (__thiscall *paint)(TListPanel *);
  int (__thiscall *wnd_proc)(TListPanel *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TListPanel *);
  int (__thiscall *handle_size)(TListPanel *, int, int);
  int (__thiscall *handle_paint)(TListPanel *);
  int (__thiscall *handle_key_down)(TListPanel *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TListPanel *, int, __int16);
  int (__thiscall *handle_command)(TListPanel *, unsigned int, int);
  int (__thiscall *handle_user_command)(TListPanel *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TListPanel *, unsigned int, int);
  int (__thiscall *handle_scroll)(TListPanel *, int, int);
  int (__thiscall *handle_mouse_down)(TListPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TListPanel *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TListPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TListPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TListPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TListPanel *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TListPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TListPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TListPanel *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TListPanel *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TListPanel *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TListPanel *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TListPanel *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TListPanel *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TListPanel *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TListPanel *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TListPanel *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TListPanel *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TListPanel *, int, int, int, int);
  int (__thiscall *key_down_action)(TListPanel *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TListPanel *, int, __int16);
  int (__thiscall *action)(TListPanel *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TListPanel *, RECT *);
  int (__thiscall *is_inside)(TListPanel *, int, int);
  void (__thiscall *set_focus)(TListPanel *, int);
  void (__thiscall *set_tab_order_2)(TListPanel *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TListPanel *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TListPanel *);
  unsigned __int8 (__thiscall *get_help_info)(TListPanel *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TListPanel *);
  int (__thiscall *restart_sound_system)(TListPanel *);
  void (__thiscall *take_snapshot)(TListPanel *);
  void (__thiscall *handle_reactivate)(TListPanel *);
  int (__thiscall *pointing_at)(TListPanel *, int, int, int *, int *, int *, int *, char *, int);
  void (__thiscall *set_text)(TListPanel *, char **, __int16);
  void (__thiscall *set_text2)(TListPanel *, int);
  void (__thiscall *set_text3)(TListPanel *, const char *, TTextPanel__FontChangeNode *);
  void (__thiscall *set_text_parsed)(TListPanel *, char **, __int16, int, int);
  void (__thiscall *set_text_parsed2)(TListPanel *, int, int, int);
  void (__thiscall *set_text_parsed3)(TListPanel *, const char *, int, int);
  void (__thiscall *set_bevel_info)(TListPanel *, int, int, int, int, int, int, int);
  void (__thiscall *set_bevel_type)(TListPanel *, int);
  void (__thiscall *draw_line)(TListPanel *, HDC, __int16, __int16, unsigned __int8);
  int (__thiscall *insert_line)(TListPanel *, int, char *, char *, int, TTextPanel__FontChangeNode *);
  char *(__thiscall *get_text)(TListPanel *, int);
  void (__thiscall *free_text)(TListPanel *);
};
#pragma pack(pop)

/* 884 */
#pragma pack(push, 8)
struct TVerticalSliderPanelVtbl
{
  void *(__thiscall *__vecDelDtor)(TVerticalSliderPanel *, unsigned int);
  int (__thiscall *setup)(TVerticalSliderPanel *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TVerticalSliderPanel *, RECT);
  void (__thiscall *set_rect_1)(TVerticalSliderPanel *, int, int, int, int);
  void (__thiscall *set_color)(TVerticalSliderPanel *, unsigned __int8);
  void (__thiscall *set_active)(TVerticalSliderPanel *, int);
  void (__thiscall *unknown1)(TVerticalSliderPanel *);
  void (__thiscall *unknown2)(TVerticalSliderPanel *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TVerticalSliderPanel *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TVerticalSliderPanel *, int);
  void (__thiscall *set_fixed_position)(TVerticalSliderPanel *, int, int, int, int);
  void (__thiscall *set_redraw)(TVerticalSliderPanel *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TVerticalSliderPanel *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TVerticalSliderPanel *, int);
  void (__thiscall *draw_finish)(TVerticalSliderPanel *);
  void (__thiscall *draw)(TVerticalSliderPanel *);
  void (__thiscall *draw_rect)(TVerticalSliderPanel *, RECT *);
  void (__thiscall *draw_offset)(TVerticalSliderPanel *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TVerticalSliderPanel *, RECT *);
  void (__thiscall *draw_offset2)(TVerticalSliderPanel *, int, int, RECT *);
  void (__thiscall *paint)(TVerticalSliderPanel *);
  int (__thiscall *wnd_proc)(TVerticalSliderPanel *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TVerticalSliderPanel *);
  int (__thiscall *handle_size)(TVerticalSliderPanel *, int, int);
  int (__thiscall *handle_paint)(TVerticalSliderPanel *);
  int (__thiscall *handle_key_down)(TVerticalSliderPanel *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TVerticalSliderPanel *, int, __int16);
  int (__thiscall *handle_command)(TVerticalSliderPanel *, unsigned int, int);
  int (__thiscall *handle_user_command)(TVerticalSliderPanel *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TVerticalSliderPanel *, unsigned int, int);
  int (__thiscall *handle_scroll)(TVerticalSliderPanel *, int, int);
  int (__thiscall *handle_mouse_down)(TVerticalSliderPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TVerticalSliderPanel *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TVerticalSliderPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TVerticalSliderPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TVerticalSliderPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TVerticalSliderPanel *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TVerticalSliderPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TVerticalSliderPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TVerticalSliderPanel *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TVerticalSliderPanel *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TVerticalSliderPanel *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TVerticalSliderPanel *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TVerticalSliderPanel *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TVerticalSliderPanel *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TVerticalSliderPanel *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TVerticalSliderPanel *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TVerticalSliderPanel *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TVerticalSliderPanel *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TVerticalSliderPanel *, int, int, int, int);
  int (__thiscall *key_down_action)(TVerticalSliderPanel *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TVerticalSliderPanel *, int, __int16);
  int (__thiscall *action)(TVerticalSliderPanel *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TVerticalSliderPanel *, RECT *);
  int (__thiscall *is_inside)(TVerticalSliderPanel *, int, int);
  void (__thiscall *set_focus)(TVerticalSliderPanel *, int);
  void (__thiscall *set_tab_order_2)(TVerticalSliderPanel *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TVerticalSliderPanel *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TVerticalSliderPanel *);
  unsigned __int8 (__thiscall *get_help_info)(TVerticalSliderPanel *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TVerticalSliderPanel *);
  int (__thiscall *restart_sound_system)(TVerticalSliderPanel *);
  void (__thiscall *take_snapshot)(TVerticalSliderPanel *);
  void (__thiscall *handle_reactivate)(TVerticalSliderPanel *);
  int (__thiscall *pointing_at)(TVerticalSliderPanel *, int, int, int *, int *, int *, int *, char *, int);
};
#pragma pack(pop)

/* 879 */
#pragma pack(push, 8)
struct THorizontalSliderPanelVtbl
{
  void *(__thiscall *__vecDelDtor)(THorizontalSliderPanel *, unsigned int);
  int (__thiscall *setup)(THorizontalSliderPanel *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(THorizontalSliderPanel *, RECT);
  void (__thiscall *set_rect_1)(THorizontalSliderPanel *, int, int, int, int);
  void (__thiscall *set_color)(THorizontalSliderPanel *, unsigned __int8);
  void (__thiscall *set_active)(THorizontalSliderPanel *, int);
  void (__thiscall *unknown1)(THorizontalSliderPanel *);
  void (__thiscall *unknown2)(THorizontalSliderPanel *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(THorizontalSliderPanel *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(THorizontalSliderPanel *, int);
  void (__thiscall *set_fixed_position)(THorizontalSliderPanel *, int, int, int, int);
  void (__thiscall *set_redraw)(THorizontalSliderPanel *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(THorizontalSliderPanel *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(THorizontalSliderPanel *, int);
  void (__thiscall *draw_finish)(THorizontalSliderPanel *);
  void (__thiscall *draw)(THorizontalSliderPanel *);
  void (__thiscall *draw_rect)(THorizontalSliderPanel *, RECT *);
  void (__thiscall *draw_offset)(THorizontalSliderPanel *, int, int, RECT *);
  void (__thiscall *draw_rect2)(THorizontalSliderPanel *, RECT *);
  void (__thiscall *draw_offset2)(THorizontalSliderPanel *, int, int, RECT *);
  void (__thiscall *paint)(THorizontalSliderPanel *);
  int (__thiscall *wnd_proc)(THorizontalSliderPanel *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(THorizontalSliderPanel *);
  int (__thiscall *handle_size)(THorizontalSliderPanel *, int, int);
  int (__thiscall *handle_paint)(THorizontalSliderPanel *);
  int (__thiscall *handle_key_down)(THorizontalSliderPanel *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(THorizontalSliderPanel *, int, __int16);
  int (__thiscall *handle_command)(THorizontalSliderPanel *, unsigned int, int);
  int (__thiscall *handle_user_command)(THorizontalSliderPanel *, unsigned int, int);
  int (__thiscall *handle_timer_command)(THorizontalSliderPanel *, unsigned int, int);
  int (__thiscall *handle_scroll)(THorizontalSliderPanel *, int, int);
  int (__thiscall *handle_mouse_down)(THorizontalSliderPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(THorizontalSliderPanel *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(THorizontalSliderPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(THorizontalSliderPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(THorizontalSliderPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(THorizontalSliderPanel *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(THorizontalSliderPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(THorizontalSliderPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(THorizontalSliderPanel *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(THorizontalSliderPanel *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(THorizontalSliderPanel *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(THorizontalSliderPanel *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(THorizontalSliderPanel *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(THorizontalSliderPanel *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(THorizontalSliderPanel *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(THorizontalSliderPanel *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(THorizontalSliderPanel *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(THorizontalSliderPanel *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(THorizontalSliderPanel *, int, int, int, int);
  int (__thiscall *key_down_action)(THorizontalSliderPanel *, int, __int16, int, int, int);
  int (__thiscall *char_action)(THorizontalSliderPanel *, int, __int16);
  int (__thiscall *action)(THorizontalSliderPanel *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(THorizontalSliderPanel *, RECT *);
  int (__thiscall *is_inside)(THorizontalSliderPanel *, int, int);
  void (__thiscall *set_focus)(THorizontalSliderPanel *, int);
  void (__thiscall *set_tab_order_2)(THorizontalSliderPanel *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(THorizontalSliderPanel *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(THorizontalSliderPanel *);
  unsigned __int8 (__thiscall *get_help_info)(THorizontalSliderPanel *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(THorizontalSliderPanel *);
  int (__thiscall *restart_sound_system)(THorizontalSliderPanel *);
  void (__thiscall *take_snapshot)(THorizontalSliderPanel *);
  void (__thiscall *handle_reactivate)(THorizontalSliderPanel *);
  int (__thiscall *pointing_at)(THorizontalSliderPanel *, int, int, int *, int *, int *, int *, char *, int);
};
#pragma pack(pop)

/* 927 */
#pragma pack(push, 8)
struct Time_Line_PanelVtbl
{
  void *(__thiscall *__vecDelDtor)(Time_Line_Panel *, unsigned int);
  int (__thiscall *setup)(Time_Line_Panel *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(Time_Line_Panel *, RECT);
  void (__thiscall *set_rect_1)(Time_Line_Panel *, int, int, int, int);
  void (__thiscall *set_color)(Time_Line_Panel *, unsigned __int8);
  void (__thiscall *set_active)(Time_Line_Panel *, int);
  void (__thiscall *unknown1)(Time_Line_Panel *);
  void (__thiscall *unknown2)(Time_Line_Panel *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(Time_Line_Panel *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(Time_Line_Panel *, int);
  void (__thiscall *set_fixed_position)(Time_Line_Panel *, int, int, int, int);
  void (__thiscall *set_redraw)(Time_Line_Panel *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(Time_Line_Panel *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(Time_Line_Panel *, int);
  void (__thiscall *draw_finish)(Time_Line_Panel *);
  void (__thiscall *draw)(Time_Line_Panel *);
  void (__thiscall *draw_rect)(Time_Line_Panel *, RECT *);
  void (__thiscall *draw_offset)(Time_Line_Panel *, int, int, RECT *);
  void (__thiscall *draw_rect2)(Time_Line_Panel *, RECT *);
  void (__thiscall *draw_offset2)(Time_Line_Panel *, int, int, RECT *);
  void (__thiscall *paint)(Time_Line_Panel *);
  int (__thiscall *wnd_proc)(Time_Line_Panel *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(Time_Line_Panel *);
  int (__thiscall *handle_size)(Time_Line_Panel *, int, int);
  int (__thiscall *handle_paint)(Time_Line_Panel *);
  int (__thiscall *handle_key_down)(Time_Line_Panel *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(Time_Line_Panel *, int, __int16);
  int (__thiscall *handle_command)(Time_Line_Panel *, unsigned int, int);
  int (__thiscall *handle_user_command)(Time_Line_Panel *, unsigned int, int);
  int (__thiscall *handle_timer_command)(Time_Line_Panel *, unsigned int, int);
  int (__thiscall *handle_scroll)(Time_Line_Panel *, int, int);
  int (__thiscall *handle_mouse_down)(Time_Line_Panel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(Time_Line_Panel *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(Time_Line_Panel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(Time_Line_Panel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(Time_Line_Panel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(Time_Line_Panel *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(Time_Line_Panel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(Time_Line_Panel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(Time_Line_Panel *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(Time_Line_Panel *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(Time_Line_Panel *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(Time_Line_Panel *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(Time_Line_Panel *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(Time_Line_Panel *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(Time_Line_Panel *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(Time_Line_Panel *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(Time_Line_Panel *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(Time_Line_Panel *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(Time_Line_Panel *, int, int, int, int);
  int (__thiscall *key_down_action)(Time_Line_Panel *, int, __int16, int, int, int);
  int (__thiscall *char_action)(Time_Line_Panel *, int, __int16);
  int (__thiscall *action)(Time_Line_Panel *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(Time_Line_Panel *, RECT *);
  int (__thiscall *is_inside)(Time_Line_Panel *, int, int);
  void (__thiscall *set_focus)(Time_Line_Panel *, int);
  void (__thiscall *set_tab_order_2)(Time_Line_Panel *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(Time_Line_Panel *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(Time_Line_Panel *);
  unsigned __int8 (__thiscall *get_help_info)(Time_Line_Panel *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(Time_Line_Panel *);
  int (__thiscall *restart_sound_system)(Time_Line_Panel *);
  void (__thiscall *take_snapshot)(Time_Line_Panel *);
  void (__thiscall *handle_reactivate)(Time_Line_Panel *);
  int (__thiscall *pointing_at)(Time_Line_Panel *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *create_text)(Time_Line_Panel *, Time_Line_Panel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
};
#pragma pack(pop)

/* 324 */
#pragma pack(push, 1)
struct Player_Time_Slice_Data
{
};
#pragma pack(pop)

/* 342 */
#pragma pack(push, 8)
struct Time_Slice_Special_Event
{
  Time_Slice_History_Event *event;
  int world_time_slice;
  int x_line_pos;
  int y_line_pos;
  int intermediate_y_line_segment;
  unsigned __int8 master_player_id;
  unsigned __int8 player_id;
  int world_pop_total;
  int interger_value_1;
  int interger_value_2;
  int start_x;
  int start_y;
  int start_txt_x1;
  int start_txt_y1;
  int start_txt_x2;
  int start_txt_y2;
  int text_length1;
  char text1[50];
  int text_length2;
  char text2[50];
  int icon_flag;
};
#pragma pack(pop)

/* 638 */
#pragma pack(push, 8)
struct TTextPanel__FontChangeNode
{
  int offset;
  int fontType;
  TTextPanel__FontChangeNode *next;
};
#pragma pack(pop)

/* 646 */
#pragma pack(push, 8)
struct TScreenPanelVtbl
{
  void *(__thiscall *__vecDelDtor)(TScreenPanel *, unsigned int);
  int (__thiscall *setup)(TScreenPanel *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TScreenPanel *, RECT);
  void (__thiscall *set_rect_1)(TScreenPanel *, int, int, int, int);
  void (__thiscall *set_color)(TScreenPanel *, unsigned __int8);
  void (__thiscall *set_active)(TScreenPanel *, int);
  void (__thiscall *unknown1)(TScreenPanel *);
  void (__thiscall *unknown2)(TScreenPanel *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TScreenPanel *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TScreenPanel *, int);
  void (__thiscall *set_fixed_position)(TScreenPanel *, int, int, int, int);
  void (__thiscall *set_redraw)(TScreenPanel *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TScreenPanel *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TScreenPanel *, int);
  void (__thiscall *draw_finish)(TScreenPanel *);
  void (__thiscall *draw)(TScreenPanel *);
  void (__thiscall *draw_rect)(TScreenPanel *, RECT *);
  void (__thiscall *draw_offset)(TScreenPanel *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TScreenPanel *, RECT *);
  void (__thiscall *draw_offset2)(TScreenPanel *, int, int, RECT *);
  void (__thiscall *paint)(TScreenPanel *);
  int (__thiscall *wnd_proc)(TScreenPanel *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TScreenPanel *);
  int (__thiscall *handle_size)(TScreenPanel *, int, int);
  int (__thiscall *handle_paint)(TScreenPanel *);
  int (__thiscall *handle_key_down)(TScreenPanel *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TScreenPanel *, int, __int16);
  int (__thiscall *handle_command)(TScreenPanel *, unsigned int, int);
  int (__thiscall *handle_user_command)(TScreenPanel *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TScreenPanel *, unsigned int, int);
  int (__thiscall *handle_scroll)(TScreenPanel *, int, int);
  int (__thiscall *handle_mouse_down)(TScreenPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TScreenPanel *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TScreenPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TScreenPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TScreenPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TScreenPanel *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TScreenPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TScreenPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TScreenPanel *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TScreenPanel *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TScreenPanel *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TScreenPanel *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TScreenPanel *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TScreenPanel *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TScreenPanel *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TScreenPanel *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TScreenPanel *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TScreenPanel *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TScreenPanel *, int, int, int, int);
  int (__thiscall *key_down_action)(TScreenPanel *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TScreenPanel *, int, __int16);
  int (__thiscall *action)(TScreenPanel *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TScreenPanel *, RECT *);
  int (__thiscall *is_inside)(TScreenPanel *, int, int);
  void (__thiscall *set_focus)(TScreenPanel *, int);
  void (__thiscall *set_tab_order_2)(TScreenPanel *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TScreenPanel *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TScreenPanel *);
  unsigned __int8 (__thiscall *get_help_info)(TScreenPanel *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TScreenPanel *);
  int (__thiscall *restart_sound_system)(TScreenPanel *);
  void (__thiscall *take_snapshot)(TScreenPanel *);
  void (__thiscall *handle_reactivate)(TScreenPanel *);
  int (__thiscall *pointing_at)(TScreenPanel *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TScreenPanel *);
  int (__thiscall *get_ideal_width)(TScreenPanel *);
  void (__thiscall *draw_background)(TScreenPanel *, int);
  void (__thiscall *set_ideal_size)(TScreenPanel *, int, int);
  int (__thiscall *create_button_2)(TScreenPanel *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TScreenPanel *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TScreenPanel *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TScreenPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TScreenPanel *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TScreenPanel *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TScreenPanel *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TScreenPanel *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TScreenPanel *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TScreenPanel *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TScreenPanel *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TScreenPanel *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TScreenPanel *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TScreenPanel *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TScreenPanel *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TScreenPanel *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TScreenPanel *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TScreenPanel *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TScreenPanel *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TScreenPanel *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TScreenPanel *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TScreenPanel *, TPanel *, int, int, int, int);
};
#pragma pack(pop)

/* 989 */
#pragma pack(push, 8)
struct RGE_Diamond_MapVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Diamond_Map *, unsigned int);
  int (__thiscall *setup)(RGE_Diamond_Map *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(RGE_Diamond_Map *, RECT);
  void (__thiscall *set_rect_1)(RGE_Diamond_Map *, int, int, int, int);
  void (__thiscall *set_color)(RGE_Diamond_Map *, unsigned __int8);
  void (__thiscall *set_active)(RGE_Diamond_Map *, int);
  void (__thiscall *unknown1)(RGE_Diamond_Map *);
  void (__thiscall *unknown2)(RGE_Diamond_Map *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(RGE_Diamond_Map *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(RGE_Diamond_Map *, int);
  void (__thiscall *set_fixed_position)(RGE_Diamond_Map *, int, int, int, int);
  void (__thiscall *set_redraw)(RGE_Diamond_Map *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(RGE_Diamond_Map *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(RGE_Diamond_Map *, int);
  void (__thiscall *draw_finish)(RGE_Diamond_Map *);
  void (__thiscall *draw)(RGE_Diamond_Map *);
  void (__thiscall *draw_rect)(RGE_Diamond_Map *, RECT *);
  void (__thiscall *draw_offset)(RGE_Diamond_Map *, int, int, RECT *);
  void (__thiscall *draw_rect2)(RGE_Diamond_Map *, RECT *);
  void (__thiscall *draw_offset2)(RGE_Diamond_Map *, int, int, RECT *);
  void (__thiscall *paint)(RGE_Diamond_Map *);
  int (__thiscall *wnd_proc)(RGE_Diamond_Map *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(RGE_Diamond_Map *);
  int (__thiscall *handle_size)(RGE_Diamond_Map *, int, int);
  int (__thiscall *handle_paint)(RGE_Diamond_Map *);
  int (__thiscall *handle_key_down)(RGE_Diamond_Map *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(RGE_Diamond_Map *, int, __int16);
  int (__thiscall *handle_command)(RGE_Diamond_Map *, unsigned int, int);
  int (__thiscall *handle_user_command)(RGE_Diamond_Map *, unsigned int, int);
  int (__thiscall *handle_timer_command)(RGE_Diamond_Map *, unsigned int, int);
  int (__thiscall *handle_scroll)(RGE_Diamond_Map *, int, int);
  int (__thiscall *handle_mouse_down)(RGE_Diamond_Map *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(RGE_Diamond_Map *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(RGE_Diamond_Map *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(RGE_Diamond_Map *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(RGE_Diamond_Map *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(RGE_Diamond_Map *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(RGE_Diamond_Map *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(RGE_Diamond_Map *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(RGE_Diamond_Map *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(RGE_Diamond_Map *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(RGE_Diamond_Map *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(RGE_Diamond_Map *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(RGE_Diamond_Map *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(RGE_Diamond_Map *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(RGE_Diamond_Map *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(RGE_Diamond_Map *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(RGE_Diamond_Map *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(RGE_Diamond_Map *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(RGE_Diamond_Map *, int, int, int, int);
  int (__thiscall *key_down_action)(RGE_Diamond_Map *, int, __int16, int, int, int);
  int (__thiscall *char_action)(RGE_Diamond_Map *, int, __int16);
  int (__thiscall *action)(RGE_Diamond_Map *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(RGE_Diamond_Map *, RECT *);
  int (__thiscall *is_inside)(RGE_Diamond_Map *, int, int);
  void (__thiscall *set_focus)(RGE_Diamond_Map *, int);
  void (__thiscall *set_tab_order_2)(RGE_Diamond_Map *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(RGE_Diamond_Map *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(RGE_Diamond_Map *);
  unsigned __int8 (__thiscall *get_help_info)(RGE_Diamond_Map *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(RGE_Diamond_Map *);
  int (__thiscall *restart_sound_system)(RGE_Diamond_Map *);
  void (__thiscall *take_snapshot)(RGE_Diamond_Map *);
  void (__thiscall *handle_reactivate)(RGE_Diamond_Map *);
  int (__thiscall *pointing_at)(RGE_Diamond_Map *, int, int, int *, int *, int *, int *, char *, int);
  void (__thiscall *draw_tile)(RGE_Diamond_Map *, __int16, __int16, int, unsigned __int8);
  void (__thiscall *draw_selected_area)(RGE_Diamond_Map *);
  void (__thiscall *draw_objects)(RGE_Diamond_Map *);
  void (__thiscall *draw_visible_object)(RGE_Diamond_Map *, RGE_Static_Object *, unsigned __int8, unsigned __int8);
  void (__thiscall *draw_object)(RGE_Diamond_Map *, __int16, __int16, unsigned __int8, __int16, RGE_Static_Object *);
  void (__thiscall *draw_view_rect)(RGE_Diamond_Map *);
};
#pragma pack(pop)

/* 69 */
#pragma pack(push, 8)
struct TRIBE_Master_Combat_Object
{
  TRIBE_Master_Combat_ObjectVtbl *vfptr;
  unsigned __int8 master_type;
  char *name;
  char *gbg_name2;
  __int16 unit_line;
  unsigned __int8 min_tech_level;
  __int16 string_id;
  __int16 string_id2;
  __int16 id;
  __int16 copy_id;
  __int16 base_id;
  __int16 object_group;
  RGE_Sprite *sprite;
  RGE_Sprite *sprite2;
  RGE_Sprite *death_sprite;
  RGE_Sprite *undead_sprite;
  unsigned __int8 undead_flag;
  __int16 hp;
  float los;
  unsigned __int8 obj_max;
  float radius_x;
  float radius_y;
  float radius_z;
  RGE_Sound *selected_sound;
  RGE_Sound *created_sound;
  RGE_Sound *death_sound;
  RGE_Sound *damage_sound;
  __int16 death_spawn_obj_id;
  unsigned __int8 sort_number;
  unsigned __int8 can_be_built_on;
  __int16 button_pict;
  unsigned __int8 hide_in_scenario_editor;
  __int16 portrait_pict;
  unsigned __int8 available;
  unsigned __int8 disabled;
  __int16 tile_req1;
  __int16 tile_req2;
  __int16 center_tile_req1;
  __int16 center_tile_req2;
  float construction_radius_x;
  float construction_radius_y;
  unsigned __int8 elevation_flag;
  unsigned __int8 fog_flag;
  __int16 terrain;
  unsigned __int8 movement_type;
  __int16 attribute_type_held[3];
  float attribute_amount_held[3];
  __int16 attribute_max_amount;
  float attribute_rot;
  float multiple_attribute_mod;
  unsigned __int8 attribute_flag[3];
  unsigned __int8 area_effect_object_level;
  unsigned __int8 combat_level;
  unsigned __int8 select_level;
  unsigned __int8 map_draw_level;
  unsigned __int8 unit_level;
  unsigned __int8 map_color;
  unsigned __int8 attack_reaction;
  unsigned __int8 convert_terrain_flag;
  unsigned __int8 damage_sprite_num;
  RGE_Damage_Sprite_Info *damage_sprites;
  unsigned __int8 occlusion_flag;
  unsigned __int8 obstruction_type;
  unsigned __int8 obstruction_class;
  unsigned int object_flags;
  int help_string_id;
  int help_page_id;
  int hotkey_id;
  unsigned __int8 recyclable;
  unsigned __int8 track_as_resource;
  unsigned __int8 create_doppleganger_on_death;
  unsigned __int8 resource_group;
  unsigned __int8 draw_flag;
  unsigned __int8 draw_color;
  float outline_radius_x;
  float outline_radius_y;
  float outline_radius_z;
  float speed;
  RGE_Sprite *move_sprite;
  RGE_Sprite *run_sprite;
  float turn_speed;
  unsigned __int8 size_class;
  __int16 obj_trail_id;
  unsigned __int8 obj_trail_options;
  float obj_trail_spacing;
  unsigned __int8 move_algorithem;
  float mTurnRadius;
  float mTurnRadiusSpeed;
  float mMaximumYawPerSecondMoving;
  float mStationaryYawRevolutionTime;
  float mMaximumYawPerSecondStationary;
  RGE_Task_List *tasks;
  __int16 default_task;
  float search_radius;
  float work_rate;
  float gbg_work_rate_2;
  __int16 drop_site;
  __int16 backup_drop_site;
  unsigned __int8 task_by_group;
  RGE_Sound *command_sound;
  RGE_Sound *move_sound;
  unsigned __int8 run_pattern;
  unsigned __int8 RGE_Master_Action_Object_gap[3];
  RGE_Sprite *fight_sprite;
  __int16 base_armor;
  __int16 armor_num;
  RGE_Armor_Weapon_Info *armor;
  __int16 weapon_num;
  RGE_Armor_Weapon_Info *weapon;
  __int16 defense_terrain_bonus;
  float weapon_range;
  float area_effect_range;
  unsigned __int8 area_effect_level;
  float speed_of_attack;
  __int16 missile_id;
  __int16 base_hit_chance;
  unsigned __int8 break_off_combat;
  __int16 fire_missile_at_frame;
  float weapon_offset_x;
  float weapon_offset_y;
  float weapon_offset_z;
  float minimum_weapon_range;
  __int16 orig_armor;
  __int16 orig_weapon;
  float orig_weapon_range;
  float orig_speed_of_attack;
  float missed_missile_spread;
  Attribute_Cost build_inventory[3];
  __int16 build_pts_required;
  __int16 id_of_building_obj;
  unsigned __int8 button_location;
  __int16 orig_pierce_armor;
  float rear_attack_modifier;
  float flank_attack_modifier;
  unsigned __int8 tribe_unit_type;
  float volley_fire_amount;
  unsigned __int8 max_attacks_in_volley;
  float volley_x_spread;
  float volley_y_spread;
  float volley_start_spread_adjustment;
  int volley_missile_id;
  int special_attack_sprite_id;
  unsigned __int8 special_attack_flag;
  unsigned __int8 hero_flag;
  RGE_Sprite *garrison_sprite;
};
#pragma pack(pop)

/* 774 */
#pragma pack(push, 8)
struct TRIBE_Master_Building_ObjectVtbl
{
  unsigned __int8 (__thiscall *gbg_needs_power)(TRIBE_Master_Building_Object *);
  RGE_Sprite *(__thiscall *gbg_get_sprite_civ_override)(TRIBE_Master_Building_Object *, RGE_Static_Object *);
  RGE_Sprite *(__thiscall *gbg_get_sprite2_civ_override)(TRIBE_Master_Building_Object *, RGE_Static_Object *);
  RGE_Sprite *(__thiscall *gbg_get_death_sprite_civ_override)(TRIBE_Master_Building_Object *, RGE_Static_Object *);
  RGE_Sprite *(__thiscall *gbg_get_undead_sprite_civ_override)(TRIBE_Master_Building_Object *, RGE_Static_Object *);
  void *(__thiscall *__vecDelDtor)(TRIBE_Master_Building_Object *, unsigned int);
  void (__thiscall *copy_obj)(TRIBE_Master_Building_Object *, RGE_Master_Static_Object *);
  void (__thiscall *modify)(TRIBE_Master_Building_Object *, float, unsigned __int8);
  void (__thiscall *modify_delta)(TRIBE_Master_Building_Object *, float, unsigned __int8);
  void (__thiscall *modify_percent)(TRIBE_Master_Building_Object *, float, unsigned __int8);
  void (__thiscall *small_save)(TRIBE_Master_Building_Object *, int);
  void (__thiscall *save)(TRIBE_Master_Building_Object *, int);
  RGE_Static_Object *(__thiscall *make_new_obj)(TRIBE_Master_Building_Object *, RGE_Player *, float, float, float);
  RGE_Master_Static_Object *(__thiscall *make_new_master)(TRIBE_Master_Building_Object *);
  unsigned __int8 (__thiscall *check_placement)(TRIBE_Master_Building_Object *, RGE_Player *, float, float, int *, unsigned __int8, unsigned __int8, unsigned __int8, unsigned __int8, unsigned __int8, unsigned __int8, RGE_Static_Object *, unsigned __int8);
  unsigned __int8 (__thiscall *alignment)(TRIBE_Master_Building_Object *, float *, float *, RGE_Game_World *, unsigned __int8);
  int (__thiscall *calc_base_damage_ability)(TRIBE_Master_Building_Object *, TRIBE_Master_Building_Object *);
  void (__thiscall *play_command_sound)(TRIBE_Master_Building_Object *, RGE_Player *);
  void (__thiscall *play_move_sound)(TRIBE_Master_Building_Object *, RGE_Player *);
  void (__thiscall *draw)(TRIBE_Master_Building_Object *, TDrawArea *, __int16, __int16, RGE_Color_Table *, int, int, int, unsigned __int8);
  float (__thiscall *maximumSpeed)(TRIBE_Master_Building_Object *, int);
  float (__thiscall *acceleration)(TRIBE_Master_Building_Object *, int);
  float (__thiscall *deceleration)(TRIBE_Master_Building_Object *, int);
  float (__thiscall *getTurnRadius)(TRIBE_Master_Building_Object *);
  float (__thiscall *getTurnRadiusSpeed)(TRIBE_Master_Building_Object *);
  int (__thiscall *setTurnRadiusOffTurnSpeed)(TRIBE_Master_Building_Object *);
  int (__thiscall *setTurnRadius)(TRIBE_Master_Building_Object *, float, float);
  float (__thiscall *getMaximumYawPerSecondMoving)(TRIBE_Master_Building_Object *);
  float (__thiscall *getMaximumYawPerSecondStationary)(TRIBE_Master_Building_Object *);
  void (__thiscall *setStationaryYawRevolutionTime)(TRIBE_Master_Building_Object *, float);
  RGE_Sprite *(__thiscall *gbg_get_move_sprite_civ_override)(TRIBE_Master_Building_Object *, RGE_Static_Object *);
  RGE_Sprite *(__thiscall *gbg_get_run_sprite_civ_override)(TRIBE_Master_Building_Object *, RGE_Static_Object *);
  RGE_Task_List *(__thiscall *create_task_list)(TRIBE_Master_Building_Object *);
  RGE_Sprite *(__thiscall *gbg_get_fight_sprite_civ_override)(TRIBE_Master_Building_Object *, RGE_Static_Object *);
  RGE_Static_Object *(__thiscall *make_new_obj_2)(TRIBE_Master_Building_Object *, RGE_Player *, float, float, float, int);
};
#pragma pack(pop)

/* 446 */
#pragma pack(push, 8)
struct CMemoryBlock
{
  unsigned int *mpData;
  CMemoryBlock *mpNextBlock;
};
#pragma pack(pop)

/* 343 */
#pragma pack(push, 8)
struct Time_Slice_History_Event
{
  unsigned __int8 event_type;
  int world_time_slice;
  int local_time_slice;
  unsigned int world_time;
  float data1;
  float data2;
  float data3;
};
#pragma pack(pop)

/* 772 */
#pragma pack(push, 8)
struct TRIBE_Master_Combat_ObjectVtbl
{
  unsigned __int8 (__thiscall *gbg_needs_power)(TRIBE_Master_Combat_Object *);
  RGE_Sprite *(__thiscall *gbg_get_sprite_civ_override)(TRIBE_Master_Combat_Object *, RGE_Static_Object *);
  RGE_Sprite *(__thiscall *gbg_get_sprite2_civ_override)(TRIBE_Master_Combat_Object *, RGE_Static_Object *);
  RGE_Sprite *(__thiscall *gbg_get_death_sprite_civ_override)(TRIBE_Master_Combat_Object *, RGE_Static_Object *);
  RGE_Sprite *(__thiscall *gbg_get_undead_sprite_civ_override)(TRIBE_Master_Combat_Object *, RGE_Static_Object *);
  void *(__thiscall *__vecDelDtor)(TRIBE_Master_Combat_Object *, unsigned int);
  void (__thiscall *copy_obj)(TRIBE_Master_Combat_Object *, RGE_Master_Static_Object *);
  void (__thiscall *modify)(TRIBE_Master_Combat_Object *, float, unsigned __int8);
  void (__thiscall *modify_delta)(TRIBE_Master_Combat_Object *, float, unsigned __int8);
  void (__thiscall *modify_percent)(TRIBE_Master_Combat_Object *, float, unsigned __int8);
  void (__thiscall *small_save)(TRIBE_Master_Combat_Object *, int);
  void (__thiscall *save)(TRIBE_Master_Combat_Object *, int);
  RGE_Static_Object *(__thiscall *make_new_obj)(TRIBE_Master_Combat_Object *, RGE_Player *, float, float, float);
  RGE_Master_Static_Object *(__thiscall *make_new_master)(TRIBE_Master_Combat_Object *);
  unsigned __int8 (__thiscall *check_placement)(TRIBE_Master_Combat_Object *, RGE_Player *, float, float, int *, unsigned __int8, unsigned __int8, unsigned __int8, unsigned __int8, unsigned __int8, unsigned __int8, RGE_Static_Object *, unsigned __int8);
  unsigned __int8 (__thiscall *alignment)(TRIBE_Master_Combat_Object *, float *, float *, RGE_Game_World *, unsigned __int8);
  int (__thiscall *calc_base_damage_ability)(TRIBE_Master_Combat_Object *, TRIBE_Master_Combat_Object *);
  void (__thiscall *play_command_sound)(TRIBE_Master_Combat_Object *, RGE_Player *);
  void (__thiscall *play_move_sound)(TRIBE_Master_Combat_Object *, RGE_Player *);
  void (__thiscall *draw)(TRIBE_Master_Combat_Object *, TDrawArea *, __int16, __int16, RGE_Color_Table *, int, int, int, unsigned __int8);
  float (__thiscall *maximumSpeed)(TRIBE_Master_Combat_Object *, int);
  float (__thiscall *acceleration)(TRIBE_Master_Combat_Object *, int);
  float (__thiscall *deceleration)(TRIBE_Master_Combat_Object *, int);
  float (__thiscall *getTurnRadius)(TRIBE_Master_Combat_Object *);
  float (__thiscall *getTurnRadiusSpeed)(TRIBE_Master_Combat_Object *);
  int (__thiscall *setTurnRadiusOffTurnSpeed)(TRIBE_Master_Combat_Object *);
  int (__thiscall *setTurnRadius)(TRIBE_Master_Combat_Object *, float, float);
  float (__thiscall *getMaximumYawPerSecondMoving)(TRIBE_Master_Combat_Object *);
  float (__thiscall *getMaximumYawPerSecondStationary)(TRIBE_Master_Combat_Object *);
  void (__thiscall *setStationaryYawRevolutionTime)(TRIBE_Master_Combat_Object *, float);
  RGE_Sprite *(__thiscall *gbg_get_move_sprite_civ_override)(TRIBE_Master_Combat_Object *, RGE_Static_Object *);
  RGE_Sprite *(__thiscall *gbg_get_run_sprite_civ_override)(TRIBE_Master_Combat_Object *, RGE_Static_Object *);
  RGE_Task_List *(__thiscall *create_task_list)(TRIBE_Master_Combat_Object *);
  RGE_Sprite *(__thiscall *gbg_get_fight_sprite_civ_override)(TRIBE_Master_Combat_Object *, RGE_Static_Object *);
};
#pragma pack(pop)

/* 68 */
#pragma pack(push, 8)
struct TRIBE_Combat_Object
{
  TRIBE_Combat_ObjectVtbl *vfptr;
  int gbg_unknown_1;
  float gbg_unknown_2;
  int gbg_unknown_3;
  int id;
  TRIBE_Master_Combat_Object *master_obj;
  TRIBE_Player *owner;
  RGE_Sprite *sprite;
  RGE_Sprite *old_sprite;
  RGE_Active_Sprite_List *sprite_list;
  RGE_Tile *tile;
  RGE_Static_Object *inside_obj;
  RGE_New_Object_List *objects;
  __int16 screen_x_offset;
  __int16 screen_y_offset;
  __int16 shadow_x_offset;
  __int16 shadow_y_offset;
  float hp;
  float sp;
  unsigned __int8 curr_damage_percent;
  unsigned __int8 facet;
  unsigned __int8 selected;
  float world_x;
  float world_y;
  float world_z;
  float attribute_amount_held;
  unsigned __int8 object_state;
  unsigned __int8 sleep_flag;
  unsigned __int8 dopple_flag;
  unsigned __int8 goto_sleep_flag;
  __int16 attribute_type_held;
  unsigned __int8 type;
  unsigned __int8 worker_num;
  ObsRecord *CurrentObstructionData;
  ObsRecord *ObstructionDataList;
  RGE_Static_Object **player_object_node;
  int *mPathingGroup;
  int mPathingGroupSize;
  int mMaximumPathingGroupSize;
  int damaged_lately_timer;
  UnitAIModule *unitAIValue;
  int zoneMapIndex;
  unsigned __int8 inObstructionMapValue;
  unsigned __int8 lastInObstructionMapValue;
  unsigned __int8 underAttackValue;
  int mGroupID;
  unsigned __int8 mROOAlreadyCalled;
  LOS_ExploreInfo ei;
  float speed;
  float trail_remainder;
  float velocity_x;
  float velocity_y;
  float velocity_z;
  float angle;
  float turn_towards_time;
  unsigned __int8 on_ground;
  float turnTimer;
  int continueCounter;
  int currentTerrainException1;
  int currentTerrainException2;
  unsigned __int8 waitingToMoveValue;
  unsigned __int8 numberWaitDelays;
  BVector *userDefinedWaypoints;
  int numberUserDefinedWaypointsValue;
  int maximumNumberUserDefinedWaypointsValue;
  BVector positionValue;
  BVector orientationForwardValue;
  BVector orientationRightValue;
  BPathData *pathData;
  BPathData *mFuturePathData;
  BMovementData *movementData;
  unsigned int lastMoveTimeValue;
  int mHasSubstitutePosition;
  BVector mSubstitutePosition;
  int mConsecutiveSubstituteCount;
  RGE_Action_List *actions;
  unsigned __int8 waiting;
  unsigned __int8 command_flag;
  __int16 Selected_Group_Info;
  VISIBLE_UNIT_REC *VUR_Ptrs[9];
  unsigned int Unified_Map_Value;
  unsigned __int8 Multi_Unified_Points;
  unsigned __int8 Large_Object_Radius;
  int attack_count;
  float attack_timer;
  unsigned __int8 capture_flag;
  unsigned __int8 formation_id;
  unsigned __int8 formation_row;
  unsigned __int8 formation_col;
  __int16 attr_amt[6];
  __int16 decay_timer;
  int raider_build_countdown;
  unsigned __int8 inside_garrison_count;
  unsigned __int8 town_bell_flag;
  int town_bell_target_id;
  int town_bell_target_type;
  int town_bell_action;
  int town_bell_target_id2;
  float town_bell_target_x;
  float town_bell_target_y;
  unsigned __int8 num_builders;
  unsigned __int8 num_healers;
  unsigned __int8 own_master;
  float current_volley_fire_amount;
  unsigned __int8 next_volley;
  unsigned __int8 using_special_attack_animation;
  int locked_down_count;
  unsigned __int8 user_released;
  float berserker_timer;
};
#pragma pack(pop)

/* 763 */
#pragma pack(push, 8)
struct TRIBE_Combat_ObjectVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Combat_Object *, unsigned int);
  int (__thiscall *gbg_unknown1)(TRIBE_Combat_Object *);
  int (__thiscall *gbg_get_civ_override)(TRIBE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_unknown3)(TRIBE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_unknown4)(TRIBE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_unknown5)(TRIBE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_unknown6)(TRIBE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_unknown7)(TRIBE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_unknown8)(TRIBE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_unknown9)(TRIBE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_unknown10)(TRIBE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_unknown11)(TRIBE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_isPadawan)(TRIBE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_isMaster)(TRIBE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_unknown14)(TRIBE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_isShielded)(TRIBE_Combat_Object *);
  void (__thiscall *gbg_unknown16)(TRIBE_Combat_Object *);
  void (__thiscall *gbg_unknown17)(TRIBE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_unknown18)(TRIBE_Combat_Object *, int);
  unsigned __int8 (__thiscall *gbg_isDetector)(TRIBE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_unknown20)(TRIBE_Combat_Object *, int);
  unsigned __int8 (__thiscall *gbg_isPowered)(TRIBE_Combat_Object *, int);
  void (__thiscall *gbg_unknown22)(TRIBE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_unknown23)(TRIBE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_isBiological)(TRIBE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_isDamaged)(TRIBE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_unknown26)(TRIBE_Combat_Object *);
  unsigned __int8 (__thiscall *gbg_canBeHealedByPlayer)(TRIBE_Combat_Object *, int);
  unsigned __int8 (__thiscall *gbg_canBeRepairedByPlayer)(TRIBE_Combat_Object *, int);
  void (__thiscall *recycle_in_to_game)(TRIBE_Combat_Object *, RGE_Master_Static_Object *, RGE_Player *, float, float, float);
  void (__thiscall *recycle_out_of_game)(TRIBE_Combat_Object *);
  void (__thiscall *draw)(TRIBE_Combat_Object *, TDrawArea *, __int16, __int16, RGE_Color_Table *);
  void (__thiscall *shadow_draw)(TRIBE_Combat_Object *, TDrawArea *, __int16, __int16, unsigned __int8);
  void (__thiscall *normal_draw)(TRIBE_Combat_Object *, TDrawArea *, __int16, __int16);
  void (__thiscall *draw_front_frame)(TRIBE_Combat_Object *, TDrawArea *, __int16, __int16);
  void (__thiscall *draw_back_frame)(TRIBE_Combat_Object *, TDrawArea *, __int16, __int16);
  void (__thiscall *draw_frame)(TRIBE_Combat_Object *, TDrawArea *, __int16, __int16);
  unsigned __int8 (__thiscall *update)(TRIBE_Combat_Object *);
  void (__thiscall *check_damage_sprites)(TRIBE_Combat_Object *);
  void (__thiscall *rehook)(TRIBE_Combat_Object *);
  void (__thiscall *save)(TRIBE_Combat_Object *, int);
  void (__thiscall *teleport_off_map)(TRIBE_Combat_Object *);
  float (__thiscall *teleport)(TRIBE_Combat_Object *, float, float, float);
  float (__thiscall *handle_teleport_z_correction)(TRIBE_Combat_Object *, float);
  void (__thiscall *new_sprite)(TRIBE_Combat_Object *, RGE_Sprite *);
  void (__thiscall *add_overlay_sprite)(TRIBE_Combat_Object *, RGE_Sprite *, unsigned __int8);
  void (__thiscall *remove_overlay_sprite)(TRIBE_Combat_Object *, RGE_Sprite *);
  void (__thiscall *change_ownership)(TRIBE_Combat_Object *, RGE_Player *);
  void (__thiscall *modify)(TRIBE_Combat_Object *, float, unsigned __int8);
  void (__thiscall *modify_delta)(TRIBE_Combat_Object *, float, unsigned __int8);
  void (__thiscall *modify_percent)(TRIBE_Combat_Object *, float, unsigned __int8);
  void (__thiscall *transform)(TRIBE_Combat_Object *, RGE_Master_Static_Object *);
  void (__thiscall *copy_obj)(TRIBE_Combat_Object *, RGE_Master_Static_Object *);
  void (__thiscall *set_object_state)(TRIBE_Combat_Object *, unsigned __int8);
  void (__thiscall *remove_visible_resource)(TRIBE_Combat_Object *);
  void (__thiscall *create_doppleganger_when_dying)(TRIBE_Combat_Object *);
  void (__thiscall *destroy_obj)(TRIBE_Combat_Object *);
  void (__thiscall *die_die_die)(TRIBE_Combat_Object *);
  void (__thiscall *damage)(TRIBE_Combat_Object *, int, RGE_Armor_Weapon_Info *, float, RGE_Player *, RGE_Static_Object *, int);
  float (__thiscall *calculateDamage)(TRIBE_Combat_Object *, int, RGE_Armor_Weapon_Info *, float, RGE_Player *, RGE_Static_Object *);
  void (__thiscall *rotate)(TRIBE_Combat_Object *, int);
  unsigned __int8 (__thiscall *can_attack)(TRIBE_Combat_Object *);
  void (__thiscall *set_attribute)(TRIBE_Combat_Object *, __int16, float);
  void (__thiscall *set_attribute_amount)(TRIBE_Combat_Object *, float, unsigned __int8, unsigned __int8);
  int (__thiscall *heal_2)(TRIBE_Combat_Object *, int, int);
  unsigned __int8 (__thiscall *heal_1)(TRIBE_Combat_Object *, float);
  int (__thiscall *canRepair)(TRIBE_Combat_Object *);
  void (__thiscall *notify_of_relation)(TRIBE_Combat_Object *, int, unsigned __int8);
  void (__thiscall *do_command)(TRIBE_Combat_Object *, RGE_Static_Object *, float, float, float);
  int (__thiscall *actionTypeIfOrdered)(TRIBE_Combat_Object *, RGE_Static_Object *, float, float, float, float *);
  unsigned __int8 (__thiscall *move_to)(TRIBE_Combat_Object *, RGE_Static_Object *, float, float, float);
  void (__thiscall *work)(TRIBE_Combat_Object *, RGE_Static_Object *, float, float, float);
  void (__thiscall *stop)(TRIBE_Combat_Object *);
  void (__thiscall *set_attack)(TRIBE_Combat_Object *, RGE_Static_Object *);
  void (__thiscall *play_command_sound)(TRIBE_Combat_Object *);
  void (__thiscall *play_move_sound)(TRIBE_Combat_Object *);
  void (__thiscall *new_angle)(TRIBE_Combat_Object *, float);
  RGE_Static_Object *(__thiscall *spawn_death_obj)(TRIBE_Combat_Object *);
  RGE_Master_Static_Object *(__thiscall *get_command_master)(TRIBE_Combat_Object *, RGE_Static_Object *, float, float, float);
  void (__thiscall *set_being_worked_on)(TRIBE_Combat_Object *, RGE_Action_Object *, __int16, unsigned __int8);
  void (__thiscall *release_being_worked_on)(TRIBE_Combat_Object *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *is_moving)(TRIBE_Combat_Object *);
  RGE_Static_Object *(__thiscall *get_target_obj)(TRIBE_Combat_Object *);
  unsigned __int8 (__thiscall *more_room)(TRIBE_Combat_Object *, RGE_Static_Object *);
  void (__thiscall *enter_obj)(TRIBE_Combat_Object *, RGE_Static_Object *, unsigned __int8);
  void (__thiscall *exit_obj)(TRIBE_Combat_Object *);
  void (__thiscall *add_obj)(TRIBE_Combat_Object *, RGE_Static_Object *);
  void (__thiscall *remove_obj)(TRIBE_Combat_Object *, RGE_Static_Object *);
  int (__thiscall *explore_terrain)(TRIBE_Combat_Object *, RGE_Player *, unsigned __int8, int, int);
  void (__thiscall *unexplore_terrain)(TRIBE_Combat_Object *, RGE_Player *, unsigned __int8, int, int);
  LOSTBL *(__thiscall *get_los_table)(TRIBE_Combat_Object *);
  unsigned __int8 (__thiscall *get_visibility)(TRIBE_Combat_Object *, RGE_Player *);
  int (__thiscall *inAttackRange)(TRIBE_Combat_Object *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *underAttack)(TRIBE_Combat_Object *);
  void (__thiscall *setUnderAttack)(TRIBE_Combat_Object *, unsigned __int8);
  float (__thiscall *calc_attack_modifier)(TRIBE_Combat_Object *, RGE_Static_Object *);
  float (__thiscall *getSpeed)(TRIBE_Combat_Object *);
  float (__thiscall *getAngle)(TRIBE_Combat_Object *);
  float (__thiscall *maximumSpeed)(TRIBE_Combat_Object *);
  float (__thiscall *rateOfFire)(TRIBE_Combat_Object *);
  float (__thiscall *damageCapability_2)(TRIBE_Combat_Object *, RGE_Static_Object *);
  float (__thiscall *damageCapability_1)(TRIBE_Combat_Object *);
  float (__thiscall *weaponRange)(TRIBE_Combat_Object *);
  float (__thiscall *minimumWeaponRange)(TRIBE_Combat_Object *);
  int (__thiscall *passableTile_2)(TRIBE_Combat_Object *, float, float, int *, int);
  int (__thiscall *passableTile_1)(TRIBE_Combat_Object *, float, float);
  int (__thiscall *currentTargetID)(TRIBE_Combat_Object *);
  float (__thiscall *currentTargetX)(TRIBE_Combat_Object *);
  float (__thiscall *currentTargetY)(TRIBE_Combat_Object *);
  float (__thiscall *currentTargetZ)(TRIBE_Combat_Object *);
  void (__thiscall *setWaitingToMove)(TRIBE_Combat_Object *, unsigned __int8);
  unsigned __int8 (__thiscall *waitingToMove)(TRIBE_Combat_Object *);
  unsigned __int8 (__thiscall *actionState)(TRIBE_Combat_Object *);
  unsigned __int8 (__thiscall *keepGatheringWhenObjectIsOut)(TRIBE_Combat_Object *, int);
  unsigned __int8 (__thiscall *produceWhenKilledBy)(TRIBE_Combat_Object *, int);
  unsigned __int8 (__thiscall *useSameZoneDropsite)(TRIBE_Combat_Object *);
  float (__thiscall *searchRadius)(TRIBE_Combat_Object *);
  unsigned __int8 (__thiscall *is_idle)(TRIBE_Combat_Object *);
  void (*logDebug)(TRIBE_Combat_Object *, char *, ...);
  void (*debug)(TRIBE_Combat_Object *, char *, ...);
  void (__thiscall *notify)(TRIBE_Combat_Object *, int, int, int, int, int, int);
  int (__thiscall *attack_2)(TRIBE_Combat_Object *, float, float, float, int);
  int (__thiscall *attack_1)(TRIBE_Combat_Object *, int, int);
  int (__thiscall *moveTo_3)(TRIBE_Combat_Object *, float, float, float, float, int, int);
  int (__thiscall *moveTo_2)(TRIBE_Combat_Object *, int, float, int);
  int (__thiscall *moveTo_1)(TRIBE_Combat_Object *, int, int);
  int (__thiscall *moveAwayFrom)(TRIBE_Combat_Object *, int, int);
  int (__thiscall *hunt)(TRIBE_Combat_Object *, int, int);
  int (__thiscall *gather)(TRIBE_Combat_Object *, int, int);
  int (__thiscall *convert)(TRIBE_Combat_Object *, int, int);
  int (__thiscall *repair)(TRIBE_Combat_Object *, int, int);
  int (__thiscall *build)(TRIBE_Combat_Object *, int, int);
  int (__thiscall *trade)(TRIBE_Combat_Object *, int, int);
  int (__thiscall *explore)(TRIBE_Combat_Object *, int, int, int);
  int (__thiscall *enter)(TRIBE_Combat_Object *, int, int);
  int (__thiscall *unload)(TRIBE_Combat_Object *, int, float, float, float);
  int (__thiscall *transport)(TRIBE_Combat_Object *, float, float, float, int);
  int (__thiscall *stopAction)(TRIBE_Combat_Object *);
  int (__thiscall *pause)(TRIBE_Combat_Object *);
  int (__thiscall *canPath_2)(TRIBE_Combat_Object *, int, float, float *, int, int, bool);
  int (__thiscall *canPath_1)(TRIBE_Combat_Object *, XYZPoint, float, int, float *, int, int, bool);
  int (__thiscall *canQuickPath)(TRIBE_Combat_Object *, int, float, float *);
  int (__thiscall *canPathWithObstructions)(TRIBE_Combat_Object *, int, float, float *, int, int, ManagedArray_int_ *);
  int (__thiscall *canPathWithAdditionalPassability)(TRIBE_Combat_Object *, XYZPoint, float, int, float *, int, int, int, int, int, BPath *);
  int (__thiscall *findFirstTerrainAlongExceptionPath)(TRIBE_Combat_Object *, int, float *, float *, BPath *);
  int (__thiscall *canLinePath_2)(TRIBE_Combat_Object *, int, int, int, int, float, int);
  int (__thiscall *canLinePath_1)(TRIBE_Combat_Object *, const XYPoint *, const XYPoint *, float, XYPoint *, int);
  int (__thiscall *firstTileAlongLine)(TRIBE_Combat_Object *, const XYPoint *, const XYPoint *, XYPoint *, int, int, int);
  unsigned __int8 (__thiscall *have_action)(TRIBE_Combat_Object *);
  int (__thiscall *gameActionType)(TRIBE_Combat_Object *);
  BVector *(__thiscall *userDefinedWaypoint)(TRIBE_Combat_Object *, int);
  int (__thiscall *addUserDefinedWaypoint)(TRIBE_Combat_Object *, float, float, float);
  void (__thiscall *zeroUserDefinedWaypoints)(TRIBE_Combat_Object *);
  void (__thiscall *removeAllUserDefinedWaypoints)(TRIBE_Combat_Object *);
  int (__thiscall *numberUserDefinedWaypoints)(TRIBE_Combat_Object *);
  BPath *(__thiscall *getPatrolInformation)(TRIBE_Combat_Object *, int *);
  float (__thiscall *distanceToHighestLevelPath_2)(TRIBE_Combat_Object *, BVector);
  float (__thiscall *distanceToHighestLevelPath_1)(TRIBE_Combat_Object *);
  BPath *(__thiscall *findAvoidancePath)(TRIBE_Combat_Object *, XYZPoint *, float, int);
  int (__thiscall *get_action_checksum)(TRIBE_Combat_Object *);
  int (__thiscall *get_waypoint_checksum)(TRIBE_Combat_Object *);
  void (__thiscall *setPatrolMode)(TRIBE_Combat_Object *, unsigned __int8);
  int (__thiscall *garrisoned_count)(TRIBE_Combat_Object *);
  int (__thiscall *lock_down)(TRIBE_Combat_Object *);
  int (__thiscall *unlock_down)(TRIBE_Combat_Object *);
  int (__thiscall *get_locked_down_count)(TRIBE_Combat_Object *);
  float (__thiscall *getTradeAmount)(TRIBE_Combat_Object *, float, float, float, float);
  int (__thiscall *setup_2)(TRIBE_Combat_Object *, int, RGE_Game_World *);
  int (__thiscall *setup_1)(TRIBE_Combat_Object *, RGE_Master_Static_Object *, RGE_Player *, float, float, float);
  RGE_New_Object_List *(__thiscall *create_object_list)(TRIBE_Combat_Object *);
  RGE_Active_Sprite_List *(__thiscall *create_sprite_list)(TRIBE_Combat_Object *);
  BVector *(__thiscall *position)(TRIBE_Combat_Object *, BVector *);
  BPathData *(__thiscall *getPathData)(TRIBE_Combat_Object *);
  int (__thiscall *actionType)(TRIBE_Combat_Object *);
  int (__thiscall *hasActionOfType)(TRIBE_Combat_Object *, int);
  int (__thiscall *gbg_hasActionOfType2)(TRIBE_Combat_Object *, int);
  int (__thiscall *addMove)(TRIBE_Combat_Object *, int, float, int, int, int);
  int (__thiscall *addCurrentPath)(TRIBE_Combat_Object *, BPath *, int, float, int);
  int (__thiscall *addFuturePath)(TRIBE_Combat_Object *, BPath *, int, float, int);
  void (__thiscall *stopAllMovement)(TRIBE_Combat_Object *);
  void (__thiscall *setOrientation)(TRIBE_Combat_Object *, BVector *, BVector *);
  BVector *(__thiscall *velocity)(TRIBE_Combat_Object *, BVector *);
  void (__thiscall *setVelocity)(TRIBE_Combat_Object *, BVector *);
  BVector *(__thiscall *acceleration)(TRIBE_Combat_Object *, BVector *);
  void (__thiscall *setAcceleration)(TRIBE_Combat_Object *, BVector *);
  float (__thiscall *forwardVelocity)(TRIBE_Combat_Object *);
  void (__thiscall *setForwardVelocity)(TRIBE_Combat_Object *, float);
  float (__thiscall *forwardAcceleration)(TRIBE_Combat_Object *);
  void (__thiscall *setForwardAcceleration)(TRIBE_Combat_Object *, float);
  void (__thiscall *moveForward)(TRIBE_Combat_Object *, float);
  void (__thiscall *setPosition)(TRIBE_Combat_Object *, BVector *);
  void (__thiscall *yaw)(TRIBE_Combat_Object *, float);
  int (__thiscall *isMoving)(TRIBE_Combat_Object *);
  void (__thiscall *stopMoving)(TRIBE_Combat_Object *);
  float (__thiscall *calculateFutureVelocity)(TRIBE_Combat_Object *, float, float, float, BVector *);
  unsigned int (__thiscall *lastMoveTime)(TRIBE_Combat_Object *);
  void (__thiscall *pauseMovement)(TRIBE_Combat_Object *, float);
  int (__thiscall *movementPriority)(TRIBE_Combat_Object *);
  int (__thiscall *intelligentMovementUpdate)(TRIBE_Combat_Object *);
  float (__thiscall *calculateMaximumSpeed)(TRIBE_Combat_Object *, int);
  int (__thiscall *calculateForward)(TRIBE_Combat_Object *, BVector *, BVector *, BVector *);
  float (__thiscall *calculateYawAngle)(TRIBE_Combat_Object *, BVector *, BVector *, float, int *);
  int (__thiscall *calculateReachedPoint)(TRIBE_Combat_Object *, BVector *, BVector *, BVector *);
  float (__thiscall *calculateTurnRadius)(TRIBE_Combat_Object *);
  int (__thiscall *checkAcceleration)(TRIBE_Combat_Object *, BVector *, int, int);
  BVector *(__thiscall *straightProjectedPosition)(TRIBE_Combat_Object *, BVector *, BVector *, float);
  int (__thiscall *onPatrol)(TRIBE_Combat_Object *);
  BVector *(__thiscall *orientationForward)(TRIBE_Combat_Object *, BVector *);
  int (__thiscall *setRunSprite)(TRIBE_Combat_Object *);
  int (__thiscall *setMoveSprite)(TRIBE_Combat_Object *);
  int (__thiscall *setFidgetSprite)(TRIBE_Combat_Object *);
  int (__thiscall *getGateLocked)(TRIBE_Combat_Object *);
  void (__thiscall *setGateLocked)(TRIBE_Combat_Object *, int);
  int (__thiscall *isGateOpenable)(TRIBE_Combat_Object *, int);
  int (__thiscall *getLinkedChild)(TRIBE_Combat_Object *, int);
  int (__thiscall *get_next_selected_group)(TRIBE_Combat_Object *, int);
  __int16 (__thiscall *get_Selected_Groups)(TRIBE_Combat_Object *);
  void (__thiscall *set_Selected_Groups)(TRIBE_Combat_Object *, __int16);
  int (__thiscall *get_num_Selected_groups)(TRIBE_Combat_Object *);
  int (__thiscall *setup_3)(TRIBE_Combat_Object *, RGE_Master_Animated_Object *, RGE_Player *, float, float, float);
  void (__thiscall *stop_moving)(TRIBE_Combat_Object *);
  unsigned __int8 (__thiscall *turn_towards)(TRIBE_Combat_Object *, RGE_Static_Object *, float, float);
  void (__thiscall *set_angle)(TRIBE_Combat_Object *);
  int (__thiscall *canLinePath_4)(TRIBE_Combat_Object *, int, int, int, int, float);
  int (__thiscall *canLinePath_3)(TRIBE_Combat_Object *, XYPoint *, XYPoint *, float, XYPoint *);
  int (__thiscall *setup_4)(TRIBE_Combat_Object *, RGE_Master_Moving_Object *, RGE_Player *, float, float, float);
  int (__thiscall *addMove_2)(TRIBE_Combat_Object *, int, float, float, float, float, int, int, int);
  void (__thiscall *work2)(TRIBE_Combat_Object *, RGE_Static_Object *, float, float, float, unsigned __int8, __int16);
  void (__thiscall *set_task)(TRIBE_Combat_Object *, __int16);
  void (__thiscall *setTaskByTaskID)(TRIBE_Combat_Object *, int);
  void (__thiscall *set_action)(TRIBE_Combat_Object *, RGE_Action *);
  void (__thiscall *set_only_action)(TRIBE_Combat_Object *, RGE_Action *);
  void (__thiscall *set_end_action)(TRIBE_Combat_Object *, RGE_Action *);
  RGE_Task *(__thiscall *getTask)(TRIBE_Combat_Object *, RGE_Static_Object *, float, float, float, __int16);
  void (__thiscall *setUnitAIAction)(TRIBE_Combat_Object *, int, RGE_Static_Object *, float, float, float);
  int (__thiscall *setup_5)(TRIBE_Combat_Object *, RGE_Master_Action_Object *, RGE_Player *, float, float, float);
  RGE_Action_List *(__thiscall *create_action_list)(TRIBE_Combat_Object *);
  unsigned __int8 (__thiscall *area_attack)(TRIBE_Combat_Object *, float, float, float, RGE_Combat_Object *, RGE_Static_Object *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *attack_4)(TRIBE_Combat_Object *, float, float, float, RGE_Combat_Object *);
  unsigned __int8 (__thiscall *attack_3)(TRIBE_Combat_Object *, RGE_Static_Object *, RGE_Combat_Object *);
  unsigned __int8 (__thiscall *do_attack)(TRIBE_Combat_Object *, RGE_Static_Object *, RGE_Combat_Object *, float, float, float, float);
  void (__thiscall *get_armor)(TRIBE_Combat_Object *, __int16 *, __int16 *);
  void (__thiscall *get_weapon)(TRIBE_Combat_Object *, __int16 *, __int16 *);
  void (__thiscall *get_weapon_range)(TRIBE_Combat_Object *, float *, float *);
  void (__thiscall *get_speed_of_attack)(TRIBE_Combat_Object *, float *, float *);
  int (__thiscall *inAttackRange_2)(TRIBE_Combat_Object *, RGE_Static_Object *, int *);
  int (__thiscall *setup_6)(TRIBE_Combat_Object *, RGE_Master_Combat_Object *, RGE_Player *, float, float, float);
  void (__thiscall *cancel_object)(TRIBE_Combat_Object *);
  void (__thiscall *get_pierce_armor)(TRIBE_Combat_Object *, __int16 *, __int16 *);
  void (__thiscall *calc_sprite_frame)(TRIBE_Combat_Object *);
  int (__thiscall *higher_check_for_cliff)(TRIBE_Combat_Object *, RGE_Static_Object *, int, int, float, float, float, float, RGE_Map *, RGE_Static_Object *, float *, int *);
  int (__thiscall *higher_than_target)(TRIBE_Combat_Object *, RGE_Static_Object *);
  int (__thiscall *work_status)(TRIBE_Combat_Object *, __int16 *, __int16 *, __int16 *, char *, __int16);
  unsigned __int8 (__thiscall *heal_other)(TRIBE_Combat_Object *, float, RGE_Player *, int);
  void (__thiscall *initUnitAI)(TRIBE_Combat_Object *);
  int (__thiscall *setup_7)(TRIBE_Combat_Object *, TRIBE_Master_Combat_Object *, RGE_Player *, float, float, float);
};
#pragma pack(pop)

/* 659 */
#pragma pack(push, 8)
struct RGE_Timing_Info
{
  unsigned int accum_time;
  unsigned int last_time;
  unsigned int start_time;
  int include_in_total;
  int is_summary;
  unsigned int last_single_time;
  unsigned int max_time;
  unsigned int last_max_time;
};
#pragma pack(pop)

/* 608 */
#pragma pack(push, 8)
struct RGE_Base_Game__RGE_Game_Options
{
  float versionValue;
  unsigned __int8 scenarioGameValue;
  char scenarioNameValue[128];
  unsigned __int8 singlePlayerGameValue;
  unsigned __int8 multiplayerGameValue;
  unsigned __int8 mapXSizeValue;
  unsigned __int8 mapYSizeValue;
  unsigned __int8 mapZSizeValue;
  unsigned __int8 allowCheatCodesValue;
  unsigned __int8 mpPathFindingValue;
  unsigned __int8 cheatNotificationValue;
  unsigned __int8 fogOfWarValue;
  unsigned __int8 coloredChatValue;
  unsigned __int8 numberPlayersValue;
  unsigned __int8 gameDeveloperModeValue;
  unsigned __int8 playerCDAndVersionValue[9];
  unsigned __int8 difficultyValue;
  unsigned __int8 restoreGameValue;
  unsigned __int8 playerTeamValue[9];
  unsigned __int8 gameSpeedLocked;
  unsigned __int8 gameTeamsLocked;
  float gameSpeed;
  unsigned __int8 recordGameValue;
};
#pragma pack(pop)

/* 658 */
#pragma pack(push, 8)
struct commlog_tag
{
  int resynch;
  int routing;
  int filexfer;
  int commandlogging;
  int commandreplaying;
};
#pragma pack(pop)

/* 74 */
#pragma pack(push, 8)
struct RGE_Base_Game
{
  RGE_Base_GameVtbl *vfptr;
  unsigned __int8 main_dialog_state;
  int soundIDs[5];
  int number_of_pauses;
  RGE_Game_Info *player_game_info;
  RGE_Prog_Info *prog_info;
  HWND prog_window;
  int prog_ready;
  int prog_active;
  HPALETTE prog_palette;
  HANDLE prog_mutex;
  int window_style;
  HHOOK handleKeyboardHook;
  int random_game_seed;
  int random_map_seed;
  int save_random_game_seed;
  int save_random_map_seed;
  int screen_saver_enabled;
  int low_power_enabled;
  int in_game_screen_size_in_use_flag;
  int error_code;
  int is_timer;
  TDrawSystem *draw_system;
  TDrawArea *draw_area;
  unsigned __int8 outline_type;
  int custom_mouse;
  __int16 shape_num;
  TShape **shapes;
  TSound_Driver *sound_system;
  TMusic_System *music_system;
  __int16 sound_num;
  TDigital **sounds;
  int sound_frequency;
  SoundManager *soundManager;
  unsigned __int8 save_music_type;
  int save_music_track_from;
  int save_music_track_to;
  int save_music_cur_track;
  char save_music_file[260];
  int save_music_loop;
  unsigned int save_music_pos;
  TCommunications_Handler *comm_handler;
  int comm_syncstop;
  int comm_droppackets;
  int comm_syncmsg;
  int comm_stepmode;
  int comm_speed;
  TDebuggingLog *debugLog;
  TDebuggingLog *commentsLog;
  int log_comm;
  TRegistry *registry;
  int prog_mode;
  int game_mode;
  int sub_game_mode;
  int paused;
  TMousePointer *mouse_pointer;
  int erase_mouse;
  int mouse_blit_sync;
  int is_mouse_on;
  int windows_mouse;
  HCURSOR mouse_cursor;
  int input_enabled;
  HWND input_disabled_window;
  __int16 font_num;
  RGE_Font *fonts;
  char work_dir[261];
  char string_dll_name[261];
  TRIBE_World *world;
  int render_all;
  __int16 master_obj_id;
  __int16 master_obj_facet;
  unsigned __int8 ignore_place_obj;
  __int16 terrain_id;
  __int16 elevation_height;
  __int16 brush_size;
  char timing_text[256];
  unsigned int frame_count;
  unsigned int world_update_count;
  unsigned int view_update_count;
  unsigned int last_frame_count;
  unsigned int last_world_update_count;
  unsigned int last_view_update_count;
  unsigned int fps;
  unsigned int world_update_fps;
  unsigned int view_update_fps;
  RGE_Timing_Info timings[30];
  int do_show_timings;
  int do_show_comm;
  int do_show_ai;
  unsigned int last_view_time;
  RGE_Base_Game__RGE_Game_Options rge_game_options;
  int campaignGameValue;
  int savedGameValue;
  int quick_build;
  int save_check_for_cd;
  int playerIDValue[9];
  int display_selected_ids;
  int display_selected_group_ids;
  int countdown_timer[9];
  char network_log_path[260];
  int auto_paused;
  int save_paused;
  int non_user_pause;
  int mpSaveLocalFlag;
  int rollover;
  int singlePlayerAutoSaveFlag;
  char SoundNames[5][260];
  unsigned int SoundIndexes[5];
  commlog_tag commlog;
  float game_speed;
  int single_player_difficulty;
  unsigned __int8 pathFindingValue;
  unsigned __int8 resigned[9];
  TDrawArea *map_save_area;
  char zone_exec[255];
  char http_exec[255];
  int gbg_unknown_1;
};
#pragma pack(pop)

/* 660 */
typedef int FMP_LOGO_Position;

/* 661 */
#pragma pack(push, 8)
struct RGE_Base_GameVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Base_Game *, unsigned int);
  int (__thiscall *run)(RGE_Base_Game *);
  LRESULT (__stdcall *wnd_proc)(RGE_Base_Game *, HWND, unsigned int, unsigned int, int);
  void (__thiscall *set_prog_mode)(RGE_Base_Game *, int);
  void (__thiscall *set_game_mode)(RGE_Base_Game *, int, int);
  void (__thiscall *set_player)(RGE_Base_Game *, __int16);
  void (__thiscall *request_pause)(RGE_Base_Game *);
  int (__thiscall *get_error_code)(RGE_Base_Game *);
  char *(__thiscall *get_string)(RGE_Base_Game *, int, int, char *, int);
  char *(__thiscall *get_string2)(RGE_Base_Game *, int);
  char *(__thiscall *get_string3)(RGE_Base_Game *, int, char *, int);
  char *(__thiscall *get_string4)(RGE_Base_Game *, int, int, int, char *, int);
  TPanel *(__thiscall *get_view_panel)(RGE_Base_Game *);
  TPanel *(__thiscall *get_map_panel)(RGE_Base_Game *);
  RGE_Scenario_Header *(__thiscall *new_scenario_header_2)(RGE_Base_Game *, RGE_Scenario *);
  RGE_Scenario_Header *(__thiscall *new_scenario_header_1)(RGE_Base_Game *, int);
  RGE_Scenario *(__thiscall *new_scenario_info)(RGE_Base_Game *, int);
  void (__thiscall *notification)(RGE_Base_Game *, int, int, int, int, int);
  void (__thiscall *display_cant_do_msg)(RGE_Base_Game *, int, int);
  int (__thiscall *reset_comm)(RGE_Base_Game *);
  void (__thiscall *send_game_options)(RGE_Base_Game *);
  void (__thiscall *receive_game_options)(RGE_Base_Game *);
  int (__thiscall *scenarioGame)(RGE_Base_Game *);
  int (__thiscall *randomGame)(RGE_Base_Game *);
  int (__thiscall *campaignGame)(RGE_Base_Game *);
  char *(__thiscall *gameSummary)(RGE_Base_Game *);
  void (__thiscall *set_screen_size)(RGE_Base_Game *, int, int);
  int (__thiscall *processCheatCode)(RGE_Base_Game *, int, char *);
  int (__thiscall *setup_music_system)(RGE_Base_Game *);
  void (__thiscall *shutdown_music_system)(RGE_Base_Game *);
  int (__thiscall *is_on_screen)(RGE_Base_Game *, int);
  unsigned __int8 (__thiscall *unresignedVisibleSetting)(RGE_Base_Game *);
  unsigned __int8 (__thiscall *unresignedFogSetting)(RGE_Base_Game *);
  int (__thiscall *Take_ScreenShot)(RGE_Base_Game *);
  int (__thiscall *FullMapScreenShotUpdate)(RGE_Base_Game *);
  int (__thiscall *SetupFullMapScreenShot)(RGE_Base_Game *);
  int (__thiscall *ClearFillMapChunk)(RGE_Base_Game *);
  int (__thiscall *TakeFullMapScreenShotChunk)(RGE_Base_Game *);
  int (__thiscall *FullMapAddLogoImage)(RGE_Base_Game *, FMP_LOGO_Position, char *, int, int);
  int (__thiscall *CloseFullMapScreenShot)(RGE_Base_Game *, int);
  int (__thiscall *AbortFullMapScreenShot)(RGE_Base_Game *);
  int (__thiscall *ReportFullMapError)(RGE_Base_Game *, int);
  int (__thiscall *setup)(RGE_Base_Game *);
  int (__thiscall *setup_cmd_options)(RGE_Base_Game *);
  int (__thiscall *setup_class)(RGE_Base_Game *);
  int (__thiscall *setup_main_window)(RGE_Base_Game *);
  int (__thiscall *setup_graphics_system)(RGE_Base_Game *);
  int (__thiscall *setup_palette)(RGE_Base_Game *);
  int (__thiscall *setup_mouse)(RGE_Base_Game *);
  int (__thiscall *setup_registry)(RGE_Base_Game *);
  int (__thiscall *setup_debugging_log)(RGE_Base_Game *);
  int (__thiscall *setup_chat)(RGE_Base_Game *);
  int (__thiscall *setup_comm)(RGE_Base_Game *);
  int (__thiscall *setup_sound_system)(RGE_Base_Game *);
  int (__thiscall *setup_fonts)(RGE_Base_Game *);
  int (__thiscall *setup_sounds)(RGE_Base_Game *);
  int (__thiscall *setup_shapes)(RGE_Base_Game *);
  int (__thiscall *setup_blank_screen)(RGE_Base_Game *);
  void (__thiscall *setup_timings)(RGE_Base_Game *);
  void (__thiscall *stop_sound_system)(RGE_Base_Game *);
  int (__thiscall *restart_sound_system)(RGE_Base_Game *);
  void (__thiscall *stop_music_system)(RGE_Base_Game *);
  int (__thiscall *restart_music_system)(RGE_Base_Game *);
  RGE_Game_World *(__thiscall *create_world)(RGE_Base_Game *);
  int (__thiscall *handle_message)(RGE_Base_Game *, MSG *);
  int (__thiscall *handle_idle)(RGE_Base_Game *);
  int (__thiscall *handle_mouse_move)(RGE_Base_Game *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_wheel)(RGE_Base_Game *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_key_down)(RGE_Base_Game *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_user_command)(RGE_Base_Game *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_command)(RGE_Base_Game *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_music_done)(RGE_Base_Game *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_paint)(RGE_Base_Game *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_activate)(RGE_Base_Game *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_init_menu)(RGE_Base_Game *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_exit_menu)(RGE_Base_Game *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_size)(RGE_Base_Game *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_palette_changed)(RGE_Base_Game *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_query_new_palette)(RGE_Base_Game *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_close)(RGE_Base_Game *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_destroy)(RGE_Base_Game *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *action_update)(RGE_Base_Game *);
  int (__thiscall *action_mouse_move)(RGE_Base_Game *, int, int, int, int, int, int);
  int (__thiscall *action_key_down)(RGE_Base_Game *, unsigned int, int, int, int, int);
  int (__thiscall *action_user_command)(RGE_Base_Game *, unsigned int, unsigned int);
  int (__thiscall *action_command)(RGE_Base_Game *, unsigned int, unsigned int);
  int (__thiscall *action_music_done)(RGE_Base_Game *);
  int (__thiscall *action_activate)(RGE_Base_Game *);
  int (__thiscall *action_deactivate)(RGE_Base_Game *);
  int (__thiscall *action_init_menu)(RGE_Base_Game *);
  int (__thiscall *action_exit_menu)(RGE_Base_Game *);
  int (__thiscall *action_size)(RGE_Base_Game *);
  int (__thiscall *action_close)(RGE_Base_Game *);
  void (__thiscall *calc_timings)(RGE_Base_Game *);
  void (__thiscall *calc_timing_text)(RGE_Base_Game *);
  void (__thiscall *show_timings)(RGE_Base_Game *);
  void (__thiscall *show_comm)(RGE_Base_Game *);
  void (__thiscall *show_ai)(RGE_Base_Game *);
  int (__thiscall *setup_map_save_area)(RGE_Base_Game *);
  void (__thiscall *set_interface_messages)(RGE_Base_Game *);
};
#pragma pack(pop)

/* 121 */
#pragma pack(push, 8)
struct RGE_Game_Info
{
  int current_person;
  int people_num;
  RGE_Person_Info **people_info;
  int campaign_num;
  RGE_Campaign **campaigns;
  char save_filename[260];
  int last_unique_id;
};
#pragma pack(pop)

/* 333 */
#pragma pack(push, 8)
struct RGE_Prog_Info
{
  char prog_name[101];
  char prog_version[21];
  char prog_title[121];
  char world_db_file[261];
  char game_data_file[261];
  char vol_name[261];
  unsigned int vol_ser_num;
  int verify_cd;
  int max_players_per_cd;
  HINSTANCE instance;
  HINSTANCE prev_instance;
  char registry_key[256];
  char cmd_line[256];
  int show_wnd_flag;
  char icon_name[41];
  char menu_name[41];
  char pal_file[261];
  char cursor_file[261];
  int max_players;
  int check_expiration;
  __int16 expire_month;
  __int16 expire_day;
  __int16 expire_year;
  unsigned int update_interval;
  int check_multi_copies;
  int skip_startup;
  int full_screen;
  int fixed_window_size;
  int use_dir_draw;
  int use_sys_mem;
  int use_music;
  int use_sound;
  int use_cd_audio;
  int use_midi;
  int use_wave_music;
  int use_mp3;
  int fast_view;
  int auto_scroll;
  int profile;
  int mouse_scroll_edge;
  unsigned int mouse_scroll_interval;
  float mouse_scroll_max_dist;
  unsigned int key_scroll_interval;
  float key_scroll_max_dist;
  float key_scroll_object_move;
  __int16 interface_style;
  int main_wid;
  int main_hgt;
  int out_of_game_wid;
  int out_of_game_hgt;
  int game_wid;
  __int16 graphics_detail_level;
  int game_hgt;
  GUID game_guid;
  GUID preset_guid;
  GUID zone_guid;
  char data_dir[261];
  char graphics_dir[261];
  char save_dir[261];
  char multisave_dir[261];
  char scenario_dir[261];
  char campaign_dir[261];
  char sounds_dir[261];
  char sounds_terrain_dir[261];
  char sounds_campaign_dir[261];
  char sounds_scenario_dir[261];
  char sounds_stream_dir[261];
  char resource_dir[261];
  char ai_dir[261];
  char avi_dir[261];
  char taunt_dir[261];
  char random_dir[261];
};
#pragma pack(pop)

/* 100 */
#pragma pack(push, 8)
struct TMusic_System
{
  char path[260];
  unsigned __int8 music_type;
  TSound_Driver *sound_system;
  HINSTANCE instance;
  HWND window;
  int device_open;
  unsigned int device_id;
  MCI_PLAY_PARMS play_info;
  unsigned __int8 playing_track;
  char file_name[261];
  int start_track;
  int end_track;
  int make_cur_track;
  unsigned int set_pos;
  int loop;
  int current_track;
  int track_count;
  int notify_waiting;
  int start_volume;
  int volume;
  int soundID;
  int paused;
  int auto_paused;
  int inactivated;
  int fade_out;
  unsigned int fade_time;
  int fading_track;
  int fade_volume;
  unsigned int last_fade_time;
  int mixer_open;
  HMIXER mixer_handle;
  MIXERLINEA mixer_line_info;
  MIXERLINECONTROLSA mixer_line_controls;
  MIXERCONTROLA mixer_volume_control;
  MIXERCONTROLDETAILS mixer_volume_details;
  MIXERCONTROLDETAILS_UNSIGNED mixer_volume_value;
  HWND midi_window;
  unsigned int last_check_time;
};
#pragma pack(pop)

/* 256 */
#pragma pack(push, 8)
struct SoundManager
{
  int soundManagerStatus;
  HWND appWindowHandle;
  HWND windowHandle;
  HINSTANCE windowInstance;
  DSCAPS deviceCaps;
  IDirectSound *lpDirectSound;
  IDirectSoundBuffer *priSoundBuffer;
  int numSeconds;
  streamingSoundNode *streamingSoundList;
  staticSoundNode *staticSoundList;
  char soundDir[260];
  char terrainSoundDir[260];
  char campaignSoundDir[260];
  char streamSoundDir[260];
  char cdPath[260];
  int maxNumSounds;
  int numSounds;
  int numStaticSounds;
  int numStreamSounds;
  int maxNumSoundsDeleted;
  int masterVolume;
  int numPlayOnceSounds;
  FILE *debugLogFile;
  int numStreamSoundUpdates;
  HWND debugWindowHandle;
};
#pragma pack(pop)

/* 98 */
#pragma pack(push, 8)
struct TMousePointer
{
  int custom_draw;
  TDrawArea *render_area;
  TDrawArea *save_area;
  TDrawArea *primary_area;
  int Num_Cursors;
  int Max_Cursors;
  TDrawArea *cursors[19];
  TShape *Cursor_Shape;
  int Mouse_Mode;
  int Max_CX;
  int Max_CY;
  int cWidth;
  int cHeight;
  int gWidth;
  int gHeight;
  int mouse_x;
  int mouse_y;
  int save_x;
  int save_y;
  int facet;
  int game_facet;
  int next_facet;
  int last_facet;
  int d_top;
  int d_left;
  int d_bottom;
  int d_right;
  int g_top;
  int g_left;
  int g_bottom;
  int g_right;
  int save_area_valid;
  RECT save_rect;
  RECT mouse_rect;
  RECT cursor_rect;
  RECT new_save_rect;
  RECT restore_rect;
  RECT game_window;
  IDirectDrawSurface *restoreSurface;
  IDirectDrawSurface *renderSurface;
  IDirectDrawSurface *PrimarySurface;
  int active;
  int drawn;
  int Shutdown;
  int Setup;
  int GameMode;
  int GameEnabled;
  int MouseOnScreen;
  unsigned int LastDrawTime;
  int LastddError;
  char cursor_file[260];
  int cursor_file_id;
  unsigned int last_poll_receive_time;
  int do_comm_poll_receive;
};
#pragma pack(pop)

/* 320 */
#pragma pack(push, 8)
struct RGE_Font
{
  HFONT font;
  int font_wid;
  int font_hgt;
};
#pragma pack(pop)

/* 96 */
#pragma pack(push, 8)
struct RGE_Scenario_Header
{
  RGE_Scenario_HeaderVtbl *vfptr;
  int error_code;
  int version;
  unsigned int checksum;
  char *description;
};
#pragma pack(pop)

/* 611 */
typedef int TRIBE_Game__GameDifficulty;

/* 335 */
#pragma pack(push, 8)
struct RGE_Person_Info
{
  char name[255];
  int current_campaign;
  int current_campaign_index;
  int campaign_info_num;
  RGE_Campaign_Info **campaign_info;
  int campaign_num;
  RGE_Campaign **campaigns;
  int unique_id;
  int single_player_player_num;
  TRIBE_Game__GameDifficulty single_player_difficulty;
  TRIBE_Game__GameDifficulty multi_player_difficulty;
  TRIBE_Game__GameDifficulty campaign_difficulty;
  unsigned __int8 single_player_teams[9];
  TRIBE_Game__TRIBE_Game_Options *single_player_game_options;
  TRIBE_Game__TRIBE_Game_Options *multi_player_game_options;
  unsigned __int8 single_player_teams_locked;
  unsigned __int8 multi_player_teams_locked;
  unsigned __int8 multi_player_speed_locked;
  int single_player_player_color;
  int music_volume;
  int sound_volume;
  unsigned __int8 scroll_speed;
  unsigned __int8 graphics_detail;
  __int16 screen_wid;
  __int16 screen_hgt;
  unsigned __int8 audio_taunts;
  unsigned __int8 one_click_garrison;
  unsigned __int8 mouse_style;
  unsigned __int8 friend_or_foe_colors;
  unsigned __int8 score_mode;
  unsigned __int8 score_flag;
  unsigned __int8 time_flag;
  unsigned __int8 showed_difficulty_dialog;
};
#pragma pack(pop)

/* 858 */
#pragma pack(push, 8)
struct RGE_Campaign_Header
{
  int version;
  char name[255];
  int scenario_num;
};
#pragma pack(pop)

/* 94 */
#pragma pack(push, 8)
struct RGE_Campaign
{
  RGE_Campaign_Header campaign_header;
  RGE_Scenario_Offset *scenario_offsets;
  char filename[255];
};
#pragma pack(pop)

/* 885 */
#pragma pack(push, 8)
struct streamingSoundNode
{
  streamingSoundNode *prev;
  streamingSoundNode *next;
  streamingSound *sound;
};
#pragma pack(pop)

/* 886 */
#pragma pack(push, 8)
struct staticSoundNode
{
  staticSoundNode *prev;
  staticSoundNode *next;
  staticSound *sound;
};
#pragma pack(pop)

/* 826 */
#pragma pack(push, 8)
struct RGE_Scenario_HeaderVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Scenario_Header *, unsigned int);
  int (__thiscall *get_size)(RGE_Scenario_Header *);
  void (__thiscall *save)(RGE_Scenario_Header *, int);
};
#pragma pack(pop)

/* 420 */
#pragma pack(push, 8)
struct RGE_Campaign_Info
{
  char campaign_name[255];
  int current_scenario;
  int scenario_num;
  RGE_Scenario_Info *scenario_info;
  int last_scenario;
  RGE_Campaign *campaign;
  int firstTime;
  int completed;
};
#pragma pack(pop)

/* 609 */
typedef int TRIBE_Game__MapSize;

/* 612 */
typedef int TRIBE_Game__MapType;

/* 616 */
typedef int TRIBE_Game__Visibility;

/* 615 */
typedef int TRIBE_Game__VictoryType;

/* 614 */
typedef int TRIBE_Game__ResourceLevel;

/* 610 */
typedef int TRIBE_Game__Age;

/* 617 */
#pragma pack(push, 8)
struct TRIBE_Game__TRIBE_Game_Options
{
  TRIBE_Game__MapSize mapSizeValue;
  TRIBE_Game__MapType mapTypeValue;
  TRIBE_Game__Visibility visibilityValue;
  int animalsValue;
  int predatorsValue;
  TRIBE_Game__VictoryType victoryTypeValue;
  int victoryAmountValue;
  unsigned __int8 civilizationValue[9];
  int scenarioPlayerValue[9];
  unsigned __int8 playerColorValue[9];
  unsigned __int8 computerNameValue[9];
  unsigned __int8 allowTradingValue;
  unsigned __int8 disableTeamBonusesValue;
  unsigned __int8 randomizePositionsValue;
  unsigned __int8 fullTechTreeValue;
  TRIBE_Game__ResourceLevel resourceLevelValue;
  TRIBE_Game__Age startingAgeValue;
  unsigned __int8 startingUnitsValue;
  unsigned __int8 gameTypeValue;
  unsigned __int8 popLimitValue;
  char random_map_script[21];
  int fileChecksum;
};
#pragma pack(pop)

/* 859 */
#pragma pack(push, 8)
struct RGE_Scenario_Offset
{
  int size;
  int offset;
  char name[255];
  char file_name[255];
};
#pragma pack(pop)

/* 452 */
#pragma pack(push, 1)
struct streamingSound
{
};
#pragma pack(pop)

/* 453 */
#pragma pack(push, 8)
struct staticSound
{
  int id;
  int resourceID;
  int flags;
  char fileName[28];
  int dataSize;
  unsigned __int8 hasPlayed;
  int staticSound_UNKNOWN_1;
  int staticSound_UNKNOWN_2;
  DSBUFFERDESC bufferDesc;
  IDirectSoundBuffer *lpSoundBuffer;
  WAVEFORMATEX waveFormat;
};
#pragma pack(pop)

/* 625 */
#pragma pack(push, 8)
struct RGE_Scenario_Info
{
  unsigned __int8 scenario_status;
};
#pragma pack(pop)

/* 75 */
#pragma pack(push, 8)
struct TRIBE_Game
{
  TRIBE_GameVtbl *vfptr;
  unsigned __int8 main_dialog_state;
  int soundIDs[5];
  int number_of_pauses;
  RGE_Game_Info *player_game_info;
  RGE_Prog_Info *prog_info;
  HWND prog_window;
  int prog_ready;
  int prog_active;
  HPALETTE prog_palette;
  HANDLE prog_mutex;
  int window_style;
  HHOOK handleKeyboardHook;
  int random_game_seed;
  int random_map_seed;
  int save_random_game_seed;
  int save_random_map_seed;
  int screen_saver_enabled;
  int low_power_enabled;
  int in_game_screen_size_in_use_flag;
  int error_code;
  int is_timer;
  TDrawSystem *draw_system;
  TDrawArea *draw_area;
  unsigned __int8 outline_type;
  int custom_mouse;
  __int16 shape_num;
  TShape **shapes;
  TSound_Driver *sound_system;
  TMusic_System *music_system;
  __int16 sound_num;
  TDigital **sounds;
  int sound_frequency;
  SoundManager *soundManager;
  unsigned __int8 save_music_type;
  int save_music_track_from;
  int save_music_track_to;
  int save_music_cur_track;
  char save_music_file[260];
  int save_music_loop;
  unsigned int save_music_pos;
  TCommunications_Handler *comm_handler;
  int comm_syncstop;
  int comm_droppackets;
  int comm_syncmsg;
  int comm_stepmode;
  int comm_speed;
  TDebuggingLog *debugLog;
  TDebuggingLog *commentsLog;
  int log_comm;
  TRegistry *registry;
  int prog_mode;
  int game_mode;
  int sub_game_mode;
  int paused;
  TMousePointer *mouse_pointer;
  int erase_mouse;
  int mouse_blit_sync;
  int is_mouse_on;
  int windows_mouse;
  HCURSOR mouse_cursor;
  int input_enabled;
  HWND input_disabled_window;
  __int16 font_num;
  RGE_Font *fonts;
  char work_dir[261];
  char string_dll_name[261];
  TRIBE_World *world;
  int render_all;
  __int16 master_obj_id;
  __int16 master_obj_facet;
  unsigned __int8 ignore_place_obj;
  __int16 terrain_id;
  __int16 elevation_height;
  __int16 brush_size;
  char timing_text[256];
  unsigned int frame_count;
  unsigned int world_update_count;
  unsigned int view_update_count;
  unsigned int last_frame_count;
  unsigned int last_world_update_count;
  unsigned int last_view_update_count;
  unsigned int fps;
  unsigned int world_update_fps;
  unsigned int view_update_fps;
  RGE_Timing_Info timings[30];
  int do_show_timings;
  int do_show_comm;
  int do_show_ai;
  unsigned int last_view_time;
  RGE_Base_Game__RGE_Game_Options rge_game_options;
  int campaignGameValue;
  int savedGameValue;
  int quick_build;
  int save_check_for_cd;
  int playerIDValue[9];
  int display_selected_ids;
  int display_selected_group_ids;
  int countdown_timer[9];
  char network_log_path[260];
  int auto_paused;
  int save_paused;
  int non_user_pause;
  int mpSaveLocalFlag;
  int rollover;
  int singlePlayerAutoSaveFlag;
  char SoundNames[5][260];
  unsigned int SoundIndexes[5];
  commlog_tag commlog;
  float game_speed;
  int single_player_difficulty;
  unsigned __int8 pathFindingValue;
  unsigned __int8 resigned[9];
  TDrawArea *map_save_area;
  char zone_exec[255];
  char http_exec[255];
  int gbg_unknown_1;
  TRIBE_Hotkey_Handler *hotkeys;
  char computerAIFileValue[9][31];
  MouseClickInfo *MouseRightClickTable;
  int MouseRightClickTableSize;
  MouseClickInfo *MouseLeftClickTable;
  int MouseLeftClickTableSize;
  TRIBE_Game__TRIBE_Game_Options tribe_game_options;
  char testing_scenario[260];
  char player_name[256];
  int customCampaign;
  unsigned __int8 kingCampaignIndex;
  unsigned __int8 kingScenarioIndex;
  HWND video_window;
  int cur_video;
  LRESULT (__stdcall *old_video_wnd_proc)(HWND, UINT, WPARAM, LPARAM);
  int video_paused;
  unsigned int last_video_time;
  int video_setup;
  int video_double_size;
  int video_changed_res;
  int video_hi_color;
  int video_save_res_wid;
  int video_save_res_hgt;
  HPALETTE video_save_palette;
  int video_for_windows;
  char stringx_dll_name[261];
  int screenshot_time;
  int started_menu_music;
  int show_object_id;
  TRIBE_Screen_Game *game_screen;
  char startup_scenario[260];
  char edit_scenario[260];
  char startup_game[260];
  unsigned int auto_exit_time;
  char save_game_name[260];
  char load_game_name[260];
  char timing_text2[256];
  int save_humanity[9];
  unsigned __int8 quick_start_game;
  int random_start_value;
  unsigned __int8 prevScreen;
  unsigned __int8 computerNameUsed[19][20];
  void *handleIdleLock;
  int inHandleIdle;
  int mWaitingForLobby;
  unsigned int mWaitingForLobbyTimer;
  int econ_log_flag;
  TDebuggingLog *EconLog;
  unsigned __int8 queue_attr_count[7];
  unsigned int queue_attr_time[7];
  int advanced_buttons;
  int one_click_garrisoning;
  int friend_or_foe_colors;
};
#pragma pack(pop)

/* 662 */
#pragma pack(push, 8)
struct TRIBE_GameVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Game *, unsigned int);
  int (__thiscall *run)(TRIBE_Game *);
  LRESULT (__stdcall *wnd_proc)(TRIBE_Game *, HWND, unsigned int, unsigned int, int);
  void (__thiscall *set_prog_mode)(TRIBE_Game *, int);
  void (__thiscall *set_game_mode)(TRIBE_Game *, int, int);
  void (__thiscall *set_player)(TRIBE_Game *, __int16);
  void (__thiscall *request_pause)(TRIBE_Game *);
  int (__thiscall *get_error_code)(TRIBE_Game *);
  char *(__thiscall *get_string)(TRIBE_Game *, int, int, char *, int);
  char *(__thiscall *get_string2)(TRIBE_Game *, int);
  char *(__thiscall *get_string3)(TRIBE_Game *, int, char *, int);
  char *(__thiscall *get_string4)(TRIBE_Game *, int, int, int, char *, int);
  TPanel *(__thiscall *get_view_panel)(TRIBE_Game *);
  TPanel *(__thiscall *get_map_panel)(TRIBE_Game *);
  RGE_Scenario_Header *(__thiscall *new_scenario_header_2)(TRIBE_Game *, RGE_Scenario *);
  RGE_Scenario_Header *(__thiscall *new_scenario_header_1)(TRIBE_Game *, int);
  RGE_Scenario *(__thiscall *new_scenario_info)(TRIBE_Game *, int);
  void (__thiscall *notification)(TRIBE_Game *, int, int, int, int, int);
  void (__thiscall *display_cant_do_msg)(TRIBE_Game *, int, int);
  int (__thiscall *reset_comm)(TRIBE_Game *);
  void (__thiscall *send_game_options)(TRIBE_Game *);
  void (__thiscall *receive_game_options)(TRIBE_Game *);
  int (__thiscall *scenarioGame)(TRIBE_Game *);
  int (__thiscall *randomGame)(TRIBE_Game *);
  int (__thiscall *campaignGame)(TRIBE_Game *);
  char *(__thiscall *gameSummary)(TRIBE_Game *);
  void (__thiscall *set_screen_size)(TRIBE_Game *, int, int);
  int (__thiscall *processCheatCode)(TRIBE_Game *, int, char *);
  int (__thiscall *setup_music_system)(TRIBE_Game *);
  void (__thiscall *shutdown_music_system)(TRIBE_Game *);
  int (__thiscall *is_on_screen)(TRIBE_Game *, int);
  unsigned __int8 (__thiscall *unresignedVisibleSetting)(TRIBE_Game *);
  unsigned __int8 (__thiscall *unresignedFogSetting)(TRIBE_Game *);
  int (__thiscall *Take_ScreenShot)(TRIBE_Game *);
  int (__thiscall *FullMapScreenShotUpdate)(TRIBE_Game *);
  int (__thiscall *SetupFullMapScreenShot)(TRIBE_Game *);
  int (__thiscall *ClearFillMapChunk)(TRIBE_Game *);
  int (__thiscall *TakeFullMapScreenShotChunk)(TRIBE_Game *);
  int (__thiscall *FullMapAddLogoImage)(TRIBE_Game *, FMP_LOGO_Position, char *, int, int);
  int (__thiscall *CloseFullMapScreenShot)(TRIBE_Game *, int);
  int (__thiscall *AbortFullMapScreenShot)(TRIBE_Game *);
  int (__thiscall *ReportFullMapError)(TRIBE_Game *, int);
  int (__thiscall *setup)(TRIBE_Game *);
  int (__thiscall *setup_cmd_options)(TRIBE_Game *);
  int (__thiscall *setup_class)(TRIBE_Game *);
  int (__thiscall *setup_main_window)(TRIBE_Game *);
  int (__thiscall *setup_graphics_system)(TRIBE_Game *);
  int (__thiscall *setup_palette)(TRIBE_Game *);
  int (__thiscall *setup_mouse)(TRIBE_Game *);
  int (__thiscall *setup_registry)(TRIBE_Game *);
  int (__thiscall *setup_debugging_log)(TRIBE_Game *);
  int (__thiscall *setup_chat)(TRIBE_Game *);
  int (__thiscall *setup_comm)(TRIBE_Game *);
  int (__thiscall *setup_sound_system)(TRIBE_Game *);
  int (__thiscall *setup_fonts)(TRIBE_Game *);
  int (__thiscall *setup_sounds)(TRIBE_Game *);
  int (__thiscall *setup_shapes)(TRIBE_Game *);
  int (__thiscall *setup_blank_screen)(TRIBE_Game *);
  void (__thiscall *setup_timings)(TRIBE_Game *);
  void (__thiscall *stop_sound_system)(TRIBE_Game *);
  int (__thiscall *restart_sound_system)(TRIBE_Game *);
  void (__thiscall *stop_music_system)(TRIBE_Game *);
  int (__thiscall *restart_music_system)(TRIBE_Game *);
  RGE_Game_World *(__thiscall *create_world)(TRIBE_Game *);
  int (__thiscall *handle_message)(TRIBE_Game *, MSG *);
  int (__thiscall *handle_idle)(TRIBE_Game *);
  int (__thiscall *handle_mouse_move)(TRIBE_Game *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_wheel)(TRIBE_Game *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_key_down)(TRIBE_Game *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_user_command)(TRIBE_Game *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_command)(TRIBE_Game *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_music_done)(TRIBE_Game *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_paint)(TRIBE_Game *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_activate)(TRIBE_Game *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_init_menu)(TRIBE_Game *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_exit_menu)(TRIBE_Game *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_size)(TRIBE_Game *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_palette_changed)(TRIBE_Game *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_query_new_palette)(TRIBE_Game *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_close)(TRIBE_Game *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_destroy)(TRIBE_Game *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *action_update)(TRIBE_Game *);
  int (__thiscall *action_mouse_move)(TRIBE_Game *, int, int, int, int, int, int);
  int (__thiscall *action_key_down)(TRIBE_Game *, unsigned int, int, int, int, int);
  int (__thiscall *action_user_command)(TRIBE_Game *, unsigned int, unsigned int);
  int (__thiscall *action_command)(TRIBE_Game *, unsigned int, unsigned int);
  int (__thiscall *action_music_done)(TRIBE_Game *);
  int (__thiscall *action_activate)(TRIBE_Game *);
  int (__thiscall *action_deactivate)(TRIBE_Game *);
  int (__thiscall *action_init_menu)(TRIBE_Game *);
  int (__thiscall *action_exit_menu)(TRIBE_Game *);
  int (__thiscall *action_size)(TRIBE_Game *);
  int (__thiscall *action_close)(TRIBE_Game *);
  void (__thiscall *calc_timings)(TRIBE_Game *);
  void (__thiscall *calc_timing_text)(TRIBE_Game *);
  void (__thiscall *show_timings)(TRIBE_Game *);
  void (__thiscall *show_comm)(TRIBE_Game *);
  void (__thiscall *show_ai)(TRIBE_Game *);
  int (__thiscall *setup_map_save_area)(TRIBE_Game *);
  void (__thiscall *set_interface_messages)(TRIBE_Game *);
};
#pragma pack(pop)

/* 258 */
#pragma pack(push, 8)
struct TRIBE_Hotkey_Handler
{
  TRIBE_Hotkey_HandlerVtbl *vfptr;
  int num_hotkey_groups;
  int hotkey_group_num;
  RGE_Hotkey_Info **hotkeys;
  int *hotkey_nums;
  char *filename;
  int *hotkey_group_string_id;
};
#pragma pack(pop)

/* 663 */
#pragma pack(push, 8)
struct MouseClickInfo
{
  int object_group;
  int self_action;
  int self_text_id;
  int gaia_action;
  int gaia_text_id;
  int ally_action;
  int ally_text_id;
  int neutral_action;
  int neutral_text_id;
  int enemy_action;
  int enemy_text_id;
};
#pragma pack(pop)

/* 626 */
#pragma pack(push, 8)
struct TRIBE_Hotkey_HandlerVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Hotkey_Handler *, unsigned int);
};
#pragma pack(pop)

/* 627 */
#pragma pack(push, 8)
struct RGE_Hotkey_Info
{
  int key;
  int string_id;
  unsigned __int8 ctrl;
  unsigned __int8 alt;
  unsigned __int8 shift;
  unsigned __int8 mouse;
};
#pragma pack(pop)

/* 80 */
#pragma pack(push, 8)
struct RGE_Active_Animated_Sprite
{
  RGE_Active_Animated_SpriteVtbl *vfptr;
  RGE_Sprite *sprite;
  unsigned __int8 type;
  int offset_x;
  int offset_y;
  __int16 frame;
  unsigned __int8 invis_flag;
  unsigned __int8 RGE_Active_Sprite_gap;
  float animate_interval;
  float animate_last;
  __int16 last_frame;
  unsigned __int8 frame_changed;
  unsigned __int8 frame_looped;
  unsigned __int8 animate_flag;
  float lastSpeedValue;
};
#pragma pack(pop)

/* 857 */
#pragma pack(push, 8)
struct RGE_Active_Animated_SpriteVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Active_Animated_Sprite *, unsigned int);
  void (__thiscall *set_offset)(RGE_Active_Animated_Sprite *, int, int);
  void (__thiscall *save)(RGE_Active_Animated_Sprite *, int);
  void (__thiscall *update)(RGE_Active_Animated_Sprite *, float, float);
  void (__thiscall *draw)(RGE_Active_Animated_Sprite *, __int16, int, int, int, int, RGE_Color_Table *, TDrawArea *, RGE_Static_Object *);
  void (__thiscall *normal_draw)(RGE_Active_Animated_Sprite *, __int16, int, int, RGE_Color_Table *, TDrawArea *, RGE_Static_Object *);
  void (__thiscall *shadow_draw)(RGE_Active_Animated_Sprite *, __int16, int, int, RGE_Color_Table *, TDrawArea *, unsigned __int8);
  __int16 (__thiscall *what_frame)(RGE_Active_Animated_Sprite *);
  unsigned __int8 (__thiscall *is_animating)(RGE_Active_Animated_Sprite *);
  void (__thiscall *set_frame)(RGE_Active_Animated_Sprite *, __int16);
  void (__thiscall *set_facet)(RGE_Active_Animated_Sprite *, __int16, RGE_Static_Object *);
  unsigned __int8 (__thiscall *frame_passed)(RGE_Active_Animated_Sprite *, __int16);
  unsigned __int8 (__thiscall *looped)(RGE_Active_Animated_Sprite *);
  __int16 (__thiscall *get_facetindex)(RGE_Active_Animated_Sprite *, __int16);
  unsigned __int8 (__thiscall *get_frame)(RGE_Active_Animated_Sprite *, __int16 *, __int16 *, __int16 *, __int16 *, int);
  void (__thiscall *setToFirstFrame)(RGE_Active_Animated_Sprite *);
};
#pragma pack(pop)

/* 84 */
#pragma pack(push, 8)
struct InfluenceMap
{
  InfluenceMapVtbl *vfptr;
  int xSizeValue;
  int ySizeValue;
  int xReferencePointValue;
  int yReferencePointValue;
  unsigned __int8 *valueValue;
  unsigned __int8 **rowValue;
  int coverageCountValue;
  int connectionCountValue;
  unsigned __int8 unchangeableLimitValue;
};
#pragma pack(pop)

/* 587 */
#pragma pack(push, 8)
struct InfluenceMapVtbl
{
  void *(__thiscall *__vecDelDtor)(InfluenceMap *, unsigned int);
};
#pragma pack(pop)

/* 86 */
#pragma pack(push, 8)
struct DClipInfo_List
{
  DClipInfo_Node **Zone_Ptrs;
  int *Zone_Size_Ptrs;
  int Used_Zones;
  int Max_Zones;
  DClipInfo_Node *Free_Head;
  int Free_Pool_Zone;
  int Free_Pool_Index;
  int Total_Blocks;
  int Free_Blocks;
  int Default_Grow_Size;
  int Element_Size;
  int Alloc_Count;
  int Dealloc_Count;
  int NewZone_Count;
  int Reset_Count;
  int SD_XMin;
  int SD_XMax;
  int SD_YMin;
  int SD_YMax;
  int Max_Draw_Levels;
  int Accept_Min_Level;
  int Accept_Max_Level;
  DClipInfo_Node **Draw_Clip_Nodes;
  DClipInfo_Node **Draw_Level_Head;
  DClipInfo_Node **Draw_Level_Tail;
  int YLine_Offset;
  int YLine_Size;
  DClipInfo_Node **Occluded_List;
  int Occluded_List_Size;
  int Occluded_Count;
  __int16 *Select_Box;
};
#pragma pack(pop)

/* 582 */
#pragma pack(push, 8)
struct DClipInfo_Node__$CE944DA8E8C94AC155CFDE50C09AA448__$F28650DA4FFC3AD1240F9C81FC925A84
{
  __int16 x1;
  __int16 y1;
  __int16 x2;
  __int16 y2;
  __int16 x3;
  __int16 y3;
  __int16 x4;
  __int16 y4;
};
#pragma pack(pop)

/* 585 */
#pragma pack(push, 8)
union DClipInfo_Node__$CE944DA8E8C94AC155CFDE50C09AA448
{
  __int16 xpt[8];
  #pragma pack(push, 8)
  struct
  {
    __int16 x1;
    __int16 y1;
    __int16 x2;
    __int16 y2;
    __int16 x3;
    __int16 y3;
    __int16 x4;
    __int16 y4;
  };
  #pragma pack(pop)
};
#pragma pack(pop)

/* 583 */
#pragma pack(push, 8)
struct DClipInfo_Node__$E3F7B0049358EB6B826F00D92ADEFB4E__$F88B3A3F27B3ED3C9D9259F2B022B6F6
{
  TShape *OccludingShape;
  int OccludingShapeNum;
  int Special1Color;
  int reserved;
};
#pragma pack(pop)

/* 584 */
#pragma pack(push, 8)
struct DClipInfo_Node__$E3F7B0049358EB6B826F00D92ADEFB4E__$DE70543C68A42D05378E82E96CF1C050
{
  __int16 x5;
  __int16 y5;
  __int16 x6;
  __int16 y6;
  __int16 x7;
  __int16 y7;
  __int16 x8;
  __int16 y8;
};
#pragma pack(pop)

/* 586 */
#pragma pack(push, 8)
union DClipInfo_Node__$E3F7B0049358EB6B826F00D92ADEFB4E
{
  __int16 ypt[8];
  #pragma pack(push, 8)
  struct
  {
    TShape *OccludingShape;
    int OccludingShapeNum;
    int Special1Color;
    int reserved;
  };
  #pragma pack(pop)
  #pragma pack(push, 8)
  struct
  {
    __int16 x5;
    __int16 y5;
    __int16 x6;
    __int16 y6;
    __int16 x7;
    __int16 y7;
    __int16 x8;
    __int16 y8;
  };
  #pragma pack(pop)
};
#pragma pack(pop)

/* 87 */
#pragma pack(push, 8)
struct DClipInfo_Node
{
  DClipInfo_Node *Next;
  DClipInfo_Node *NextOnLevel;
  int Object_ID;
  Shape_Info *Shape;
  int Draw_Level;
  int Draw_X;
  int Draw_Y;
  int Draw_Flag;
  unsigned __int8 *Shape_Base;
  unsigned __int8 *Color_Table;
  int Xform_Mask;
  unsigned __int8 Node_Type;
  unsigned __int8 Point_Count;
  __int16 reserved2;
  #pragma pack(push, 8)
  union
  {
    __int16 xpt[8];
    #pragma pack(push, 8)
    struct
    {
      __int16 x1;
      __int16 y1;
      __int16 x2;
      __int16 y2;
      __int16 x3;
      __int16 y3;
      __int16 x4;
      __int16 y4;
    };
    #pragma pack(pop)
  };
  #pragma pack(pop)
  #pragma pack(push, 8)
  union
  {
    __int16 ypt[8];
    #pragma pack(push, 8)
    struct
    {
      TShape *OccludingShape;
      int OccludingShapeNum;
      int Special1Color;
      int reserved;
    };
    #pragma pack(pop)
    #pragma pack(push, 8)
    struct
    {
      __int16 x5;
      __int16 y5;
      __int16 x6;
      __int16 y6;
      __int16 x7;
      __int16 y7;
      __int16 x8;
      __int16 y8;
    };
    #pragma pack(pop)
  };
  #pragma pack(pop)
};
#pragma pack(pop)

/* 92 */
#pragma pack(push, 8)
struct TCommSave
{
  TCommunications_Handler *mTCommHand;
  TCommLog *mTCommLog;
  int mHaveSavedGame;
  cHeaderInfo mHeaderInfo;
  cHeaderFile *mHeaderList;
  int mNumOfHeaders;
};
#pragma pack(pop)

/* 557 */
#pragma pack(push, 8)
struct cHeaderFile
{
  SYSTEMTIME dateTime;
  GUID guid;
};
#pragma pack(pop)

/* 97 */
#pragma pack(push, 8)
struct TRIBE_Scenario_Header
{
  TRIBE_Scenario_HeaderVtbl *vfptr;
  int error_code;
  int version;
  unsigned int checksum;
  char *description;
  int any_sp_victory;
  int active_player_count;
};
#pragma pack(pop)

/* 848 */
#pragma pack(push, 8)
struct TRIBE_Scenario_HeaderVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Scenario_Header *, unsigned int);
  int (__thiscall *get_size)(TRIBE_Scenario_Header *);
  void (__thiscall *save)(TRIBE_Scenario_Header *, int);
};
#pragma pack(pop)

/* 106 */
#pragma pack(push, 8)
struct TFile
{
  char fileName[261];
  unsigned __int8 isOpen;
  HANDLE fileHandle;
  unsigned int fileSize;
};
#pragma pack(pop)

/* 107 */
#pragma pack(push, 8)
struct TPanelSystem
{
  void *vfptr;
  TPanel *mouseOwnerValue;
  TPanel *keyboardOwnerValue;
  TPanel *modalPanelValue;
  TPanel *currentPanelValue;
  PanelNode *panelListValue;
  int numberActivePanelsValue;
  TPanel *prevCurrentChildValue;
  HPALETTE palette[10];
  char palette_file[10][260];
  int palette_use_count[10];
  int palette_id[10];
  HIMC Imc;
  int ImeEnabled;
  int ImeOn;
  int ImeStatusSaved;
  unsigned int ImeToolbarStatus;
  int InputEnabled;
  int saved_colors;
  unsigned int save_back_color;
  unsigned int save_text_color;
};
#pragma pack(pop)

/* 111 */
#pragma pack(push, 8)
struct TEasy_Panel
{
  TEasy_PanelVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
};
#pragma pack(pop)

/* 644 */
#pragma pack(push, 8)
struct TEasy_PanelVtbl
{
  void *(__thiscall *__vecDelDtor)(TEasy_Panel *, unsigned int);
  int (__thiscall *setup)(TEasy_Panel *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TEasy_Panel *, RECT);
  void (__thiscall *set_rect_1)(TEasy_Panel *, int, int, int, int);
  void (__thiscall *set_color)(TEasy_Panel *, unsigned __int8);
  void (__thiscall *set_active)(TEasy_Panel *, int);
  void (__thiscall *unknown1)(TEasy_Panel *);
  void (__thiscall *unknown2)(TEasy_Panel *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TEasy_Panel *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TEasy_Panel *, int);
  void (__thiscall *set_fixed_position)(TEasy_Panel *, int, int, int, int);
  void (__thiscall *set_redraw)(TEasy_Panel *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TEasy_Panel *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TEasy_Panel *, int);
  void (__thiscall *draw_finish)(TEasy_Panel *);
  void (__thiscall *draw)(TEasy_Panel *);
  void (__thiscall *draw_rect)(TEasy_Panel *, RECT *);
  void (__thiscall *draw_offset)(TEasy_Panel *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TEasy_Panel *, RECT *);
  void (__thiscall *draw_offset2)(TEasy_Panel *, int, int, RECT *);
  void (__thiscall *paint)(TEasy_Panel *);
  int (__thiscall *wnd_proc)(TEasy_Panel *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TEasy_Panel *);
  int (__thiscall *handle_size)(TEasy_Panel *, int, int);
  int (__thiscall *handle_paint)(TEasy_Panel *);
  int (__thiscall *handle_key_down)(TEasy_Panel *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TEasy_Panel *, int, __int16);
  int (__thiscall *handle_command)(TEasy_Panel *, unsigned int, int);
  int (__thiscall *handle_user_command)(TEasy_Panel *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TEasy_Panel *, unsigned int, int);
  int (__thiscall *handle_scroll)(TEasy_Panel *, int, int);
  int (__thiscall *handle_mouse_down)(TEasy_Panel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TEasy_Panel *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TEasy_Panel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TEasy_Panel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TEasy_Panel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TEasy_Panel *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TEasy_Panel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TEasy_Panel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TEasy_Panel *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TEasy_Panel *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TEasy_Panel *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TEasy_Panel *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TEasy_Panel *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TEasy_Panel *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TEasy_Panel *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TEasy_Panel *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TEasy_Panel *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TEasy_Panel *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TEasy_Panel *, int, int, int, int);
  int (__thiscall *key_down_action)(TEasy_Panel *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TEasy_Panel *, int, __int16);
  int (__thiscall *action)(TEasy_Panel *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TEasy_Panel *, RECT *);
  int (__thiscall *is_inside)(TEasy_Panel *, int, int);
  void (__thiscall *set_focus)(TEasy_Panel *, int);
  void (__thiscall *set_tab_order_2)(TEasy_Panel *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TEasy_Panel *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TEasy_Panel *);
  unsigned __int8 (__thiscall *get_help_info)(TEasy_Panel *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TEasy_Panel *);
  int (__thiscall *restart_sound_system)(TEasy_Panel *);
  void (__thiscall *take_snapshot)(TEasy_Panel *);
  void (__thiscall *handle_reactivate)(TEasy_Panel *);
  int (__thiscall *pointing_at)(TEasy_Panel *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TEasy_Panel *);
  int (__thiscall *get_ideal_width)(TEasy_Panel *);
  void (__thiscall *draw_background)(TEasy_Panel *, int);
  void (__thiscall *set_ideal_size)(TEasy_Panel *, int, int);
  int (__thiscall *create_button_2)(TEasy_Panel *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TEasy_Panel *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TEasy_Panel *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TEasy_Panel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TEasy_Panel *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TEasy_Panel *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TEasy_Panel *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TEasy_Panel *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TEasy_Panel *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TEasy_Panel *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TEasy_Panel *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TEasy_Panel *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TEasy_Panel *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TEasy_Panel *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TEasy_Panel *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TEasy_Panel *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TEasy_Panel *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TEasy_Panel *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TEasy_Panel *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TEasy_Panel *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TEasy_Panel *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TEasy_Panel *, TPanel *, int, int, int, int);
};
#pragma pack(pop)

/* 113 */
#pragma pack(push, 1)
struct TRIBE_Screen_Multimedia
{
};
#pragma pack(pop)

/* 114 */
#pragma pack(push, 8)
struct TRIBE_Screen_Main_Error
{
  TRIBE_Screen_Main_ErrorVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  TTextPanel *message;
  TButtonPanel *cancel_button;
  TButtonPanel *close_button;
};
#pragma pack(pop)

/* 797 */
#pragma pack(push, 8)
struct TRIBE_Screen_Main_ErrorVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Screen_Main_Error *, unsigned int);
  int (__thiscall *setup)(TRIBE_Screen_Main_Error *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TRIBE_Screen_Main_Error *, RECT);
  void (__thiscall *set_rect_1)(TRIBE_Screen_Main_Error *, int, int, int, int);
  void (__thiscall *set_color)(TRIBE_Screen_Main_Error *, unsigned __int8);
  void (__thiscall *set_active)(TRIBE_Screen_Main_Error *, int);
  void (__thiscall *unknown1)(TRIBE_Screen_Main_Error *);
  void (__thiscall *unknown2)(TRIBE_Screen_Main_Error *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TRIBE_Screen_Main_Error *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TRIBE_Screen_Main_Error *, int);
  void (__thiscall *set_fixed_position)(TRIBE_Screen_Main_Error *, int, int, int, int);
  void (__thiscall *set_redraw)(TRIBE_Screen_Main_Error *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TRIBE_Screen_Main_Error *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TRIBE_Screen_Main_Error *, int);
  void (__thiscall *draw_finish)(TRIBE_Screen_Main_Error *);
  void (__thiscall *draw)(TRIBE_Screen_Main_Error *);
  void (__thiscall *draw_rect)(TRIBE_Screen_Main_Error *, RECT *);
  void (__thiscall *draw_offset)(TRIBE_Screen_Main_Error *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TRIBE_Screen_Main_Error *, RECT *);
  void (__thiscall *draw_offset2)(TRIBE_Screen_Main_Error *, int, int, RECT *);
  void (__thiscall *paint)(TRIBE_Screen_Main_Error *);
  int (__thiscall *wnd_proc)(TRIBE_Screen_Main_Error *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TRIBE_Screen_Main_Error *);
  int (__thiscall *handle_size)(TRIBE_Screen_Main_Error *, int, int);
  int (__thiscall *handle_paint)(TRIBE_Screen_Main_Error *);
  int (__thiscall *handle_key_down)(TRIBE_Screen_Main_Error *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TRIBE_Screen_Main_Error *, int, __int16);
  int (__thiscall *handle_command)(TRIBE_Screen_Main_Error *, unsigned int, int);
  int (__thiscall *handle_user_command)(TRIBE_Screen_Main_Error *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TRIBE_Screen_Main_Error *, unsigned int, int);
  int (__thiscall *handle_scroll)(TRIBE_Screen_Main_Error *, int, int);
  int (__thiscall *handle_mouse_down)(TRIBE_Screen_Main_Error *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TRIBE_Screen_Main_Error *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TRIBE_Screen_Main_Error *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TRIBE_Screen_Main_Error *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TRIBE_Screen_Main_Error *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TRIBE_Screen_Main_Error *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TRIBE_Screen_Main_Error *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TRIBE_Screen_Main_Error *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TRIBE_Screen_Main_Error *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TRIBE_Screen_Main_Error *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TRIBE_Screen_Main_Error *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TRIBE_Screen_Main_Error *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TRIBE_Screen_Main_Error *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TRIBE_Screen_Main_Error *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TRIBE_Screen_Main_Error *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TRIBE_Screen_Main_Error *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TRIBE_Screen_Main_Error *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TRIBE_Screen_Main_Error *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TRIBE_Screen_Main_Error *, int, int, int, int);
  int (__thiscall *key_down_action)(TRIBE_Screen_Main_Error *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TRIBE_Screen_Main_Error *, int, __int16);
  int (__thiscall *action)(TRIBE_Screen_Main_Error *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TRIBE_Screen_Main_Error *, RECT *);
  int (__thiscall *is_inside)(TRIBE_Screen_Main_Error *, int, int);
  void (__thiscall *set_focus)(TRIBE_Screen_Main_Error *, int);
  void (__thiscall *set_tab_order_2)(TRIBE_Screen_Main_Error *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TRIBE_Screen_Main_Error *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TRIBE_Screen_Main_Error *);
  unsigned __int8 (__thiscall *get_help_info)(TRIBE_Screen_Main_Error *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TRIBE_Screen_Main_Error *);
  int (__thiscall *restart_sound_system)(TRIBE_Screen_Main_Error *);
  void (__thiscall *take_snapshot)(TRIBE_Screen_Main_Error *);
  void (__thiscall *handle_reactivate)(TRIBE_Screen_Main_Error *);
  int (__thiscall *pointing_at)(TRIBE_Screen_Main_Error *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TRIBE_Screen_Main_Error *);
  int (__thiscall *get_ideal_width)(TRIBE_Screen_Main_Error *);
  void (__thiscall *draw_background)(TRIBE_Screen_Main_Error *, int);
  void (__thiscall *set_ideal_size)(TRIBE_Screen_Main_Error *, int, int);
  int (__thiscall *create_button_2)(TRIBE_Screen_Main_Error *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TRIBE_Screen_Main_Error *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TRIBE_Screen_Main_Error *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TRIBE_Screen_Main_Error *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TRIBE_Screen_Main_Error *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TRIBE_Screen_Main_Error *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TRIBE_Screen_Main_Error *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TRIBE_Screen_Main_Error *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TRIBE_Screen_Main_Error *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TRIBE_Screen_Main_Error *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TRIBE_Screen_Main_Error *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TRIBE_Screen_Main_Error *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TRIBE_Screen_Main_Error *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TRIBE_Screen_Main_Error *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TRIBE_Screen_Main_Error *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TRIBE_Screen_Main_Error *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TRIBE_Screen_Main_Error *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TRIBE_Screen_Main_Error *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TRIBE_Screen_Main_Error *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TRIBE_Screen_Main_Error *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TRIBE_Screen_Main_Error *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TRIBE_Screen_Main_Error *, TPanel *, int, int, int, int);
};
#pragma pack(pop)

/* 115 */
#pragma pack(push, 8)
struct TRIBE_Screen_Wait
{
  TRIBE_Screen_WaitVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  TTextPanel *message;
  TButtonPanel *cancel_button;
  TButtonPanel *close_button;
};
#pragma pack(pop)

/* 785 */
#pragma pack(push, 8)
struct TRIBE_Screen_WaitVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Screen_Wait *, unsigned int);
  int (__thiscall *setup)(TRIBE_Screen_Wait *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TRIBE_Screen_Wait *, RECT);
  void (__thiscall *set_rect_1)(TRIBE_Screen_Wait *, int, int, int, int);
  void (__thiscall *set_color)(TRIBE_Screen_Wait *, unsigned __int8);
  void (__thiscall *set_active)(TRIBE_Screen_Wait *, int);
  void (__thiscall *unknown1)(TRIBE_Screen_Wait *);
  void (__thiscall *unknown2)(TRIBE_Screen_Wait *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TRIBE_Screen_Wait *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TRIBE_Screen_Wait *, int);
  void (__thiscall *set_fixed_position)(TRIBE_Screen_Wait *, int, int, int, int);
  void (__thiscall *set_redraw)(TRIBE_Screen_Wait *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TRIBE_Screen_Wait *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TRIBE_Screen_Wait *, int);
  void (__thiscall *draw_finish)(TRIBE_Screen_Wait *);
  void (__thiscall *draw)(TRIBE_Screen_Wait *);
  void (__thiscall *draw_rect)(TRIBE_Screen_Wait *, RECT *);
  void (__thiscall *draw_offset)(TRIBE_Screen_Wait *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TRIBE_Screen_Wait *, RECT *);
  void (__thiscall *draw_offset2)(TRIBE_Screen_Wait *, int, int, RECT *);
  void (__thiscall *paint)(TRIBE_Screen_Wait *);
  int (__thiscall *wnd_proc)(TRIBE_Screen_Wait *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TRIBE_Screen_Wait *);
  int (__thiscall *handle_size)(TRIBE_Screen_Wait *, int, int);
  int (__thiscall *handle_paint)(TRIBE_Screen_Wait *);
  int (__thiscall *handle_key_down)(TRIBE_Screen_Wait *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TRIBE_Screen_Wait *, int, __int16);
  int (__thiscall *handle_command)(TRIBE_Screen_Wait *, unsigned int, int);
  int (__thiscall *handle_user_command)(TRIBE_Screen_Wait *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TRIBE_Screen_Wait *, unsigned int, int);
  int (__thiscall *handle_scroll)(TRIBE_Screen_Wait *, int, int);
  int (__thiscall *handle_mouse_down)(TRIBE_Screen_Wait *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TRIBE_Screen_Wait *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TRIBE_Screen_Wait *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TRIBE_Screen_Wait *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TRIBE_Screen_Wait *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TRIBE_Screen_Wait *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TRIBE_Screen_Wait *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TRIBE_Screen_Wait *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TRIBE_Screen_Wait *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TRIBE_Screen_Wait *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TRIBE_Screen_Wait *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TRIBE_Screen_Wait *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TRIBE_Screen_Wait *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TRIBE_Screen_Wait *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TRIBE_Screen_Wait *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TRIBE_Screen_Wait *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TRIBE_Screen_Wait *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TRIBE_Screen_Wait *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TRIBE_Screen_Wait *, int, int, int, int);
  int (__thiscall *key_down_action)(TRIBE_Screen_Wait *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TRIBE_Screen_Wait *, int, __int16);
  int (__thiscall *action)(TRIBE_Screen_Wait *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TRIBE_Screen_Wait *, RECT *);
  int (__thiscall *is_inside)(TRIBE_Screen_Wait *, int, int);
  void (__thiscall *set_focus)(TRIBE_Screen_Wait *, int);
  void (__thiscall *set_tab_order_2)(TRIBE_Screen_Wait *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TRIBE_Screen_Wait *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TRIBE_Screen_Wait *);
  unsigned __int8 (__thiscall *get_help_info)(TRIBE_Screen_Wait *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TRIBE_Screen_Wait *);
  int (__thiscall *restart_sound_system)(TRIBE_Screen_Wait *);
  void (__thiscall *take_snapshot)(TRIBE_Screen_Wait *);
  void (__thiscall *handle_reactivate)(TRIBE_Screen_Wait *);
  int (__thiscall *pointing_at)(TRIBE_Screen_Wait *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TRIBE_Screen_Wait *);
  int (__thiscall *get_ideal_width)(TRIBE_Screen_Wait *);
  void (__thiscall *draw_background)(TRIBE_Screen_Wait *, int);
  void (__thiscall *set_ideal_size)(TRIBE_Screen_Wait *, int, int);
  int (__thiscall *create_button_2)(TRIBE_Screen_Wait *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TRIBE_Screen_Wait *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TRIBE_Screen_Wait *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TRIBE_Screen_Wait *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TRIBE_Screen_Wait *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TRIBE_Screen_Wait *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TRIBE_Screen_Wait *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TRIBE_Screen_Wait *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TRIBE_Screen_Wait *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TRIBE_Screen_Wait *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TRIBE_Screen_Wait *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TRIBE_Screen_Wait *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TRIBE_Screen_Wait *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TRIBE_Screen_Wait *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TRIBE_Screen_Wait *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TRIBE_Screen_Wait *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TRIBE_Screen_Wait *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TRIBE_Screen_Wait *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TRIBE_Screen_Wait *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TRIBE_Screen_Wait *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TRIBE_Screen_Wait *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TRIBE_Screen_Wait *, TPanel *, int, int, int, int);
};
#pragma pack(pop)

/* 116 */
#pragma pack(push, 8)
struct TribeMPSetupScreen
{
  TribeMPSetupScreenVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  int playingCivSound;
  TPanel *tempFromPanel;
  int tempActionIn;
  unsigned int tempA1;
  unsigned int tempA2;
  TTextPanel *infoText;
  TTextPanel *title;
  TTextPanel *playerTitle;
  TTextPanel *opponentsTitle;
  TTextPanel *pingTitle;
  TTextPanel *civTitle;
  TTextPanel *settingsTitle;
  TTextPanel *colorTitle;
  TTextPanel *teamTitle;
  TTextPanel *fileXferText;
  TTextPanel *playerPercentageText[8];
  TTextPanel *playerNameText[8];
  TTextPanel *playerPingText[8];
  TTextPanel *playerCivText[8];
  TTextPanel *scenarioPlayerText[8];
  TTextPanel *playerCDText[8];
  TTextPanel *playerVersionText[8];
  TTextPanel *playerColorText[8];
  TTextPanel *playerTeamText[8];
  TPercentPanel *playerPercent[8];
  TButtonPanel *playerColor[8];
  TButtonPanel *playerTeam[8];
  TDropDownPanel *playerNameDrop[8];
  TDropDownPanel *playerCivDrop[8];
  TDropDownPanel *scenarioPlayerDrop[8];
  TEditPanel *chatInput;
  TTextPanel *chatTitle;
  TTextPanel *chatBox;
  TScrollBarPanel *chatScrollbar;
  TButtonPanel *gameSettingsButton;
  TTextPanel *scenarioName;
  TTextPanel *victoryFixedText;
  TTextPanel *settingText[20];
  TTextPanel *settingValue[20];
  TTextPanel *numberPlayersTitle;
  TDropDownPanel *numberPlayersDrop;
  TTextPanel *numberPlayersText;
  TButtonPanel *startButton;
  TButtonPanel *readyButtons[2];
  TButtonPanel *cancelButton;
  TButtonPanel *help_button;
  TButtonPanel *ready_button;
  TButtonPanel *close_button;
  TTextPanel *ready_button_label;
  TTextPanel *gameTypeLabel;
  TDropDownPanel *gameTypeDrop;
  TTextPanel *mapFileTypeLabel;
  TDropDownPanel *mapFileTypeDrop;
  TTextPanel *mapTypeLabel;
  TDropDownPanel *mapTypeDrop;
  TTextPanel *mapSizeLabel;
  TDropDownPanel *mapSizeDrop;
  TTextPanel *difficultyLabel;
  TDropDownPanel *difficultyDrop;
  TTextPanel *resourcesLabel;
  TDropDownPanel *resourcesDrop;
  TTextPanel *ageLabel;
  TDropDownPanel *ageDrop;
  TTextPanel *limitLabel;
  TDropDownPanel *limitDrop;
  TTextPanel *victoryTypeLabel;
  TDropDownPanel *victoryTypeDrop;
  TTextPanel *scoreLabel;
  TDropDownPanel *scoreDrop;
  TTextPanel *timeLabel;
  TDropDownPanel *timeDrop;
  TButtonPanel *optionButton[5];
  TTextPanel *optionText[5];
  TTextPanel *gamespeedtext;
  TDropDownPanel *gamespeedlist;
  TTextPanel *mapVisiblity;
  TDropDownPanel *mapVisibilityList;
  TTextPanel *lockgamespeedtext;
  TButtonPanel *lockgamespeedbutton;
  TTextPanel *lockgameteamstext;
  TButtonPanel *lockgameteamsbutton;
  TTextPanel *recordGameText;
  TButtonPanel *recordGameButton;
  TTextPanel *recordGameAllowedText;
  TButtonPanel *recordGameAllowedButton;
  TShape *button_cmd_pic;
  unsigned __int8 team_selection_on;
  int last_game_type;
  int cancelMode;
  int soundID;
  int civID;
  int playerToKick;
  int scenarioPlayerCount;
  int myCivilization;
  int myScenarioPlayer;
  int myPlayerColor;
  int myPlayerTeam;
  int myScenarioChecksum;
  char saveScenarioName[256];
  int saveRandomGame;
  int saveScenarioChecksum;
  int SaveGameChecksumsMatch[20];
  T_Scenario *scenarioInfo;
  int settingsFixed;
  int numberAnyPlayers;
  int sent_cd_status;
  TButtonPanel *netInfoButton;
  TButtonPanel *techTreeButton;
  TButtonPanel *resetButton;
  int i_am_ready;
  unsigned __int8 defaultColor[8];
  int scenarioCheckSum[8];
  unsigned int last_send_shared;
  unsigned int last_update_ping;
  unsigned int ping_display_start[8];
  int resend_game_options;
  int fileTransfering;
  TDrawArea *mDrawArea;
  TSound_Driver *mSoundSystem;
  TVoice *mVoice;
  int mTransferingFile;
  TCommLog *mCommLog;
  int mHeaderLoaded;
  int mQuitting;
  unsigned int gameStartTimer;
  unsigned int secondsTillStart;
  int selectedScenario;
  int needToSelectScenario;
  int mTransferingRMS;
};
#pragma pack(pop)

/* 786 */
#pragma pack(push, 8)
struct TribeMPSetupScreenVtbl
{
  void *(__thiscall *__vecDelDtor)(TribeMPSetupScreen *, unsigned int);
  int (__thiscall *setup)(TribeMPSetupScreen *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TribeMPSetupScreen *, RECT);
  void (__thiscall *set_rect_1)(TribeMPSetupScreen *, int, int, int, int);
  void (__thiscall *set_color)(TribeMPSetupScreen *, unsigned __int8);
  void (__thiscall *set_active)(TribeMPSetupScreen *, int);
  void (__thiscall *unknown1)(TribeMPSetupScreen *);
  void (__thiscall *unknown2)(TribeMPSetupScreen *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TribeMPSetupScreen *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TribeMPSetupScreen *, int);
  void (__thiscall *set_fixed_position)(TribeMPSetupScreen *, int, int, int, int);
  void (__thiscall *set_redraw)(TribeMPSetupScreen *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TribeMPSetupScreen *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TribeMPSetupScreen *, int);
  void (__thiscall *draw_finish)(TribeMPSetupScreen *);
  void (__thiscall *draw)(TribeMPSetupScreen *);
  void (__thiscall *draw_rect)(TribeMPSetupScreen *, RECT *);
  void (__thiscall *draw_offset)(TribeMPSetupScreen *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TribeMPSetupScreen *, RECT *);
  void (__thiscall *draw_offset2)(TribeMPSetupScreen *, int, int, RECT *);
  void (__thiscall *paint)(TribeMPSetupScreen *);
  int (__thiscall *wnd_proc)(TribeMPSetupScreen *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TribeMPSetupScreen *);
  int (__thiscall *handle_size)(TribeMPSetupScreen *, int, int);
  int (__thiscall *handle_paint)(TribeMPSetupScreen *);
  int (__thiscall *handle_key_down)(TribeMPSetupScreen *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TribeMPSetupScreen *, int, __int16);
  int (__thiscall *handle_command)(TribeMPSetupScreen *, unsigned int, int);
  int (__thiscall *handle_user_command)(TribeMPSetupScreen *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TribeMPSetupScreen *, unsigned int, int);
  int (__thiscall *handle_scroll)(TribeMPSetupScreen *, int, int);
  int (__thiscall *handle_mouse_down)(TribeMPSetupScreen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TribeMPSetupScreen *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TribeMPSetupScreen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TribeMPSetupScreen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TribeMPSetupScreen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TribeMPSetupScreen *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TribeMPSetupScreen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TribeMPSetupScreen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TribeMPSetupScreen *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TribeMPSetupScreen *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TribeMPSetupScreen *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TribeMPSetupScreen *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TribeMPSetupScreen *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TribeMPSetupScreen *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TribeMPSetupScreen *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TribeMPSetupScreen *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TribeMPSetupScreen *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TribeMPSetupScreen *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TribeMPSetupScreen *, int, int, int, int);
  int (__thiscall *key_down_action)(TribeMPSetupScreen *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TribeMPSetupScreen *, int, __int16);
  int (__thiscall *action)(TribeMPSetupScreen *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TribeMPSetupScreen *, RECT *);
  int (__thiscall *is_inside)(TribeMPSetupScreen *, int, int);
  void (__thiscall *set_focus)(TribeMPSetupScreen *, int);
  void (__thiscall *set_tab_order_2)(TribeMPSetupScreen *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TribeMPSetupScreen *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TribeMPSetupScreen *);
  unsigned __int8 (__thiscall *get_help_info)(TribeMPSetupScreen *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TribeMPSetupScreen *);
  int (__thiscall *restart_sound_system)(TribeMPSetupScreen *);
  void (__thiscall *take_snapshot)(TribeMPSetupScreen *);
  void (__thiscall *handle_reactivate)(TribeMPSetupScreen *);
  int (__thiscall *pointing_at)(TribeMPSetupScreen *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TribeMPSetupScreen *);
  int (__thiscall *get_ideal_width)(TribeMPSetupScreen *);
  void (__thiscall *draw_background)(TribeMPSetupScreen *, int);
  void (__thiscall *set_ideal_size)(TribeMPSetupScreen *, int, int);
  int (__thiscall *create_button_2)(TribeMPSetupScreen *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TribeMPSetupScreen *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TribeMPSetupScreen *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TribeMPSetupScreen *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TribeMPSetupScreen *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TribeMPSetupScreen *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TribeMPSetupScreen *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TribeMPSetupScreen *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TribeMPSetupScreen *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TribeMPSetupScreen *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TribeMPSetupScreen *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TribeMPSetupScreen *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TribeMPSetupScreen *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TribeMPSetupScreen *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TribeMPSetupScreen *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TribeMPSetupScreen *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TribeMPSetupScreen *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TribeMPSetupScreen *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TribeMPSetupScreen *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TribeMPSetupScreen *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TribeMPSetupScreen *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TribeMPSetupScreen *, TPanel *, int, int, int, int);
  void (__thiscall *fillPlayers)(TribeMPSetupScreen *);
  void (__thiscall *applyLockedSettings)(TribeMPSetupScreen *);
  void (__thiscall *init_vars)(TribeMPSetupScreen *);
  int (__thiscall *startGame)(TribeMPSetupScreen *, int);
  int (__thiscall *launchGame)(TribeMPSetupScreen *);
  void (__thiscall *activateSettingPanels)(TribeMPSetupScreen *, int);
};
#pragma pack(pop)

/* 346 */
#pragma pack(push, 8)
struct TPercentPanel
{
  TPercentPanelVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int mPercentage;
  int full_wid;
};
#pragma pack(pop)

/* 791 */
#pragma pack(push, 8)
struct Player_Start_Info
{
  int Gold;
  int Wood;
  int Food;
  int Stone;
  int Ore;
  int Trade_Goods;
};
#pragma pack(pop)

/* 792 */
#pragma pack(push, 8)
struct Victory_StartInfo
{
  int MP_Conquest;
  int MP_Ruins;
  int MP_Artifacts;
  int MP_Discoveries;
  int MP_Exploration;
  int MP_Gold;
};
#pragma pack(pop)

/* 559 */
#pragma pack(push, 8)
struct SP_Victory_Info
{
  int ObjType;
  int AllFlag;
  int PlayerID;
  int DestObjID;
  float x1;
  float y1;
  float x2;
  float y2;
  int VictoryType;
  int Amount;
  int AttribType;
  int obj_ID;
  int dest_obj_ID;
  RGE_Static_Object *obj;
  RGE_Static_Object *dest_obj;
};
#pragma pack(pop)

/* 789 */
#pragma pack(push, 8)
struct Friendliness
{
  int Attitude[16];
};
#pragma pack(pop)

/* 135 */
#pragma pack(push, 8)
struct T_Scenario
{
  T_ScenarioVtbl *vfptr;
  RGE_Timeline *time_line;
  RGE_Game_World *world;
  unsigned __int8 victory_conquest;
  PlayerName player_name[16];
  int player_string_table[16];
  char *scenario_name;
  char *description;
  char *hints;
  char *win_message;
  char *loss_message;
  char *historicle_notes;
  char *scout_message;
  int description_string_table;
  int hints_string_table;
  int win_message_string_table;
  int loss_message_string_table;
  int historicle_notes_string_table;
  int scout_message_string_table;
  char TempText1[224];
  char TempText2[224];
  char TempText3[224];
  char *BuildList[16];
  char *CityPlan[16];
  char *AiRules[16];
  unsigned __int8 AiRulesType[16];
  unsigned __int8 *BuildListFile[16];
  unsigned __int8 *CityPlanFile[16];
  unsigned __int8 *AiRulesFile[16];
  int BuildListFileSize[16];
  int CityPlanFileSize[16];
  int AiRulesFileSize[16];
  char Cine_PreGame[224];
  char Cine_Victory[224];
  char Cine_Loss[224];
  char Mission_Bmp[224];
  float Version;
  int PlayerPosture[16];
  int PlType[16];
  int PlCivilization[16];
  int PlActive[16];
  TPicture *mission_picture;
  Player_Start_Info player_info[16];
  Victory_StartInfo victory;
  SP_Victory_Info sp_victory[16][12];
  Friendliness Opponent[16];
  int AlliedVictory[16];
  int victory_all_flag;
  int is_multi_player_flag;
  int which_player;
  int DisabledBuilding[16][60];
  int ScenarioOptions[3];
  int PlayerAge[16];
  int mp_victory_type;
  int victory_score;
  int victory_time;
  int num_disable_techs[16];
  int DisabledTechnology[16][60];
  int num_disable_units[16];
  int DisabledUnit[16][60];
  int num_disable_buildings[16];
  int view_x;
  int view_y;
};
#pragma pack(pop)

/* 795 */
#pragma pack(push, 1)
struct TVoice
{
};
#pragma pack(pop)

/* 890 */
#pragma pack(push, 8)
struct TPercentPanelVtbl
{
  void *(__thiscall *__vecDelDtor)(TPercentPanel *, unsigned int);
  int (__thiscall *setup)(TPercentPanel *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TPercentPanel *, RECT);
  void (__thiscall *set_rect_1)(TPercentPanel *, int, int, int, int);
  void (__thiscall *set_color)(TPercentPanel *, unsigned __int8);
  void (__thiscall *set_active)(TPercentPanel *, int);
  void (__thiscall *unknown1)(TPercentPanel *);
  void (__thiscall *unknown2)(TPercentPanel *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TPercentPanel *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TPercentPanel *, int);
  void (__thiscall *set_fixed_position)(TPercentPanel *, int, int, int, int);
  void (__thiscall *set_redraw)(TPercentPanel *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TPercentPanel *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TPercentPanel *, int);
  void (__thiscall *draw_finish)(TPercentPanel *);
  void (__thiscall *draw)(TPercentPanel *);
  void (__thiscall *draw_rect)(TPercentPanel *, RECT *);
  void (__thiscall *draw_offset)(TPercentPanel *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TPercentPanel *, RECT *);
  void (__thiscall *draw_offset2)(TPercentPanel *, int, int, RECT *);
  void (__thiscall *paint)(TPercentPanel *);
  int (__thiscall *wnd_proc)(TPercentPanel *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TPercentPanel *);
  int (__thiscall *handle_size)(TPercentPanel *, int, int);
  int (__thiscall *handle_paint)(TPercentPanel *);
  int (__thiscall *handle_key_down)(TPercentPanel *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TPercentPanel *, int, __int16);
  int (__thiscall *handle_command)(TPercentPanel *, unsigned int, int);
  int (__thiscall *handle_user_command)(TPercentPanel *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TPercentPanel *, unsigned int, int);
  int (__thiscall *handle_scroll)(TPercentPanel *, int, int);
  int (__thiscall *handle_mouse_down)(TPercentPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TPercentPanel *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TPercentPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TPercentPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TPercentPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TPercentPanel *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TPercentPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TPercentPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TPercentPanel *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TPercentPanel *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TPercentPanel *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TPercentPanel *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TPercentPanel *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TPercentPanel *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TPercentPanel *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TPercentPanel *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TPercentPanel *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TPercentPanel *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TPercentPanel *, int, int, int, int);
  int (__thiscall *key_down_action)(TPercentPanel *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TPercentPanel *, int, __int16);
  int (__thiscall *action)(TPercentPanel *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TPercentPanel *, RECT *);
  int (__thiscall *is_inside)(TPercentPanel *, int, int);
  void (__thiscall *set_focus)(TPercentPanel *, int);
  void (__thiscall *set_tab_order_2)(TPercentPanel *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TPercentPanel *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TPercentPanel *);
  unsigned __int8 (__thiscall *get_help_info)(TPercentPanel *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TPercentPanel *);
  int (__thiscall *restart_sound_system)(TPercentPanel *);
  void (__thiscall *take_snapshot)(TPercentPanel *);
  void (__thiscall *handle_reactivate)(TPercentPanel *);
  int (__thiscall *pointing_at)(TPercentPanel *, int, int, int *, int *, int *, int *, char *, int);
};
#pragma pack(pop)

/* 788 */
#pragma pack(push, 8)
struct T_ScenarioVtbl
{
  RGE_Static_Object *(__thiscall *get_object_pointer)(T_Scenario *, int);
  void *(__thiscall *__vecDelDtor)(T_Scenario *, unsigned int);
  void (__thiscall *rehook)(T_Scenario *);
  void (__thiscall *save)(T_Scenario *, int);
};
#pragma pack(pop)

/* 122 */
#pragma pack(push, 8)
struct TMessageDialog
{
  TMessageDialogVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  HWND dlg_wnd;
  TPanel *save_parent_child;
  TPanel *save_parent;
  int text_font_id;
  int input_font_id;
  int button_font_id;
  int button_sound_id;
  unsigned __int8 dlg_type;
  TTextPanel *text;
  TButtonPanel *button[3];
};
#pragma pack(pop)

/* 873 */
#pragma pack(push, 8)
struct TMessageDialogVtbl
{
  void *(__thiscall *__vecDelDtor)(TMessageDialog *, unsigned int);
  int (__thiscall *setup)(TMessageDialog *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TMessageDialog *, RECT);
  void (__thiscall *set_rect_1)(TMessageDialog *, int, int, int, int);
  void (__thiscall *set_color)(TMessageDialog *, unsigned __int8);
  void (__thiscall *set_active)(TMessageDialog *, int);
  void (__thiscall *unknown1)(TMessageDialog *);
  void (__thiscall *unknown2)(TMessageDialog *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TMessageDialog *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TMessageDialog *, int);
  void (__thiscall *set_fixed_position)(TMessageDialog *, int, int, int, int);
  void (__thiscall *set_redraw)(TMessageDialog *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TMessageDialog *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TMessageDialog *, int);
  void (__thiscall *draw_finish)(TMessageDialog *);
  void (__thiscall *draw)(TMessageDialog *);
  void (__thiscall *draw_rect)(TMessageDialog *, RECT *);
  void (__thiscall *draw_offset)(TMessageDialog *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TMessageDialog *, RECT *);
  void (__thiscall *draw_offset2)(TMessageDialog *, int, int, RECT *);
  void (__thiscall *paint)(TMessageDialog *);
  int (__thiscall *wnd_proc)(TMessageDialog *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TMessageDialog *);
  int (__thiscall *handle_size)(TMessageDialog *, int, int);
  int (__thiscall *handle_paint)(TMessageDialog *);
  int (__thiscall *handle_key_down)(TMessageDialog *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TMessageDialog *, int, __int16);
  int (__thiscall *handle_command)(TMessageDialog *, unsigned int, int);
  int (__thiscall *handle_user_command)(TMessageDialog *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TMessageDialog *, unsigned int, int);
  int (__thiscall *handle_scroll)(TMessageDialog *, int, int);
  int (__thiscall *handle_mouse_down)(TMessageDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TMessageDialog *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TMessageDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TMessageDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TMessageDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TMessageDialog *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TMessageDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TMessageDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TMessageDialog *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TMessageDialog *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TMessageDialog *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TMessageDialog *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TMessageDialog *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TMessageDialog *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TMessageDialog *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TMessageDialog *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TMessageDialog *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TMessageDialog *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TMessageDialog *, int, int, int, int);
  int (__thiscall *key_down_action)(TMessageDialog *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TMessageDialog *, int, __int16);
  int (__thiscall *action)(TMessageDialog *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TMessageDialog *, RECT *);
  int (__thiscall *is_inside)(TMessageDialog *, int, int);
  void (__thiscall *set_focus)(TMessageDialog *, int);
  void (__thiscall *set_tab_order_2)(TMessageDialog *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TMessageDialog *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TMessageDialog *);
  unsigned __int8 (__thiscall *get_help_info)(TMessageDialog *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TMessageDialog *);
  int (__thiscall *restart_sound_system)(TMessageDialog *);
  void (__thiscall *take_snapshot)(TMessageDialog *);
  void (__thiscall *handle_reactivate)(TMessageDialog *);
  int (__thiscall *pointing_at)(TMessageDialog *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TMessageDialog *);
  int (__thiscall *get_ideal_width)(TMessageDialog *);
  void (__thiscall *draw_background)(TMessageDialog *, int);
  void (__thiscall *set_ideal_size)(TMessageDialog *, int, int);
  int (__thiscall *create_button_2)(TMessageDialog *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TMessageDialog *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TMessageDialog *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TMessageDialog *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TMessageDialog *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TMessageDialog *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TMessageDialog *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TMessageDialog *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TMessageDialog *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TMessageDialog *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TMessageDialog *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TMessageDialog *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TMessageDialog *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TMessageDialog *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TMessageDialog *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TMessageDialog *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TMessageDialog *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TMessageDialog *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TMessageDialog *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TMessageDialog *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TMessageDialog *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TMessageDialog *, TPanel *, int, int, int, int);
  int (__thiscall *setup_3)(TMessageDialog *, TDrawArea *, TPanel *, int, int, unsigned __int8, int);
  int (__thiscall *setup_2)(TMessageDialog *, TDrawArea *, TPanel *, int, int, char *, int, int);
};
#pragma pack(pop)

/* 123 */
#pragma pack(push, 8)
struct TDialogPanel
{
  TDialogPanelVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  HWND dlg_wnd;
  TPanel *save_parent_child;
  TPanel *save_parent;
  int text_font_id;
  int input_font_id;
  int button_font_id;
  int button_sound_id;
};
#pragma pack(pop)

/* 645 */
#pragma pack(push, 8)
struct TDialogPanelVtbl
{
  void *(__thiscall *__vecDelDtor)(TDialogPanel *, unsigned int);
  int (__thiscall *setup)(TDialogPanel *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TDialogPanel *, RECT);
  void (__thiscall *set_rect_1)(TDialogPanel *, int, int, int, int);
  void (__thiscall *set_color)(TDialogPanel *, unsigned __int8);
  void (__thiscall *set_active)(TDialogPanel *, int);
  void (__thiscall *unknown1)(TDialogPanel *);
  void (__thiscall *unknown2)(TDialogPanel *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TDialogPanel *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TDialogPanel *, int);
  void (__thiscall *set_fixed_position)(TDialogPanel *, int, int, int, int);
  void (__thiscall *set_redraw)(TDialogPanel *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TDialogPanel *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TDialogPanel *, int);
  void (__thiscall *draw_finish)(TDialogPanel *);
  void (__thiscall *draw)(TDialogPanel *);
  void (__thiscall *draw_rect)(TDialogPanel *, RECT *);
  void (__thiscall *draw_offset)(TDialogPanel *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TDialogPanel *, RECT *);
  void (__thiscall *draw_offset2)(TDialogPanel *, int, int, RECT *);
  void (__thiscall *paint)(TDialogPanel *);
  int (__thiscall *wnd_proc)(TDialogPanel *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TDialogPanel *);
  int (__thiscall *handle_size)(TDialogPanel *, int, int);
  int (__thiscall *handle_paint)(TDialogPanel *);
  int (__thiscall *handle_key_down)(TDialogPanel *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TDialogPanel *, int, __int16);
  int (__thiscall *handle_command)(TDialogPanel *, unsigned int, int);
  int (__thiscall *handle_user_command)(TDialogPanel *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TDialogPanel *, unsigned int, int);
  int (__thiscall *handle_scroll)(TDialogPanel *, int, int);
  int (__thiscall *handle_mouse_down)(TDialogPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TDialogPanel *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TDialogPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TDialogPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TDialogPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TDialogPanel *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TDialogPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TDialogPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TDialogPanel *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TDialogPanel *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TDialogPanel *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TDialogPanel *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TDialogPanel *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TDialogPanel *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TDialogPanel *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TDialogPanel *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TDialogPanel *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TDialogPanel *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TDialogPanel *, int, int, int, int);
  int (__thiscall *key_down_action)(TDialogPanel *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TDialogPanel *, int, __int16);
  int (__thiscall *action)(TDialogPanel *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TDialogPanel *, RECT *);
  int (__thiscall *is_inside)(TDialogPanel *, int, int);
  void (__thiscall *set_focus)(TDialogPanel *, int);
  void (__thiscall *set_tab_order_2)(TDialogPanel *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TDialogPanel *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TDialogPanel *);
  unsigned __int8 (__thiscall *get_help_info)(TDialogPanel *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TDialogPanel *);
  int (__thiscall *restart_sound_system)(TDialogPanel *);
  void (__thiscall *take_snapshot)(TDialogPanel *);
  void (__thiscall *handle_reactivate)(TDialogPanel *);
  int (__thiscall *pointing_at)(TDialogPanel *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TDialogPanel *);
  int (__thiscall *get_ideal_width)(TDialogPanel *);
  void (__thiscall *draw_background)(TDialogPanel *, int);
  void (__thiscall *set_ideal_size)(TDialogPanel *, int, int);
  int (__thiscall *create_button_2)(TDialogPanel *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TDialogPanel *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TDialogPanel *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TDialogPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TDialogPanel *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TDialogPanel *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TDialogPanel *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TDialogPanel *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TDialogPanel *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TDialogPanel *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TDialogPanel *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TDialogPanel *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TDialogPanel *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TDialogPanel *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TDialogPanel *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TDialogPanel *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TDialogPanel *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TDialogPanel *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TDialogPanel *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TDialogPanel *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TDialogPanel *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TDialogPanel *, TPanel *, int, int, int, int);
  int (__thiscall *setup_3)(TDialogPanel *, TDrawArea *, TPanel *, int, int, unsigned __int8, int);
  int (__thiscall *setup_2)(TDialogPanel *, TDrawArea *, TPanel *, int, int, char *, int, int);
};
#pragma pack(pop)

/* 130 */
#pragma pack(push, 1)
struct SymbolTable
{
};
#pragma pack(pop)

/* 131 */
#pragma pack(push, 1)
struct SymbolData
{
};
#pragma pack(pop)

/* 498 */
#pragma pack(push, 8)
struct AIModuleID
{
  AIModuleIDVtbl *vfptr;
  int id;
  char name[64];
};
#pragma pack(pop)

/* 311 */
#pragma pack(push, 8)
struct VictoryConditionRuleSystem
{
  VictoryConditionRuleSystemVtbl *vfptr;
  int sn[242];
};
#pragma pack(pop)

/* 939 */
#pragma pack(push, 8)
struct AIExpertEngine__AIListStats
{
  __int16 rulesEvaluated;
  __int16 rulesFired;
};
#pragma pack(pop)

/* 936 */
typedef int AIExpert__ErrorCode;

/* 937 */
#pragma pack(push, 8)
struct AIExpert__ErrorInfo
{
  char fileBaseName[257];
  int lineNumber;
  char description[128];
  AIExpert__ErrorCode errorCode;
};
#pragma pack(pop)

/* 132 */
#pragma pack(push, 8)
struct TribeStrategyAIModule
{
  TribeStrategyAIModuleVtbl *vfptr;
  AIModuleID idValue;
  int playerNumberValue;
  char playerNameValue[64];
  int runningValue;
  int pausedValue;
  int logHistoryValue;
  int logCommonHistoryValue;
  FILE *historyLogFile;
  char historyLogFilename[64];
  int intelligenceLevelValue;
  int priorityValue;
  int processFrameValue;
  TribeMainDecisionAIModule *md;
  int currentVictoryConditionValue;
  char ruleSetNameValue[257];
  char aiFileBaseName[257];
  int targetIDValue;
  int targetTypeValue;
  int secondTargetIDValue;
  int secondTargetTypeValue;
  Waypoint targetPoint1Value;
  Waypoint targetPoint2Value;
  int targetAttributeValue;
  int targetNumberValue;
  int victoryConditionChangeTimeout;
  ManagedArray_int_ vcRuleSet;
  ManagedArray_int_ executingRules;
  ManagedArray_int_ idleRules;
  VictoryConditionRuleSystem vcRules;
  int difficultyLevel;
  AIExpert *expert;
  int ruleListId;
  AIExpertEngine__AIListStats expertStatistics;
  unsigned int expertTiming;
  int parserError;
  AIExpert__ErrorInfo errorInfo;
};
#pragma pack(pop)

/* 935 */
#pragma pack(push, 8)
struct TribeStrategyAIModuleVtbl
{
  void *(__thiscall *__vecDelDtor)(TribeStrategyAIModule *, unsigned int);
  int (__thiscall *loggingHistory)(TribeStrategyAIModule *);
  void (__thiscall *setLogHistory)(TribeStrategyAIModule *, int);
  void (__thiscall *toggleLogHistory)(TribeStrategyAIModule *);
  void (__thiscall *setHistoryFilename)(TribeStrategyAIModule *, char *);
  int (__thiscall *loggingCommonHistory)(TribeStrategyAIModule *);
  void (__thiscall *setLogCommonHistory)(TribeStrategyAIModule *, int);
  void (__thiscall *toggleLogCommonHistory)(TribeStrategyAIModule *);
  int (__thiscall *loadState)(TribeStrategyAIModule *, char *);
  int (__thiscall *saveState)(TribeStrategyAIModule *, char *);
  int (__thiscall *gleanState)(TribeStrategyAIModule *, int);
  int (__thiscall *processMessage)(TribeStrategyAIModule *, AIModuleMessage *);
  int (__thiscall *update)(TribeStrategyAIModule *, int);
  void (__thiscall *setCallbackMessage)(TribeStrategyAIModule *, AIModuleMessage *);
  int (__thiscall *filterOutMessage)(TribeStrategyAIModule *, AIModuleMessage *);
  int (__thiscall *save)(TribeStrategyAIModule *, int);
};
#pragma pack(pop)

/* 931 */
#pragma pack(push, 8)
struct AIModuleIDVtbl
{
  void *(__thiscall *__vecDelDtor)(AIModuleID *, unsigned int);
};
#pragma pack(pop)

/* 930 */
#pragma pack(push, 8)
struct VictoryConditionRuleSystemVtbl
{
  void *(__thiscall *__vecDelDtor)(VictoryConditionRuleSystem *, unsigned int);
};
#pragma pack(pop)

/* 932 */
#pragma pack(push, 1)
struct AIModuleMessage
{
};
#pragma pack(pop)

/* 134 */
#pragma pack(push, 1)
struct RGE_Main_View
{
};
#pragma pack(pop)

/* 136 */
#pragma pack(push, 8)
struct TRIBE_Screen_Status_Message
{
  TRIBE_Screen_Status_MessageVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  TTextPanel *message;
  TTextPanel *settingText[22];
};
#pragma pack(pop)

/* 779 */
#pragma pack(push, 8)
struct TRIBE_Screen_Status_MessageVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Screen_Status_Message *, unsigned int);
  int (__thiscall *setup)(TRIBE_Screen_Status_Message *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TRIBE_Screen_Status_Message *, RECT);
  void (__thiscall *set_rect_1)(TRIBE_Screen_Status_Message *, int, int, int, int);
  void (__thiscall *set_color)(TRIBE_Screen_Status_Message *, unsigned __int8);
  void (__thiscall *set_active)(TRIBE_Screen_Status_Message *, int);
  void (__thiscall *unknown1)(TRIBE_Screen_Status_Message *);
  void (__thiscall *unknown2)(TRIBE_Screen_Status_Message *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TRIBE_Screen_Status_Message *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TRIBE_Screen_Status_Message *, int);
  void (__thiscall *set_fixed_position)(TRIBE_Screen_Status_Message *, int, int, int, int);
  void (__thiscall *set_redraw)(TRIBE_Screen_Status_Message *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TRIBE_Screen_Status_Message *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TRIBE_Screen_Status_Message *, int);
  void (__thiscall *draw_finish)(TRIBE_Screen_Status_Message *);
  void (__thiscall *draw)(TRIBE_Screen_Status_Message *);
  void (__thiscall *draw_rect)(TRIBE_Screen_Status_Message *, RECT *);
  void (__thiscall *draw_offset)(TRIBE_Screen_Status_Message *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TRIBE_Screen_Status_Message *, RECT *);
  void (__thiscall *draw_offset2)(TRIBE_Screen_Status_Message *, int, int, RECT *);
  void (__thiscall *paint)(TRIBE_Screen_Status_Message *);
  int (__thiscall *wnd_proc)(TRIBE_Screen_Status_Message *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TRIBE_Screen_Status_Message *);
  int (__thiscall *handle_size)(TRIBE_Screen_Status_Message *, int, int);
  int (__thiscall *handle_paint)(TRIBE_Screen_Status_Message *);
  int (__thiscall *handle_key_down)(TRIBE_Screen_Status_Message *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TRIBE_Screen_Status_Message *, int, __int16);
  int (__thiscall *handle_command)(TRIBE_Screen_Status_Message *, unsigned int, int);
  int (__thiscall *handle_user_command)(TRIBE_Screen_Status_Message *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TRIBE_Screen_Status_Message *, unsigned int, int);
  int (__thiscall *handle_scroll)(TRIBE_Screen_Status_Message *, int, int);
  int (__thiscall *handle_mouse_down)(TRIBE_Screen_Status_Message *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TRIBE_Screen_Status_Message *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TRIBE_Screen_Status_Message *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TRIBE_Screen_Status_Message *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TRIBE_Screen_Status_Message *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TRIBE_Screen_Status_Message *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TRIBE_Screen_Status_Message *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TRIBE_Screen_Status_Message *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TRIBE_Screen_Status_Message *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TRIBE_Screen_Status_Message *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TRIBE_Screen_Status_Message *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TRIBE_Screen_Status_Message *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TRIBE_Screen_Status_Message *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TRIBE_Screen_Status_Message *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TRIBE_Screen_Status_Message *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TRIBE_Screen_Status_Message *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TRIBE_Screen_Status_Message *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TRIBE_Screen_Status_Message *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TRIBE_Screen_Status_Message *, int, int, int, int);
  int (__thiscall *key_down_action)(TRIBE_Screen_Status_Message *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TRIBE_Screen_Status_Message *, int, __int16);
  int (__thiscall *action)(TRIBE_Screen_Status_Message *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TRIBE_Screen_Status_Message *, RECT *);
  int (__thiscall *is_inside)(TRIBE_Screen_Status_Message *, int, int);
  void (__thiscall *set_focus)(TRIBE_Screen_Status_Message *, int);
  void (__thiscall *set_tab_order_2)(TRIBE_Screen_Status_Message *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TRIBE_Screen_Status_Message *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TRIBE_Screen_Status_Message *);
  unsigned __int8 (__thiscall *get_help_info)(TRIBE_Screen_Status_Message *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TRIBE_Screen_Status_Message *);
  int (__thiscall *restart_sound_system)(TRIBE_Screen_Status_Message *);
  void (__thiscall *take_snapshot)(TRIBE_Screen_Status_Message *);
  void (__thiscall *handle_reactivate)(TRIBE_Screen_Status_Message *);
  int (__thiscall *pointing_at)(TRIBE_Screen_Status_Message *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TRIBE_Screen_Status_Message *);
  int (__thiscall *get_ideal_width)(TRIBE_Screen_Status_Message *);
  void (__thiscall *draw_background)(TRIBE_Screen_Status_Message *, int);
  void (__thiscall *set_ideal_size)(TRIBE_Screen_Status_Message *, int, int);
  int (__thiscall *create_button_2)(TRIBE_Screen_Status_Message *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TRIBE_Screen_Status_Message *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TRIBE_Screen_Status_Message *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TRIBE_Screen_Status_Message *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TRIBE_Screen_Status_Message *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TRIBE_Screen_Status_Message *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TRIBE_Screen_Status_Message *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TRIBE_Screen_Status_Message *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TRIBE_Screen_Status_Message *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TRIBE_Screen_Status_Message *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TRIBE_Screen_Status_Message *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TRIBE_Screen_Status_Message *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TRIBE_Screen_Status_Message *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TRIBE_Screen_Status_Message *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TRIBE_Screen_Status_Message *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TRIBE_Screen_Status_Message *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TRIBE_Screen_Status_Message *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TRIBE_Screen_Status_Message *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TRIBE_Screen_Status_Message *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TRIBE_Screen_Status_Message *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TRIBE_Screen_Status_Message *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TRIBE_Screen_Status_Message *, TPanel *, int, int, int, int);
};
#pragma pack(pop)

/* 139 */
#pragma pack(push, 1)
struct TRIBE_Command_Make
{
};
#pragma pack(pop)

/* 141 */
#pragma pack(push, 1)
struct TRIBE_Command_Research
{
};
#pragma pack(pop)

/* 144 */
#pragma pack(push, 8)
struct TRIBE_Action_Make_Tech
{
  TRIBE_Action_Make_TechVtbl *vfptr;
  __int16 action_type;
  RGE_Action_Object *obj;
  unsigned __int8 state;
  RGE_Static_Object *target_obj;
  RGE_Static_Object *target_obj2;
  int targetID;
  int target2ID;
  float target_x;
  float target_y;
  float target_z;
  float timer;
  RGE_Task *task;
  RGE_Action_List *sub_actions;
  RGE_Sprite *sprite;
  unsigned __int8 subActionValue;
  unsigned __int8 mTargetMovedState;
  unsigned __int8 RGE_Action_gap[2];
  __int16 tech_id;
  int unique_id;
};
#pragma pack(pop)

/* 733 */
#pragma pack(push, 8)
struct TRIBE_Action_Make_TechVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Action_Make_Tech *, unsigned int);
  int (__thiscall *setup_2)(TRIBE_Action_Make_Tech *, RGE_Action_Object *);
  int (__thiscall *setup_1)(TRIBE_Action_Make_Tech *, int, RGE_Action_Object *);
  RGE_Action_List *(__thiscall *create_action_list)(TRIBE_Action_Make_Tech *, RGE_Action_Object *);
  void (__thiscall *rehook)(TRIBE_Action_Make_Tech *);
  void (__thiscall *save)(TRIBE_Action_Make_Tech *, int);
  __int16 (__thiscall *type)(TRIBE_Action_Make_Tech *);
  void (__thiscall *first_in_stack)(TRIBE_Action_Make_Tech *, unsigned __int8);
  unsigned __int8 (__thiscall *inside_obj_update)(TRIBE_Action_Make_Tech *);
  unsigned __int8 (__thiscall *idle_update)(TRIBE_Action_Make_Tech *);
  unsigned __int8 (__thiscall *update)(TRIBE_Action_Make_Tech *);
  int (__thiscall *stop)(TRIBE_Action_Make_Tech *);
  int (__thiscall *move_to)(TRIBE_Action_Make_Tech *, RGE_Static_Object *, float, float, float);
  int (__thiscall *work)(TRIBE_Action_Make_Tech *, RGE_Static_Object *, float, float, float);
  int (__thiscall *gbg_unknown1)(TRIBE_Action_Make_Tech *, int, int);
  unsigned __int8 (__thiscall *attack_response)(TRIBE_Action_Make_Tech *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *relation_response)(TRIBE_Action_Make_Tech *, int, unsigned __int8);
  void (__thiscall *copy_obj)(TRIBE_Action_Make_Tech *, RGE_Master_Action_Object *);
  void (__thiscall *copy_obj_sprites)(TRIBE_Action_Make_Tech *, RGE_Master_Action_Object *, RGE_Task *, RGE_Task *);
  void (__thiscall *get_state_name)(TRIBE_Action_Make_Tech *, char *);
  RGE_Static_Object *(__thiscall *get_target_obj)(TRIBE_Action_Make_Tech *);
  RGE_Static_Object *(__thiscall *get_target_obj2)(TRIBE_Action_Make_Tech *);
  void (__thiscall *set_target_obj)(TRIBE_Action_Make_Tech *, RGE_Static_Object *);
  void (__thiscall *set_target_obj2)(TRIBE_Action_Make_Tech *, RGE_Static_Object *);
  void (__thiscall *set_state)(TRIBE_Action_Make_Tech *, unsigned __int8);
  void (__thiscall *Do_track_effects)(TRIBE_Action_Make_Tech *);
  void (__thiscall *Remove_track_effects)(TRIBE_Action_Make_Tech *);
};
#pragma pack(pop)

/* 147 */
#pragma pack(push, 1)
struct TRIBE_Command_Build
{
};
#pragma pack(pop)

/* 149 */
#pragma pack(push, 1)
struct TRIBE_Command_Build_Wall
{
};
#pragma pack(pop)

/* 150 */
#pragma pack(push, 1)
struct TRIBE_Command_Game
{
};
#pragma pack(pop)

/* 152 */
#pragma pack(push, 1)
struct TRIBE_Command_Attack_Ground
{
};
#pragma pack(pop)

/* 154 */
#pragma pack(push, 1)
struct TRIBE_Command_Repair
{
};
#pragma pack(pop)

/* 155 */
#pragma pack(push, 1)
struct TRIBE_Command_Unit_Order
{
};
#pragma pack(pop)

/* 156 */
#pragma pack(push, 8)
struct BDifferentiator
{
  int mPlayerID;
  int mNumberIndividualUnits;
  int mIndividualUnits[40];
  int mNumberGroups;
  int mGroupSize[40];
  int mGroups[40][40];
  int mNumberCommandGroups;
  int mCommandGroups[40];
};
#pragma pack(pop)

/* 158 */
#pragma pack(push, 8)
struct BMotion
{
  BMotionVtbl *vfptr;
  BPosition mPosition;
  BPosition mNewPosition;
  BVector mVelocity;
  BVector mAcceleration;
  BVector mAngularVelocity;
  BVector mAngularAcceleration;
  float mTurnRadius;
  float mTurnRadiusSpeed;
  float mMaximumYawPerSecondMoving;
  float mStationaryYawRevolutionTime;
  float mMaximumYawPerSecondStationary;
  BPathData *mPathData;
  BBitVector mMotionFlags;
  float mMaximumVelocityForward;
  int mNumberWaitDelays;
  RGE_Moving_Object *mPathUnit;
};
#pragma pack(pop)

/* 541 */
#pragma pack(push, 8)
struct BMotionVtbl
{
  void *(__thiscall *__vecDelDtor)(BMotion *, unsigned int);
  BVector *(__thiscall *getPosition)(BMotion *);
  void (__thiscall *setPosition)(BMotion *, BVector);
  BVector *(__thiscall *getOrientationForward)(BMotion *);
  BVector *(__thiscall *getOrientationUp)(BMotion *);
  BVector *(__thiscall *getOrientationRight)(BMotion *);
  int (__thiscall *setOrientation)(BMotion *, BVector, BVector, int);
  BVector *(__thiscall *getVelocity)(BMotion *);
  void (__thiscall *setVelocity)(BMotion *, BVector *);
  float (__thiscall *getVelocityForward)(BMotion *);
  void (__thiscall *setVelocityForward)(BMotion *, float);
  void (__thiscall *setMaximumVelocityForward)(BMotion *, float);
  float (__thiscall *getVelocityUp)(BMotion *);
  void (__thiscall *setVelocityUp)(BMotion *, float);
  float (__thiscall *getVelocityRight)(BMotion *);
  void (__thiscall *setVelocityRight)(BMotion *, float);
  BVector *(__thiscall *getAcceleration)(BMotion *);
  void (__thiscall *setAcceleration)(BMotion *, BVector *);
  float (__thiscall *getAccelerationForward)(BMotion *);
  void (__thiscall *setAccelerationForward)(BMotion *, float);
  float (__thiscall *getAccelerationUp)(BMotion *);
  void (__thiscall *setAccelerationUp)(BMotion *, float);
  float (__thiscall *getAccelerationRight)(BMotion *);
  void (__thiscall *setAccelerationRight)(BMotion *, float);
  float (__thiscall *getTurnRadius)(BMotion *);
  float (__thiscall *getTurnRadiusSpeed)(BMotion *);
  int (__thiscall *setTurnRadius)(BMotion *, float, float);
  float (__thiscall *getMaximumYawPerSecondMoving)(BMotion *);
  float (__thiscall *getMaximumYawPerSecondStationary)(BMotion *);
  int (__thiscall *setStationaryYawRevolutionTime)(BMotion *, float);
  int (__thiscall *isMoving)(BMotion *);
  void (__thiscall *stopMoving)(BMotion *);
  void (__thiscall *stopAllMovement)(BMotion *);
  int (__thiscall *update)(BMotion *, int, BUnitGroup *);
  void (__thiscall *updateEnd)(BMotion *);
  void (__thiscall *checkPositionNotifies_2)(BMotion *, BVector *);
  void (__thiscall *checkPositionNotifies_1)(BMotion *, BVector *, BVector *);
  int (__thiscall *getFlag)(BMotion *, int);
  void (__thiscall *setFlag)(BMotion *, int, int);
  void (__thiscall *initFlags)(BMotion *, int);
  void (__thiscall *save)(BMotion *, int);
  void (__thiscall *load)(BMotion *, int);
};
#pragma pack(pop)

/* 164 */
#pragma pack(push, 8)
struct TRIBE_Action_Pack
{
  TRIBE_Action_PackVtbl *vfptr;
  __int16 action_type;
  RGE_Action_Object *obj;
  unsigned __int8 state;
  RGE_Static_Object *target_obj;
  RGE_Static_Object *target_obj2;
  int targetID;
  int target2ID;
  float target_x;
  float target_y;
  float target_z;
  float timer;
  RGE_Task *task;
  RGE_Action_List *sub_actions;
  RGE_Sprite *sprite;
  unsigned __int8 subActionValue;
  unsigned __int8 mTargetMovedState;
  unsigned __int8 RGE_Action_gap[2];
  int unique_id;
  unsigned __int8 pack_status;
};
#pragma pack(pop)

/* 747 */
#pragma pack(push, 8)
struct TRIBE_Action_PackVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Action_Pack *, unsigned int);
  int (__thiscall *setup_2)(TRIBE_Action_Pack *, RGE_Action_Object *);
  int (__thiscall *setup_1)(TRIBE_Action_Pack *, int, RGE_Action_Object *);
  RGE_Action_List *(__thiscall *create_action_list)(TRIBE_Action_Pack *, RGE_Action_Object *);
  void (__thiscall *rehook)(TRIBE_Action_Pack *);
  void (__thiscall *save)(TRIBE_Action_Pack *, int);
  __int16 (__thiscall *type)(TRIBE_Action_Pack *);
  void (__thiscall *first_in_stack)(TRIBE_Action_Pack *, unsigned __int8);
  unsigned __int8 (__thiscall *inside_obj_update)(TRIBE_Action_Pack *);
  unsigned __int8 (__thiscall *idle_update)(TRIBE_Action_Pack *);
  unsigned __int8 (__thiscall *update)(TRIBE_Action_Pack *);
  int (__thiscall *stop)(TRIBE_Action_Pack *);
  int (__thiscall *move_to)(TRIBE_Action_Pack *, RGE_Static_Object *, float, float, float);
  int (__thiscall *work)(TRIBE_Action_Pack *, RGE_Static_Object *, float, float, float);
  int (__thiscall *gbg_unknown1)(TRIBE_Action_Pack *, int, int);
  unsigned __int8 (__thiscall *attack_response)(TRIBE_Action_Pack *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *relation_response)(TRIBE_Action_Pack *, int, unsigned __int8);
  void (__thiscall *copy_obj)(TRIBE_Action_Pack *, RGE_Master_Action_Object *);
  void (__thiscall *copy_obj_sprites)(TRIBE_Action_Pack *, RGE_Master_Action_Object *, RGE_Task *, RGE_Task *);
  void (__thiscall *get_state_name)(TRIBE_Action_Pack *, char *);
  RGE_Static_Object *(__thiscall *get_target_obj)(TRIBE_Action_Pack *);
  RGE_Static_Object *(__thiscall *get_target_obj2)(TRIBE_Action_Pack *);
  void (__thiscall *set_target_obj)(TRIBE_Action_Pack *, RGE_Static_Object *);
  void (__thiscall *set_target_obj2)(TRIBE_Action_Pack *, RGE_Static_Object *);
  void (__thiscall *set_state)(TRIBE_Action_Pack *, unsigned __int8);
};
#pragma pack(pop)

/* 165 */
#pragma pack(push, 8)
struct TRIBE_Action_Unpack
{
  TRIBE_Action_UnpackVtbl *vfptr;
  __int16 action_type;
  RGE_Action_Object *obj;
  unsigned __int8 state;
  RGE_Static_Object *target_obj;
  RGE_Static_Object *target_obj2;
  int targetID;
  int target2ID;
  float target_x;
  float target_y;
  float target_z;
  float timer;
  RGE_Task *task;
  RGE_Action_List *sub_actions;
  RGE_Sprite *sprite;
  unsigned __int8 subActionValue;
  unsigned __int8 mTargetMovedState;
  unsigned __int8 RGE_Action_gap[2];
  int unique_id;
  unsigned __int8 unpack_status;
  float range;
};
#pragma pack(pop)

/* 748 */
#pragma pack(push, 8)
struct TRIBE_Action_UnpackVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Action_Unpack *, unsigned int);
  int (__thiscall *setup_2)(TRIBE_Action_Unpack *, RGE_Action_Object *);
  int (__thiscall *setup_1)(TRIBE_Action_Unpack *, int, RGE_Action_Object *);
  RGE_Action_List *(__thiscall *create_action_list)(TRIBE_Action_Unpack *, RGE_Action_Object *);
  void (__thiscall *rehook)(TRIBE_Action_Unpack *);
  void (__thiscall *save)(TRIBE_Action_Unpack *, int);
  __int16 (__thiscall *type)(TRIBE_Action_Unpack *);
  void (__thiscall *first_in_stack)(TRIBE_Action_Unpack *, unsigned __int8);
  unsigned __int8 (__thiscall *inside_obj_update)(TRIBE_Action_Unpack *);
  unsigned __int8 (__thiscall *idle_update)(TRIBE_Action_Unpack *);
  unsigned __int8 (__thiscall *update)(TRIBE_Action_Unpack *);
  int (__thiscall *stop)(TRIBE_Action_Unpack *);
  int (__thiscall *move_to)(TRIBE_Action_Unpack *, RGE_Static_Object *, float, float, float);
  int (__thiscall *work)(TRIBE_Action_Unpack *, RGE_Static_Object *, float, float, float);
  int (__thiscall *gbg_unknown1)(TRIBE_Action_Unpack *, int, int);
  unsigned __int8 (__thiscall *attack_response)(TRIBE_Action_Unpack *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *relation_response)(TRIBE_Action_Unpack *, int, unsigned __int8);
  void (__thiscall *copy_obj)(TRIBE_Action_Unpack *, RGE_Master_Action_Object *);
  void (__thiscall *copy_obj_sprites)(TRIBE_Action_Unpack *, RGE_Master_Action_Object *, RGE_Task *, RGE_Task *);
  void (__thiscall *get_state_name)(TRIBE_Action_Unpack *, char *);
  RGE_Static_Object *(__thiscall *get_target_obj)(TRIBE_Action_Unpack *);
  RGE_Static_Object *(__thiscall *get_target_obj2)(TRIBE_Action_Unpack *);
  void (__thiscall *set_target_obj)(TRIBE_Action_Unpack *, RGE_Static_Object *);
  void (__thiscall *set_target_obj2)(TRIBE_Action_Unpack *, RGE_Static_Object *);
  void (__thiscall *set_state)(TRIBE_Action_Unpack *, unsigned __int8);
};
#pragma pack(pop)

/* 168 */
#pragma pack(push, 8)
struct TRIBE_Action_Housing
{
  TRIBE_Action_HousingVtbl *vfptr;
  __int16 action_type;
  RGE_Action_Object *obj;
  unsigned __int8 state;
  RGE_Static_Object *target_obj;
  RGE_Static_Object *target_obj2;
  int targetID;
  int target2ID;
  float target_x;
  float target_y;
  float target_z;
  float timer;
  RGE_Task *task;
  RGE_Action_List *sub_actions;
  RGE_Sprite *sprite;
  unsigned __int8 subActionValue;
  unsigned __int8 mTargetMovedState;
  unsigned __int8 RGE_Action_gap[2];
  int unique_id;
};
#pragma pack(pop)

/* 736 */
#pragma pack(push, 8)
struct TRIBE_Action_HousingVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Action_Housing *, unsigned int);
  int (__thiscall *setup_2)(TRIBE_Action_Housing *, RGE_Action_Object *);
  int (__thiscall *setup_1)(TRIBE_Action_Housing *, int, RGE_Action_Object *);
  RGE_Action_List *(__thiscall *create_action_list)(TRIBE_Action_Housing *, RGE_Action_Object *);
  void (__thiscall *rehook)(TRIBE_Action_Housing *);
  void (__thiscall *save)(TRIBE_Action_Housing *, int);
  __int16 (__thiscall *type)(TRIBE_Action_Housing *);
  void (__thiscall *first_in_stack)(TRIBE_Action_Housing *, unsigned __int8);
  unsigned __int8 (__thiscall *inside_obj_update)(TRIBE_Action_Housing *);
  unsigned __int8 (__thiscall *idle_update)(TRIBE_Action_Housing *);
  unsigned __int8 (__thiscall *update)(TRIBE_Action_Housing *);
  int (__thiscall *stop)(TRIBE_Action_Housing *);
  int (__thiscall *move_to)(TRIBE_Action_Housing *, RGE_Static_Object *, float, float, float);
  int (__thiscall *work)(TRIBE_Action_Housing *, RGE_Static_Object *, float, float, float);
  int (__thiscall *gbg_unknown1)(TRIBE_Action_Housing *, int, int);
  unsigned __int8 (__thiscall *attack_response)(TRIBE_Action_Housing *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *relation_response)(TRIBE_Action_Housing *, int, unsigned __int8);
  void (__thiscall *copy_obj)(TRIBE_Action_Housing *, RGE_Master_Action_Object *);
  void (__thiscall *copy_obj_sprites)(TRIBE_Action_Housing *, RGE_Master_Action_Object *, RGE_Task *, RGE_Task *);
  void (__thiscall *get_state_name)(TRIBE_Action_Housing *, char *);
  RGE_Static_Object *(__thiscall *get_target_obj)(TRIBE_Action_Housing *);
  RGE_Static_Object *(__thiscall *get_target_obj2)(TRIBE_Action_Housing *);
  void (__thiscall *set_target_obj)(TRIBE_Action_Housing *, RGE_Static_Object *);
  void (__thiscall *set_target_obj2)(TRIBE_Action_Housing *, RGE_Static_Object *);
  void (__thiscall *set_state)(TRIBE_Action_Housing *, unsigned __int8);
};
#pragma pack(pop)

/* 174 */
#pragma pack(push, 1)
struct Exclude_Rect
{
};
#pragma pack(pop)

/* 176 */
#pragma pack(push, 1)
struct TRIBE_Command_Diplomacy
{
};
#pragma pack(pop)

/* 177 */
#pragma pack(push, 1)
struct TRIBE_Command_Queue
{
};
#pragma pack(pop)

/* 178 */
#pragma pack(push, 1)
struct TRIBE_Command_Unload
{
};
#pragma pack(pop)

/* 179 */
#pragma pack(push, 1)
struct TRIBE_Command_Gate
{
};
#pragma pack(pop)

/* 180 */
#pragma pack(push, 1)
struct TRIBE_Command_Flare
{
};
#pragma pack(pop)

/* 182 */
#pragma pack(push, 1)
struct TRIBE_Command_Set_Gather_Point
{
};
#pragma pack(pop)

/* 183 */
#pragma pack(push, 1)
struct TRIBE_Command_Set_Retreat_Point
{
};
#pragma pack(pop)

/* 184 */
#pragma pack(push, 1)
struct TRIBE_Command_Unit_Transform
{
};
#pragma pack(pop)

/* 185 */
#pragma pack(push, 8)
struct TRIBE_Action_Unit_Transform
{
  TRIBE_Action_Unit_TransformVtbl *vfptr;
  __int16 action_type;
  RGE_Action_Object *obj;
  unsigned __int8 state;
  RGE_Static_Object *target_obj;
  RGE_Static_Object *target_obj2;
  int targetID;
  int target2ID;
  float target_x;
  float target_y;
  float target_z;
  float timer;
  RGE_Task *task;
  RGE_Action_List *sub_actions;
  RGE_Sprite *sprite;
  unsigned __int8 subActionValue;
  unsigned __int8 mTargetMovedState;
  unsigned __int8 RGE_Action_gap[2];
  int transform_id;
};
#pragma pack(pop)

/* 749 */
#pragma pack(push, 8)
struct TRIBE_Action_Unit_TransformVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Action_Unit_Transform *, unsigned int);
  int (__thiscall *setup_2)(TRIBE_Action_Unit_Transform *, RGE_Action_Object *);
  int (__thiscall *setup_1)(TRIBE_Action_Unit_Transform *, int, RGE_Action_Object *);
  RGE_Action_List *(__thiscall *create_action_list)(TRIBE_Action_Unit_Transform *, RGE_Action_Object *);
  void (__thiscall *rehook)(TRIBE_Action_Unit_Transform *);
  void (__thiscall *save)(TRIBE_Action_Unit_Transform *, int);
  __int16 (__thiscall *type)(TRIBE_Action_Unit_Transform *);
  void (__thiscall *first_in_stack)(TRIBE_Action_Unit_Transform *, unsigned __int8);
  unsigned __int8 (__thiscall *inside_obj_update)(TRIBE_Action_Unit_Transform *);
  unsigned __int8 (__thiscall *idle_update)(TRIBE_Action_Unit_Transform *);
  unsigned __int8 (__thiscall *update)(TRIBE_Action_Unit_Transform *);
  int (__thiscall *stop)(TRIBE_Action_Unit_Transform *);
  int (__thiscall *move_to)(TRIBE_Action_Unit_Transform *, RGE_Static_Object *, float, float, float);
  int (__thiscall *work)(TRIBE_Action_Unit_Transform *, RGE_Static_Object *, float, float, float);
  int (__thiscall *gbg_unknown1)(TRIBE_Action_Unit_Transform *, int, int);
  unsigned __int8 (__thiscall *attack_response)(TRIBE_Action_Unit_Transform *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *relation_response)(TRIBE_Action_Unit_Transform *, int, unsigned __int8);
  void (__thiscall *copy_obj)(TRIBE_Action_Unit_Transform *, RGE_Master_Action_Object *);
  void (__thiscall *copy_obj_sprites)(TRIBE_Action_Unit_Transform *, RGE_Master_Action_Object *, RGE_Task *, RGE_Task *);
  void (__thiscall *get_state_name)(TRIBE_Action_Unit_Transform *, char *);
  RGE_Static_Object *(__thiscall *get_target_obj)(TRIBE_Action_Unit_Transform *);
  RGE_Static_Object *(__thiscall *get_target_obj2)(TRIBE_Action_Unit_Transform *);
  void (__thiscall *set_target_obj)(TRIBE_Action_Unit_Transform *, RGE_Static_Object *);
  void (__thiscall *set_target_obj2)(TRIBE_Action_Unit_Transform *, RGE_Static_Object *);
  void (__thiscall *set_state)(TRIBE_Action_Unit_Transform *, unsigned __int8);
};
#pragma pack(pop)

/* 186 */
#pragma pack(push, 1)
struct TRIBE_Command_Drop_Relic
{
};
#pragma pack(pop)

/* 187 */
#pragma pack(push, 1)
struct TRIBE_Command_Alarm
{
};
#pragma pack(pop)

/* 188 */
#pragma pack(push, 1)
struct TRIBE_Command_Convert
{
};
#pragma pack(pop)

/* 189 */
#pragma pack(push, 8)
struct TRIBE_Objectives_Dialog
{
  TRIBE_Objectives_DialogVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  HWND dlg_wnd;
  TPanel *save_parent_child;
  TPanel *save_parent;
  int text_font_id;
  int input_font_id;
  int button_font_id;
  int button_sound_id;
  TTextPanel *title;
  TTextPanel *list;
  TScrollBarPanel *scroll_bar;
  TButtonPanel *ok_button;
  TButtonPanel *mode_button[3];
  TShape *button_pic;
  int confirmed_close;
};
#pragma pack(pop)

/* 899 */
#pragma pack(push, 8)
struct TRIBE_Objectives_DialogVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Objectives_Dialog *, unsigned int);
  int (__thiscall *setup)(TRIBE_Objectives_Dialog *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TRIBE_Objectives_Dialog *, RECT);
  void (__thiscall *set_rect_1)(TRIBE_Objectives_Dialog *, int, int, int, int);
  void (__thiscall *set_color)(TRIBE_Objectives_Dialog *, unsigned __int8);
  void (__thiscall *set_active)(TRIBE_Objectives_Dialog *, int);
  void (__thiscall *unknown1)(TRIBE_Objectives_Dialog *);
  void (__thiscall *unknown2)(TRIBE_Objectives_Dialog *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TRIBE_Objectives_Dialog *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TRIBE_Objectives_Dialog *, int);
  void (__thiscall *set_fixed_position)(TRIBE_Objectives_Dialog *, int, int, int, int);
  void (__thiscall *set_redraw)(TRIBE_Objectives_Dialog *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TRIBE_Objectives_Dialog *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TRIBE_Objectives_Dialog *, int);
  void (__thiscall *draw_finish)(TRIBE_Objectives_Dialog *);
  void (__thiscall *draw)(TRIBE_Objectives_Dialog *);
  void (__thiscall *draw_rect)(TRIBE_Objectives_Dialog *, RECT *);
  void (__thiscall *draw_offset)(TRIBE_Objectives_Dialog *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TRIBE_Objectives_Dialog *, RECT *);
  void (__thiscall *draw_offset2)(TRIBE_Objectives_Dialog *, int, int, RECT *);
  void (__thiscall *paint)(TRIBE_Objectives_Dialog *);
  int (__thiscall *wnd_proc)(TRIBE_Objectives_Dialog *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TRIBE_Objectives_Dialog *);
  int (__thiscall *handle_size)(TRIBE_Objectives_Dialog *, int, int);
  int (__thiscall *handle_paint)(TRIBE_Objectives_Dialog *);
  int (__thiscall *handle_key_down)(TRIBE_Objectives_Dialog *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TRIBE_Objectives_Dialog *, int, __int16);
  int (__thiscall *handle_command)(TRIBE_Objectives_Dialog *, unsigned int, int);
  int (__thiscall *handle_user_command)(TRIBE_Objectives_Dialog *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TRIBE_Objectives_Dialog *, unsigned int, int);
  int (__thiscall *handle_scroll)(TRIBE_Objectives_Dialog *, int, int);
  int (__thiscall *handle_mouse_down)(TRIBE_Objectives_Dialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TRIBE_Objectives_Dialog *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TRIBE_Objectives_Dialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TRIBE_Objectives_Dialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TRIBE_Objectives_Dialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TRIBE_Objectives_Dialog *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TRIBE_Objectives_Dialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TRIBE_Objectives_Dialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TRIBE_Objectives_Dialog *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TRIBE_Objectives_Dialog *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TRIBE_Objectives_Dialog *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TRIBE_Objectives_Dialog *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TRIBE_Objectives_Dialog *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TRIBE_Objectives_Dialog *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TRIBE_Objectives_Dialog *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TRIBE_Objectives_Dialog *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TRIBE_Objectives_Dialog *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TRIBE_Objectives_Dialog *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TRIBE_Objectives_Dialog *, int, int, int, int);
  int (__thiscall *key_down_action)(TRIBE_Objectives_Dialog *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TRIBE_Objectives_Dialog *, int, __int16);
  int (__thiscall *action)(TRIBE_Objectives_Dialog *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TRIBE_Objectives_Dialog *, RECT *);
  int (__thiscall *is_inside)(TRIBE_Objectives_Dialog *, int, int);
  void (__thiscall *set_focus)(TRIBE_Objectives_Dialog *, int);
  void (__thiscall *set_tab_order_2)(TRIBE_Objectives_Dialog *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TRIBE_Objectives_Dialog *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TRIBE_Objectives_Dialog *);
  unsigned __int8 (__thiscall *get_help_info)(TRIBE_Objectives_Dialog *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TRIBE_Objectives_Dialog *);
  int (__thiscall *restart_sound_system)(TRIBE_Objectives_Dialog *);
  void (__thiscall *take_snapshot)(TRIBE_Objectives_Dialog *);
  void (__thiscall *handle_reactivate)(TRIBE_Objectives_Dialog *);
  int (__thiscall *pointing_at)(TRIBE_Objectives_Dialog *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TRIBE_Objectives_Dialog *);
  int (__thiscall *get_ideal_width)(TRIBE_Objectives_Dialog *);
  void (__thiscall *draw_background)(TRIBE_Objectives_Dialog *, int);
  void (__thiscall *set_ideal_size)(TRIBE_Objectives_Dialog *, int, int);
  int (__thiscall *create_button_2)(TRIBE_Objectives_Dialog *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TRIBE_Objectives_Dialog *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TRIBE_Objectives_Dialog *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TRIBE_Objectives_Dialog *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TRIBE_Objectives_Dialog *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TRIBE_Objectives_Dialog *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TRIBE_Objectives_Dialog *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TRIBE_Objectives_Dialog *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TRIBE_Objectives_Dialog *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TRIBE_Objectives_Dialog *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TRIBE_Objectives_Dialog *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TRIBE_Objectives_Dialog *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TRIBE_Objectives_Dialog *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TRIBE_Objectives_Dialog *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TRIBE_Objectives_Dialog *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TRIBE_Objectives_Dialog *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TRIBE_Objectives_Dialog *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TRIBE_Objectives_Dialog *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TRIBE_Objectives_Dialog *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TRIBE_Objectives_Dialog *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TRIBE_Objectives_Dialog *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TRIBE_Objectives_Dialog *, TPanel *, int, int, int, int);
  int (__thiscall *setup_3)(TRIBE_Objectives_Dialog *, TDrawArea *, TPanel *, int, int, unsigned __int8, int);
  int (__thiscall *setup_2)(TRIBE_Objectives_Dialog *, TDrawArea *, TPanel *, int, int, char *, int, int);
};
#pragma pack(pop)

/* 199 */
#pragma pack(push, 8)
struct RGE_Action_Move_To
{
  RGE_Action_Move_ToVtbl *vfptr;
  __int16 action_type;
  RGE_Action_Object *obj;
  unsigned __int8 state;
  RGE_Static_Object *target_obj;
  RGE_Static_Object *target_obj2;
  int targetID;
  int target2ID;
  float target_x;
  float target_y;
  float target_z;
  float timer;
  RGE_Task *task;
  RGE_Action_List *sub_actions;
  RGE_Sprite *sprite;
  unsigned __int8 subActionValue;
  unsigned __int8 mTargetMovedState;
  unsigned __int8 RGE_Action_gap[2];
  float range;
};
#pragma pack(pop)

/* 728 */
#pragma pack(push, 8)
struct RGE_Action_Move_ToVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Action_Move_To *, unsigned int);
  int (__thiscall *setup_2)(RGE_Action_Move_To *, RGE_Action_Object *);
  int (__thiscall *setup_1)(RGE_Action_Move_To *, int, RGE_Action_Object *);
  RGE_Action_List *(__thiscall *create_action_list)(RGE_Action_Move_To *, RGE_Action_Object *);
  void (__thiscall *rehook)(RGE_Action_Move_To *);
  void (__thiscall *save)(RGE_Action_Move_To *, int);
  __int16 (__thiscall *type)(RGE_Action_Move_To *);
  void (__thiscall *first_in_stack)(RGE_Action_Move_To *, unsigned __int8);
  unsigned __int8 (__thiscall *inside_obj_update)(RGE_Action_Move_To *);
  unsigned __int8 (__thiscall *idle_update)(RGE_Action_Move_To *);
  unsigned __int8 (__thiscall *update)(RGE_Action_Move_To *);
  int (__thiscall *stop)(RGE_Action_Move_To *);
  int (__thiscall *move_to)(RGE_Action_Move_To *, RGE_Static_Object *, float, float, float);
  int (__thiscall *work)(RGE_Action_Move_To *, RGE_Static_Object *, float, float, float);
  int (__thiscall *gbg_unknown1)(RGE_Action_Move_To *, int, int);
  unsigned __int8 (__thiscall *attack_response)(RGE_Action_Move_To *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *relation_response)(RGE_Action_Move_To *, int, unsigned __int8);
  void (__thiscall *copy_obj)(RGE_Action_Move_To *, RGE_Master_Action_Object *);
  void (__thiscall *copy_obj_sprites)(RGE_Action_Move_To *, RGE_Master_Action_Object *, RGE_Task *, RGE_Task *);
  void (__thiscall *get_state_name)(RGE_Action_Move_To *, char *);
  RGE_Static_Object *(__thiscall *get_target_obj)(RGE_Action_Move_To *);
  RGE_Static_Object *(__thiscall *get_target_obj2)(RGE_Action_Move_To *);
  void (__thiscall *set_target_obj)(RGE_Action_Move_To *, RGE_Static_Object *);
  void (__thiscall *set_target_obj2)(RGE_Action_Move_To *, RGE_Static_Object *);
  void (__thiscall *set_state)(RGE_Action_Move_To *, unsigned __int8);
};
#pragma pack(pop)

/* 550 */
#pragma pack(push, 8)
struct PathingSystem__FloatHeap
{
  unsigned __int8 x;
  unsigned __int8 y;
  unsigned __int16 next;
  int total;
};
#pragma pack(pop)

/* 202 */
#pragma pack(push, 8)
struct PathingSystem
{
  PathingSystemVtbl *vfptr;
  int mXSize;
  int mYSize;
  RGE_Map *mMap;
  RGE_Game_World *mWorld;
  char mFacet[255][255];
  int mCost[255][255];
  PathingSystem__FloatHeap mOpenPaths[65026];
  int mNumberOpenPaths;
  int mNumberTraversedPaths;
  unsigned __int8 mCurrentFacetMask;
  int mNumberUnobstructibles;
  int mUnobstructibles[128];
  int mTerrainException1;
  int mTerrainException2;
  int mTerrainException3;
  int mAI;
  int gbg_unknown1;
  int gbg_unknown2;
};
#pragma pack(pop)

/* 551 */
#pragma pack(push, 8)
struct PathingSystemVtbl
{
  void *(__thiscall *__vecDelDtor)(PathingSystem *, unsigned int);
};
#pragma pack(pop)

/* 207 */
#pragma pack(push, 8)
struct BMatrix
{
  float m[3][4];
};
#pragma pack(pop)

/* 209 */
#pragma pack(push, 8)
struct TRIBE_Action_List
{
  TRIBE_Action_ListVtbl *vfptr;
  RGE_Action_Object *obj;
  RGE_Action_Node *list;
};
#pragma pack(pop)

/* 756 */
#pragma pack(push, 8)
struct TRIBE_Action_ListVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Action_List *, unsigned int);
  RGE_Action *(__thiscall *create_action)(TRIBE_Action_List *, int, __int16);
  RGE_Action *(__thiscall *create_task_action)(TRIBE_Action_List *, RGE_Task *, RGE_Static_Object *, float, float, float);
  unsigned __int8 (__thiscall *inside_obj_update)(TRIBE_Action_List *);
  unsigned __int8 (__thiscall *update)(TRIBE_Action_List *);
  void (__thiscall *get_action_name)(TRIBE_Action_List *, char *);
  void (__thiscall *copy_obj)(TRIBE_Action_List *, RGE_Master_Action_Object *);
  void (__thiscall *copy_obj_sprites)(TRIBE_Action_List *, RGE_Master_Action_Object *, RGE_Task *, RGE_Task *);
};
#pragma pack(pop)

/* 212 */
#pragma pack(push, 8)
struct RGE_Action_Attack
{
  RGE_Action_AttackVtbl *vfptr;
  __int16 action_type;
  RGE_Action_Object *obj;
  unsigned __int8 state;
  RGE_Static_Object *target_obj;
  RGE_Static_Object *target_obj2;
  int targetID;
  int target2ID;
  float target_x;
  float target_y;
  float target_z;
  float timer;
  RGE_Task *task;
  RGE_Action_List *sub_actions;
  RGE_Sprite *sprite;
  unsigned __int8 subActionValue;
  unsigned __int8 mTargetMovedState;
  unsigned __int8 RGE_Action_gap[2];
  RGE_Sprite *move_sprite;
  RGE_Sprite *fight_sprite;
  RGE_Sprite *wait_sprite;
  float range;
  float min_range;
  __int16 missile_id;
  __int16 fire_missile_at_frame;
  unsigned __int8 need_to_attack;
  unsigned __int8 was_same_owner;
  unsigned __int8 indirect_fire_flag;
  float lastTargetPositionX;
  float lastTargetPositionY;
  float lastTargetPositionZ;
};
#pragma pack(pop)

/* 723 */
#pragma pack(push, 8)
struct RGE_Action_AttackVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Action_Attack *, unsigned int);
  int (__thiscall *setup_2)(RGE_Action_Attack *, RGE_Action_Object *);
  int (__thiscall *setup_1)(RGE_Action_Attack *, int, RGE_Action_Object *);
  RGE_Action_List *(__thiscall *create_action_list)(RGE_Action_Attack *, RGE_Action_Object *);
  void (__thiscall *rehook)(RGE_Action_Attack *);
  void (__thiscall *save)(RGE_Action_Attack *, int);
  __int16 (__thiscall *type)(RGE_Action_Attack *);
  void (__thiscall *first_in_stack)(RGE_Action_Attack *, unsigned __int8);
  unsigned __int8 (__thiscall *inside_obj_update)(RGE_Action_Attack *);
  unsigned __int8 (__thiscall *idle_update)(RGE_Action_Attack *);
  unsigned __int8 (__thiscall *update)(RGE_Action_Attack *);
  int (__thiscall *stop)(RGE_Action_Attack *);
  int (__thiscall *move_to)(RGE_Action_Attack *, RGE_Static_Object *, float, float, float);
  int (__thiscall *work)(RGE_Action_Attack *, RGE_Static_Object *, float, float, float);
  int (__thiscall *gbg_unknown1)(RGE_Action_Attack *, int, int);
  unsigned __int8 (__thiscall *attack_response)(RGE_Action_Attack *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *relation_response)(RGE_Action_Attack *, int, unsigned __int8);
  void (__thiscall *copy_obj)(RGE_Action_Attack *, RGE_Master_Action_Object *);
  void (__thiscall *copy_obj_sprites)(RGE_Action_Attack *, RGE_Master_Action_Object *, RGE_Task *, RGE_Task *);
  void (__thiscall *get_state_name)(RGE_Action_Attack *, char *);
  RGE_Static_Object *(__thiscall *get_target_obj)(RGE_Action_Attack *);
  RGE_Static_Object *(__thiscall *get_target_obj2)(RGE_Action_Attack *);
  void (__thiscall *set_target_obj)(RGE_Action_Attack *, RGE_Static_Object *);
  void (__thiscall *set_target_obj2)(RGE_Action_Attack *, RGE_Static_Object *);
  void (__thiscall *set_state)(RGE_Action_Attack *, unsigned __int8);
};
#pragma pack(pop)

/* 213 */
#pragma pack(push, 8)
struct RGE_Missile_Object
{
  RGE_Missile_ObjectVtbl *vfptr;
  int gbg_unknown_1;
  float gbg_unknown_2;
  int gbg_unknown_3;
  int id;
  RGE_Master_Missile_Object *master_obj;
  TRIBE_Player *owner;
  RGE_Sprite *sprite;
  RGE_Sprite *old_sprite;
  RGE_Active_Sprite_List *sprite_list;
  RGE_Tile *tile;
  RGE_Static_Object *inside_obj;
  RGE_New_Object_List *objects;
  __int16 screen_x_offset;
  __int16 screen_y_offset;
  __int16 shadow_x_offset;
  __int16 shadow_y_offset;
  float hp;
  float sp;
  unsigned __int8 curr_damage_percent;
  unsigned __int8 facet;
  unsigned __int8 selected;
  float world_x;
  float world_y;
  float world_z;
  float attribute_amount_held;
  unsigned __int8 object_state;
  unsigned __int8 sleep_flag;
  unsigned __int8 dopple_flag;
  unsigned __int8 goto_sleep_flag;
  __int16 attribute_type_held;
  unsigned __int8 type;
  unsigned __int8 worker_num;
  ObsRecord *CurrentObstructionData;
  ObsRecord *ObstructionDataList;
  RGE_Static_Object **player_object_node;
  int *mPathingGroup;
  int mPathingGroupSize;
  int mMaximumPathingGroupSize;
  int damaged_lately_timer;
  UnitAIModule *unitAIValue;
  int zoneMapIndex;
  unsigned __int8 inObstructionMapValue;
  unsigned __int8 lastInObstructionMapValue;
  unsigned __int8 underAttackValue;
  int mGroupID;
  unsigned __int8 mROOAlreadyCalled;
  LOS_ExploreInfo ei;
  float speed;
  float trail_remainder;
  float velocity_x;
  float velocity_y;
  float velocity_z;
  float angle;
  float turn_towards_time;
  unsigned __int8 on_ground;
  float turnTimer;
  int continueCounter;
  int currentTerrainException1;
  int currentTerrainException2;
  unsigned __int8 waitingToMoveValue;
  unsigned __int8 numberWaitDelays;
  BVector *userDefinedWaypoints;
  int numberUserDefinedWaypointsValue;
  int maximumNumberUserDefinedWaypointsValue;
  BVector positionValue;
  BVector orientationForwardValue;
  BVector orientationRightValue;
  BPathData *pathData;
  BPathData *mFuturePathData;
  BMovementData *movementData;
  unsigned int lastMoveTimeValue;
  int mHasSubstitutePosition;
  BVector mSubstitutePosition;
  int mConsecutiveSubstituteCount;
  RGE_Action_List *actions;
  unsigned __int8 waiting;
  unsigned __int8 command_flag;
  __int16 Selected_Group_Info;
  VISIBLE_UNIT_REC *VUR_Ptrs[9];
  unsigned int Unified_Map_Value;
  unsigned __int8 Multi_Unified_Points;
  unsigned __int8 Large_Object_Radius;
  int attack_count;
  float attack_timer;
  unsigned __int8 capture_flag;
  unsigned __int8 formation_id;
  unsigned __int8 formation_row;
  unsigned __int8 formation_col;
  float max_range;
  unsigned __int8 ghost_mode;
  int fired_from_id;
  unsigned __int8 own_master;
};
#pragma pack(pop)

/* 762 */
#pragma pack(push, 8)
struct RGE_Missile_ObjectVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Missile_Object *, unsigned int);
  int (__thiscall *gbg_unknown1)(RGE_Missile_Object *);
  int (__thiscall *gbg_get_civ_override)(RGE_Missile_Object *);
  unsigned __int8 (__thiscall *gbg_unknown3)(RGE_Missile_Object *);
  unsigned __int8 (__thiscall *gbg_unknown4)(RGE_Missile_Object *);
  unsigned __int8 (__thiscall *gbg_unknown5)(RGE_Missile_Object *);
  unsigned __int8 (__thiscall *gbg_unknown6)(RGE_Missile_Object *);
  unsigned __int8 (__thiscall *gbg_unknown7)(RGE_Missile_Object *);
  unsigned __int8 (__thiscall *gbg_unknown8)(RGE_Missile_Object *);
  unsigned __int8 (__thiscall *gbg_unknown9)(RGE_Missile_Object *);
  unsigned __int8 (__thiscall *gbg_unknown10)(RGE_Missile_Object *);
  unsigned __int8 (__thiscall *gbg_unknown11)(RGE_Missile_Object *);
  unsigned __int8 (__thiscall *gbg_isPadawan)(RGE_Missile_Object *);
  unsigned __int8 (__thiscall *gbg_isMaster)(RGE_Missile_Object *);
  unsigned __int8 (__thiscall *gbg_unknown14)(RGE_Missile_Object *);
  unsigned __int8 (__thiscall *gbg_isShielded)(RGE_Missile_Object *);
  void (__thiscall *gbg_unknown16)(RGE_Missile_Object *);
  void (__thiscall *gbg_unknown17)(RGE_Missile_Object *);
  unsigned __int8 (__thiscall *gbg_unknown18)(RGE_Missile_Object *, int);
  unsigned __int8 (__thiscall *gbg_isDetector)(RGE_Missile_Object *);
  unsigned __int8 (__thiscall *gbg_unknown20)(RGE_Missile_Object *, int);
  unsigned __int8 (__thiscall *gbg_isPowered)(RGE_Missile_Object *, int);
  void (__thiscall *gbg_unknown22)(RGE_Missile_Object *);
  unsigned __int8 (__thiscall *gbg_unknown23)(RGE_Missile_Object *);
  unsigned __int8 (__thiscall *gbg_isBiological)(RGE_Missile_Object *);
  unsigned __int8 (__thiscall *gbg_isDamaged)(RGE_Missile_Object *);
  unsigned __int8 (__thiscall *gbg_unknown26)(RGE_Missile_Object *);
  unsigned __int8 (__thiscall *gbg_canBeHealedByPlayer)(RGE_Missile_Object *, int);
  unsigned __int8 (__thiscall *gbg_canBeRepairedByPlayer)(RGE_Missile_Object *, int);
  void (__thiscall *recycle_in_to_game)(RGE_Missile_Object *, RGE_Master_Static_Object *, RGE_Player *, float, float, float);
  void (__thiscall *recycle_out_of_game)(RGE_Missile_Object *);
  void (__thiscall *draw)(RGE_Missile_Object *, TDrawArea *, __int16, __int16, RGE_Color_Table *);
  void (__thiscall *shadow_draw)(RGE_Missile_Object *, TDrawArea *, __int16, __int16, unsigned __int8);
  void (__thiscall *normal_draw)(RGE_Missile_Object *, TDrawArea *, __int16, __int16);
  void (__thiscall *draw_front_frame)(RGE_Missile_Object *, TDrawArea *, __int16, __int16);
  void (__thiscall *draw_back_frame)(RGE_Missile_Object *, TDrawArea *, __int16, __int16);
  void (__thiscall *draw_frame)(RGE_Missile_Object *, TDrawArea *, __int16, __int16);
  unsigned __int8 (__thiscall *update)(RGE_Missile_Object *);
  void (__thiscall *check_damage_sprites)(RGE_Missile_Object *);
  void (__thiscall *rehook)(RGE_Missile_Object *);
  void (__thiscall *save)(RGE_Missile_Object *, int);
  void (__thiscall *teleport_off_map)(RGE_Missile_Object *);
  float (__thiscall *teleport)(RGE_Missile_Object *, float, float, float);
  float (__thiscall *handle_teleport_z_correction)(RGE_Missile_Object *, float);
  void (__thiscall *new_sprite)(RGE_Missile_Object *, RGE_Sprite *);
  void (__thiscall *add_overlay_sprite)(RGE_Missile_Object *, RGE_Sprite *, unsigned __int8);
  void (__thiscall *remove_overlay_sprite)(RGE_Missile_Object *, RGE_Sprite *);
  void (__thiscall *change_ownership)(RGE_Missile_Object *, RGE_Player *);
  void (__thiscall *modify)(RGE_Missile_Object *, float, unsigned __int8);
  void (__thiscall *modify_delta)(RGE_Missile_Object *, float, unsigned __int8);
  void (__thiscall *modify_percent)(RGE_Missile_Object *, float, unsigned __int8);
  void (__thiscall *transform)(RGE_Missile_Object *, RGE_Master_Static_Object *);
  void (__thiscall *copy_obj)(RGE_Missile_Object *, RGE_Master_Static_Object *);
  void (__thiscall *set_object_state)(RGE_Missile_Object *, unsigned __int8);
  void (__thiscall *remove_visible_resource)(RGE_Missile_Object *);
  void (__thiscall *create_doppleganger_when_dying)(RGE_Missile_Object *);
  void (__thiscall *destroy_obj)(RGE_Missile_Object *);
  void (__thiscall *die_die_die)(RGE_Missile_Object *);
  void (__thiscall *damage)(RGE_Missile_Object *, int, RGE_Armor_Weapon_Info *, float, RGE_Player *, RGE_Static_Object *, int);
  float (__thiscall *calculateDamage)(RGE_Missile_Object *, int, RGE_Armor_Weapon_Info *, float, RGE_Player *, RGE_Static_Object *);
  void (__thiscall *rotate)(RGE_Missile_Object *, int);
  unsigned __int8 (__thiscall *can_attack)(RGE_Missile_Object *);
  void (__thiscall *set_attribute)(RGE_Missile_Object *, __int16, float);
  void (__thiscall *set_attribute_amount)(RGE_Missile_Object *, float, unsigned __int8, unsigned __int8);
  int (__thiscall *heal_2)(RGE_Missile_Object *, int, int);
  unsigned __int8 (__thiscall *heal_1)(RGE_Missile_Object *, float);
  int (__thiscall *canRepair)(RGE_Missile_Object *);
  void (__thiscall *notify_of_relation)(RGE_Missile_Object *, int, unsigned __int8);
  void (__thiscall *do_command)(RGE_Missile_Object *, RGE_Static_Object *, float, float, float);
  int (__thiscall *actionTypeIfOrdered)(RGE_Missile_Object *, RGE_Static_Object *, float, float, float, float *);
  unsigned __int8 (__thiscall *move_to)(RGE_Missile_Object *, RGE_Static_Object *, float, float, float);
  void (__thiscall *work)(RGE_Missile_Object *, RGE_Static_Object *, float, float, float);
  void (__thiscall *stop)(RGE_Missile_Object *);
  void (__thiscall *set_attack)(RGE_Missile_Object *, RGE_Static_Object *);
  void (__thiscall *play_command_sound)(RGE_Missile_Object *);
  void (__thiscall *play_move_sound)(RGE_Missile_Object *);
  void (__thiscall *new_angle)(RGE_Missile_Object *, float);
  RGE_Static_Object *(__thiscall *spawn_death_obj)(RGE_Missile_Object *);
  RGE_Master_Static_Object *(__thiscall *get_command_master)(RGE_Missile_Object *, RGE_Static_Object *, float, float, float);
  void (__thiscall *set_being_worked_on)(RGE_Missile_Object *, RGE_Action_Object *, __int16, unsigned __int8);
  void (__thiscall *release_being_worked_on)(RGE_Missile_Object *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *is_moving)(RGE_Missile_Object *);
  RGE_Static_Object *(__thiscall *get_target_obj)(RGE_Missile_Object *);
  unsigned __int8 (__thiscall *more_room)(RGE_Missile_Object *, RGE_Static_Object *);
  void (__thiscall *enter_obj)(RGE_Missile_Object *, RGE_Static_Object *, unsigned __int8);
  void (__thiscall *exit_obj)(RGE_Missile_Object *);
  void (__thiscall *add_obj)(RGE_Missile_Object *, RGE_Static_Object *);
  void (__thiscall *remove_obj)(RGE_Missile_Object *, RGE_Static_Object *);
  int (__thiscall *explore_terrain)(RGE_Missile_Object *, RGE_Player *, unsigned __int8, int, int);
  void (__thiscall *unexplore_terrain)(RGE_Missile_Object *, RGE_Player *, unsigned __int8, int, int);
  LOSTBL *(__thiscall *get_los_table)(RGE_Missile_Object *);
  unsigned __int8 (__thiscall *get_visibility)(RGE_Missile_Object *, RGE_Player *);
  int (__thiscall *inAttackRange)(RGE_Missile_Object *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *underAttack)(RGE_Missile_Object *);
  void (__thiscall *setUnderAttack)(RGE_Missile_Object *, unsigned __int8);
  float (__thiscall *calc_attack_modifier)(RGE_Missile_Object *, RGE_Static_Object *);
  float (__thiscall *getSpeed)(RGE_Missile_Object *);
  float (__thiscall *getAngle)(RGE_Missile_Object *);
  float (__thiscall *maximumSpeed)(RGE_Missile_Object *);
  float (__thiscall *rateOfFire)(RGE_Missile_Object *);
  float (__thiscall *damageCapability_2)(RGE_Missile_Object *, RGE_Static_Object *);
  float (__thiscall *damageCapability_1)(RGE_Missile_Object *);
  float (__thiscall *weaponRange)(RGE_Missile_Object *);
  float (__thiscall *minimumWeaponRange)(RGE_Missile_Object *);
  int (__thiscall *passableTile_2)(RGE_Missile_Object *, float, float, int *, int);
  int (__thiscall *passableTile_1)(RGE_Missile_Object *, float, float);
  int (__thiscall *currentTargetID)(RGE_Missile_Object *);
  float (__thiscall *currentTargetX)(RGE_Missile_Object *);
  float (__thiscall *currentTargetY)(RGE_Missile_Object *);
  float (__thiscall *currentTargetZ)(RGE_Missile_Object *);
  void (__thiscall *setWaitingToMove)(RGE_Missile_Object *, unsigned __int8);
  unsigned __int8 (__thiscall *waitingToMove)(RGE_Missile_Object *);
  unsigned __int8 (__thiscall *actionState)(RGE_Missile_Object *);
  unsigned __int8 (__thiscall *keepGatheringWhenObjectIsOut)(RGE_Missile_Object *, int);
  unsigned __int8 (__thiscall *produceWhenKilledBy)(RGE_Missile_Object *, int);
  unsigned __int8 (__thiscall *useSameZoneDropsite)(RGE_Missile_Object *);
  float (__thiscall *searchRadius)(RGE_Missile_Object *);
  unsigned __int8 (__thiscall *is_idle)(RGE_Missile_Object *);
  void (*logDebug)(RGE_Missile_Object *, char *, ...);
  void (*debug)(RGE_Missile_Object *, char *, ...);
  void (__thiscall *notify)(RGE_Missile_Object *, int, int, int, int, int, int);
  int (__thiscall *attack_2)(RGE_Missile_Object *, float, float, float, int);
  int (__thiscall *attack_1)(RGE_Missile_Object *, int, int);
  int (__thiscall *moveTo_3)(RGE_Missile_Object *, float, float, float, float, int, int);
  int (__thiscall *moveTo_2)(RGE_Missile_Object *, int, float, int);
  int (__thiscall *moveTo_1)(RGE_Missile_Object *, int, int);
  int (__thiscall *moveAwayFrom)(RGE_Missile_Object *, int, int);
  int (__thiscall *hunt)(RGE_Missile_Object *, int, int);
  int (__thiscall *gather)(RGE_Missile_Object *, int, int);
  int (__thiscall *convert)(RGE_Missile_Object *, int, int);
  int (__thiscall *repair)(RGE_Missile_Object *, int, int);
  int (__thiscall *build)(RGE_Missile_Object *, int, int);
  int (__thiscall *trade)(RGE_Missile_Object *, int, int);
  int (__thiscall *explore)(RGE_Missile_Object *, int, int, int);
  int (__thiscall *enter)(RGE_Missile_Object *, int, int);
  int (__thiscall *unload)(RGE_Missile_Object *, int, float, float, float);
  int (__thiscall *transport)(RGE_Missile_Object *, float, float, float, int);
  int (__thiscall *stopAction)(RGE_Missile_Object *);
  int (__thiscall *pause)(RGE_Missile_Object *);
  int (__thiscall *canPath_2)(RGE_Missile_Object *, int, float, float *, int, int, bool);
  int (__thiscall *canPath_1)(RGE_Missile_Object *, XYZPoint, float, int, float *, int, int, bool);
  int (__thiscall *canQuickPath)(RGE_Missile_Object *, int, float, float *);
  int (__thiscall *canPathWithObstructions)(RGE_Missile_Object *, int, float, float *, int, int, ManagedArray_int_ *);
  int (__thiscall *canPathWithAdditionalPassability)(RGE_Missile_Object *, XYZPoint, float, int, float *, int, int, int, int, int, BPath *);
  int (__thiscall *findFirstTerrainAlongExceptionPath)(RGE_Missile_Object *, int, float *, float *, BPath *);
  int (__thiscall *canLinePath_2)(RGE_Missile_Object *, int, int, int, int, float, int);
  int (__thiscall *canLinePath_1)(RGE_Missile_Object *, const XYPoint *, const XYPoint *, float, XYPoint *, int);
  int (__thiscall *firstTileAlongLine)(RGE_Missile_Object *, const XYPoint *, const XYPoint *, XYPoint *, int, int, int);
  unsigned __int8 (__thiscall *have_action)(RGE_Missile_Object *);
  int (__thiscall *gameActionType)(RGE_Missile_Object *);
  BVector *(__thiscall *userDefinedWaypoint)(RGE_Missile_Object *, int);
  int (__thiscall *addUserDefinedWaypoint)(RGE_Missile_Object *, float, float, float);
  void (__thiscall *zeroUserDefinedWaypoints)(RGE_Missile_Object *);
  void (__thiscall *removeAllUserDefinedWaypoints)(RGE_Missile_Object *);
  int (__thiscall *numberUserDefinedWaypoints)(RGE_Missile_Object *);
  BPath *(__thiscall *getPatrolInformation)(RGE_Missile_Object *, int *);
  float (__thiscall *distanceToHighestLevelPath_2)(RGE_Missile_Object *, BVector);
  float (__thiscall *distanceToHighestLevelPath_1)(RGE_Missile_Object *);
  BPath *(__thiscall *findAvoidancePath)(RGE_Missile_Object *, XYZPoint *, float, int);
  int (__thiscall *get_action_checksum)(RGE_Missile_Object *);
  int (__thiscall *get_waypoint_checksum)(RGE_Missile_Object *);
  void (__thiscall *setPatrolMode)(RGE_Missile_Object *, unsigned __int8);
  int (__thiscall *garrisoned_count)(RGE_Missile_Object *);
  int (__thiscall *lock_down)(RGE_Missile_Object *);
  int (__thiscall *unlock_down)(RGE_Missile_Object *);
  int (__thiscall *get_locked_down_count)(RGE_Missile_Object *);
  float (__thiscall *getTradeAmount)(RGE_Missile_Object *, float, float, float, float);
  int (__thiscall *setup_2)(RGE_Missile_Object *, int, RGE_Game_World *);
  int (__thiscall *setup_1)(RGE_Missile_Object *, RGE_Master_Static_Object *, RGE_Player *, float, float, float);
  RGE_New_Object_List *(__thiscall *create_object_list)(RGE_Missile_Object *);
  RGE_Active_Sprite_List *(__thiscall *create_sprite_list)(RGE_Missile_Object *);
  BVector *(__thiscall *position)(RGE_Missile_Object *, BVector *);
  BPathData *(__thiscall *getPathData)(RGE_Missile_Object *);
  int (__thiscall *actionType)(RGE_Missile_Object *);
  int (__thiscall *hasActionOfType)(RGE_Missile_Object *, int);
  int (__thiscall *gbg_hasActionOfType2)(RGE_Missile_Object *, int);
  int (__thiscall *addMove)(RGE_Missile_Object *, int, float, int, int, int);
  int (__thiscall *addCurrentPath)(RGE_Missile_Object *, BPath *, int, float, int);
  int (__thiscall *addFuturePath)(RGE_Missile_Object *, BPath *, int, float, int);
  void (__thiscall *stopAllMovement)(RGE_Missile_Object *);
  void (__thiscall *setOrientation)(RGE_Missile_Object *, BVector *, BVector *);
  BVector *(__thiscall *velocity)(RGE_Missile_Object *, BVector *);
  void (__thiscall *setVelocity)(RGE_Missile_Object *, BVector *);
  BVector *(__thiscall *acceleration)(RGE_Missile_Object *, BVector *);
  void (__thiscall *setAcceleration)(RGE_Missile_Object *, BVector *);
  float (__thiscall *forwardVelocity)(RGE_Missile_Object *);
  void (__thiscall *setForwardVelocity)(RGE_Missile_Object *, float);
  float (__thiscall *forwardAcceleration)(RGE_Missile_Object *);
  void (__thiscall *setForwardAcceleration)(RGE_Missile_Object *, float);
  void (__thiscall *moveForward)(RGE_Missile_Object *, float);
  void (__thiscall *setPosition)(RGE_Missile_Object *, BVector *);
  void (__thiscall *yaw)(RGE_Missile_Object *, float);
  int (__thiscall *isMoving)(RGE_Missile_Object *);
  void (__thiscall *stopMoving)(RGE_Missile_Object *);
  float (__thiscall *calculateFutureVelocity)(RGE_Missile_Object *, float, float, float, BVector *);
  unsigned int (__thiscall *lastMoveTime)(RGE_Missile_Object *);
  void (__thiscall *pauseMovement)(RGE_Missile_Object *, float);
  int (__thiscall *movementPriority)(RGE_Missile_Object *);
  int (__thiscall *intelligentMovementUpdate)(RGE_Missile_Object *);
  float (__thiscall *calculateMaximumSpeed)(RGE_Missile_Object *, int);
  int (__thiscall *calculateForward)(RGE_Missile_Object *, BVector *, BVector *, BVector *);
  float (__thiscall *calculateYawAngle)(RGE_Missile_Object *, BVector *, BVector *, float, int *);
  int (__thiscall *calculateReachedPoint)(RGE_Missile_Object *, BVector *, BVector *, BVector *);
  float (__thiscall *calculateTurnRadius)(RGE_Missile_Object *);
  int (__thiscall *checkAcceleration)(RGE_Missile_Object *, BVector *, int, int);
  BVector *(__thiscall *straightProjectedPosition)(RGE_Missile_Object *, BVector *, BVector *, float);
  int (__thiscall *onPatrol)(RGE_Missile_Object *);
  BVector *(__thiscall *orientationForward)(RGE_Missile_Object *, BVector *);
  int (__thiscall *setRunSprite)(RGE_Missile_Object *);
  int (__thiscall *setMoveSprite)(RGE_Missile_Object *);
  int (__thiscall *setFidgetSprite)(RGE_Missile_Object *);
  int (__thiscall *getGateLocked)(RGE_Missile_Object *);
  void (__thiscall *setGateLocked)(RGE_Missile_Object *, int);
  int (__thiscall *isGateOpenable)(RGE_Missile_Object *, int);
  int (__thiscall *getLinkedChild)(RGE_Missile_Object *, int);
  int (__thiscall *get_next_selected_group)(RGE_Missile_Object *, int);
  __int16 (__thiscall *get_Selected_Groups)(RGE_Missile_Object *);
  void (__thiscall *set_Selected_Groups)(RGE_Missile_Object *, __int16);
  int (__thiscall *get_num_Selected_groups)(RGE_Missile_Object *);
  int (__thiscall *setup_3)(RGE_Missile_Object *, RGE_Master_Animated_Object *, RGE_Player *, float, float, float);
  void (__thiscall *stop_moving)(RGE_Missile_Object *);
  unsigned __int8 (__thiscall *turn_towards)(RGE_Missile_Object *, RGE_Static_Object *, float, float);
  void (__thiscall *set_angle)(RGE_Missile_Object *);
  int (__thiscall *canLinePath_4)(RGE_Missile_Object *, int, int, int, int, float);
  int (__thiscall *canLinePath_3)(RGE_Missile_Object *, XYPoint *, XYPoint *, float, XYPoint *);
  int (__thiscall *setup_4)(RGE_Missile_Object *, RGE_Master_Moving_Object *, RGE_Player *, float, float, float);
  int (__thiscall *addMove_2)(RGE_Missile_Object *, int, float, float, float, float, int, int, int);
  void (__thiscall *work2)(RGE_Missile_Object *, RGE_Static_Object *, float, float, float, unsigned __int8, __int16);
  void (__thiscall *set_task)(RGE_Missile_Object *, __int16);
  void (__thiscall *setTaskByTaskID)(RGE_Missile_Object *, int);
  void (__thiscall *set_action)(RGE_Missile_Object *, RGE_Action *);
  void (__thiscall *set_only_action)(RGE_Missile_Object *, RGE_Action *);
  void (__thiscall *set_end_action)(RGE_Missile_Object *, RGE_Action *);
  RGE_Task *(__thiscall *getTask)(RGE_Missile_Object *, RGE_Static_Object *, float, float, float, __int16);
  void (__thiscall *setUnitAIAction)(RGE_Missile_Object *, int, RGE_Static_Object *, float, float, float);
  int (__thiscall *setup_5)(RGE_Missile_Object *, RGE_Master_Action_Object *, RGE_Player *, float, float, float);
  RGE_Action_List *(__thiscall *create_action_list)(RGE_Missile_Object *);
  unsigned __int8 (__thiscall *area_attack)(RGE_Missile_Object *, float, float, float, RGE_Combat_Object *, RGE_Static_Object *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *attack_4)(RGE_Missile_Object *, float, float, float, RGE_Combat_Object *);
  unsigned __int8 (__thiscall *attack_3)(RGE_Missile_Object *, RGE_Static_Object *, RGE_Combat_Object *);
  unsigned __int8 (__thiscall *do_attack)(RGE_Missile_Object *, RGE_Static_Object *, RGE_Combat_Object *, float, float, float, float);
  void (__thiscall *get_armor)(RGE_Missile_Object *, __int16 *, __int16 *);
  void (__thiscall *get_weapon)(RGE_Missile_Object *, __int16 *, __int16 *);
  void (__thiscall *get_weapon_range)(RGE_Missile_Object *, float *, float *);
  void (__thiscall *get_speed_of_attack)(RGE_Missile_Object *, float *, float *);
  int (__thiscall *inAttackRange_2)(RGE_Missile_Object *, RGE_Static_Object *, int *);
  int (__thiscall *setup_6)(RGE_Missile_Object *, RGE_Master_Combat_Object *, RGE_Player *, float, float, float);
};
#pragma pack(pop)

/* 214 */
#pragma pack(push, 8)
struct RGE_Master_Missile_Object
{
  RGE_Master_Missile_ObjectVtbl *vfptr;
  unsigned __int8 master_type;
  char *name;
  char *gbg_name2;
  __int16 unit_line;
  unsigned __int8 min_tech_level;
  __int16 string_id;
  __int16 string_id2;
  __int16 id;
  __int16 copy_id;
  __int16 base_id;
  __int16 object_group;
  RGE_Sprite *sprite;
  RGE_Sprite *sprite2;
  RGE_Sprite *death_sprite;
  RGE_Sprite *undead_sprite;
  unsigned __int8 undead_flag;
  __int16 hp;
  float los;
  unsigned __int8 obj_max;
  float radius_x;
  float radius_y;
  float radius_z;
  RGE_Sound *selected_sound;
  RGE_Sound *created_sound;
  RGE_Sound *death_sound;
  RGE_Sound *damage_sound;
  __int16 death_spawn_obj_id;
  unsigned __int8 sort_number;
  unsigned __int8 can_be_built_on;
  __int16 button_pict;
  unsigned __int8 hide_in_scenario_editor;
  __int16 portrait_pict;
  unsigned __int8 available;
  unsigned __int8 disabled;
  __int16 tile_req1;
  __int16 tile_req2;
  __int16 center_tile_req1;
  __int16 center_tile_req2;
  float construction_radius_x;
  float construction_radius_y;
  unsigned __int8 elevation_flag;
  unsigned __int8 fog_flag;
  __int16 terrain;
  unsigned __int8 movement_type;
  __int16 attribute_type_held[3];
  float attribute_amount_held[3];
  __int16 attribute_max_amount;
  float attribute_rot;
  float multiple_attribute_mod;
  unsigned __int8 attribute_flag[3];
  unsigned __int8 area_effect_object_level;
  unsigned __int8 combat_level;
  unsigned __int8 select_level;
  unsigned __int8 map_draw_level;
  unsigned __int8 unit_level;
  unsigned __int8 map_color;
  unsigned __int8 attack_reaction;
  unsigned __int8 convert_terrain_flag;
  unsigned __int8 damage_sprite_num;
  RGE_Damage_Sprite_Info *damage_sprites;
  unsigned __int8 occlusion_flag;
  unsigned __int8 obstruction_type;
  unsigned __int8 obstruction_class;
  unsigned int object_flags;
  int help_string_id;
  int help_page_id;
  int hotkey_id;
  unsigned __int8 recyclable;
  unsigned __int8 track_as_resource;
  unsigned __int8 create_doppleganger_on_death;
  unsigned __int8 resource_group;
  unsigned __int8 draw_flag;
  unsigned __int8 draw_color;
  float outline_radius_x;
  float outline_radius_y;
  float outline_radius_z;
  float speed;
  RGE_Sprite *move_sprite;
  RGE_Sprite *run_sprite;
  float turn_speed;
  unsigned __int8 size_class;
  __int16 obj_trail_id;
  unsigned __int8 obj_trail_options;
  float obj_trail_spacing;
  unsigned __int8 move_algorithem;
  float mTurnRadius;
  float mTurnRadiusSpeed;
  float mMaximumYawPerSecondMoving;
  float mStationaryYawRevolutionTime;
  float mMaximumYawPerSecondStationary;
  RGE_Task_List *tasks;
  __int16 default_task;
  float search_radius;
  float work_rate;
  float gbg_work_rate_2;
  __int16 drop_site;
  __int16 backup_drop_site;
  unsigned __int8 task_by_group;
  RGE_Sound *command_sound;
  RGE_Sound *move_sound;
  unsigned __int8 run_pattern;
  unsigned __int8 RGE_Master_Action_Object_gap[3];
  RGE_Sprite *fight_sprite;
  __int16 base_armor;
  __int16 armor_num;
  RGE_Armor_Weapon_Info *armor;
  __int16 weapon_num;
  RGE_Armor_Weapon_Info *weapon;
  __int16 defense_terrain_bonus;
  float weapon_range;
  float area_effect_range;
  unsigned __int8 area_effect_level;
  float speed_of_attack;
  __int16 missile_id;
  __int16 base_hit_chance;
  unsigned __int8 break_off_combat;
  __int16 fire_missile_at_frame;
  float weapon_offset_x;
  float weapon_offset_y;
  float weapon_offset_z;
  float minimum_weapon_range;
  __int16 orig_armor;
  __int16 orig_weapon;
  float orig_weapon_range;
  float orig_speed_of_attack;
  float missed_missile_spread;
  unsigned __int8 missile_type;
  unsigned __int8 targetting_type;
  unsigned __int8 missile_hit_info;
  unsigned __int8 missile_die_info;
  unsigned __int8 area_effect_specials;
  float ballistics_ratio;
};
#pragma pack(pop)

/* 771 */
#pragma pack(push, 8)
struct RGE_Master_Missile_ObjectVtbl
{
  unsigned __int8 (__thiscall *gbg_needs_power)(RGE_Master_Missile_Object *);
  RGE_Sprite *(__thiscall *gbg_get_sprite_civ_override)(RGE_Master_Missile_Object *, RGE_Static_Object *);
  RGE_Sprite *(__thiscall *gbg_get_sprite2_civ_override)(RGE_Master_Missile_Object *, RGE_Static_Object *);
  RGE_Sprite *(__thiscall *gbg_get_death_sprite_civ_override)(RGE_Master_Missile_Object *, RGE_Static_Object *);
  RGE_Sprite *(__thiscall *gbg_get_undead_sprite_civ_override)(RGE_Master_Missile_Object *, RGE_Static_Object *);
  void *(__thiscall *__vecDelDtor)(RGE_Master_Missile_Object *, unsigned int);
  void (__thiscall *copy_obj)(RGE_Master_Missile_Object *, RGE_Master_Static_Object *);
  void (__thiscall *modify)(RGE_Master_Missile_Object *, float, unsigned __int8);
  void (__thiscall *modify_delta)(RGE_Master_Missile_Object *, float, unsigned __int8);
  void (__thiscall *modify_percent)(RGE_Master_Missile_Object *, float, unsigned __int8);
  void (__thiscall *small_save)(RGE_Master_Missile_Object *, int);
  void (__thiscall *save)(RGE_Master_Missile_Object *, int);
  RGE_Static_Object *(__thiscall *make_new_obj)(RGE_Master_Missile_Object *, RGE_Player *, float, float, float);
  RGE_Master_Static_Object *(__thiscall *make_new_master)(RGE_Master_Missile_Object *);
  unsigned __int8 (__thiscall *check_placement)(RGE_Master_Missile_Object *, RGE_Player *, float, float, int *, unsigned __int8, unsigned __int8, unsigned __int8, unsigned __int8, unsigned __int8, unsigned __int8, RGE_Static_Object *, unsigned __int8);
  unsigned __int8 (__thiscall *alignment)(RGE_Master_Missile_Object *, float *, float *, RGE_Game_World *, unsigned __int8);
  int (__thiscall *calc_base_damage_ability)(RGE_Master_Missile_Object *, RGE_Master_Missile_Object *);
  void (__thiscall *play_command_sound)(RGE_Master_Missile_Object *, RGE_Player *);
  void (__thiscall *play_move_sound)(RGE_Master_Missile_Object *, RGE_Player *);
  void (__thiscall *draw)(RGE_Master_Missile_Object *, TDrawArea *, __int16, __int16, RGE_Color_Table *, int, int, int, unsigned __int8);
  float (__thiscall *maximumSpeed)(RGE_Master_Missile_Object *, int);
  float (__thiscall *acceleration)(RGE_Master_Missile_Object *, int);
  float (__thiscall *deceleration)(RGE_Master_Missile_Object *, int);
  float (__thiscall *getTurnRadius)(RGE_Master_Missile_Object *);
  float (__thiscall *getTurnRadiusSpeed)(RGE_Master_Missile_Object *);
  int (__thiscall *setTurnRadiusOffTurnSpeed)(RGE_Master_Missile_Object *);
  int (__thiscall *setTurnRadius)(RGE_Master_Missile_Object *, float, float);
  float (__thiscall *getMaximumYawPerSecondMoving)(RGE_Master_Missile_Object *);
  float (__thiscall *getMaximumYawPerSecondStationary)(RGE_Master_Missile_Object *);
  void (__thiscall *setStationaryYawRevolutionTime)(RGE_Master_Missile_Object *, float);
  RGE_Sprite *(__thiscall *gbg_get_move_sprite_civ_override)(RGE_Master_Missile_Object *, RGE_Static_Object *);
  RGE_Sprite *(__thiscall *gbg_get_run_sprite_civ_override)(RGE_Master_Missile_Object *, RGE_Static_Object *);
  RGE_Task_List *(__thiscall *create_task_list)(RGE_Master_Missile_Object *);
  RGE_Sprite *(__thiscall *gbg_get_fight_sprite_civ_override)(RGE_Master_Missile_Object *, RGE_Static_Object *);
};
#pragma pack(pop)

/* 215 */
#pragma pack(push, 8)
struct RGE_Doppleganger_Object
{
  RGE_Doppleganger_ObjectVtbl *vfptr;
  int gbg_unknown_1;
  float gbg_unknown_2;
  int gbg_unknown_3;
  int id;
  RGE_Master_Doppleganger_Object *master_obj;
  TRIBE_Player *owner;
  RGE_Sprite *sprite;
  RGE_Sprite *old_sprite;
  RGE_Active_Sprite_List *sprite_list;
  RGE_Tile *tile;
  RGE_Static_Object *inside_obj;
  RGE_New_Object_List *objects;
  __int16 screen_x_offset;
  __int16 screen_y_offset;
  __int16 shadow_x_offset;
  __int16 shadow_y_offset;
  float hp;
  float sp;
  unsigned __int8 curr_damage_percent;
  unsigned __int8 facet;
  unsigned __int8 selected;
  float world_x;
  float world_y;
  float world_z;
  float attribute_amount_held;
  unsigned __int8 object_state;
  unsigned __int8 sleep_flag;
  unsigned __int8 dopple_flag;
  unsigned __int8 goto_sleep_flag;
  __int16 attribute_type_held;
  unsigned __int8 type;
  unsigned __int8 worker_num;
  ObsRecord *CurrentObstructionData;
  ObsRecord *ObstructionDataList;
  RGE_Static_Object **player_object_node;
  int *mPathingGroup;
  int mPathingGroupSize;
  int mMaximumPathingGroupSize;
  int damaged_lately_timer;
  UnitAIModule *unitAIValue;
  int zoneMapIndex;
  unsigned __int8 inObstructionMapValue;
  unsigned __int8 lastInObstructionMapValue;
  unsigned __int8 underAttackValue;
  int mGroupID;
  unsigned __int8 mROOAlreadyCalled;
  LOS_ExploreInfo ei;
  float speed;
  RGE_Static_Object *doppled_object;
  RGE_Player *draw_color_owner;
  RGE_Master_Static_Object *doppled_master_obj;
  int doppled_player;
  unsigned int *MapAddress;
  unsigned int LastMapValue;
  unsigned int CantSeeBits;
  unsigned __int8 map_draw_level;
  unsigned __int8 map_color;
  unsigned __int8 Multi_Unified_Points;
  unsigned __int8 Destroy_Next_Turn;
  int doppledObjectID;
};
#pragma pack(pop)

/* 761 */
#pragma pack(push, 8)
struct RGE_Doppleganger_ObjectVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Doppleganger_Object *, unsigned int);
  int (__thiscall *gbg_unknown1)(RGE_Doppleganger_Object *);
  int (__thiscall *gbg_unknown2)(RGE_Doppleganger_Object *);
  unsigned __int8 (__thiscall *gbg_unknown3)(RGE_Doppleganger_Object *);
  unsigned __int8 (__thiscall *gbg_unknown4)(RGE_Doppleganger_Object *);
  unsigned __int8 (__thiscall *gbg_unknown5)(RGE_Doppleganger_Object *);
  unsigned __int8 (__thiscall *gbg_unknown6)(RGE_Doppleganger_Object *);
  unsigned __int8 (__thiscall *gbg_unknown7)(RGE_Doppleganger_Object *);
  unsigned __int8 (__thiscall *gbg_unknown8)(RGE_Doppleganger_Object *);
  unsigned __int8 (__thiscall *gbg_unknown9)(RGE_Doppleganger_Object *);
  unsigned __int8 (__thiscall *gbg_unknown10)(RGE_Doppleganger_Object *);
  unsigned __int8 (__thiscall *gbg_unknown11)(RGE_Doppleganger_Object *);
  unsigned __int8 (__thiscall *gbg_isPadawan)(RGE_Doppleganger_Object *);
  unsigned __int8 (__thiscall *gbg_isMaster)(RGE_Doppleganger_Object *);
  unsigned __int8 (__thiscall *gbg_unknown14)(RGE_Doppleganger_Object *);
  unsigned __int8 (__thiscall *gbg_isShielded)(RGE_Doppleganger_Object *);
  void (__thiscall *gbg_unknown16)(RGE_Doppleganger_Object *);
  void (__thiscall *gbg_unknown17)(RGE_Doppleganger_Object *);
  unsigned __int8 (__thiscall *gbg_unknown18)(RGE_Doppleganger_Object *, int);
  unsigned __int8 (__thiscall *gbg_isDetector)(RGE_Doppleganger_Object *);
  unsigned __int8 (__thiscall *gbg_unknown20)(RGE_Doppleganger_Object *, int);
  unsigned __int8 (__thiscall *gbg_isPowered)(RGE_Doppleganger_Object *, int);
  void (__thiscall *gbg_unknown22)(RGE_Doppleganger_Object *);
  unsigned __int8 (__thiscall *gbg_unknown23)(RGE_Doppleganger_Object *);
  unsigned __int8 (__thiscall *gbg_isBiological)(RGE_Doppleganger_Object *);
  unsigned __int8 (__thiscall *gbg_isDamaged)(RGE_Doppleganger_Object *);
  unsigned __int8 (__thiscall *gbg_unknown26)(RGE_Doppleganger_Object *);
  unsigned __int8 (__thiscall *gbg_canBeHealedByPlayer)(RGE_Doppleganger_Object *, int);
  unsigned __int8 (__thiscall *gbg_canBeRepairedByPlayer)(RGE_Doppleganger_Object *, int);
  void (__thiscall *recycle_in_to_game)(RGE_Doppleganger_Object *, RGE_Master_Static_Object *, RGE_Player *, float, float, float);
  void (__thiscall *recycle_out_of_game)(RGE_Doppleganger_Object *);
  void (__thiscall *draw)(RGE_Doppleganger_Object *, TDrawArea *, __int16, __int16, RGE_Color_Table *);
  void (__thiscall *shadow_draw)(RGE_Doppleganger_Object *, TDrawArea *, __int16, __int16, unsigned __int8);
  void (__thiscall *normal_draw)(RGE_Doppleganger_Object *, TDrawArea *, __int16, __int16);
  void (__thiscall *draw_front_frame)(RGE_Doppleganger_Object *, TDrawArea *, __int16, __int16);
  void (__thiscall *draw_back_frame)(RGE_Doppleganger_Object *, TDrawArea *, __int16, __int16);
  void (__thiscall *draw_frame)(RGE_Doppleganger_Object *, TDrawArea *, __int16, __int16);
  unsigned __int8 (__thiscall *update)(RGE_Doppleganger_Object *);
  void (__thiscall *check_damage_sprites)(RGE_Doppleganger_Object *);
  void (__thiscall *rehook)(RGE_Doppleganger_Object *);
  void (__thiscall *save)(RGE_Doppleganger_Object *, int);
  void (__thiscall *teleport_off_map)(RGE_Doppleganger_Object *);
  float (__thiscall *teleport)(RGE_Doppleganger_Object *, float, float, float);
  float (__thiscall *handle_teleport_z_correction)(RGE_Doppleganger_Object *, float);
  void (__thiscall *new_sprite)(RGE_Doppleganger_Object *, RGE_Sprite *);
  void (__thiscall *add_overlay_sprite)(RGE_Doppleganger_Object *, RGE_Sprite *, unsigned __int8);
  void (__thiscall *remove_overlay_sprite)(RGE_Doppleganger_Object *, RGE_Sprite *);
  void (__thiscall *change_ownership)(RGE_Doppleganger_Object *, RGE_Player *);
  void (__thiscall *modify)(RGE_Doppleganger_Object *, float, unsigned __int8);
  void (__thiscall *modify_delta)(RGE_Doppleganger_Object *, float, unsigned __int8);
  void (__thiscall *modify_percent)(RGE_Doppleganger_Object *, float, unsigned __int8);
  void (__thiscall *transform)(RGE_Doppleganger_Object *, RGE_Master_Static_Object *);
  void (__thiscall *copy_obj)(RGE_Doppleganger_Object *, RGE_Master_Static_Object *);
  void (__thiscall *set_object_state)(RGE_Doppleganger_Object *, unsigned __int8);
  void (__thiscall *remove_visible_resource)(RGE_Doppleganger_Object *);
  void (__thiscall *create_doppleganger_when_dying)(RGE_Doppleganger_Object *);
  void (__thiscall *destroy_obj)(RGE_Doppleganger_Object *);
  void (__thiscall *die_die_die)(RGE_Doppleganger_Object *);
  void (__thiscall *damage)(RGE_Doppleganger_Object *, int, RGE_Armor_Weapon_Info *, float, RGE_Player *, RGE_Static_Object *, int);
  float (__thiscall *calculateDamage)(RGE_Doppleganger_Object *, int, RGE_Armor_Weapon_Info *, float, RGE_Player *, RGE_Static_Object *);
  void (__thiscall *rotate)(RGE_Doppleganger_Object *, int);
  unsigned __int8 (__thiscall *can_attack)(RGE_Doppleganger_Object *);
  void (__thiscall *set_attribute)(RGE_Doppleganger_Object *, __int16, float);
  void (__thiscall *set_attribute_amount)(RGE_Doppleganger_Object *, float, unsigned __int8, unsigned __int8);
  int (__thiscall *heal_2)(RGE_Doppleganger_Object *, int, int);
  unsigned __int8 (__thiscall *heal_1)(RGE_Doppleganger_Object *, float);
  int (__thiscall *canRepair)(RGE_Doppleganger_Object *);
  void (__thiscall *notify_of_relation)(RGE_Doppleganger_Object *, int, unsigned __int8);
  void (__thiscall *do_command)(RGE_Doppleganger_Object *, RGE_Static_Object *, float, float, float);
  int (__thiscall *actionTypeIfOrdered)(RGE_Doppleganger_Object *, RGE_Static_Object *, float, float, float, float *);
  unsigned __int8 (__thiscall *move_to)(RGE_Doppleganger_Object *, RGE_Static_Object *, float, float, float);
  void (__thiscall *work)(RGE_Doppleganger_Object *, RGE_Static_Object *, float, float, float);
  void (__thiscall *stop)(RGE_Doppleganger_Object *);
  void (__thiscall *set_attack)(RGE_Doppleganger_Object *, RGE_Static_Object *);
  void (__thiscall *play_command_sound)(RGE_Doppleganger_Object *);
  void (__thiscall *play_move_sound)(RGE_Doppleganger_Object *);
  void (__thiscall *new_angle)(RGE_Doppleganger_Object *, float);
  RGE_Static_Object *(__thiscall *spawn_death_obj)(RGE_Doppleganger_Object *);
  RGE_Master_Static_Object *(__thiscall *get_command_master)(RGE_Doppleganger_Object *, RGE_Static_Object *, float, float, float);
  void (__thiscall *set_being_worked_on)(RGE_Doppleganger_Object *, RGE_Action_Object *, __int16, unsigned __int8);
  void (__thiscall *release_being_worked_on)(RGE_Doppleganger_Object *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *is_moving)(RGE_Doppleganger_Object *);
  RGE_Static_Object *(__thiscall *get_target_obj)(RGE_Doppleganger_Object *);
  unsigned __int8 (__thiscall *more_room)(RGE_Doppleganger_Object *, RGE_Static_Object *);
  void (__thiscall *enter_obj)(RGE_Doppleganger_Object *, RGE_Static_Object *, unsigned __int8);
  void (__thiscall *exit_obj)(RGE_Doppleganger_Object *);
  void (__thiscall *add_obj)(RGE_Doppleganger_Object *, RGE_Static_Object *);
  void (__thiscall *remove_obj)(RGE_Doppleganger_Object *, RGE_Static_Object *);
  int (__thiscall *explore_terrain)(RGE_Doppleganger_Object *, RGE_Player *, unsigned __int8, int, int);
  void (__thiscall *unexplore_terrain)(RGE_Doppleganger_Object *, RGE_Player *, unsigned __int8, int, int);
  LOSTBL *(__thiscall *get_los_table)(RGE_Doppleganger_Object *);
  unsigned __int8 (__thiscall *get_visibility)(RGE_Doppleganger_Object *, RGE_Player *);
  int (__thiscall *inAttackRange)(RGE_Doppleganger_Object *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *underAttack)(RGE_Doppleganger_Object *);
  void (__thiscall *setUnderAttack)(RGE_Doppleganger_Object *, unsigned __int8);
  float (__thiscall *calc_attack_modifier)(RGE_Doppleganger_Object *, RGE_Static_Object *);
  float (__thiscall *getSpeed)(RGE_Doppleganger_Object *);
  float (__thiscall *getAngle)(RGE_Doppleganger_Object *);
  float (__thiscall *maximumSpeed)(RGE_Doppleganger_Object *);
  float (__thiscall *rateOfFire)(RGE_Doppleganger_Object *);
  float (__thiscall *damageCapability_2)(RGE_Doppleganger_Object *, RGE_Static_Object *);
  float (__thiscall *damageCapability_1)(RGE_Doppleganger_Object *);
  float (__thiscall *weaponRange)(RGE_Doppleganger_Object *);
  float (__thiscall *minimumWeaponRange)(RGE_Doppleganger_Object *);
  int (__thiscall *passableTile_2)(RGE_Doppleganger_Object *, float, float, int *, int);
  int (__thiscall *passableTile_1)(RGE_Doppleganger_Object *, float, float);
  int (__thiscall *currentTargetID)(RGE_Doppleganger_Object *);
  float (__thiscall *currentTargetX)(RGE_Doppleganger_Object *);
  float (__thiscall *currentTargetY)(RGE_Doppleganger_Object *);
  float (__thiscall *currentTargetZ)(RGE_Doppleganger_Object *);
  void (__thiscall *setWaitingToMove)(RGE_Doppleganger_Object *, unsigned __int8);
  unsigned __int8 (__thiscall *waitingToMove)(RGE_Doppleganger_Object *);
  unsigned __int8 (__thiscall *actionState)(RGE_Doppleganger_Object *);
  unsigned __int8 (__thiscall *keepGatheringWhenObjectIsOut)(RGE_Doppleganger_Object *, int);
  unsigned __int8 (__thiscall *produceWhenKilledBy)(RGE_Doppleganger_Object *, int);
  unsigned __int8 (__thiscall *useSameZoneDropsite)(RGE_Doppleganger_Object *);
  float (__thiscall *searchRadius)(RGE_Doppleganger_Object *);
  unsigned __int8 (__thiscall *is_idle)(RGE_Doppleganger_Object *);
  void (*logDebug)(RGE_Doppleganger_Object *, char *, ...);
  void (*debug)(RGE_Doppleganger_Object *, char *, ...);
  void (__thiscall *notify)(RGE_Doppleganger_Object *, int, int, int, int, int, int);
  int (__thiscall *attack_2)(RGE_Doppleganger_Object *, float, float, float, int);
  int (__thiscall *attack_1)(RGE_Doppleganger_Object *, int, int);
  int (__thiscall *moveTo_3)(RGE_Doppleganger_Object *, float, float, float, float, int, int);
  int (__thiscall *moveTo_2)(RGE_Doppleganger_Object *, int, float, int);
  int (__thiscall *moveTo_1)(RGE_Doppleganger_Object *, int, int);
  int (__thiscall *moveAwayFrom)(RGE_Doppleganger_Object *, int, int);
  int (__thiscall *hunt)(RGE_Doppleganger_Object *, int, int);
  int (__thiscall *gather)(RGE_Doppleganger_Object *, int, int);
  int (__thiscall *convert)(RGE_Doppleganger_Object *, int, int);
  int (__thiscall *repair)(RGE_Doppleganger_Object *, int, int);
  int (__thiscall *build)(RGE_Doppleganger_Object *, int, int);
  int (__thiscall *trade)(RGE_Doppleganger_Object *, int, int);
  int (__thiscall *explore)(RGE_Doppleganger_Object *, int, int, int);
  int (__thiscall *enter)(RGE_Doppleganger_Object *, int, int);
  int (__thiscall *unload)(RGE_Doppleganger_Object *, int, float, float, float);
  int (__thiscall *transport)(RGE_Doppleganger_Object *, float, float, float, int);
  int (__thiscall *stopAction)(RGE_Doppleganger_Object *);
  int (__thiscall *pause)(RGE_Doppleganger_Object *);
  int (__thiscall *canPath_2)(RGE_Doppleganger_Object *, int, float, float *, int, int, bool);
  int (__thiscall *canPath_1)(RGE_Doppleganger_Object *, XYZPoint, float, int, float *, int, int, bool);
  int (__thiscall *canQuickPath)(RGE_Doppleganger_Object *, int, float, float *);
  int (__thiscall *canPathWithObstructions)(RGE_Doppleganger_Object *, int, float, float *, int, int, ManagedArray_int_ *);
  int (__thiscall *canPathWithAdditionalPassability)(RGE_Doppleganger_Object *, XYZPoint, float, int, float *, int, int, int, int, int, BPath *);
  int (__thiscall *findFirstTerrainAlongExceptionPath)(RGE_Doppleganger_Object *, int, float *, float *, BPath *);
  int (__thiscall *canLinePath_2)(RGE_Doppleganger_Object *, int, int, int, int, float, int);
  int (__thiscall *canLinePath_1)(RGE_Doppleganger_Object *, const XYPoint *, const XYPoint *, float, XYPoint *, int);
  int (__thiscall *firstTileAlongLine)(RGE_Doppleganger_Object *, const XYPoint *, const XYPoint *, XYPoint *, int, int, int);
  unsigned __int8 (__thiscall *have_action)(RGE_Doppleganger_Object *);
  int (__thiscall *gameActionType)(RGE_Doppleganger_Object *);
  BVector *(__thiscall *userDefinedWaypoint)(RGE_Doppleganger_Object *, int);
  int (__thiscall *addUserDefinedWaypoint)(RGE_Doppleganger_Object *, float, float, float);
  void (__thiscall *zeroUserDefinedWaypoints)(RGE_Doppleganger_Object *);
  void (__thiscall *removeAllUserDefinedWaypoints)(RGE_Doppleganger_Object *);
  int (__thiscall *numberUserDefinedWaypoints)(RGE_Doppleganger_Object *);
  BPath *(__thiscall *getPatrolInformation)(RGE_Doppleganger_Object *, int *);
  float (__thiscall *distanceToHighestLevelPath_2)(RGE_Doppleganger_Object *, BVector);
  float (__thiscall *distanceToHighestLevelPath_1)(RGE_Doppleganger_Object *);
  BPath *(__thiscall *findAvoidancePath)(RGE_Doppleganger_Object *, XYZPoint *, float, int);
  int (__thiscall *get_action_checksum)(RGE_Doppleganger_Object *);
  int (__thiscall *get_waypoint_checksum)(RGE_Doppleganger_Object *);
  void (__thiscall *setPatrolMode)(RGE_Doppleganger_Object *, unsigned __int8);
  int (__thiscall *garrisoned_count)(RGE_Doppleganger_Object *);
  int (__thiscall *lock_down)(RGE_Doppleganger_Object *);
  int (__thiscall *unlock_down)(RGE_Doppleganger_Object *);
  int (__thiscall *get_locked_down_count)(RGE_Doppleganger_Object *);
  float (__thiscall *getTradeAmount)(RGE_Doppleganger_Object *, float, float, float, float);
  int (__thiscall *setup_2)(RGE_Doppleganger_Object *, int, RGE_Game_World *);
  int (__thiscall *setup_1)(RGE_Doppleganger_Object *, RGE_Master_Static_Object *, RGE_Player *, float, float, float);
  RGE_New_Object_List *(__thiscall *create_object_list)(RGE_Doppleganger_Object *);
  RGE_Active_Sprite_List *(__thiscall *create_sprite_list)(RGE_Doppleganger_Object *);
  BVector *(__thiscall *position)(RGE_Doppleganger_Object *, BVector *);
  BPathData *(__thiscall *getPathData)(RGE_Doppleganger_Object *);
  int (__thiscall *actionType)(RGE_Doppleganger_Object *);
  int (__thiscall *hasActionOfType)(RGE_Doppleganger_Object *, int);
  int (__thiscall *gbg_hasActionOfType2)(RGE_Doppleganger_Object *, int);
  int (__thiscall *addMove)(RGE_Doppleganger_Object *, int, float, int, int, int);
  int (__thiscall *addCurrentPath)(RGE_Doppleganger_Object *, BPath *, int, float, int);
  int (__thiscall *addFuturePath)(RGE_Doppleganger_Object *, BPath *, int, float, int);
  void (__thiscall *stopAllMovement)(RGE_Doppleganger_Object *);
  void (__thiscall *setOrientation)(RGE_Doppleganger_Object *, BVector *, BVector *);
  BVector *(__thiscall *velocity)(RGE_Doppleganger_Object *, BVector *);
  void (__thiscall *setVelocity)(RGE_Doppleganger_Object *, BVector *);
  BVector *(__thiscall *acceleration)(RGE_Doppleganger_Object *, BVector *);
  void (__thiscall *setAcceleration)(RGE_Doppleganger_Object *, BVector *);
  float (__thiscall *forwardVelocity)(RGE_Doppleganger_Object *);
  void (__thiscall *setForwardVelocity)(RGE_Doppleganger_Object *, float);
  float (__thiscall *forwardAcceleration)(RGE_Doppleganger_Object *);
  void (__thiscall *setForwardAcceleration)(RGE_Doppleganger_Object *, float);
  void (__thiscall *moveForward)(RGE_Doppleganger_Object *, float);
  void (__thiscall *setPosition)(RGE_Doppleganger_Object *, BVector *);
  void (__thiscall *yaw)(RGE_Doppleganger_Object *, float);
  int (__thiscall *isMoving)(RGE_Doppleganger_Object *);
  void (__thiscall *stopMoving)(RGE_Doppleganger_Object *);
  float (__thiscall *calculateFutureVelocity)(RGE_Doppleganger_Object *, float, float, float, BVector *);
  unsigned int (__thiscall *lastMoveTime)(RGE_Doppleganger_Object *);
  void (__thiscall *pauseMovement)(RGE_Doppleganger_Object *, float);
  int (__thiscall *movementPriority)(RGE_Doppleganger_Object *);
  int (__thiscall *intelligentMovementUpdate)(RGE_Doppleganger_Object *);
  float (__thiscall *calculateMaximumSpeed)(RGE_Doppleganger_Object *, int);
  int (__thiscall *calculateForward)(RGE_Doppleganger_Object *, BVector *, BVector *, BVector *);
  float (__thiscall *calculateYawAngle)(RGE_Doppleganger_Object *, BVector *, BVector *, float, int *);
  int (__thiscall *calculateReachedPoint)(RGE_Doppleganger_Object *, BVector *, BVector *, BVector *);
  float (__thiscall *calculateTurnRadius)(RGE_Doppleganger_Object *);
  int (__thiscall *checkAcceleration)(RGE_Doppleganger_Object *, BVector *, int, int);
  BVector *(__thiscall *straightProjectedPosition)(RGE_Doppleganger_Object *, BVector *, BVector *, float);
  int (__thiscall *onPatrol)(RGE_Doppleganger_Object *);
  BVector *(__thiscall *orientationForward)(RGE_Doppleganger_Object *, BVector *);
  int (__thiscall *setRunSprite)(RGE_Doppleganger_Object *);
  int (__thiscall *setMoveSprite)(RGE_Doppleganger_Object *);
  int (__thiscall *setFidgetSprite)(RGE_Doppleganger_Object *);
  int (__thiscall *getGateLocked)(RGE_Doppleganger_Object *);
  void (__thiscall *setGateLocked)(RGE_Doppleganger_Object *, int);
  int (__thiscall *isGateOpenable)(RGE_Doppleganger_Object *, int);
  int (__thiscall *getLinkedChild)(RGE_Doppleganger_Object *, int);
  int (__thiscall *get_next_selected_group)(RGE_Doppleganger_Object *, int);
  __int16 (__thiscall *get_Selected_Groups)(RGE_Doppleganger_Object *);
  void (__thiscall *set_Selected_Groups)(RGE_Doppleganger_Object *, __int16);
  int (__thiscall *get_num_Selected_groups)(RGE_Doppleganger_Object *);
  int (__thiscall *setup_3)(RGE_Doppleganger_Object *, RGE_Master_Animated_Object *, RGE_Player *, float, float, float);
  void (__thiscall *recycle_in_to_game_2)(RGE_Doppleganger_Object *, RGE_Master_Static_Object *, RGE_Player *, float, float, float, RGE_Static_Object *);
  void (__thiscall *validate)(RGE_Doppleganger_Object *);
  int (__thiscall *setup_4)(RGE_Doppleganger_Object *, RGE_Master_Doppleganger_Object *, RGE_Player *, float, float, float);
};
#pragma pack(pop)

/* 216 */
#pragma pack(push, 8)
struct RGE_Master_Doppleganger_Object
{
  RGE_Master_Doppleganger_ObjectVtbl *vfptr;
  unsigned __int8 master_type;
  char *name;
  int unknown;
  __int16 unit_line;
  unsigned __int8 min_tech_level;
  __int16 string_id;
  __int16 string_id2;
  __int16 id;
  __int16 copy_id;
  __int16 base_id;
  __int16 object_group;
  RGE_Sprite *sprite;
  RGE_Sprite *sprite2;
  RGE_Sprite *death_sprite;
  RGE_Sprite *undead_sprite;
  unsigned __int8 undead_flag;
  __int16 hp;
  float los;
  unsigned __int8 obj_max;
  float radius_x;
  float radius_y;
  float radius_z;
  RGE_Sound *selected_sound;
  RGE_Sound *created_sound;
  RGE_Sound *death_sound;
  RGE_Sound *damage_sound;
  __int16 death_spawn_obj_id;
  unsigned __int8 sort_number;
  unsigned __int8 can_be_built_on;
  __int16 button_pict;
  unsigned __int8 hide_in_scenario_editor;
  __int16 portrait_pict;
  unsigned __int8 available;
  unsigned __int8 disabled;
  __int16 tile_req1;
  __int16 tile_req2;
  __int16 center_tile_req1;
  __int16 center_tile_req2;
  float construction_radius_x;
  float construction_radius_y;
  unsigned __int8 elevation_flag;
  unsigned __int8 fog_flag;
  __int16 terrain;
  unsigned __int8 movement_type;
  __int16 attribute_type_held[3];
  float attribute_amount_held[3];
  __int16 attribute_max_amount;
  float attribute_rot;
  float multiple_attribute_mod;
  unsigned __int8 attribute_flag[3];
  unsigned __int8 area_effect_object_level;
  unsigned __int8 combat_level;
  unsigned __int8 select_level;
  unsigned __int8 map_draw_level;
  unsigned __int8 unit_level;
  unsigned __int8 map_color;
  unsigned __int8 attack_reaction;
  unsigned __int8 convert_terrain_flag;
  unsigned __int8 damage_sprite_num;
  RGE_Damage_Sprite_Info *damage_sprites;
  unsigned __int8 occlusion_flag;
  unsigned __int8 obstruction_type;
  unsigned __int8 obstruction_class;
  unsigned int object_flags;
  int help_string_id;
  int help_page_id;
  int hotkey_id;
  unsigned __int8 recyclable;
  unsigned __int8 track_as_resource;
  unsigned __int8 create_doppleganger_on_death;
  unsigned __int8 resource_group;
  unsigned __int8 draw_flag;
  unsigned __int8 draw_color;
  float outline_radius_x;
  float outline_radius_y;
  float outline_radius_z;
  float speed;
};
#pragma pack(pop)

/* 860 */
#pragma pack(push, 8)
struct RGE_Master_Doppleganger_ObjectVtbl
{
  unsigned __int8 (__thiscall *gbg_unknown1)(RGE_Master_Doppleganger_Object *);
  int (__thiscall *gbg_unknown2)(RGE_Master_Doppleganger_Object *, int);
  int (__thiscall *gbg_unknown3)(RGE_Master_Doppleganger_Object *, int);
  int (__thiscall *gbg_unknown4)(RGE_Master_Doppleganger_Object *, int);
  int (__thiscall *gbg_unknown5)(RGE_Master_Doppleganger_Object *, int);
  void *(__thiscall *__vecDelDtor)(RGE_Master_Doppleganger_Object *, unsigned int);
  void (__thiscall *copy_obj)(RGE_Master_Doppleganger_Object *, RGE_Master_Static_Object *);
  void (__thiscall *modify)(RGE_Master_Doppleganger_Object *, float, unsigned __int8);
  void (__thiscall *modify_delta)(RGE_Master_Doppleganger_Object *, float, unsigned __int8);
  void (__thiscall *modify_percent)(RGE_Master_Doppleganger_Object *, float, unsigned __int8);
  void (__thiscall *small_save)(RGE_Master_Doppleganger_Object *, int);
  void (__thiscall *save)(RGE_Master_Doppleganger_Object *, int);
  RGE_Static_Object *(__thiscall *make_new_obj)(RGE_Master_Doppleganger_Object *, RGE_Player *, float, float, float);
  RGE_Master_Static_Object *(__thiscall *make_new_master)(RGE_Master_Doppleganger_Object *);
  unsigned __int8 (__thiscall *check_placement)(RGE_Master_Doppleganger_Object *, RGE_Player *, float, float, int *, unsigned __int8, unsigned __int8, unsigned __int8, unsigned __int8, unsigned __int8, unsigned __int8, RGE_Static_Object *, unsigned __int8);
  unsigned __int8 (__thiscall *alignment)(RGE_Master_Doppleganger_Object *, float *, float *, RGE_Game_World *, unsigned __int8);
  int (__thiscall *calc_base_damage_ability)(RGE_Master_Doppleganger_Object *, RGE_Master_Combat_Object *);
  void (__thiscall *play_command_sound)(RGE_Master_Doppleganger_Object *, RGE_Player *);
  void (__thiscall *play_move_sound)(RGE_Master_Doppleganger_Object *, RGE_Player *);
  void (__thiscall *draw)(RGE_Master_Doppleganger_Object *, TDrawArea *, __int16, __int16, RGE_Color_Table *, int, int, int, unsigned __int8);
  float (__thiscall *maximumSpeed)(RGE_Master_Doppleganger_Object *, int);
  float (__thiscall *acceleration)(RGE_Master_Doppleganger_Object *, int);
  float (__thiscall *deceleration)(RGE_Master_Doppleganger_Object *, int);
  float (__thiscall *getTurnRadius)(RGE_Master_Doppleganger_Object *);
  float (__thiscall *getTurnRadiusSpeed)(RGE_Master_Doppleganger_Object *);
  int (__thiscall *setTurnRadiusOffTurnSpeed)(RGE_Master_Doppleganger_Object *);
  int (__thiscall *setTurnRadius)(RGE_Master_Doppleganger_Object *, float, float);
  float (__thiscall *getMaximumYawPerSecondMoving)(RGE_Master_Doppleganger_Object *);
  float (__thiscall *getMaximumYawPerSecondStationary)(RGE_Master_Doppleganger_Object *);
  void (__thiscall *setStationaryYawRevolutionTime)(RGE_Master_Doppleganger_Object *, float);
  RGE_Static_Object *(__thiscall *make_new_obj_2)(RGE_Master_Doppleganger_Object *, RGE_Player *, float, float, float, RGE_Static_Object *);
};
#pragma pack(pop)

/* 218 */
#pragma pack(push, 8)
struct TRIBE_Tree_Object
{
  TRIBE_Tree_ObjectVtbl *vfptr;
  int gbg_unknown_1;
  float gbg_unknown_2;
  int gbg_unknown_3;
  int id;
  TRIBE_Master_Tree_Object *master_obj;
  TRIBE_Player *owner;
  RGE_Sprite *sprite;
  RGE_Sprite *old_sprite;
  RGE_Active_Sprite_List *sprite_list;
  RGE_Tile *tile;
  RGE_Static_Object *inside_obj;
  RGE_New_Object_List *objects;
  __int16 screen_x_offset;
  __int16 screen_y_offset;
  __int16 shadow_x_offset;
  __int16 shadow_y_offset;
  float hp;
  float sp;
  unsigned __int8 curr_damage_percent;
  unsigned __int8 facet;
  unsigned __int8 selected;
  float world_x;
  float world_y;
  float world_z;
  float attribute_amount_held;
  unsigned __int8 object_state;
  unsigned __int8 sleep_flag;
  unsigned __int8 dopple_flag;
  unsigned __int8 goto_sleep_flag;
  __int16 attribute_type_held;
  unsigned __int8 type;
  unsigned __int8 worker_num;
  ObsRecord *CurrentObstructionData;
  ObsRecord *ObstructionDataList;
  RGE_Static_Object **player_object_node;
  int *mPathingGroup;
  int mPathingGroupSize;
  int mMaximumPathingGroupSize;
  int damaged_lately_timer;
  UnitAIModule *unitAIValue;
  int zoneMapIndex;
  unsigned __int8 inObstructionMapValue;
  unsigned __int8 lastInObstructionMapValue;
  unsigned __int8 underAttackValue;
  int mGroupID;
  unsigned __int8 mROOAlreadyCalled;
  LOS_ExploreInfo ei;
};
#pragma pack(pop)

/* 766 */
#pragma pack(push, 8)
struct TRIBE_Tree_ObjectVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Tree_Object *, unsigned int);
  int (__thiscall *gbg_unknown1)(TRIBE_Tree_Object *);
  int (__thiscall *gbg_get_civ_override)(TRIBE_Tree_Object *);
  unsigned __int8 (__thiscall *gbg_unknown3)(TRIBE_Tree_Object *);
  unsigned __int8 (__thiscall *gbg_unknown4)(TRIBE_Tree_Object *);
  unsigned __int8 (__thiscall *gbg_unknown5)(TRIBE_Tree_Object *);
  unsigned __int8 (__thiscall *gbg_unknown6)(TRIBE_Tree_Object *);
  unsigned __int8 (__thiscall *gbg_unknown7)(TRIBE_Tree_Object *);
  unsigned __int8 (__thiscall *gbg_unknown8)(TRIBE_Tree_Object *);
  unsigned __int8 (__thiscall *gbg_unknown9)(TRIBE_Tree_Object *);
  unsigned __int8 (__thiscall *gbg_unknown10)(TRIBE_Tree_Object *);
  unsigned __int8 (__thiscall *gbg_unknown11)(TRIBE_Tree_Object *);
  unsigned __int8 (__thiscall *gbg_isPadawan)(TRIBE_Tree_Object *);
  unsigned __int8 (__thiscall *gbg_isMaster)(TRIBE_Tree_Object *);
  unsigned __int8 (__thiscall *gbg_unknown14)(TRIBE_Tree_Object *);
  unsigned __int8 (__thiscall *gbg_isShielded)(TRIBE_Tree_Object *);
  void (__thiscall *gbg_unknown16)(TRIBE_Tree_Object *);
  void (__thiscall *gbg_unknown17)(TRIBE_Tree_Object *);
  unsigned __int8 (__thiscall *gbg_unknown18)(TRIBE_Tree_Object *, int);
  unsigned __int8 (__thiscall *gbg_isDetector)(TRIBE_Tree_Object *);
  unsigned __int8 (__thiscall *gbg_unknown20)(TRIBE_Tree_Object *, int);
  unsigned __int8 (__thiscall *gbg_isPowered)(TRIBE_Tree_Object *, int);
  void (__thiscall *gbg_unknown22)(TRIBE_Tree_Object *);
  unsigned __int8 (__thiscall *gbg_unknown23)(TRIBE_Tree_Object *);
  unsigned __int8 (__thiscall *gbg_isBiological)(TRIBE_Tree_Object *);
  unsigned __int8 (__thiscall *gbg_isDamaged)(TRIBE_Tree_Object *);
  unsigned __int8 (__thiscall *gbg_unknown26)(TRIBE_Tree_Object *);
  unsigned __int8 (__thiscall *gbg_canBeHealedByPlayer)(TRIBE_Tree_Object *, int);
  unsigned __int8 (__thiscall *gbg_canBeRepairedByPlayer)(TRIBE_Tree_Object *, int);
  void (__thiscall *recycle_in_to_game)(TRIBE_Tree_Object *, RGE_Master_Static_Object *, RGE_Player *, float, float, float);
  void (__thiscall *recycle_out_of_game)(TRIBE_Tree_Object *);
  void (__thiscall *draw)(TRIBE_Tree_Object *, TDrawArea *, __int16, __int16, RGE_Color_Table *);
  void (__thiscall *shadow_draw)(TRIBE_Tree_Object *, TDrawArea *, __int16, __int16, unsigned __int8);
  void (__thiscall *normal_draw)(TRIBE_Tree_Object *, TDrawArea *, __int16, __int16);
  void (__thiscall *draw_front_frame)(TRIBE_Tree_Object *, TDrawArea *, __int16, __int16);
  void (__thiscall *draw_back_frame)(TRIBE_Tree_Object *, TDrawArea *, __int16, __int16);
  void (__thiscall *draw_frame)(TRIBE_Tree_Object *, TDrawArea *, __int16, __int16);
  unsigned __int8 (__thiscall *update)(TRIBE_Tree_Object *);
  void (__thiscall *check_damage_sprites)(TRIBE_Tree_Object *);
  void (__thiscall *rehook)(TRIBE_Tree_Object *);
  void (__thiscall *save)(TRIBE_Tree_Object *, int);
  void (__thiscall *teleport_off_map)(TRIBE_Tree_Object *);
  float (__thiscall *teleport)(TRIBE_Tree_Object *, float, float, float);
  float (__thiscall *handle_teleport_z_correction)(TRIBE_Tree_Object *, float);
  void (__thiscall *new_sprite)(TRIBE_Tree_Object *, RGE_Sprite *);
  void (__thiscall *add_overlay_sprite)(TRIBE_Tree_Object *, RGE_Sprite *, unsigned __int8);
  void (__thiscall *remove_overlay_sprite)(TRIBE_Tree_Object *, RGE_Sprite *);
  void (__thiscall *change_ownership)(TRIBE_Tree_Object *, RGE_Player *);
  void (__thiscall *modify)(TRIBE_Tree_Object *, float, unsigned __int8);
  void (__thiscall *modify_delta)(TRIBE_Tree_Object *, float, unsigned __int8);
  void (__thiscall *modify_percent)(TRIBE_Tree_Object *, float, unsigned __int8);
  void (__thiscall *transform)(TRIBE_Tree_Object *, RGE_Master_Static_Object *);
  void (__thiscall *copy_obj)(TRIBE_Tree_Object *, RGE_Master_Static_Object *);
  void (__thiscall *set_object_state)(TRIBE_Tree_Object *, unsigned __int8);
  void (__thiscall *remove_visible_resource)(TRIBE_Tree_Object *);
  void (__thiscall *create_doppleganger_when_dying)(TRIBE_Tree_Object *);
  void (__thiscall *destroy_obj)(TRIBE_Tree_Object *);
  void (__thiscall *die_die_die)(TRIBE_Tree_Object *);
  void (__thiscall *damage)(TRIBE_Tree_Object *, int, RGE_Armor_Weapon_Info *, float, RGE_Player *, RGE_Static_Object *, int);
  float (__thiscall *calculateDamage)(TRIBE_Tree_Object *, int, RGE_Armor_Weapon_Info *, float, RGE_Player *, RGE_Static_Object *);
  void (__thiscall *rotate)(TRIBE_Tree_Object *, int);
  unsigned __int8 (__thiscall *can_attack)(TRIBE_Tree_Object *);
  void (__thiscall *set_attribute)(TRIBE_Tree_Object *, __int16, float);
  void (__thiscall *set_attribute_amount)(TRIBE_Tree_Object *, float, unsigned __int8, unsigned __int8);
  int (__thiscall *heal_2)(TRIBE_Tree_Object *, int, int);
  unsigned __int8 (__thiscall *heal_1)(TRIBE_Tree_Object *, float);
  int (__thiscall *canRepair)(TRIBE_Tree_Object *);
  void (__thiscall *notify_of_relation)(TRIBE_Tree_Object *, int, unsigned __int8);
  void (__thiscall *do_command)(TRIBE_Tree_Object *, RGE_Static_Object *, float, float, float);
  int (__thiscall *actionTypeIfOrdered)(TRIBE_Tree_Object *, RGE_Static_Object *, float, float, float, float *);
  unsigned __int8 (__thiscall *move_to)(TRIBE_Tree_Object *, RGE_Static_Object *, float, float, float);
  void (__thiscall *work)(TRIBE_Tree_Object *, RGE_Static_Object *, float, float, float);
  void (__thiscall *stop)(TRIBE_Tree_Object *);
  void (__thiscall *set_attack)(TRIBE_Tree_Object *, RGE_Static_Object *);
  void (__thiscall *play_command_sound)(TRIBE_Tree_Object *);
  void (__thiscall *play_move_sound)(TRIBE_Tree_Object *);
  void (__thiscall *new_angle)(TRIBE_Tree_Object *, float);
  RGE_Static_Object *(__thiscall *spawn_death_obj)(TRIBE_Tree_Object *);
  RGE_Master_Static_Object *(__thiscall *get_command_master)(TRIBE_Tree_Object *, RGE_Static_Object *, float, float, float);
  void (__thiscall *set_being_worked_on)(TRIBE_Tree_Object *, RGE_Action_Object *, __int16, unsigned __int8);
  void (__thiscall *release_being_worked_on)(TRIBE_Tree_Object *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *is_moving)(TRIBE_Tree_Object *);
  RGE_Static_Object *(__thiscall *get_target_obj)(TRIBE_Tree_Object *);
  unsigned __int8 (__thiscall *more_room)(TRIBE_Tree_Object *, RGE_Static_Object *);
  void (__thiscall *enter_obj)(TRIBE_Tree_Object *, RGE_Static_Object *, unsigned __int8);
  void (__thiscall *exit_obj)(TRIBE_Tree_Object *);
  void (__thiscall *add_obj)(TRIBE_Tree_Object *, RGE_Static_Object *);
  void (__thiscall *remove_obj)(TRIBE_Tree_Object *, RGE_Static_Object *);
  int (__thiscall *explore_terrain)(TRIBE_Tree_Object *, RGE_Player *, unsigned __int8, int, int);
  void (__thiscall *unexplore_terrain)(TRIBE_Tree_Object *, RGE_Player *, unsigned __int8, int, int);
  LOSTBL *(__thiscall *get_los_table)(TRIBE_Tree_Object *);
  unsigned __int8 (__thiscall *get_visibility)(TRIBE_Tree_Object *, RGE_Player *);
  int (__thiscall *inAttackRange)(TRIBE_Tree_Object *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *underAttack)(TRIBE_Tree_Object *);
  void (__thiscall *setUnderAttack)(TRIBE_Tree_Object *, unsigned __int8);
  float (__thiscall *calc_attack_modifier)(TRIBE_Tree_Object *, RGE_Static_Object *);
  float (__thiscall *getSpeed)(TRIBE_Tree_Object *);
  float (__thiscall *getAngle)(TRIBE_Tree_Object *);
  float (__thiscall *maximumSpeed)(TRIBE_Tree_Object *);
  float (__thiscall *rateOfFire)(TRIBE_Tree_Object *);
  float (__thiscall *damageCapability_2)(TRIBE_Tree_Object *, RGE_Static_Object *);
  float (__thiscall *damageCapability_1)(TRIBE_Tree_Object *);
  float (__thiscall *weaponRange)(TRIBE_Tree_Object *);
  float (__thiscall *minimumWeaponRange)(TRIBE_Tree_Object *);
  int (__thiscall *passableTile_2)(TRIBE_Tree_Object *, float, float, int *, int);
  int (__thiscall *passableTile_1)(TRIBE_Tree_Object *, float, float);
  int (__thiscall *currentTargetID)(TRIBE_Tree_Object *);
  float (__thiscall *currentTargetX)(TRIBE_Tree_Object *);
  float (__thiscall *currentTargetY)(TRIBE_Tree_Object *);
  float (__thiscall *currentTargetZ)(TRIBE_Tree_Object *);
  void (__thiscall *setWaitingToMove)(TRIBE_Tree_Object *, unsigned __int8);
  unsigned __int8 (__thiscall *waitingToMove)(TRIBE_Tree_Object *);
  unsigned __int8 (__thiscall *actionState)(TRIBE_Tree_Object *);
  unsigned __int8 (__thiscall *keepGatheringWhenObjectIsOut)(TRIBE_Tree_Object *, int);
  unsigned __int8 (__thiscall *produceWhenKilledBy)(TRIBE_Tree_Object *, int);
  unsigned __int8 (__thiscall *useSameZoneDropsite)(TRIBE_Tree_Object *);
  float (__thiscall *searchRadius)(TRIBE_Tree_Object *);
  unsigned __int8 (__thiscall *is_idle)(TRIBE_Tree_Object *);
  void (*logDebug)(TRIBE_Tree_Object *, char *, ...);
  void (*debug)(TRIBE_Tree_Object *, char *, ...);
  void (__thiscall *notify)(TRIBE_Tree_Object *, int, int, int, int, int, int);
  int (__thiscall *attack_2)(TRIBE_Tree_Object *, float, float, float, int);
  int (__thiscall *attack_1)(TRIBE_Tree_Object *, int, int);
  int (__thiscall *moveTo_3)(TRIBE_Tree_Object *, float, float, float, float, int, int);
  int (__thiscall *moveTo_2)(TRIBE_Tree_Object *, int, float, int);
  int (__thiscall *moveTo_1)(TRIBE_Tree_Object *, int, int);
  int (__thiscall *moveAwayFrom)(TRIBE_Tree_Object *, int, int);
  int (__thiscall *hunt)(TRIBE_Tree_Object *, int, int);
  int (__thiscall *gather)(TRIBE_Tree_Object *, int, int);
  int (__thiscall *convert)(TRIBE_Tree_Object *, int, int);
  int (__thiscall *repair)(TRIBE_Tree_Object *, int, int);
  int (__thiscall *build)(TRIBE_Tree_Object *, int, int);
  int (__thiscall *trade)(TRIBE_Tree_Object *, int, int);
  int (__thiscall *explore)(TRIBE_Tree_Object *, int, int, int);
  int (__thiscall *enter)(TRIBE_Tree_Object *, int, int);
  int (__thiscall *unload)(TRIBE_Tree_Object *, int, float, float, float);
  int (__thiscall *transport)(TRIBE_Tree_Object *, float, float, float, int);
  int (__thiscall *stopAction)(TRIBE_Tree_Object *);
  int (__thiscall *pause)(TRIBE_Tree_Object *);
  int (__thiscall *canPath_2)(TRIBE_Tree_Object *, int, float, float *, int, int, bool);
  int (__thiscall *canPath_1)(TRIBE_Tree_Object *, XYZPoint, float, int, float *, int, int, bool);
  int (__thiscall *canQuickPath)(TRIBE_Tree_Object *, int, float, float *);
  int (__thiscall *canPathWithObstructions)(TRIBE_Tree_Object *, int, float, float *, int, int, ManagedArray_int_ *);
  int (__thiscall *canPathWithAdditionalPassability)(TRIBE_Tree_Object *, XYZPoint, float, int, float *, int, int, int, int, int, BPath *);
  int (__thiscall *findFirstTerrainAlongExceptionPath)(TRIBE_Tree_Object *, int, float *, float *, BPath *);
  int (__thiscall *canLinePath_2)(TRIBE_Tree_Object *, int, int, int, int, float, int);
  int (__thiscall *canLinePath_1)(TRIBE_Tree_Object *, const XYPoint *, const XYPoint *, float, XYPoint *, int);
  int (__thiscall *firstTileAlongLine)(TRIBE_Tree_Object *, const XYPoint *, const XYPoint *, XYPoint *, int, int, int);
  unsigned __int8 (__thiscall *have_action)(TRIBE_Tree_Object *);
  int (__thiscall *gameActionType)(TRIBE_Tree_Object *);
  BVector *(__thiscall *userDefinedWaypoint)(TRIBE_Tree_Object *, int);
  int (__thiscall *addUserDefinedWaypoint)(TRIBE_Tree_Object *, float, float, float);
  void (__thiscall *zeroUserDefinedWaypoints)(TRIBE_Tree_Object *);
  void (__thiscall *removeAllUserDefinedWaypoints)(TRIBE_Tree_Object *);
  int (__thiscall *numberUserDefinedWaypoints)(TRIBE_Tree_Object *);
  BPath *(__thiscall *getPatrolInformation)(TRIBE_Tree_Object *, int *);
  float (__thiscall *distanceToHighestLevelPath_2)(TRIBE_Tree_Object *, BVector);
  float (__thiscall *distanceToHighestLevelPath_1)(TRIBE_Tree_Object *);
  BPath *(__thiscall *findAvoidancePath)(TRIBE_Tree_Object *, XYZPoint *, float, int);
  int (__thiscall *get_action_checksum)(TRIBE_Tree_Object *);
  int (__thiscall *get_waypoint_checksum)(TRIBE_Tree_Object *);
  void (__thiscall *setPatrolMode)(TRIBE_Tree_Object *, unsigned __int8);
  int (__thiscall *garrisoned_count)(TRIBE_Tree_Object *);
  int (__thiscall *lock_down)(TRIBE_Tree_Object *);
  int (__thiscall *unlock_down)(TRIBE_Tree_Object *);
  int (__thiscall *get_locked_down_count)(TRIBE_Tree_Object *);
  float (__thiscall *getTradeAmount)(TRIBE_Tree_Object *, float, float, float, float);
  int (__thiscall *setup_2)(TRIBE_Tree_Object *, int, RGE_Game_World *);
  int (__thiscall *setup_1)(TRIBE_Tree_Object *, RGE_Master_Static_Object *, RGE_Player *, float, float, float);
  RGE_New_Object_List *(__thiscall *create_object_list)(TRIBE_Tree_Object *);
  RGE_Active_Sprite_List *(__thiscall *create_sprite_list)(TRIBE_Tree_Object *);
  BVector *(__thiscall *position)(TRIBE_Tree_Object *, BVector *);
  BPathData *(__thiscall *getPathData)(TRIBE_Tree_Object *);
  int (__thiscall *actionType)(TRIBE_Tree_Object *);
  int (__thiscall *hasActionOfType)(TRIBE_Tree_Object *, int);
  int (__thiscall *gbg_hasActionOfType2)(TRIBE_Tree_Object *, int);
  int (__thiscall *addMove)(TRIBE_Tree_Object *, int, float, int, int, int);
  int (__thiscall *addCurrentPath)(TRIBE_Tree_Object *, BPath *, int, float, int);
  int (__thiscall *addFuturePath)(TRIBE_Tree_Object *, BPath *, int, float, int);
  void (__thiscall *stopAllMovement)(TRIBE_Tree_Object *);
  void (__thiscall *setOrientation)(TRIBE_Tree_Object *, BVector *, BVector *);
  BVector *(__thiscall *velocity)(TRIBE_Tree_Object *, BVector *);
  void (__thiscall *setVelocity)(TRIBE_Tree_Object *, BVector *);
  BVector *(__thiscall *acceleration)(TRIBE_Tree_Object *, BVector *);
  void (__thiscall *setAcceleration)(TRIBE_Tree_Object *, BVector *);
  float (__thiscall *forwardVelocity)(TRIBE_Tree_Object *);
  void (__thiscall *setForwardVelocity)(TRIBE_Tree_Object *, float);
  float (__thiscall *forwardAcceleration)(TRIBE_Tree_Object *);
  void (__thiscall *setForwardAcceleration)(TRIBE_Tree_Object *, float);
  void (__thiscall *moveForward)(TRIBE_Tree_Object *, float);
  void (__thiscall *setPosition)(TRIBE_Tree_Object *, BVector *);
  void (__thiscall *yaw)(TRIBE_Tree_Object *, float);
  int (__thiscall *isMoving)(TRIBE_Tree_Object *);
  void (__thiscall *stopMoving)(TRIBE_Tree_Object *);
  float (__thiscall *calculateFutureVelocity)(TRIBE_Tree_Object *, float, float, float, BVector *);
  unsigned int (__thiscall *lastMoveTime)(TRIBE_Tree_Object *);
  void (__thiscall *pauseMovement)(TRIBE_Tree_Object *, float);
  int (__thiscall *movementPriority)(TRIBE_Tree_Object *);
  int (__thiscall *intelligentMovementUpdate)(TRIBE_Tree_Object *);
  float (__thiscall *calculateMaximumSpeed)(TRIBE_Tree_Object *, int);
  int (__thiscall *calculateForward)(TRIBE_Tree_Object *, BVector *, BVector *, BVector *);
  float (__thiscall *calculateYawAngle)(TRIBE_Tree_Object *, BVector *, BVector *, float, int *);
  int (__thiscall *calculateReachedPoint)(TRIBE_Tree_Object *, BVector *, BVector *, BVector *);
  float (__thiscall *calculateTurnRadius)(TRIBE_Tree_Object *);
  int (__thiscall *checkAcceleration)(TRIBE_Tree_Object *, BVector *, int, int);
  BVector *(__thiscall *straightProjectedPosition)(TRIBE_Tree_Object *, BVector *, BVector *, float);
  int (__thiscall *onPatrol)(TRIBE_Tree_Object *);
  BVector *(__thiscall *orientationForward)(TRIBE_Tree_Object *, BVector *);
  int (__thiscall *setRunSprite)(TRIBE_Tree_Object *);
  int (__thiscall *setMoveSprite)(TRIBE_Tree_Object *);
  int (__thiscall *setFidgetSprite)(TRIBE_Tree_Object *);
  int (__thiscall *getGateLocked)(TRIBE_Tree_Object *);
  void (__thiscall *setGateLocked)(TRIBE_Tree_Object *, int);
  int (__thiscall *isGateOpenable)(TRIBE_Tree_Object *, int);
  int (__thiscall *getLinkedChild)(TRIBE_Tree_Object *, int);
  int (__thiscall *get_next_selected_group)(TRIBE_Tree_Object *, int);
  __int16 (__thiscall *get_Selected_Groups)(TRIBE_Tree_Object *);
  void (__thiscall *set_Selected_Groups)(TRIBE_Tree_Object *, __int16);
  int (__thiscall *get_num_Selected_groups)(TRIBE_Tree_Object *);
};
#pragma pack(pop)

/* 219 */
#pragma pack(push, 8)
struct TRIBE_Master_Tree_Object
{
  TRIBE_Master_Tree_ObjectVtbl *vfptr;
  unsigned __int8 master_type;
  char *name;
  char *gbg_name2;
  __int16 unit_line;
  unsigned __int8 min_tech_level;
  __int16 string_id;
  __int16 string_id2;
  __int16 id;
  __int16 copy_id;
  __int16 base_id;
  __int16 object_group;
  RGE_Sprite *sprite;
  RGE_Sprite *sprite2;
  RGE_Sprite *death_sprite;
  RGE_Sprite *undead_sprite;
  unsigned __int8 undead_flag;
  __int16 hp;
  float los;
  unsigned __int8 obj_max;
  float radius_x;
  float radius_y;
  float radius_z;
  RGE_Sound *selected_sound;
  RGE_Sound *created_sound;
  RGE_Sound *death_sound;
  RGE_Sound *damage_sound;
  __int16 death_spawn_obj_id;
  unsigned __int8 sort_number;
  unsigned __int8 can_be_built_on;
  __int16 button_pict;
  unsigned __int8 hide_in_scenario_editor;
  __int16 portrait_pict;
  unsigned __int8 available;
  unsigned __int8 disabled;
  __int16 tile_req1;
  __int16 tile_req2;
  __int16 center_tile_req1;
  __int16 center_tile_req2;
  float construction_radius_x;
  float construction_radius_y;
  unsigned __int8 elevation_flag;
  unsigned __int8 fog_flag;
  __int16 terrain;
  unsigned __int8 movement_type;
  __int16 attribute_type_held[3];
  float attribute_amount_held[3];
  __int16 attribute_max_amount;
  float attribute_rot;
  float multiple_attribute_mod;
  unsigned __int8 attribute_flag[3];
  unsigned __int8 area_effect_object_level;
  unsigned __int8 combat_level;
  unsigned __int8 select_level;
  unsigned __int8 map_draw_level;
  unsigned __int8 unit_level;
  unsigned __int8 map_color;
  unsigned __int8 attack_reaction;
  unsigned __int8 convert_terrain_flag;
  unsigned __int8 damage_sprite_num;
  RGE_Damage_Sprite_Info *damage_sprites;
  unsigned __int8 occlusion_flag;
  unsigned __int8 obstruction_type;
  unsigned __int8 obstruction_class;
  unsigned int object_flags;
  int help_string_id;
  int help_page_id;
  int hotkey_id;
  unsigned __int8 recyclable;
  unsigned __int8 track_as_resource;
  unsigned __int8 create_doppleganger_on_death;
  unsigned __int8 resource_group;
  unsigned __int8 draw_flag;
  unsigned __int8 draw_color;
  float outline_radius_x;
  float outline_radius_y;
  float outline_radius_z;
};
#pragma pack(pop)

/* 775 */
#pragma pack(push, 8)
struct TRIBE_Master_Tree_ObjectVtbl
{
  unsigned __int8 (__thiscall *gbg_needs_power)(TRIBE_Master_Tree_Object *);
  RGE_Sprite *(__thiscall *gbg_get_sprite_civ_override)(TRIBE_Master_Tree_Object *, RGE_Static_Object *);
  RGE_Sprite *(__thiscall *gbg_get_sprite2_civ_override)(TRIBE_Master_Tree_Object *, RGE_Static_Object *);
  RGE_Sprite *(__thiscall *gbg_get_death_sprite_civ_override)(TRIBE_Master_Tree_Object *, RGE_Static_Object *);
  RGE_Sprite *(__thiscall *gbg_get_undead_sprite_civ_override)(TRIBE_Master_Tree_Object *, RGE_Static_Object *);
  void *(__thiscall *__vecDelDtor)(TRIBE_Master_Tree_Object *, unsigned int);
  void (__thiscall *copy_obj)(TRIBE_Master_Tree_Object *, TRIBE_Master_Tree_Object *);
  void (__thiscall *modify)(TRIBE_Master_Tree_Object *, float, unsigned __int8);
  void (__thiscall *modify_delta)(TRIBE_Master_Tree_Object *, float, unsigned __int8);
  void (__thiscall *modify_percent)(TRIBE_Master_Tree_Object *, float, unsigned __int8);
  void (__thiscall *small_save)(TRIBE_Master_Tree_Object *, int);
  void (__thiscall *save)(TRIBE_Master_Tree_Object *, int);
  RGE_Static_Object *(__thiscall *make_new_obj)(TRIBE_Master_Tree_Object *, RGE_Player *, float, float, float);
  TRIBE_Master_Tree_Object *(__thiscall *make_new_master)(TRIBE_Master_Tree_Object *);
  unsigned __int8 (__thiscall *check_placement)(TRIBE_Master_Tree_Object *, RGE_Player *, float, float, int *, unsigned __int8, unsigned __int8, unsigned __int8, unsigned __int8, unsigned __int8, unsigned __int8, RGE_Static_Object *, unsigned __int8);
  unsigned __int8 (__thiscall *alignment)(TRIBE_Master_Tree_Object *, float *, float *, RGE_Game_World *, unsigned __int8);
  int (__thiscall *calc_base_damage_ability)(TRIBE_Master_Tree_Object *, RGE_Master_Combat_Object *);
  void (__thiscall *play_command_sound)(TRIBE_Master_Tree_Object *, RGE_Player *);
  void (__thiscall *play_move_sound)(TRIBE_Master_Tree_Object *, RGE_Player *);
  void (__thiscall *draw)(TRIBE_Master_Tree_Object *, TDrawArea *, __int16, __int16, RGE_Color_Table *, int, int, int, unsigned __int8);
  float (__thiscall *maximumSpeed)(TRIBE_Master_Tree_Object *, int);
  float (__thiscall *acceleration)(TRIBE_Master_Tree_Object *, int);
  float (__thiscall *deceleration)(TRIBE_Master_Tree_Object *, int);
  float (__thiscall *getTurnRadius)(TRIBE_Master_Tree_Object *);
  float (__thiscall *getTurnRadiusSpeed)(TRIBE_Master_Tree_Object *);
  int (__thiscall *setTurnRadiusOffTurnSpeed)(TRIBE_Master_Tree_Object *);
  int (__thiscall *setTurnRadius)(TRIBE_Master_Tree_Object *, float, float);
  float (__thiscall *getMaximumYawPerSecondMoving)(TRIBE_Master_Tree_Object *);
  float (__thiscall *getMaximumYawPerSecondStationary)(TRIBE_Master_Tree_Object *);
  void (__thiscall *setStationaryYawRevolutionTime)(TRIBE_Master_Tree_Object *, float);
};
#pragma pack(pop)

/* 229 */
#pragma pack(push, 8)
struct MINICOMMPLAYEROPTIONS
{
  unsigned __int8 RestoringGame;
  unsigned __int8 ProgramState;
  DPID dcoID[8];
  unsigned __int8 PlayerReady;
  unsigned __int8 User1[8];
  unsigned __int8 User2[8];
  unsigned __int8 User3_bitfield1;
  unsigned __int8 User3_bitfield2;
  unsigned __int8 User4[8];
  unsigned __int8 User5[8];
  unsigned __int8 User7_bitfield1;
  unsigned __int8 User7_bitfield2;
  unsigned __int8 User7_bitfield3;
  unsigned __int8 User7_bitfield4;
  unsigned __int8 Humanity_bitfield1;
  unsigned __int8 Humanity_bitfield2;
  unsigned __int8 Humanity_bitfield3;
  unsigned __int8 Humanity_bitfield4;
  unsigned int RandomSeed;
  GUID guid;
  unsigned int headerChecksum;
  unsigned __int8 PlayerNumber_bitfield;
  unsigned __int8 HostPlayerNumber;
  unsigned __int8 GameHasStarted;
  unsigned __int16 DataSizeToFollow;
  unsigned __int8 SavedPos_bitfield1;
  unsigned __int8 SavedPos_bitfield2;
  unsigned __int8 SavedPos_bitfield3;
  unsigned __int8 SavedPos_bitfield4;
};
#pragma pack(pop)

/* 866 */
typedef int TribeSendQuickMessageDialog__Mode;

/* 231 */
#pragma pack(push, 8)
struct TribeSendQuickMessageDialog
{
  TribeSendQuickMessageDialogVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  HWND dlg_wnd;
  TPanel *save_parent_child;
  TPanel *save_parent;
  int text_font_id;
  int input_font_id;
  int button_font_id;
  int button_sound_id;
  TEditPanel *chatInput;
  TTextPanel *chatTitle;
  TribeSendQuickMessageDialog__Mode modeValue;
};
#pragma pack(pop)

/* 865 */
#pragma pack(push, 8)
struct TribeSendQuickMessageDialogVtbl
{
  void *(__thiscall *__vecDelDtor)(TribeSendQuickMessageDialog *, unsigned int);
  int (__thiscall *setup)(TribeSendQuickMessageDialog *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TribeSendQuickMessageDialog *, RECT);
  void (__thiscall *set_rect_1)(TribeSendQuickMessageDialog *, int, int, int, int);
  void (__thiscall *set_color)(TribeSendQuickMessageDialog *, unsigned __int8);
  void (__thiscall *set_active)(TribeSendQuickMessageDialog *, int);
  void (__thiscall *unknown1)(TribeSendQuickMessageDialog *);
  void (__thiscall *unknown2)(TribeSendQuickMessageDialog *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TribeSendQuickMessageDialog *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TribeSendQuickMessageDialog *, int);
  void (__thiscall *set_fixed_position)(TribeSendQuickMessageDialog *, int, int, int, int);
  void (__thiscall *set_redraw)(TribeSendQuickMessageDialog *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TribeSendQuickMessageDialog *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TribeSendQuickMessageDialog *, int);
  void (__thiscall *draw_finish)(TribeSendQuickMessageDialog *);
  void (__thiscall *draw)(TribeSendQuickMessageDialog *);
  void (__thiscall *draw_rect)(TribeSendQuickMessageDialog *, RECT *);
  void (__thiscall *draw_offset)(TribeSendQuickMessageDialog *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TribeSendQuickMessageDialog *, RECT *);
  void (__thiscall *draw_offset2)(TribeSendQuickMessageDialog *, int, int, RECT *);
  void (__thiscall *paint)(TribeSendQuickMessageDialog *);
  int (__thiscall *wnd_proc)(TribeSendQuickMessageDialog *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TribeSendQuickMessageDialog *);
  int (__thiscall *handle_size)(TribeSendQuickMessageDialog *, int, int);
  int (__thiscall *handle_paint)(TribeSendQuickMessageDialog *);
  int (__thiscall *handle_key_down)(TribeSendQuickMessageDialog *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TribeSendQuickMessageDialog *, int, __int16);
  int (__thiscall *handle_command)(TribeSendQuickMessageDialog *, unsigned int, int);
  int (__thiscall *handle_user_command)(TribeSendQuickMessageDialog *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TribeSendQuickMessageDialog *, unsigned int, int);
  int (__thiscall *handle_scroll)(TribeSendQuickMessageDialog *, int, int);
  int (__thiscall *handle_mouse_down)(TribeSendQuickMessageDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TribeSendQuickMessageDialog *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TribeSendQuickMessageDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TribeSendQuickMessageDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TribeSendQuickMessageDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TribeSendQuickMessageDialog *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TribeSendQuickMessageDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TribeSendQuickMessageDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TribeSendQuickMessageDialog *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TribeSendQuickMessageDialog *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TribeSendQuickMessageDialog *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TribeSendQuickMessageDialog *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TribeSendQuickMessageDialog *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TribeSendQuickMessageDialog *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TribeSendQuickMessageDialog *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TribeSendQuickMessageDialog *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TribeSendQuickMessageDialog *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TribeSendQuickMessageDialog *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TribeSendQuickMessageDialog *, int, int, int, int);
  int (__thiscall *key_down_action)(TribeSendQuickMessageDialog *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TribeSendQuickMessageDialog *, int, __int16);
  int (__thiscall *action)(TribeSendQuickMessageDialog *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TribeSendQuickMessageDialog *, RECT *);
  int (__thiscall *is_inside)(TribeSendQuickMessageDialog *, int, int);
  void (__thiscall *set_focus)(TribeSendQuickMessageDialog *, int);
  void (__thiscall *set_tab_order_2)(TribeSendQuickMessageDialog *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TribeSendQuickMessageDialog *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TribeSendQuickMessageDialog *);
  unsigned __int8 (__thiscall *get_help_info)(TribeSendQuickMessageDialog *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TribeSendQuickMessageDialog *);
  int (__thiscall *restart_sound_system)(TribeSendQuickMessageDialog *);
  void (__thiscall *take_snapshot)(TribeSendQuickMessageDialog *);
  void (__thiscall *handle_reactivate)(TribeSendQuickMessageDialog *);
  int (__thiscall *pointing_at)(TribeSendQuickMessageDialog *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TribeSendQuickMessageDialog *);
  int (__thiscall *get_ideal_width)(TribeSendQuickMessageDialog *);
  void (__thiscall *draw_background)(TribeSendQuickMessageDialog *, int);
  void (__thiscall *set_ideal_size)(TribeSendQuickMessageDialog *, int, int);
  int (__thiscall *create_button_2)(TribeSendQuickMessageDialog *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TribeSendQuickMessageDialog *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TribeSendQuickMessageDialog *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TribeSendQuickMessageDialog *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TribeSendQuickMessageDialog *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TribeSendQuickMessageDialog *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TribeSendQuickMessageDialog *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TribeSendQuickMessageDialog *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TribeSendQuickMessageDialog *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TribeSendQuickMessageDialog *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TribeSendQuickMessageDialog *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TribeSendQuickMessageDialog *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TribeSendQuickMessageDialog *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TribeSendQuickMessageDialog *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TribeSendQuickMessageDialog *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TribeSendQuickMessageDialog *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TribeSendQuickMessageDialog *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TribeSendQuickMessageDialog *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TribeSendQuickMessageDialog *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TribeSendQuickMessageDialog *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TribeSendQuickMessageDialog *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TribeSendQuickMessageDialog *, TPanel *, int, int, int, int);
  int (__thiscall *setup_3)(TribeSendQuickMessageDialog *, TDrawArea *, TPanel *, int, int, unsigned __int8, int);
  int (__thiscall *setup_2)(TribeSendQuickMessageDialog *, TDrawArea *, TPanel *, int, int, char *, int, int);
};
#pragma pack(pop)

/* 232 */
#pragma pack(push, 8)
struct TribeSendMessageDialog
{
  TribeSendMessageDialogVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  HWND dlg_wnd;
  TPanel *save_parent_child;
  TPanel *save_parent;
  int text_font_id;
  int input_font_id;
  int button_font_id;
  int button_sound_id;
  TTextPanel *title;
  TTextPanel *playerName[8];
  TTextPanel *playerCivilization[8];
  TButtonPanel *checkButton[8];
  TButtonPanel *muteButton[8];
  TButtonPanel *radioButton[4];
  TScrollBarPanel *chatScrollbar;
  TButtonPanel *expand_button;
  int expand_state;
  TShape *radioButtonShapes;
  TEditPanel *chatInput;
  TTextPanel *chatTitle;
  TTextPanel *chatBox;
  TButtonPanel *okButton;
  TButtonPanel *closeButton;
  TButtonPanel *help_button;
  TTextPanel *tauntTitle;
  TListPanel *taunt_list;
  TScrollBarPanel *taunt_list_bar;
  TButtonPanel *tauntButton[2];
  TShape *backgroundPics;
  TShape *buttonPics;
  int commPlayers[8];
  int chat_text_y1;
  int chat_text_y2;
  int chat_text_height;
};
#pragma pack(pop)

/* 864 */
#pragma pack(push, 8)
struct TribeSendMessageDialogVtbl
{
  void *(__thiscall *__vecDelDtor)(TribeSendMessageDialog *, unsigned int);
  int (__thiscall *setup)(TribeSendMessageDialog *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TribeSendMessageDialog *, RECT);
  void (__thiscall *set_rect_1)(TribeSendMessageDialog *, int, int, int, int);
  void (__thiscall *set_color)(TribeSendMessageDialog *, unsigned __int8);
  void (__thiscall *set_active)(TribeSendMessageDialog *, int);
  void (__thiscall *unknown1)(TribeSendMessageDialog *);
  void (__thiscall *unknown2)(TribeSendMessageDialog *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TribeSendMessageDialog *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TribeSendMessageDialog *, int);
  void (__thiscall *set_fixed_position)(TribeSendMessageDialog *, int, int, int, int);
  void (__thiscall *set_redraw)(TribeSendMessageDialog *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TribeSendMessageDialog *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TribeSendMessageDialog *, int);
  void (__thiscall *draw_finish)(TribeSendMessageDialog *);
  void (__thiscall *draw)(TribeSendMessageDialog *);
  void (__thiscall *draw_rect)(TribeSendMessageDialog *, RECT *);
  void (__thiscall *draw_offset)(TribeSendMessageDialog *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TribeSendMessageDialog *, RECT *);
  void (__thiscall *draw_offset2)(TribeSendMessageDialog *, int, int, RECT *);
  void (__thiscall *paint)(TribeSendMessageDialog *);
  int (__thiscall *wnd_proc)(TribeSendMessageDialog *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TribeSendMessageDialog *);
  int (__thiscall *handle_size)(TribeSendMessageDialog *, int, int);
  int (__thiscall *handle_paint)(TribeSendMessageDialog *);
  int (__thiscall *handle_key_down)(TribeSendMessageDialog *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TribeSendMessageDialog *, int, __int16);
  int (__thiscall *handle_command)(TribeSendMessageDialog *, unsigned int, int);
  int (__thiscall *handle_user_command)(TribeSendMessageDialog *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TribeSendMessageDialog *, unsigned int, int);
  int (__thiscall *handle_scroll)(TribeSendMessageDialog *, int, int);
  int (__thiscall *handle_mouse_down)(TribeSendMessageDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TribeSendMessageDialog *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TribeSendMessageDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TribeSendMessageDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TribeSendMessageDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TribeSendMessageDialog *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TribeSendMessageDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TribeSendMessageDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TribeSendMessageDialog *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TribeSendMessageDialog *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TribeSendMessageDialog *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TribeSendMessageDialog *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TribeSendMessageDialog *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TribeSendMessageDialog *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TribeSendMessageDialog *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TribeSendMessageDialog *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TribeSendMessageDialog *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TribeSendMessageDialog *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TribeSendMessageDialog *, int, int, int, int);
  int (__thiscall *key_down_action)(TribeSendMessageDialog *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TribeSendMessageDialog *, int, __int16);
  int (__thiscall *action)(TribeSendMessageDialog *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TribeSendMessageDialog *, RECT *);
  int (__thiscall *is_inside)(TribeSendMessageDialog *, int, int);
  void (__thiscall *set_focus)(TribeSendMessageDialog *, int);
  void (__thiscall *set_tab_order_2)(TribeSendMessageDialog *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TribeSendMessageDialog *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TribeSendMessageDialog *);
  unsigned __int8 (__thiscall *get_help_info)(TribeSendMessageDialog *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TribeSendMessageDialog *);
  int (__thiscall *restart_sound_system)(TribeSendMessageDialog *);
  void (__thiscall *take_snapshot)(TribeSendMessageDialog *);
  void (__thiscall *handle_reactivate)(TribeSendMessageDialog *);
  int (__thiscall *pointing_at)(TribeSendMessageDialog *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TribeSendMessageDialog *);
  int (__thiscall *get_ideal_width)(TribeSendMessageDialog *);
  void (__thiscall *draw_background)(TribeSendMessageDialog *, int);
  void (__thiscall *set_ideal_size)(TribeSendMessageDialog *, int, int);
  int (__thiscall *create_button_2)(TribeSendMessageDialog *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TribeSendMessageDialog *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TribeSendMessageDialog *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TribeSendMessageDialog *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TribeSendMessageDialog *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TribeSendMessageDialog *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TribeSendMessageDialog *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TribeSendMessageDialog *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TribeSendMessageDialog *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TribeSendMessageDialog *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TribeSendMessageDialog *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TribeSendMessageDialog *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TribeSendMessageDialog *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TribeSendMessageDialog *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TribeSendMessageDialog *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TribeSendMessageDialog *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TribeSendMessageDialog *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TribeSendMessageDialog *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TribeSendMessageDialog *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TribeSendMessageDialog *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TribeSendMessageDialog *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TribeSendMessageDialog *, TPanel *, int, int, int, int);
  int (__thiscall *setup_3)(TribeSendMessageDialog *, TDrawArea *, TPanel *, int, int, unsigned __int8, int);
  int (__thiscall *setup_2)(TribeSendMessageDialog *, TDrawArea *, TPanel *, int, int, char *, int, int);
};
#pragma pack(pop)

/* 234 */
#pragma pack(push, 8)
struct TRIBE_Screen_Main_Menu
{
  TRIBE_Screen_Main_MenuVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  int TRIBE_Screen_Main_Menu_reserved1;
  int TRIBE_Screen_Main_Menu_reserved2;
  TPanel *TRIBE_Screen_Main_Menu_reserved_panel;
  TTextPanel *game_title_text;
  TTextPanel *alpha_beta_msg;
  TTextPanel *exe_date_time;
  TTextPanel *legal_notice1;
  TTextPanel *legal_notice2;
  TTextPanel *legal_notice3;
  TTextPanel *legal_notice4;
  TRIBE_Panel_Button *button[9];
  TTextPanel *buttonTitle[9];
  TButtonPanel *config_button[20];
  TButtonPanel *close_button;
  TTextPanel *about_background;
  TTextPanel *about_title_text;
  TTextPanel *about_version_text;
  TTextPanel *about_ms_copy_text1;
  TTextPanel *about_ms_copy_text2;
  TTextPanel *about_ens_copy_text;
  TTextPanel *about_genie_copy_text;
  TTextPanel *about_pid_label_text;
  TTextPanel *about_pid_text;
  TTextPanel *about_warning_text;
  TPicturePanel *about_circle_p_pic;
  TTextPanel *zone_info_text;
  TTextPanel *player_name_title_text;
  TTextPanel *game_name_title_text;
  TTextPanel *game_service_title_text;
  TTextPanel *secondary_title;
  TTextPanel *secondary_listTitle;
  TListPanel *secondary_list;
  TScrollBarPanel *secondary_scrollbar;
  TTextPanel *button_title_text;
  TTextPanel *currPlayerName;
  TTextPanel *infoText;
  TTextPanel *selectedTitleText;
  TVerticalSliderPanel *soundVolumeSlider;
  TVerticalSliderPanel *musicVolumeSlider;
  TVerticalSliderPanel *scrollSpeedSlider;
  TTextPanel *soundSliderTitleText;
  TTextPanel *soundSliderLoText;
  TTextPanel *soundSliderHiText;
  TTextPanel *musicSliderTitleText;
  TTextPanel *musicSliderLoText;
  TTextPanel *musicSliderHiText;
  TTextPanel *scrollSliderTitleText;
  TTextPanel *scrollSliderLoText;
  TTextPanel *scrollSliderHiText;
  TTextPanel *mouseTitle;
  TButtonPanel *mouseButton;
  TTextPanel *friendorfoeTitle;
  TButtonPanel *friendorfoeButton;
  TTextPanel *sizeTitle[4];
  TTextPanel *detailTitle[4];
  TButtonPanel *sizeButton[3];
  TButtonPanel *detailButton[3];
  TTextPanel *advancedTitle;
  TButtonPanel *advancedButton;
  TTextPanel *tauntTitle;
  TButtonPanel *tauntButton;
  TButtonPanel *hotkeyButton;
  int TRIBE_Screen_Main_Menu_reserved3;
  TListPanel *playerNameList;
  TScrollBarPanel *playerNameScrollBar;
  TTextPanel *playerListTitle;
  TButtonPanel *newPlayer;
  TButtonPanel *changePlayer;
  TButtonPanel *removePlayer;
  TTextPanel *playerNameBackGround;
  TTextPanel *infoBackGround;
  char player_name[16];
  TEditPanel *game_title;
  char game_title_str[41];
  TListPanel *game_service;
  TScrollBarPanel *game_service_scrollbar;
  TTextPanel *ip_address;
  TCommunications_Sessions *comm_sess;
  TCommunications_Services *comm_serv;
  int currentSessionID;
  int startedSession;
  int listFilled;
  unsigned int lastRefreshTime;
  int waitingToStart;
  unsigned int joinTime;
  int service_tcpip_id;
  int refreshing;
  int disable_show_games_button;
  TShape *main_street_pics;
  unsigned __int8 dialog_state;
  unsigned __int8 refreshing_multiplayer_game_list_state;
  int game_count;
  char lastSearchAddr[255];
};
#pragma pack(pop)

/* 798 */
#pragma pack(push, 8)
struct TRIBE_Screen_Main_MenuVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Screen_Main_Menu *, unsigned int);
  int (__thiscall *setup)(TRIBE_Screen_Main_Menu *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TRIBE_Screen_Main_Menu *, RECT);
  void (__thiscall *set_rect_1)(TRIBE_Screen_Main_Menu *, int, int, int, int);
  void (__thiscall *set_color)(TRIBE_Screen_Main_Menu *, unsigned __int8);
  void (__thiscall *set_active)(TRIBE_Screen_Main_Menu *, int);
  void (__thiscall *unknown1)(TRIBE_Screen_Main_Menu *);
  void (__thiscall *unknown2)(TRIBE_Screen_Main_Menu *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TRIBE_Screen_Main_Menu *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TRIBE_Screen_Main_Menu *, int);
  void (__thiscall *set_fixed_position)(TRIBE_Screen_Main_Menu *, int, int, int, int);
  void (__thiscall *set_redraw)(TRIBE_Screen_Main_Menu *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TRIBE_Screen_Main_Menu *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TRIBE_Screen_Main_Menu *, int);
  void (__thiscall *draw_finish)(TRIBE_Screen_Main_Menu *);
  void (__thiscall *draw)(TRIBE_Screen_Main_Menu *);
  void (__thiscall *draw_rect)(TRIBE_Screen_Main_Menu *, RECT *);
  void (__thiscall *draw_offset)(TRIBE_Screen_Main_Menu *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TRIBE_Screen_Main_Menu *, RECT *);
  void (__thiscall *draw_offset2)(TRIBE_Screen_Main_Menu *, int, int, RECT *);
  void (__thiscall *paint)(TRIBE_Screen_Main_Menu *);
  int (__thiscall *wnd_proc)(TRIBE_Screen_Main_Menu *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TRIBE_Screen_Main_Menu *);
  int (__thiscall *handle_size)(TRIBE_Screen_Main_Menu *, int, int);
  int (__thiscall *handle_paint)(TRIBE_Screen_Main_Menu *);
  int (__thiscall *handle_key_down)(TRIBE_Screen_Main_Menu *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TRIBE_Screen_Main_Menu *, int, __int16);
  int (__thiscall *handle_command)(TRIBE_Screen_Main_Menu *, unsigned int, int);
  int (__thiscall *handle_user_command)(TRIBE_Screen_Main_Menu *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TRIBE_Screen_Main_Menu *, unsigned int, int);
  int (__thiscall *handle_scroll)(TRIBE_Screen_Main_Menu *, int, int);
  int (__thiscall *handle_mouse_down)(TRIBE_Screen_Main_Menu *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TRIBE_Screen_Main_Menu *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TRIBE_Screen_Main_Menu *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TRIBE_Screen_Main_Menu *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TRIBE_Screen_Main_Menu *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TRIBE_Screen_Main_Menu *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TRIBE_Screen_Main_Menu *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TRIBE_Screen_Main_Menu *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TRIBE_Screen_Main_Menu *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TRIBE_Screen_Main_Menu *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TRIBE_Screen_Main_Menu *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TRIBE_Screen_Main_Menu *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TRIBE_Screen_Main_Menu *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TRIBE_Screen_Main_Menu *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TRIBE_Screen_Main_Menu *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TRIBE_Screen_Main_Menu *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TRIBE_Screen_Main_Menu *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TRIBE_Screen_Main_Menu *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TRIBE_Screen_Main_Menu *, int, int, int, int);
  int (__thiscall *key_down_action)(TRIBE_Screen_Main_Menu *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TRIBE_Screen_Main_Menu *, int, __int16);
  int (__thiscall *action)(TRIBE_Screen_Main_Menu *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TRIBE_Screen_Main_Menu *, RECT *);
  int (__thiscall *is_inside)(TRIBE_Screen_Main_Menu *, int, int);
  void (__thiscall *set_focus)(TRIBE_Screen_Main_Menu *, int);
  void (__thiscall *set_tab_order_2)(TRIBE_Screen_Main_Menu *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TRIBE_Screen_Main_Menu *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TRIBE_Screen_Main_Menu *);
  unsigned __int8 (__thiscall *get_help_info)(TRIBE_Screen_Main_Menu *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TRIBE_Screen_Main_Menu *);
  int (__thiscall *restart_sound_system)(TRIBE_Screen_Main_Menu *);
  void (__thiscall *take_snapshot)(TRIBE_Screen_Main_Menu *);
  void (__thiscall *handle_reactivate)(TRIBE_Screen_Main_Menu *);
  int (__thiscall *pointing_at)(TRIBE_Screen_Main_Menu *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TRIBE_Screen_Main_Menu *);
  int (__thiscall *get_ideal_width)(TRIBE_Screen_Main_Menu *);
  void (__thiscall *draw_background)(TRIBE_Screen_Main_Menu *, int);
  void (__thiscall *set_ideal_size)(TRIBE_Screen_Main_Menu *, int, int);
  int (__thiscall *create_button_2)(TRIBE_Screen_Main_Menu *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TRIBE_Screen_Main_Menu *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TRIBE_Screen_Main_Menu *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TRIBE_Screen_Main_Menu *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TRIBE_Screen_Main_Menu *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TRIBE_Screen_Main_Menu *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TRIBE_Screen_Main_Menu *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TRIBE_Screen_Main_Menu *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TRIBE_Screen_Main_Menu *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TRIBE_Screen_Main_Menu *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TRIBE_Screen_Main_Menu *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TRIBE_Screen_Main_Menu *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TRIBE_Screen_Main_Menu *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TRIBE_Screen_Main_Menu *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TRIBE_Screen_Main_Menu *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TRIBE_Screen_Main_Menu *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TRIBE_Screen_Main_Menu *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TRIBE_Screen_Main_Menu *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TRIBE_Screen_Main_Menu *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TRIBE_Screen_Main_Menu *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TRIBE_Screen_Main_Menu *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TRIBE_Screen_Main_Menu *, TPanel *, int, int, int, int);
};
#pragma pack(pop)

/* 560 */
#pragma pack(push, 8)
struct SEs
{
  char Name[255];
  char Password[255];
  int Restoring;
  unsigned int Checksum;
  GUID AppGUID;
  GUID SessGUID;
  char HeaderGUIDStr[38];
  unsigned int CurrentPlayers;
  unsigned int MaxPlayers;
  unsigned int User1;
  unsigned int User2;
  unsigned int User3;
  unsigned int User4;
};
#pragma pack(pop)

/* 238 */
#pragma pack(push, 8)
struct TCommunications_Sessions
{
  int SessionCount;
  SEs Session[501];
  GUID glpGuid;
  void *glpIDC;
};
#pragma pack(pop)

/* 558 */
#pragma pack(push, 8)
struct SPs
{
  char Name[80];
  GUID *GUID;
  unsigned int MajVersion;
  unsigned int MinVersion;
  int Active;
};
#pragma pack(pop)

/* 235 */
#pragma pack(push, 8)
struct TCommunications_Services
{
  SPs Service[100];
  int ServiceCount;
};
#pragma pack(pop)

/* 236 */
#pragma pack(push, 8)
struct TribeMPRestoreScreen
{
  TribeMPRestoreScreenVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  int playingCivSound;
  TPanel *tempFromPanel;
  int tempActionIn;
  unsigned int tempA1;
  unsigned int tempA2;
  TTextPanel *infoText;
  TTextPanel *title;
  TTextPanel *playerTitle;
  TTextPanel *opponentsTitle;
  TTextPanel *pingTitle;
  TTextPanel *civTitle;
  TTextPanel *settingsTitle;
  TTextPanel *colorTitle;
  TTextPanel *teamTitle;
  TTextPanel *fileXferText;
  TTextPanel *playerPercentageText[8];
  TTextPanel *playerNameText[8];
  TTextPanel *playerPingText[8];
  TTextPanel *playerCivText[8];
  TTextPanel *scenarioPlayerText[8];
  TTextPanel *playerCDText[8];
  TTextPanel *playerVersionText[8];
  TTextPanel *playerColorText[8];
  TTextPanel *playerTeamText[8];
  TPercentPanel *playerPercent[8];
  TButtonPanel *playerColor[8];
  TButtonPanel *playerTeam[8];
  TDropDownPanel *playerNameDrop[8];
  TDropDownPanel *playerCivDrop[8];
  TDropDownPanel *scenarioPlayerDrop[8];
  TEditPanel *chatInput;
  TTextPanel *chatTitle;
  TTextPanel *chatBox;
  TScrollBarPanel *chatScrollbar;
  TButtonPanel *gameSettingsButton;
  TTextPanel *scenarioName;
  TTextPanel *victoryFixedText;
  TTextPanel *settingText[20];
  TTextPanel *settingValue[20];
  TTextPanel *numberPlayersTitle;
  TDropDownPanel *numberPlayersDrop;
  TTextPanel *numberPlayersText;
  TButtonPanel *startButton;
  TButtonPanel *readyButtons[2];
  TButtonPanel *cancelButton;
  TButtonPanel *help_button;
  TButtonPanel *ready_button;
  TButtonPanel *close_button;
  TTextPanel *ready_button_label;
  TTextPanel *gameTypeLabel;
  TDropDownPanel *gameTypeDrop;
  TTextPanel *mapFileTypeLabel;
  TDropDownPanel *mapFileTypeDrop;
  TTextPanel *mapTypeLabel;
  TDropDownPanel *mapTypeDrop;
  TTextPanel *mapSizeLabel;
  TDropDownPanel *mapSizeDrop;
  TTextPanel *difficultyLabel;
  TDropDownPanel *difficultyDrop;
  TTextPanel *resourcesLabel;
  TDropDownPanel *resourcesDrop;
  TTextPanel *ageLabel;
  TDropDownPanel *ageDrop;
  TTextPanel *limitLabel;
  TDropDownPanel *limitDrop;
  TTextPanel *victoryTypeLabel;
  TDropDownPanel *victoryTypeDrop;
  TTextPanel *scoreLabel;
  TDropDownPanel *scoreDrop;
  TTextPanel *timeLabel;
  TDropDownPanel *timeDrop;
  TButtonPanel *optionButton[5];
  TTextPanel *optionText[5];
  TTextPanel *gamespeedtext;
  TDropDownPanel *gamespeedlist;
  TTextPanel *mapVisiblity;
  TDropDownPanel *mapVisibilityList;
  TTextPanel *lockgamespeedtext;
  TButtonPanel *lockgamespeedbutton;
  TTextPanel *lockgameteamstext;
  TButtonPanel *lockgameteamsbutton;
  TTextPanel *recordGameText;
  TButtonPanel *recordGameButton;
  TTextPanel *recordGameAllowedText;
  TButtonPanel *recordGameAllowedButton;
  TShape *button_cmd_pic;
  unsigned __int8 team_selection_on;
  int last_game_type;
  int cancelMode;
  int soundID;
  int civID;
  int playerToKick;
  int scenarioPlayerCount;
  int myCivilization;
  int myScenarioPlayer;
  int myPlayerColor;
  int myPlayerTeam;
  int myScenarioChecksum;
  char saveScenarioName[256];
  int saveRandomGame;
  int saveScenarioChecksum;
  int SaveGameChecksumsMatch[20];
  T_Scenario *scenarioInfo;
  int settingsFixed;
  int numberAnyPlayers;
  int sent_cd_status;
  TButtonPanel *netInfoButton;
  TButtonPanel *techTreeButton;
  TButtonPanel *resetButton;
  int i_am_ready;
  unsigned __int8 defaultColor[8];
  int scenarioCheckSum[8];
  unsigned int last_send_shared;
  unsigned int last_update_ping;
  unsigned int ping_display_start[8];
  int resend_game_options;
  int fileTransfering;
  TDrawArea *mDrawArea;
  TSound_Driver *mSoundSystem;
  TVoice *mVoice;
  int mTransferingFile;
  TCommLog *mCommLog;
  int mHeaderLoaded;
  int mQuitting;
  unsigned int gameStartTimer;
  unsigned int secondsTillStart;
  int selectedScenario;
  int needToSelectScenario;
  int mTransferingRMS;
  TPicturePanel *playerWaitPic[8];
  cHeaderInfo mHeaderInfo;
};
#pragma pack(pop)

/* 854 */
#pragma pack(push, 8)
struct TribeMPRestoreScreenVtbl
{
  void *(__thiscall *__vecDelDtor)(TribeMPRestoreScreen *, unsigned int);
  int (__thiscall *setup)(TribeMPRestoreScreen *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TribeMPRestoreScreen *, RECT);
  void (__thiscall *set_rect_1)(TribeMPRestoreScreen *, int, int, int, int);
  void (__thiscall *set_color)(TribeMPRestoreScreen *, unsigned __int8);
  void (__thiscall *set_active)(TribeMPRestoreScreen *, int);
  void (__thiscall *unknown1)(TribeMPRestoreScreen *);
  void (__thiscall *unknown2)(TribeMPRestoreScreen *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TribeMPRestoreScreen *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TribeMPRestoreScreen *, int);
  void (__thiscall *set_fixed_position)(TribeMPRestoreScreen *, int, int, int, int);
  void (__thiscall *set_redraw)(TribeMPRestoreScreen *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TribeMPRestoreScreen *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TribeMPRestoreScreen *, int);
  void (__thiscall *draw_finish)(TribeMPRestoreScreen *);
  void (__thiscall *draw)(TribeMPRestoreScreen *);
  void (__thiscall *draw_rect)(TribeMPRestoreScreen *, RECT *);
  void (__thiscall *draw_offset)(TribeMPRestoreScreen *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TribeMPRestoreScreen *, RECT *);
  void (__thiscall *draw_offset2)(TribeMPRestoreScreen *, int, int, RECT *);
  void (__thiscall *paint)(TribeMPRestoreScreen *);
  int (__thiscall *wnd_proc)(TribeMPRestoreScreen *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TribeMPRestoreScreen *);
  int (__thiscall *handle_size)(TribeMPRestoreScreen *, int, int);
  int (__thiscall *handle_paint)(TribeMPRestoreScreen *);
  int (__thiscall *handle_key_down)(TribeMPRestoreScreen *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TribeMPRestoreScreen *, int, __int16);
  int (__thiscall *handle_command)(TribeMPRestoreScreen *, unsigned int, int);
  int (__thiscall *handle_user_command)(TribeMPRestoreScreen *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TribeMPRestoreScreen *, unsigned int, int);
  int (__thiscall *handle_scroll)(TribeMPRestoreScreen *, int, int);
  int (__thiscall *handle_mouse_down)(TribeMPRestoreScreen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TribeMPRestoreScreen *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TribeMPRestoreScreen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TribeMPRestoreScreen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TribeMPRestoreScreen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TribeMPRestoreScreen *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TribeMPRestoreScreen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TribeMPRestoreScreen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TribeMPRestoreScreen *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TribeMPRestoreScreen *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TribeMPRestoreScreen *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TribeMPRestoreScreen *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TribeMPRestoreScreen *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TribeMPRestoreScreen *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TribeMPRestoreScreen *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TribeMPRestoreScreen *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TribeMPRestoreScreen *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TribeMPRestoreScreen *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TribeMPRestoreScreen *, int, int, int, int);
  int (__thiscall *key_down_action)(TribeMPRestoreScreen *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TribeMPRestoreScreen *, int, __int16);
  int (__thiscall *action)(TribeMPRestoreScreen *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TribeMPRestoreScreen *, RECT *);
  int (__thiscall *is_inside)(TribeMPRestoreScreen *, int, int);
  void (__thiscall *set_focus)(TribeMPRestoreScreen *, int);
  void (__thiscall *set_tab_order_2)(TribeMPRestoreScreen *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TribeMPRestoreScreen *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TribeMPRestoreScreen *);
  unsigned __int8 (__thiscall *get_help_info)(TribeMPRestoreScreen *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TribeMPRestoreScreen *);
  int (__thiscall *restart_sound_system)(TribeMPRestoreScreen *);
  void (__thiscall *take_snapshot)(TribeMPRestoreScreen *);
  void (__thiscall *handle_reactivate)(TribeMPRestoreScreen *);
  int (__thiscall *pointing_at)(TribeMPRestoreScreen *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TribeMPRestoreScreen *);
  int (__thiscall *get_ideal_width)(TribeMPRestoreScreen *);
  void (__thiscall *draw_background)(TribeMPRestoreScreen *, int);
  void (__thiscall *set_ideal_size)(TribeMPRestoreScreen *, int, int);
  int (__thiscall *create_button_2)(TribeMPRestoreScreen *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TribeMPRestoreScreen *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TribeMPRestoreScreen *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TribeMPRestoreScreen *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TribeMPRestoreScreen *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TribeMPRestoreScreen *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TribeMPRestoreScreen *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TribeMPRestoreScreen *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TribeMPRestoreScreen *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TribeMPRestoreScreen *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TribeMPRestoreScreen *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TribeMPRestoreScreen *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TribeMPRestoreScreen *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TribeMPRestoreScreen *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TribeMPRestoreScreen *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TribeMPRestoreScreen *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TribeMPRestoreScreen *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TribeMPRestoreScreen *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TribeMPRestoreScreen *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TribeMPRestoreScreen *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TribeMPRestoreScreen *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TribeMPRestoreScreen *, TPanel *, int, int, int, int);
  void (__thiscall *fillPlayers)(TribeMPRestoreScreen *);
  void (__thiscall *applyLockedSettings)(TribeMPRestoreScreen *);
  void (__thiscall *init_vars)(TribeMPRestoreScreen *);
  int (__thiscall *startGame)(TribeMPRestoreScreen *, int);
  int (__thiscall *launchGame)(TribeMPRestoreScreen *);
  void (__thiscall *activateSettingPanels)(TribeMPRestoreScreen *, int);
};
#pragma pack(pop)

/* 240 */
#pragma pack(push, 8)
struct TRIBE_Screen_Options
{
  TRIBE_Screen_OptionsVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  int prevLocation;
  unsigned __int8 enter_hotkey;
  TTextPanel *title;
  TTextPanel *infoText;
  TTextPanel *set_hotkey_subtitle;
  TTextPanel *overWroteHotkeyMsg;
  TButtonPanel *button[5];
  int current_mode;
  TEasy_Panel *mode_sub_panels[1];
  TTextPanel *hotkey_groups_title;
  TListPanel *hotkey_groups_list;
  TScrollBarPanel *hotkey_groups_scroll;
  TTextPanel *hotkeys_title;
  TListPanel *key_list;
  TScrollBarPanel *key_scroll;
  TTextPanel *dupHotkeyWarningMessage;
  unsigned __int8 need_to_save;
  int currHotkeyGroup;
  TRIBE_Hotkey_Handler *hotkeys;
  int draw_cursor;
  unsigned int last_cursor_time;
  unsigned int cursor_interval;
};
#pragma pack(pop)

/* 782 */
#pragma pack(push, 8)
struct TRIBE_Screen_OptionsVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Screen_Options *, unsigned int);
  int (__thiscall *setup)(TRIBE_Screen_Options *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TRIBE_Screen_Options *, RECT);
  void (__thiscall *set_rect_1)(TRIBE_Screen_Options *, int, int, int, int);
  void (__thiscall *set_color)(TRIBE_Screen_Options *, unsigned __int8);
  void (__thiscall *set_active)(TRIBE_Screen_Options *, int);
  void (__thiscall *unknown1)(TRIBE_Screen_Options *);
  void (__thiscall *unknown2)(TRIBE_Screen_Options *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TRIBE_Screen_Options *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TRIBE_Screen_Options *, int);
  void (__thiscall *set_fixed_position)(TRIBE_Screen_Options *, int, int, int, int);
  void (__thiscall *set_redraw)(TRIBE_Screen_Options *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TRIBE_Screen_Options *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TRIBE_Screen_Options *, int);
  void (__thiscall *draw_finish)(TRIBE_Screen_Options *);
  void (__thiscall *draw)(TRIBE_Screen_Options *);
  void (__thiscall *draw_rect)(TRIBE_Screen_Options *, RECT *);
  void (__thiscall *draw_offset)(TRIBE_Screen_Options *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TRIBE_Screen_Options *, RECT *);
  void (__thiscall *draw_offset2)(TRIBE_Screen_Options *, int, int, RECT *);
  void (__thiscall *paint)(TRIBE_Screen_Options *);
  int (__thiscall *wnd_proc)(TRIBE_Screen_Options *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TRIBE_Screen_Options *);
  int (__thiscall *handle_size)(TRIBE_Screen_Options *, int, int);
  int (__thiscall *handle_paint)(TRIBE_Screen_Options *);
  int (__thiscall *handle_key_down)(TRIBE_Screen_Options *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TRIBE_Screen_Options *, int, __int16);
  int (__thiscall *handle_command)(TRIBE_Screen_Options *, unsigned int, int);
  int (__thiscall *handle_user_command)(TRIBE_Screen_Options *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TRIBE_Screen_Options *, unsigned int, int);
  int (__thiscall *handle_scroll)(TRIBE_Screen_Options *, int, int);
  int (__thiscall *handle_mouse_down)(TRIBE_Screen_Options *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TRIBE_Screen_Options *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TRIBE_Screen_Options *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TRIBE_Screen_Options *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TRIBE_Screen_Options *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TRIBE_Screen_Options *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TRIBE_Screen_Options *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TRIBE_Screen_Options *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TRIBE_Screen_Options *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TRIBE_Screen_Options *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TRIBE_Screen_Options *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TRIBE_Screen_Options *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TRIBE_Screen_Options *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TRIBE_Screen_Options *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TRIBE_Screen_Options *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TRIBE_Screen_Options *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TRIBE_Screen_Options *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TRIBE_Screen_Options *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TRIBE_Screen_Options *, int, int, int, int);
  int (__thiscall *key_down_action)(TRIBE_Screen_Options *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TRIBE_Screen_Options *, int, __int16);
  int (__thiscall *action)(TRIBE_Screen_Options *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TRIBE_Screen_Options *, RECT *);
  int (__thiscall *is_inside)(TRIBE_Screen_Options *, int, int);
  void (__thiscall *set_focus)(TRIBE_Screen_Options *, int);
  void (__thiscall *set_tab_order_2)(TRIBE_Screen_Options *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TRIBE_Screen_Options *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TRIBE_Screen_Options *);
  unsigned __int8 (__thiscall *get_help_info)(TRIBE_Screen_Options *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TRIBE_Screen_Options *);
  int (__thiscall *restart_sound_system)(TRIBE_Screen_Options *);
  void (__thiscall *take_snapshot)(TRIBE_Screen_Options *);
  void (__thiscall *handle_reactivate)(TRIBE_Screen_Options *);
  int (__thiscall *pointing_at)(TRIBE_Screen_Options *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TRIBE_Screen_Options *);
  int (__thiscall *get_ideal_width)(TRIBE_Screen_Options *);
  void (__thiscall *draw_background)(TRIBE_Screen_Options *, int);
  void (__thiscall *set_ideal_size)(TRIBE_Screen_Options *, int, int);
  int (__thiscall *create_button_2)(TRIBE_Screen_Options *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TRIBE_Screen_Options *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TRIBE_Screen_Options *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TRIBE_Screen_Options *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TRIBE_Screen_Options *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TRIBE_Screen_Options *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TRIBE_Screen_Options *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TRIBE_Screen_Options *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TRIBE_Screen_Options *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TRIBE_Screen_Options *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TRIBE_Screen_Options *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TRIBE_Screen_Options *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TRIBE_Screen_Options *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TRIBE_Screen_Options *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TRIBE_Screen_Options *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TRIBE_Screen_Options *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TRIBE_Screen_Options *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TRIBE_Screen_Options *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TRIBE_Screen_Options *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TRIBE_Screen_Options *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TRIBE_Screen_Options *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TRIBE_Screen_Options *, TPanel *, int, int, int, int);
};
#pragma pack(pop)

/* 241 */
#pragma pack(push, 8)
struct THelpDialog
{
  THelpDialogVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  HWND dlg_wnd;
  TPanel *save_parent_child;
  TPanel *save_parent;
  int text_font_id;
  int input_font_id;
  int button_font_id;
  int button_sound_id;
  int help_page_id_THelpDialog;
  char parent_panel_THelpDialog[256];
  TTextPanel *title;
  TTextPanel *list;
  TButtonPanel *ok_button;
  TButtonPanel *encyclopedia_button;
};
#pragma pack(pop)

/* 893 */
#pragma pack(push, 8)
struct THelpDialogVtbl
{
  void *(__thiscall *__vecDelDtor)(THelpDialog *, unsigned int);
  int (__thiscall *setup)(THelpDialog *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(THelpDialog *, RECT);
  void (__thiscall *set_rect_1)(THelpDialog *, int, int, int, int);
  void (__thiscall *set_color)(THelpDialog *, unsigned __int8);
  void (__thiscall *set_active)(THelpDialog *, int);
  void (__thiscall *unknown1)(THelpDialog *);
  void (__thiscall *unknown2)(THelpDialog *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(THelpDialog *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(THelpDialog *, int);
  void (__thiscall *set_fixed_position)(THelpDialog *, int, int, int, int);
  void (__thiscall *set_redraw)(THelpDialog *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(THelpDialog *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(THelpDialog *, int);
  void (__thiscall *draw_finish)(THelpDialog *);
  void (__thiscall *draw)(THelpDialog *);
  void (__thiscall *draw_rect)(THelpDialog *, RECT *);
  void (__thiscall *draw_offset)(THelpDialog *, int, int, RECT *);
  void (__thiscall *draw_rect2)(THelpDialog *, RECT *);
  void (__thiscall *draw_offset2)(THelpDialog *, int, int, RECT *);
  void (__thiscall *paint)(THelpDialog *);
  int (__thiscall *wnd_proc)(THelpDialog *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(THelpDialog *);
  int (__thiscall *handle_size)(THelpDialog *, int, int);
  int (__thiscall *handle_paint)(THelpDialog *);
  int (__thiscall *handle_key_down)(THelpDialog *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(THelpDialog *, int, __int16);
  int (__thiscall *handle_command)(THelpDialog *, unsigned int, int);
  int (__thiscall *handle_user_command)(THelpDialog *, unsigned int, int);
  int (__thiscall *handle_timer_command)(THelpDialog *, unsigned int, int);
  int (__thiscall *handle_scroll)(THelpDialog *, int, int);
  int (__thiscall *handle_mouse_down)(THelpDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(THelpDialog *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(THelpDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(THelpDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(THelpDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(THelpDialog *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(THelpDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(THelpDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(THelpDialog *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(THelpDialog *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(THelpDialog *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(THelpDialog *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(THelpDialog *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(THelpDialog *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(THelpDialog *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(THelpDialog *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(THelpDialog *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(THelpDialog *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(THelpDialog *, int, int, int, int);
  int (__thiscall *key_down_action)(THelpDialog *, int, __int16, int, int, int);
  int (__thiscall *char_action)(THelpDialog *, int, __int16);
  int (__thiscall *action)(THelpDialog *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(THelpDialog *, RECT *);
  int (__thiscall *is_inside)(THelpDialog *, int, int);
  void (__thiscall *set_focus)(THelpDialog *, int);
  void (__thiscall *set_tab_order_2)(THelpDialog *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(THelpDialog *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(THelpDialog *);
  unsigned __int8 (__thiscall *get_help_info)(THelpDialog *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(THelpDialog *);
  int (__thiscall *restart_sound_system)(THelpDialog *);
  void (__thiscall *take_snapshot)(THelpDialog *);
  void (__thiscall *handle_reactivate)(THelpDialog *);
  int (__thiscall *pointing_at)(THelpDialog *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(THelpDialog *);
  int (__thiscall *get_ideal_width)(THelpDialog *);
  void (__thiscall *draw_background)(THelpDialog *, int);
  void (__thiscall *set_ideal_size)(THelpDialog *, int, int);
  int (__thiscall *create_button_2)(THelpDialog *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(THelpDialog *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(THelpDialog *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(THelpDialog *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(THelpDialog *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(THelpDialog *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(THelpDialog *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(THelpDialog *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(THelpDialog *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(THelpDialog *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(THelpDialog *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(THelpDialog *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(THelpDialog *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(THelpDialog *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(THelpDialog *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(THelpDialog *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(THelpDialog *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(THelpDialog *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(THelpDialog *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(THelpDialog *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(THelpDialog *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(THelpDialog *, TPanel *, int, int, int, int);
  int (__thiscall *setup_3)(THelpDialog *, TDrawArea *, TPanel *, int, int, unsigned __int8, int);
  int (__thiscall *setup_2)(THelpDialog *, TDrawArea *, TPanel *, int, int, char *, int, int);
};
#pragma pack(pop)

/* 245 */
#pragma pack(push, 8)
struct TDropDownButtonPanel
{
  TDropDownButtonPanelVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int id[9];
  int id2[9];
  int shift_id1;
  int shift_id2;
  TButtonPanel__ButtonType buttonTypeValue;
  TButtonPanel__DrawType drawTypeValue;
  TButtonPanel__NotifyType notifyTypeValue;
  TDigital *sound;
  TShape *pic[9];
  __int16 pic_index[9];
  int auto_pic_pos;
  int pic_x;
  int pic_y;
  int all_hot;
  int draw_reverse;
  char *text1[9];
  char *text2[9];
  int text_x;
  int text_y;
  HFONT font;
  int font_wid;
  int font_hgt;
  __int16 num_states;
  __int16 cur_state;
  int is_down;
  TButtonPanel **radio_buttons;
  __int16 num_radio_buttons;
  unsigned int button_down_time;
  unsigned int text_color1[9];
  unsigned int text_color2[9];
  unsigned int highlight_text_color1[9];
  unsigned int highlight_text_color2[9];
  int text_style;
  int hotkey;
  int hotkey_shift;
  int hotkey_ctrl;
  int hotkey_alt;
  int bevel_type;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  int key_down;
  int disabled;
  int sound_number;
  unsigned __int8 allow_right_action;
  unsigned __int8 TButtonPanel_gap[3];
  TDropDownPanel *drop_down_panel;
};
#pragma pack(pop)

/* 872 */
#pragma pack(push, 8)
struct TDropDownButtonPanelVtbl
{
  void *(__thiscall *__vecDelDtor)(TDropDownButtonPanel *, unsigned int);
  int (__thiscall *setup)(TDropDownButtonPanel *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TDropDownButtonPanel *, RECT);
  void (__thiscall *set_rect_1)(TDropDownButtonPanel *, int, int, int, int);
  void (__thiscall *set_color)(TDropDownButtonPanel *, unsigned __int8);
  void (__thiscall *set_active)(TDropDownButtonPanel *, int);
  void (__thiscall *unknown1)(TDropDownButtonPanel *);
  void (__thiscall *unknown2)(TDropDownButtonPanel *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TDropDownButtonPanel *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TDropDownButtonPanel *, int);
  void (__thiscall *set_fixed_position)(TDropDownButtonPanel *, int, int, int, int);
  void (__thiscall *set_redraw)(TDropDownButtonPanel *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TDropDownButtonPanel *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TDropDownButtonPanel *, int);
  void (__thiscall *draw_finish)(TDropDownButtonPanel *);
  void (__thiscall *draw)(TDropDownButtonPanel *);
  void (__thiscall *draw_rect)(TDropDownButtonPanel *, RECT *);
  void (__thiscall *draw_offset)(TDropDownButtonPanel *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TDropDownButtonPanel *, RECT *);
  void (__thiscall *draw_offset2)(TDropDownButtonPanel *, int, int, RECT *);
  void (__thiscall *paint)(TDropDownButtonPanel *);
  int (__thiscall *wnd_proc)(TDropDownButtonPanel *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TDropDownButtonPanel *);
  int (__thiscall *handle_size)(TDropDownButtonPanel *, int, int);
  int (__thiscall *handle_paint)(TDropDownButtonPanel *);
  int (__thiscall *handle_key_down)(TDropDownButtonPanel *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TDropDownButtonPanel *, int, __int16);
  int (__thiscall *handle_command)(TDropDownButtonPanel *, unsigned int, int);
  int (__thiscall *handle_user_command)(TDropDownButtonPanel *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TDropDownButtonPanel *, unsigned int, int);
  int (__thiscall *handle_scroll)(TDropDownButtonPanel *, int, int);
  int (__thiscall *handle_mouse_down)(TDropDownButtonPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TDropDownButtonPanel *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TDropDownButtonPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TDropDownButtonPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TDropDownButtonPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TDropDownButtonPanel *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TDropDownButtonPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TDropDownButtonPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TDropDownButtonPanel *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TDropDownButtonPanel *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TDropDownButtonPanel *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TDropDownButtonPanel *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TDropDownButtonPanel *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TDropDownButtonPanel *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TDropDownButtonPanel *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TDropDownButtonPanel *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TDropDownButtonPanel *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TDropDownButtonPanel *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TDropDownButtonPanel *, int, int, int, int);
  int (__thiscall *key_down_action)(TDropDownButtonPanel *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TDropDownButtonPanel *, int, __int16);
  int (__thiscall *action)(TDropDownButtonPanel *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TDropDownButtonPanel *, RECT *);
  int (__thiscall *is_inside)(TDropDownButtonPanel *, int, int);
  void (__thiscall *set_focus)(TDropDownButtonPanel *, int);
  void (__thiscall *set_tab_order_2)(TDropDownButtonPanel *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TDropDownButtonPanel *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TDropDownButtonPanel *);
  unsigned __int8 (__thiscall *get_help_info)(TDropDownButtonPanel *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TDropDownButtonPanel *);
  int (__thiscall *restart_sound_system)(TDropDownButtonPanel *);
  void (__thiscall *take_snapshot)(TDropDownButtonPanel *);
  void (__thiscall *handle_reactivate)(TDropDownButtonPanel *);
  int (__thiscall *pointing_at)(TDropDownButtonPanel *, int, int, int *, int *, int *, int *, char *, int);
  void (__thiscall *set_state)(TDropDownButtonPanel *, __int16);
  int (__thiscall *hit_button)(TDropDownButtonPanel *, int, int);
};
#pragma pack(pop)

/* 909 */
typedef int Page_Mode;

/* 910 */
typedef int ScreenEntryType;

/* 911 */
typedef int Decal_Type;

/* 912 */
#pragma pack(push, 8)
struct Decal_Control
{
  Decal_Type high_low;
  Decal_Type score;
};
#pragma pack(pop)

/* 913 */
#pragma pack(push, 8)
struct Player_Info
{
  int team_id;
  int mvp_score;
  int team_mvp_flag;
};
#pragma pack(pop)

/* 914 */
#pragma pack(push, 8)
struct Mvp_Control
{
  Player_Info player_info[8];
  int team_high_score[8];
};
#pragma pack(pop)

/* 250 */
#pragma pack(push, 8)
struct TribeAchievementsScreen
{
  TribeAchievementsScreenVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  int end_game_flag;
  Page_Mode current_mode;
  ScreenEntryType entry_type;
  int column_count;
  int highlight_flag;
  TPanel *current_highlight_panel;
  int decal_pic_width;
  int decal_pic_height;
  int player_banner1_pic_width;
  int player_banner1_pic_height;
  int player_banner2_pic_width;
  int player_banner2_pic_height;
  int book_background_pic_width;
  int bood_background_pic_height;
  int column_font_width;
  int column_max_char;
  TTextPanel *title;
  TTextPanel *sub_title;
  TTextPanel *world_time;
  Decal_Control decal_controler[8][8];
  Mvp_Control mvp_controller;
  TTextPanel *page_tabs[6];
  TButtonPanel *return_button;
  TButtonPanel *restart_button;
  TTextPanel *statistics[8][8];
  TTextPanel *statistics_choice[8];
  TTextPanel *player_names[8];
  TTextPanel *player_name_help;
  TTextPanel *player_teams[8];
  TTextPanel *player_team_label;
  TTextPanel *column_titles[8];
  TTextPanel *rollover_text;
  TTextPanel *player_name_label;
  TButtonPanel *close_button;
  TShape *decal_pics;
  TShape *player_banner_pics1;
  TShape *player_banner_pics2;
  TShape *book_tab_pics;
  TShape *team_pics;
  TShape *book_button_pics;
  TDigital *sound;
  int sound_number;
  SoundManager *soundManager;
  int winSoundID;
  int lossSoundID;
  Time_Line_Panel *time_line;
  TTextPanel *time_line_help;
  int playing_music;
};
#pragma pack(pop)

/* 908 */
#pragma pack(push, 8)
struct TribeAchievementsScreenVtbl
{
  void *(__thiscall *__vecDelDtor)(TribeAchievementsScreen *, unsigned int);
  int (__thiscall *setup)(TribeAchievementsScreen *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TribeAchievementsScreen *, RECT);
  void (__thiscall *set_rect_1)(TribeAchievementsScreen *, int, int, int, int);
  void (__thiscall *set_color)(TribeAchievementsScreen *, unsigned __int8);
  void (__thiscall *set_active)(TribeAchievementsScreen *, int);
  void (__thiscall *unknown1)(TribeAchievementsScreen *);
  void (__thiscall *unknown2)(TribeAchievementsScreen *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TribeAchievementsScreen *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TribeAchievementsScreen *, int);
  void (__thiscall *set_fixed_position)(TribeAchievementsScreen *, int, int, int, int);
  void (__thiscall *set_redraw)(TribeAchievementsScreen *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TribeAchievementsScreen *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TribeAchievementsScreen *, int);
  void (__thiscall *draw_finish)(TribeAchievementsScreen *);
  void (__thiscall *draw)(TribeAchievementsScreen *);
  void (__thiscall *draw_rect)(TribeAchievementsScreen *, RECT *);
  void (__thiscall *draw_offset)(TribeAchievementsScreen *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TribeAchievementsScreen *, RECT *);
  void (__thiscall *draw_offset2)(TribeAchievementsScreen *, int, int, RECT *);
  void (__thiscall *paint)(TribeAchievementsScreen *);
  int (__thiscall *wnd_proc)(TribeAchievementsScreen *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TribeAchievementsScreen *);
  int (__thiscall *handle_size)(TribeAchievementsScreen *, int, int);
  int (__thiscall *handle_paint)(TribeAchievementsScreen *);
  int (__thiscall *handle_key_down)(TribeAchievementsScreen *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TribeAchievementsScreen *, int, __int16);
  int (__thiscall *handle_command)(TribeAchievementsScreen *, unsigned int, int);
  int (__thiscall *handle_user_command)(TribeAchievementsScreen *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TribeAchievementsScreen *, unsigned int, int);
  int (__thiscall *handle_scroll)(TribeAchievementsScreen *, int, int);
  int (__thiscall *handle_mouse_down)(TribeAchievementsScreen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TribeAchievementsScreen *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TribeAchievementsScreen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TribeAchievementsScreen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TribeAchievementsScreen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TribeAchievementsScreen *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TribeAchievementsScreen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TribeAchievementsScreen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TribeAchievementsScreen *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TribeAchievementsScreen *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TribeAchievementsScreen *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TribeAchievementsScreen *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TribeAchievementsScreen *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TribeAchievementsScreen *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TribeAchievementsScreen *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TribeAchievementsScreen *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TribeAchievementsScreen *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TribeAchievementsScreen *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TribeAchievementsScreen *, int, int, int, int);
  int (__thiscall *key_down_action)(TribeAchievementsScreen *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TribeAchievementsScreen *, int, __int16);
  int (__thiscall *action)(TribeAchievementsScreen *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TribeAchievementsScreen *, RECT *);
  int (__thiscall *is_inside)(TribeAchievementsScreen *, int, int);
  void (__thiscall *set_focus)(TribeAchievementsScreen *, int);
  void (__thiscall *set_tab_order_2)(TribeAchievementsScreen *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TribeAchievementsScreen *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TribeAchievementsScreen *);
  unsigned __int8 (__thiscall *get_help_info)(TribeAchievementsScreen *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TribeAchievementsScreen *);
  int (__thiscall *restart_sound_system)(TribeAchievementsScreen *);
  void (__thiscall *take_snapshot)(TribeAchievementsScreen *);
  void (__thiscall *handle_reactivate)(TribeAchievementsScreen *);
  int (__thiscall *pointing_at)(TribeAchievementsScreen *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TribeAchievementsScreen *);
  int (__thiscall *get_ideal_width)(TribeAchievementsScreen *);
  void (__thiscall *draw_background)(TribeAchievementsScreen *, int);
  void (__thiscall *set_ideal_size)(TribeAchievementsScreen *, int, int);
  int (__thiscall *create_button_2)(TribeAchievementsScreen *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TribeAchievementsScreen *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TribeAchievementsScreen *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TribeAchievementsScreen *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TribeAchievementsScreen *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TribeAchievementsScreen *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TribeAchievementsScreen *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TribeAchievementsScreen *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TribeAchievementsScreen *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TribeAchievementsScreen *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TribeAchievementsScreen *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TribeAchievementsScreen *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TribeAchievementsScreen *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TribeAchievementsScreen *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TribeAchievementsScreen *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TribeAchievementsScreen *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TribeAchievementsScreen *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TribeAchievementsScreen *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TribeAchievementsScreen *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TribeAchievementsScreen *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TribeAchievementsScreen *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TribeAchievementsScreen *, TPanel *, int, int, int, int);
};
#pragma pack(pop)

/* 252 */
#pragma pack(push, 8)
struct TribeAddressListDialog
{
  TribeAddressListDialogVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  HWND dlg_wnd;
  TPanel *save_parent_child;
  TPanel *save_parent;
  int text_font_id;
  int input_font_id;
  int button_font_id;
  int button_sound_id;
  TScrollBarPanel *mRecentGamesScrollbar;
  TEditPanel *mAddressInput;
  TTextPanel *mDialogTitle;
  TTextPanel *mRecentTitle;
  TTextPanel *mAddressTitle;
  TListPanel *mRecentGamesList;
  TButtonPanel *mSearchButton;
  TButtonPanel *mCancelButton;
  TScreenPanel *mParentPanel;
  unsigned __int8 mbGame[10];
  char *msGameName[10];
  char *msGameAddr[10];
};
#pragma pack(pop)

/* 905 */
#pragma pack(push, 8)
struct TribeAddressListDialogVtbl
{
  void *(__thiscall *__vecDelDtor)(TribeAddressListDialog *, unsigned int);
  int (__thiscall *setup)(TribeAddressListDialog *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TribeAddressListDialog *, RECT);
  void (__thiscall *set_rect_1)(TribeAddressListDialog *, int, int, int, int);
  void (__thiscall *set_color)(TribeAddressListDialog *, unsigned __int8);
  void (__thiscall *set_active)(TribeAddressListDialog *, int);
  void (__thiscall *unknown1)(TribeAddressListDialog *);
  void (__thiscall *unknown2)(TribeAddressListDialog *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TribeAddressListDialog *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TribeAddressListDialog *, int);
  void (__thiscall *set_fixed_position)(TribeAddressListDialog *, int, int, int, int);
  void (__thiscall *set_redraw)(TribeAddressListDialog *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TribeAddressListDialog *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TribeAddressListDialog *, int);
  void (__thiscall *draw_finish)(TribeAddressListDialog *);
  void (__thiscall *draw)(TribeAddressListDialog *);
  void (__thiscall *draw_rect)(TribeAddressListDialog *, RECT *);
  void (__thiscall *draw_offset)(TribeAddressListDialog *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TribeAddressListDialog *, RECT *);
  void (__thiscall *draw_offset2)(TribeAddressListDialog *, int, int, RECT *);
  void (__thiscall *paint)(TribeAddressListDialog *);
  int (__thiscall *wnd_proc)(TribeAddressListDialog *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TribeAddressListDialog *);
  int (__thiscall *handle_size)(TribeAddressListDialog *, int, int);
  int (__thiscall *handle_paint)(TribeAddressListDialog *);
  int (__thiscall *handle_key_down)(TribeAddressListDialog *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TribeAddressListDialog *, int, __int16);
  int (__thiscall *handle_command)(TribeAddressListDialog *, unsigned int, int);
  int (__thiscall *handle_user_command)(TribeAddressListDialog *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TribeAddressListDialog *, unsigned int, int);
  int (__thiscall *handle_scroll)(TribeAddressListDialog *, int, int);
  int (__thiscall *handle_mouse_down)(TribeAddressListDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TribeAddressListDialog *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TribeAddressListDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TribeAddressListDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TribeAddressListDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TribeAddressListDialog *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TribeAddressListDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TribeAddressListDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TribeAddressListDialog *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TribeAddressListDialog *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TribeAddressListDialog *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TribeAddressListDialog *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TribeAddressListDialog *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TribeAddressListDialog *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TribeAddressListDialog *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TribeAddressListDialog *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TribeAddressListDialog *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TribeAddressListDialog *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TribeAddressListDialog *, int, int, int, int);
  int (__thiscall *key_down_action)(TribeAddressListDialog *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TribeAddressListDialog *, int, __int16);
  int (__thiscall *action)(TribeAddressListDialog *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TribeAddressListDialog *, RECT *);
  int (__thiscall *is_inside)(TribeAddressListDialog *, int, int);
  void (__thiscall *set_focus)(TribeAddressListDialog *, int);
  void (__thiscall *set_tab_order_2)(TribeAddressListDialog *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TribeAddressListDialog *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TribeAddressListDialog *);
  unsigned __int8 (__thiscall *get_help_info)(TribeAddressListDialog *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TribeAddressListDialog *);
  int (__thiscall *restart_sound_system)(TribeAddressListDialog *);
  void (__thiscall *take_snapshot)(TribeAddressListDialog *);
  void (__thiscall *handle_reactivate)(TribeAddressListDialog *);
  int (__thiscall *pointing_at)(TribeAddressListDialog *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TribeAddressListDialog *);
  int (__thiscall *get_ideal_width)(TribeAddressListDialog *);
  void (__thiscall *draw_background)(TribeAddressListDialog *, int);
  void (__thiscall *set_ideal_size)(TribeAddressListDialog *, int, int);
  int (__thiscall *create_button_2)(TribeAddressListDialog *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TribeAddressListDialog *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TribeAddressListDialog *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TribeAddressListDialog *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TribeAddressListDialog *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TribeAddressListDialog *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TribeAddressListDialog *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TribeAddressListDialog *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TribeAddressListDialog *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TribeAddressListDialog *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TribeAddressListDialog *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TribeAddressListDialog *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TribeAddressListDialog *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TribeAddressListDialog *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TribeAddressListDialog *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TribeAddressListDialog *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TribeAddressListDialog *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TribeAddressListDialog *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TribeAddressListDialog *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TribeAddressListDialog *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TribeAddressListDialog *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TribeAddressListDialog *, TPanel *, int, int, int, int);
  int (__thiscall *setup_3)(TribeAddressListDialog *, TDrawArea *, TPanel *, int, int, unsigned __int8, int);
  int (__thiscall *setup_2)(TribeAddressListDialog *, TDrawArea *, TPanel *, int, int, char *, int, int);
};
#pragma pack(pop)

/* 253 */
#pragma pack(push, 8)
struct RGE_Dialog_List
{
  RGE_Dialog_ListVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  HWND dlg_wnd;
  TPanel *save_parent_child;
  TPanel *save_parent;
  int text_font_id;
  int input_font_id;
  int button_font_id;
  int button_sound_id;
  TTextPanel *title;
  TListPanel *list;
  TScrollBarPanel *scroll_bar;
  TButtonPanel *ok_btn;
  TButtonPanel *cancel_btn;
  __int16 list_id;
  char *list_name;
  int list_type;
  __int16 list_size;
  __int16 list_line;
  rdlg_list_info *list_info;
  char **list_text;
};
#pragma pack(pop)

/* 869 */
#pragma pack(push, 8)
struct RGE_Dialog_ListVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Dialog_List *, unsigned int);
  int (__thiscall *setup)(RGE_Dialog_List *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(RGE_Dialog_List *, RECT);
  void (__thiscall *set_rect_1)(RGE_Dialog_List *, int, int, int, int);
  void (__thiscall *set_color)(RGE_Dialog_List *, unsigned __int8);
  void (__thiscall *set_active)(RGE_Dialog_List *, int);
  void (__thiscall *unknown1)(RGE_Dialog_List *);
  void (__thiscall *unknown2)(RGE_Dialog_List *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(RGE_Dialog_List *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(RGE_Dialog_List *, int);
  void (__thiscall *set_fixed_position)(RGE_Dialog_List *, int, int, int, int);
  void (__thiscall *set_redraw)(RGE_Dialog_List *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(RGE_Dialog_List *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(RGE_Dialog_List *, int);
  void (__thiscall *draw_finish)(RGE_Dialog_List *);
  void (__thiscall *draw)(RGE_Dialog_List *);
  void (__thiscall *draw_rect)(RGE_Dialog_List *, RECT *);
  void (__thiscall *draw_offset)(RGE_Dialog_List *, int, int, RECT *);
  void (__thiscall *draw_rect2)(RGE_Dialog_List *, RECT *);
  void (__thiscall *draw_offset2)(RGE_Dialog_List *, int, int, RECT *);
  void (__thiscall *paint)(RGE_Dialog_List *);
  int (__thiscall *wnd_proc)(RGE_Dialog_List *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(RGE_Dialog_List *);
  int (__thiscall *handle_size)(RGE_Dialog_List *, int, int);
  int (__thiscall *handle_paint)(RGE_Dialog_List *);
  int (__thiscall *handle_key_down)(RGE_Dialog_List *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(RGE_Dialog_List *, int, __int16);
  int (__thiscall *handle_command)(RGE_Dialog_List *, unsigned int, int);
  int (__thiscall *handle_user_command)(RGE_Dialog_List *, unsigned int, int);
  int (__thiscall *handle_timer_command)(RGE_Dialog_List *, unsigned int, int);
  int (__thiscall *handle_scroll)(RGE_Dialog_List *, int, int);
  int (__thiscall *handle_mouse_down)(RGE_Dialog_List *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(RGE_Dialog_List *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(RGE_Dialog_List *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(RGE_Dialog_List *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(RGE_Dialog_List *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(RGE_Dialog_List *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(RGE_Dialog_List *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(RGE_Dialog_List *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(RGE_Dialog_List *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(RGE_Dialog_List *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(RGE_Dialog_List *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(RGE_Dialog_List *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(RGE_Dialog_List *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(RGE_Dialog_List *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(RGE_Dialog_List *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(RGE_Dialog_List *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(RGE_Dialog_List *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(RGE_Dialog_List *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(RGE_Dialog_List *, int, int, int, int);
  int (__thiscall *key_down_action)(RGE_Dialog_List *, int, __int16, int, int, int);
  int (__thiscall *char_action)(RGE_Dialog_List *, int, __int16);
  int (__thiscall *action)(RGE_Dialog_List *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(RGE_Dialog_List *, RECT *);
  int (__thiscall *is_inside)(RGE_Dialog_List *, int, int);
  void (__thiscall *set_focus)(RGE_Dialog_List *, int);
  void (__thiscall *set_tab_order_2)(RGE_Dialog_List *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(RGE_Dialog_List *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(RGE_Dialog_List *);
  unsigned __int8 (__thiscall *get_help_info)(RGE_Dialog_List *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(RGE_Dialog_List *);
  int (__thiscall *restart_sound_system)(RGE_Dialog_List *);
  void (__thiscall *take_snapshot)(RGE_Dialog_List *);
  void (__thiscall *handle_reactivate)(RGE_Dialog_List *);
  int (__thiscall *pointing_at)(RGE_Dialog_List *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(RGE_Dialog_List *);
  int (__thiscall *get_ideal_width)(RGE_Dialog_List *);
  void (__thiscall *draw_background)(RGE_Dialog_List *, int);
  void (__thiscall *set_ideal_size)(RGE_Dialog_List *, int, int);
  int (__thiscall *create_button_2)(RGE_Dialog_List *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(RGE_Dialog_List *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(RGE_Dialog_List *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(RGE_Dialog_List *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(RGE_Dialog_List *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(RGE_Dialog_List *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(RGE_Dialog_List *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(RGE_Dialog_List *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(RGE_Dialog_List *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(RGE_Dialog_List *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(RGE_Dialog_List *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(RGE_Dialog_List *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(RGE_Dialog_List *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(RGE_Dialog_List *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(RGE_Dialog_List *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(RGE_Dialog_List *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(RGE_Dialog_List *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(RGE_Dialog_List *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(RGE_Dialog_List *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(RGE_Dialog_List *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(RGE_Dialog_List *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(RGE_Dialog_List *, TPanel *, int, int, int, int);
  int (__thiscall *setup_3)(RGE_Dialog_List *, TDrawArea *, TPanel *, int, int, unsigned __int8, int);
  int (__thiscall *setup_2)(RGE_Dialog_List *, TDrawArea *, TPanel *, int, int, char *, int, int);
  __int16 (__thiscall *get_list_id)(RGE_Dialog_List *);
  char *(__thiscall *get_list_name)(RGE_Dialog_List *);
  int (__thiscall *create_list_2)(RGE_Dialog_List *);
  __int16 (__thiscall *get_cur_id)(RGE_Dialog_List *);
};
#pragma pack(pop)

/* 870 */
#pragma pack(push, 8)
struct rdlg_list_info
{
  char text[100];
  __int16 id;
};
#pragma pack(pop)

/* 254 */
#pragma pack(push, 8)
struct TListDialog
{
  TListDialogVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  HWND dlg_wnd;
  TPanel *save_parent_child;
  TPanel *save_parent;
  int text_font_id;
  int input_font_id;
  int button_font_id;
  int button_sound_id;
  TTextPanel *title;
  TListPanel *list;
  TScrollBarPanel *scroll_bar;
  TButtonPanel *ok_btn;
  TButtonPanel *cancel_btn;
  __int16 list_id;
  char *list_name;
};
#pragma pack(pop)

/* 871 */
#pragma pack(push, 8)
struct TListDialogVtbl
{
  void *(__thiscall *__vecDelDtor)(TListDialog *, unsigned int);
  int (__thiscall *setup)(TListDialog *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TListDialog *, RECT);
  void (__thiscall *set_rect_1)(TListDialog *, int, int, int, int);
  void (__thiscall *set_color)(TListDialog *, unsigned __int8);
  void (__thiscall *set_active)(TListDialog *, int);
  void (__thiscall *unknown1)(TListDialog *);
  void (__thiscall *unknown2)(TListDialog *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TListDialog *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TListDialog *, int);
  void (__thiscall *set_fixed_position)(TListDialog *, int, int, int, int);
  void (__thiscall *set_redraw)(TListDialog *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TListDialog *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TListDialog *, int);
  void (__thiscall *draw_finish)(TListDialog *);
  void (__thiscall *draw)(TListDialog *);
  void (__thiscall *draw_rect)(TListDialog *, RECT *);
  void (__thiscall *draw_offset)(TListDialog *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TListDialog *, RECT *);
  void (__thiscall *draw_offset2)(TListDialog *, int, int, RECT *);
  void (__thiscall *paint)(TListDialog *);
  int (__thiscall *wnd_proc)(TListDialog *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TListDialog *);
  int (__thiscall *handle_size)(TListDialog *, int, int);
  int (__thiscall *handle_paint)(TListDialog *);
  int (__thiscall *handle_key_down)(TListDialog *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TListDialog *, int, __int16);
  int (__thiscall *handle_command)(TListDialog *, unsigned int, int);
  int (__thiscall *handle_user_command)(TListDialog *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TListDialog *, unsigned int, int);
  int (__thiscall *handle_scroll)(TListDialog *, int, int);
  int (__thiscall *handle_mouse_down)(TListDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TListDialog *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TListDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TListDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TListDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TListDialog *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TListDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TListDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TListDialog *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TListDialog *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TListDialog *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TListDialog *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TListDialog *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TListDialog *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TListDialog *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TListDialog *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TListDialog *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TListDialog *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TListDialog *, int, int, int, int);
  int (__thiscall *key_down_action)(TListDialog *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TListDialog *, int, __int16);
  int (__thiscall *action)(TListDialog *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TListDialog *, RECT *);
  int (__thiscall *is_inside)(TListDialog *, int, int);
  void (__thiscall *set_focus)(TListDialog *, int);
  void (__thiscall *set_tab_order_2)(TListDialog *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TListDialog *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TListDialog *);
  unsigned __int8 (__thiscall *get_help_info)(TListDialog *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TListDialog *);
  int (__thiscall *restart_sound_system)(TListDialog *);
  void (__thiscall *take_snapshot)(TListDialog *);
  void (__thiscall *handle_reactivate)(TListDialog *);
  int (__thiscall *pointing_at)(TListDialog *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TListDialog *);
  int (__thiscall *get_ideal_width)(TListDialog *);
  void (__thiscall *draw_background)(TListDialog *, int);
  void (__thiscall *set_ideal_size)(TListDialog *, int, int);
  int (__thiscall *create_button_2)(TListDialog *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TListDialog *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TListDialog *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TListDialog *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TListDialog *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TListDialog *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TListDialog *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TListDialog *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TListDialog *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TListDialog *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TListDialog *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TListDialog *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TListDialog *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TListDialog *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TListDialog *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TListDialog *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TListDialog *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TListDialog *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TListDialog *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TListDialog *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TListDialog *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TListDialog *, TPanel *, int, int, int, int);
  int (__thiscall *setup_3)(TListDialog *, TDrawArea *, TPanel *, int, int, unsigned __int8, int);
  int (__thiscall *setup_2)(TListDialog *, TDrawArea *, TPanel *, int, int, char *, int, int);
  __int16 (__thiscall *get_list_id)(TListDialog *);
  char *(__thiscall *get_list_name)(TListDialog *);
};
#pragma pack(pop)

/* 259 */
#pragma pack(push, 8)
struct RGE_Hotkey_Handler
{
  RGE_Hotkey_HandlerVtbl *vfptr;
  int num_hotkey_groups;
  int hotkey_group_num;
  RGE_Hotkey_Info **hotkeys;
  int *hotkey_nums;
  char *filename;
  int *hotkey_group_string_id;
};
#pragma pack(pop)

/* 628 */
#pragma pack(push, 8)
struct RGE_Hotkey_HandlerVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Hotkey_Handler *, unsigned int);
};
#pragma pack(pop)

/* 261 */
#pragma pack(push, 1)
struct RGE_Pick_Info
{
};
#pragma pack(pop)

/* 264 */
#pragma pack(push, 8)
struct TRIBE_Master_Player
{
  TRIBE_Master_PlayerVtbl *vfptr;
  char name[20];
  char gbg_name2[20];
  __int16 master_object_num;
  RGE_Master_Static_Object **master_objects;
  __int16 attribute_num;
  float *attributes;
  unsigned __int8 culture;
  unsigned __int8 type;
  __int16 tribe_effect;
  __int16 team_effect;
  __int16 gbg_unique_units_techs_1;
  __int16 gbg_unique_units_techs_2;
  __int16 gbg_unique_units_techs_3;
  __int16 gbg_unique_units_techs_4;
};
#pragma pack(pop)

/* 916 */
#pragma pack(push, 8)
struct TRIBE_Master_PlayerVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Master_Player *, unsigned int);
  void (__thiscall *finish_init)(TRIBE_Master_Player *, int, RGE_Sprite **, RGE_Sound **);
  void (__thiscall *load_master_object)(TRIBE_Master_Player *, int, unsigned __int8, RGE_Sprite **, RGE_Sound **, __int16);
  void (__thiscall *create_master_object_space)(TRIBE_Master_Player *, __int16);
  void (__thiscall *load_object)(TRIBE_Master_Player *, FILE *, unsigned __int8, RGE_Sprite **, RGE_Sound **, __int16);
  void (__thiscall *save)(TRIBE_Master_Player *, int);
};
#pragma pack(pop)

/* 267 */
#pragma pack(push, 8)
struct TRIBE_Effects
{
  TRIBE_EffectsVtbl *vfptr;
  RGE_Effect *effects;
  int effect_num;
};
#pragma pack(pop)

/* 921 */
#pragma pack(push, 8)
struct TRIBE_EffectsVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Effects *, unsigned int);
  void (__thiscall *save)(TRIBE_Effects *, int);
  void (__thiscall *do_effect)(TRIBE_Effects *, __int16, RGE_Player *);
};
#pragma pack(pop)

/* 273 */
#pragma pack(push, 1)
struct AIExpertEngine
{
};
#pragma pack(pop)

/* 275 */
#pragma pack(push, 1)
struct AITimerManager
{
};
#pragma pack(pop)

/* 279 */
#pragma pack(push, 8)
struct RGE_RMM_Object_Generator
{
  RGE_RMM_Object_GeneratorVtbl *vfptr;
  RGE_Random_Map_Module *parent;
  RGE_Random_Map_Module_List *list;
  RGE_Map *map;
  RGE_Tile **map_row_offset;
  int map_width;
  int map_height;
  int max_map_width;
  int max_map_height;
  float schedule;
  unsigned __int8 *search_map;
  unsigned __int8 **search_map_rows;
  Map_Stack *stack_array;
  Map_Stack **stack_offsets;
  RGE_Game_World *world;
  RGE_Object_Info info;
  unsigned __int8 terrain_table[55];
  unsigned __int8 add_terrain;
  RGE_Zone_Map *map_zone;
  RGE_Map_Analysis_System *map_analysis_system;
  Wall_Info *wall_info;
};
#pragma pack(pop)

/* 832 */
#pragma pack(push, 8)
struct RGE_RMM_Object_GeneratorVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_RMM_Object_Generator *, unsigned int);
  unsigned __int8 (__thiscall *generate)(RGE_RMM_Object_Generator *);
};
#pragma pack(pop)

/* 410 */
#pragma pack(push, 8)
struct Wall_Info
{
  int count;
  Wall_Info_Node *list;
};
#pragma pack(pop)

/* 607 */
#pragma pack(push, 8)
struct Wall_Info_Node
{
  int count;
  unsigned __int8 passable;
  XYPoint line_start;
  XYPoint line_end;
  Wall_Info_Node *next;
};
#pragma pack(pop)

/* 283 */
#pragma pack(push, 8)
struct TRIBE_Victory_Conditions
{
  TRIBE_Victory_ConditionsVtbl *vfptr;
  RGE_Victory_Entry *victory_list;
  int list_num;
  RGE_Player *player;
  unsigned __int8 victory;
  RGE_Victory_Point_Entry *victory_point_list;
  int point_list_num;
  int tot_victory_points;
  int starting_points;
  int starting_group;
};
#pragma pack(pop)

/* 853 */
#pragma pack(push, 8)
struct TRIBE_Victory_ConditionsVtbl
{
  void (__thiscall *handle_point_condition)(TRIBE_Victory_Conditions *, RGE_Victory_Point_Entry *);
  void (__thiscall *handle_condition)(TRIBE_Victory_Conditions *, RGE_Victory_Entry *);
  char *(__thiscall *condition_description)(TRIBE_Victory_Conditions *, RGE_Victory_Entry *);
  void (__thiscall *save)(TRIBE_Victory_Conditions *, int);
};
#pragma pack(pop)

/* 285 */
#pragma pack(push, 1)
struct AIRule
{
};
#pragma pack(pop)

/* 286 */
#pragma pack(push, 1)
struct AIFact
{
};
#pragma pack(pop)

/* 287 */
#pragma pack(push, 1)
struct AILog
{
};
#pragma pack(pop)

/* 289 */
#pragma pack(push, 1)
struct AIAction
{
};
#pragma pack(pop)

/* 350 */
#pragma pack(push, 8)
struct TRIBE_Cliff_Info
{
  int info[4];
};
#pragma pack(pop)

/* 603 */
#pragma pack(push, 8)
struct TRIBE_Master_Cliff_Info
{
  int id;
  int facet;
  int id2;
  int facet2;
  TRIBE_Cliff_Info info;
  float offset_x;
  float offset_y;
};
#pragma pack(pop)

/* 291 */
#pragma pack(push, 8)
struct TRIBE_Map
{
  TRIBE_MapVtbl *vfptr;
  RGE_Tile *map;
  int map_width;
  int map_height;
  int world_width;
  int world_height;
  RGE_Tile_Size tilesizes[19];
  RGE_Tile_Set terrain_types[55];
  RGE_Border_Set border_types[16];
  RGE_Tile **map_row_offset;
  float map_min_x;
  float map_min_y;
  float map_max_x;
  float map_max_y;
  float map_max_xplus1;
  float map_max_yplus1;
  __int16 num_terrain;
  __int16 num_borders;
  __int16 max_terrain;
  __int16 tile_width;
  __int16 tile_height;
  __int16 tile_half_height;
  __int16 tile_half_width;
  __int16 elev_height;
  __int16 cur_row;
  __int16 cur_col;
  __int16 block_beg_row;
  __int16 block_end_row;
  __int16 block_beg_col;
  __int16 block_end_col;
  unsigned __int8 *search_map;
  unsigned __int8 **search_map_rows;
  unsigned __int8 any_frame_change;
  unsigned __int8 map_visible_flag;
  unsigned __int8 fog_flag;
  int UMV_Data_List_Used;
  int UMV_Data_List_Size;
  unsigned int *UMV_Data_GUID;
  UMV_Offset_Point **UMV_Data_Points;
  RGE_Obstruction_Manager_Land *OB_Manager_Land;
  RGE_Obstruction_Manager_Air *OB_Manager_Air;
  RGE_RMM_Database_Controller *random_map;
  RGE_Game_World *game_world;
  RGE_Zone_Map_List *map_zones;
  RGE_Unified_Visible_Map *unified_vis_map;
  Visible_Unit_Manager *unit_manager;
  RGE_Map_Copy_Data *map_copy_data;
  int OL_SystemActive;
  unsigned __int8 *OL_ZoneNum;
  int OL_MaxListSize[4];
  int OL_HeapSize[4];
  TOLM_Info OL_Pool[4];
  RGE_View *theView;
  int DisableTileCaching;
  DynamicTileCacheNode *DynamicTileCache;
  int DynamicTileCacheSize;
  int DynamicTileCacheUsed;
  DynamicTileCacheNode *UsedByTypeHead[17];
  DynamicTileCacheNode *UsedByTypeTail[17];
  DynamicTileCacheNode *FreeByType[17];
  TShape *ScratchTile[17];
  TRIBE_Game *Game;
  RGE_Player *rge_player;
  RGE_Game_World *rge_game_world;
  RGE_Map_Gen_Info *rge_map_gen_information;
  unsigned __int8 *zones;
  int old_cliff_x;
  int old_cliff_y;
  int safe_cliff_x;
  int safe_cliff_y;
  int old_cliff_direction;
  TRIBE_Master_Cliff_Info cliff_master_table[256];
};
#pragma pack(pop)

/* 602 */
#pragma pack(push, 8)
struct TRIBE_MapVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Map *, unsigned int);
  void (__thiscall *data_load_random_map)(TRIBE_Map *, int);
  void (__thiscall *load_random_map)(TRIBE_Map *, char *, char *, char *, char *);
  unsigned __int8 (__thiscall *do_terrain_brush)(TRIBE_Map *, int, int, int, unsigned __int8);
  unsigned __int8 (__thiscall *do_terrain_brush_stroke)(TRIBE_Map *, int, int, int, int, int, unsigned __int8);
  unsigned __int8 (__thiscall *do_elevation_brush)(TRIBE_Map *, int, int, int, unsigned __int8);
  unsigned __int8 (__thiscall *do_elevation_brush_stroke)(TRIBE_Map *, int, int, int, int, int, unsigned __int8);
  unsigned __int8 (__thiscall *do_cliff_brush)(TRIBE_Map *, int, int, unsigned __int8, unsigned __int8);
  unsigned __int8 (__thiscall *do_cliff_brush_stroke)(TRIBE_Map *, int, int, int, int, unsigned __int8, unsigned __int8);
  unsigned __int8 (__thiscall *do_map_copy_brush)(TRIBE_Map *, int, int, int *, int *, int *, int *);
  unsigned __int8 (__thiscall *do_map_copy_brush_stroke)(TRIBE_Map *, int, int, int, int);
  void (__thiscall *map_generate)(TRIBE_Map *, int, int, char *, RGE_Player_Info *, int);
  void (__thiscall *map_generate2)(TRIBE_Map *, RGE_Game_World *, int, int, unsigned __int8, int);
  void (__thiscall *save)(TRIBE_Map *, int);
  void (__thiscall *init_tile_sizes)(TRIBE_Map *);
  void (__thiscall *delete_cliff)(TRIBE_Map *, int, int);
  unsigned __int8 (__thiscall *do_map_erase_brush_stroke)(TRIBE_Map *, int, int, int, int, __int16, unsigned __int8);
  unsigned __int8 (__thiscall *do_map_erase_brush)(TRIBE_Map *, int, int, __int16, unsigned __int8);
};
#pragma pack(pop)

/* 292 */
#pragma pack(push, 8)
struct TRIBE_RMM_Database_Controller
{
  TRIBE_RMM_Database_ControllerVtbl *vfptr;
  RGE_Random_Map_Module *parent;
  RGE_Random_Map_Module_List *list;
  RGE_Map *map;
  RGE_Tile **map_row_offset;
  int map_width;
  int map_height;
  int max_map_width;
  int max_map_height;
  float schedule;
  unsigned __int8 *search_map;
  unsigned __int8 **search_map_rows;
  Map_Stack *stack_array;
  Map_Stack **stack_offsets;
  RGE_Game_World *world;
  int map_type;
  int number_of_players;
  RGE_Land_Info land_info;
  RGE_Terrain_Info terrain_info;
  RGE_Object_Info object_info;
  RGE_Elevation_Info elevation_info;
  RGE_Map_Data map_info;
};
#pragma pack(pop)

/* 846 */
#pragma pack(push, 8)
struct TRIBE_RMM_Database_ControllerVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_RMM_Database_Controller *, unsigned int);
  unsigned __int8 (__thiscall *generate)(TRIBE_RMM_Database_Controller *);
  void (__thiscall *add_land_module)(TRIBE_RMM_Database_Controller *, unsigned __int8);
  void (__thiscall *add_terrain_module)(TRIBE_RMM_Database_Controller *);
  void (__thiscall *add_object_module)(TRIBE_RMM_Database_Controller *);
  void (__thiscall *add_elevation_module)(TRIBE_RMM_Database_Controller *);
  unsigned __int8 (__thiscall *init)(TRIBE_RMM_Database_Controller *, RGE_Map *, RGE_Game_World *, unsigned __int8, int, unsigned __int8);
  unsigned __int8 (__thiscall *de_init)(TRIBE_RMM_Database_Controller *);
};
#pragma pack(pop)

/* 718 */
#pragma pack(push, 8)
struct TRIBE_Gaia_Reproduction_List
{
  RGE_Object_List *object_list;
  float growth_rate;
  float remainder;
  int max;
};
#pragma pack(pop)

/* 719 */
#pragma pack(push, 8)
struct TRIBE_WolfInfo
{
  int mWolfID;
  float mDistance;
};
#pragma pack(pop)

/* 293 */
#pragma pack(push, 8)
struct TRIBE_Gaia
{
  TRIBE_PlayerVtbl *vfptr;
  int computerPlayerValue;
  int pathingAttemptCapValue;
  int pathingDelayCapValue;
  int currentUpdatePathingAttemptsValue;
  int checksum;
  int position_checksum;
  int action_checksum;
  unsigned __int8 checksum_created_this_update;
  int mLineRatio;
  int mColumnRatio;
  int mMinColumnDistance;
  int mColumnToLineDistance;
  int mAutoFormations;
  float mFormationInfluenceDistance;
  int mBreakAutoFormationsBySpeed;
  float pendingDebit[4];
  float escrow[4];
  float escrowPercentage[4];
  int master_object_num;
  RGE_Master_Static_Object **master_objects;
  RGE_Player_Object_List *objects;
  RGE_Player_Object_List *sleeping_objects;
  RGE_Player_Object_List *doppleganger_objects;
  RGE_Victory_Conditions *victory_conditions;
  RGE_Visible_Map *visible;
  TRIBE_World *world;
  RGE_Doppleganger_Creator *doppleganger_creator;
  RGE_Visible_Object_Updator *visible_object_updator;
  unsigned __int8 gbg_unknown_mask;
  char *name;
  int id;
  unsigned __int8 type;
  unsigned __int8 culture;
  unsigned __int8 game_status;
  unsigned __int8 resigned;
  int attribute_num;
  float *attributes;
  RGE_Tile_List tile_list;
  RGE_Tile_List diam_tile_list;
  unsigned __int8 *relations;
  int unitDiplomacy[9];
  int mutualAlly[9];
  unsigned int mutualExploredMask;
  unsigned int mutualVisibleMask;
  unsigned int nonMutualVisibleMask;
  unsigned int RemoveVisibleBits[9];
  int allied_LOS_Enable;
  unsigned __int8 allied_victory;
  unsigned __int8 master_player_id;
  RGE_Color_Table *color_table;
  RGE_Color_Table *true_color_table;
  int tribe_effect;
  int team_effect;
  Visible_Resource_Manager *VR_List;
  float view_x;
  float view_y;
  __int16 map_x;
  __int16 map_y;
  RGE_View_Stack *view_stack;
  int view_stack_size;
  int start_x;
  int start_y;
  float map_scroll_vector_x;
  float map_scroll_vector_y;
  float map_scroll_end_x;
  float map_scroll_end_y;
  float map_scroll_start_x;
  float map_scroll_start_y;
  float map_scroll_total_distance;
  float map_scroll_distance;
  __int16 selected_start_col;
  __int16 selected_start_row;
  __int16 selected_end_col;
  __int16 selected_end_row;
  __int16 replacement_terrain;
  __int16 replacement_overlay;
  __int16 replacement_overlay_shape;
  RGE_Static_Object *selected_obj;
  RGE_Static_Object *sel_list[40];
  unsigned int sel_object_properties;
  int sel_count;
  unsigned __int8 groups_used[127];
  __int16 object_category_count[1600];
  __int16 object_group_count[100];
  __int16 built_object_category_count[1600];
  __int16 built_object_group_count[100];
  __int16 total_unit_count;
  __int16 total_building_count;
  __int16 built_unit_count;
  __int16 built_building_count;
  int easiest_reaction_percentage;
  int easier_reaction_percentage;
  unsigned __int8 task_ungrouped_soldiers;
  unsigned __int8 RGE_Player_gap[3];
  TRIBE_Player_Tech *tech_tree;
  int fog_update;
  int update_count;
  int enemy_alert_count;
  int regular_attack_count;
  unsigned __int8 regular_attack_flag;
  float regular_attack_x;
  float regular_attack_y;
  int town_attack_count;
  unsigned __int8 town_attack_flag;
  float town_attack_x;
  float town_attack_y;
  Combat_Notifications *combat_notifications;
  int updateCountNeedHelp;
  float update_time;
  TribeMainDecisionAIModule *playerAI;
  char aiStatusInformationValue[256];
  char aiStatusInformationValue2[256];
  char aiStatusInformationValue3[256];
  char aiStatusInformationValue4[256];
  char aiStatusInformationValue5[256];
  char aiStatusInformationValue6[256];
  float ruin_held_time;
  float artifact_held_time;
  TRIBE_History_Info *history;
  int update_history_count;
  int old_kills;
  int old_hit_points;
  int old_razings;
  int battle_flag;
  int razings_flag;
  int total_kills;
  int total_hit_points;
  int total_razings;
  int old_player_kills[9];
  TRIBE_Tech_Tree *tech_tree_help;
  unsigned __int8 chance_to_dodge_missiles;
  unsigned __int8 chance_for_archers_to_maintain_distance;
  unsigned __int8 diplomacy[9];
  unsigned __int8 intelligence[9];
  unsigned __int8 trade[9];
  Diplomacy_Offer offer[9];
  unsigned int treaty_time[9];
  int treaty_exists[9];
  __int16 fealty;
  unsigned __int8 offboard_trade_route_explored[20];
  unsigned __int8 offboard_trade_route_being_explored[20];
  RGE_Object_List *relic_list;
  int gather_point_id;
  float gather_point_x;
  float gather_point_y;
  float gather_point_z;
  int retreat_point_id;
  float retreat_point_x;
  float retreat_point_y;
  float retreat_point_z;
  unsigned __int8 prod_queue_on;
  RGE_Object_List *gate_list;
  int cp_nomad_tc_build_lock;
  int open_gates_for_pathing_count;
  int max_trade_amount;
  int old_max_trade_amount;
  int max_trade_limit;
  int current_wood_limit;
  int current_food_limit;
  int current_stone_limit;
  int current_ore_limit;
  int commodity_volumn_delta;
  float trade_vig_rate;
  int trade_refresh_timer;
  int trade_refresh_rate;
  int farm_queue_count;
  float update_time_TRIBE_Gaia;
  int update_nature;
  TRIBE_Gaia_Reproduction_List creatures[5];
  unsigned __int8 end_game;
  unsigned int mNextWolfAttackUpdateTime;
  unsigned int mWolfAttackUpdateInterval;
  unsigned int mWolfAttackStopTime;
  float mMinVillagerDistance;
  float mTcPositionX[9];
  float mTcPositionY[9];
  int mWolfCurrentPlayer;
  int mWolfCurrentVillagerList[10];
  int mWolfCurrentVillager;
  int mWolfVillagerCount;
  TRIBE_WolfInfo mWolfList[10][5];
  int mCurrentWolf;
  int mWolfCount[10];
};
#pragma pack(pop)

/* 296 */
#pragma pack(push, 1)
struct TribeTacticalAIModule
{
};
#pragma pack(pop)

/* 298 */
#pragma pack(push, 1)
struct TribeInformationAIModule
{
};
#pragma pack(pop)

/* 316 */
#pragma pack(push, 8)
struct BuildItem
{
  BuildItemVtbl *vfptr;
  int typeIDValue;
  int gameIDValue;
  int uniqueIDValue;
  char nameValue[64];
  float xValue;
  float yValue;
  float zValue;
  float xSizeValue;
  float ySizeValue;
  float zSizeValue;
  int skipValue;
  BuildItem *next;
  BuildItem *prev;
  int buildCategoryValue;
  int numberValue;
  int priorityValue;
  int progressValue;
  int builtValue;
  int buildAttemptsValue;
  int buildFromValue;
  int terrainSetValue;
  int terrainAdjacencyValue[2];
  int placeOnElevationValue;
  int numberBuildsValue;
  int buildCapValue;
  int skipCyclesValue;
  unsigned __int8 permanentSkipValue;
  int mForward;
};
#pragma pack(pop)

/* 299 */
#pragma pack(push, 8)
struct TribeBuildAIModule
{
  TribeBuildAIModuleVtbl *vfptr;
  AIModuleID idValue;
  int playerNumberValue;
  char playerNameValue[64];
  int runningValue;
  int pausedValue;
  int logHistoryValue;
  int logCommonHistoryValue;
  FILE *historyLogFile;
  char historyLogFilename[64];
  int intelligenceLevelValue;
  int priorityValue;
  int processFrameValue;
  BuildItem buildList;
  int uniqueIDValue;
  char buildListNameValue[257];
  char lastBuildItemRequestedValue[257];
  char currentBuildItemRequestedValue[257];
  char nextBuildItemRequestedValue[257];
  int numberItemsIntoBuildListValue;
  ManagedArray_int_ typesToIgnore;
  TribeMainDecisionAIModule *md;
  int queuedObjectCount[600];
  int queuedBuildingCount;
  int queuedUnitCount;
};
#pragma pack(pop)

/* 947 */
#pragma pack(push, 8)
struct TribeBuildAIModuleVtbl
{
  void *(__thiscall *__vecDelDtor)(TribeBuildAIModule *, unsigned int);
  int (__thiscall *loggingHistory)(TribeBuildAIModule *);
  void (__thiscall *setLogHistory)(TribeBuildAIModule *, int);
  void (__thiscall *toggleLogHistory)(TribeBuildAIModule *);
  void (__thiscall *setHistoryFilename)(TribeBuildAIModule *, char *);
  int (__thiscall *loggingCommonHistory)(TribeBuildAIModule *);
  void (__thiscall *setLogCommonHistory)(TribeBuildAIModule *, int);
  void (__thiscall *toggleLogCommonHistory)(TribeBuildAIModule *);
  int (__thiscall *loadState)(TribeBuildAIModule *, char *);
  int (__thiscall *saveState)(TribeBuildAIModule *, char *);
  int (__thiscall *gleanState)(TribeBuildAIModule *, int);
  int (__thiscall *processMessage)(TribeBuildAIModule *, AIModuleMessage *);
  int (__thiscall *update)(TribeBuildAIModule *, int);
  void (__thiscall *setCallbackMessage)(TribeBuildAIModule *, AIModuleMessage *);
  int (__thiscall *filterOutMessage)(TribeBuildAIModule *, AIModuleMessage *);
  int (__thiscall *save)(TribeBuildAIModule *, int);
  void (__thiscall *displayBuildList)(TribeBuildAIModule *);
  int (__thiscall *numberBuiltOrInProgressItemsOfType)(TribeBuildAIModule *, int, int);
};
#pragma pack(pop)

/* 948 */
#pragma pack(push, 8)
struct BuildItemVtbl
{
  void *(__thiscall *__vecDelDtor)(BuildItem *, unsigned int);
};
#pragma pack(pop)

/* 300 */
#pragma pack(push, 8)
struct BuildAIModule
{
  BuildAIModuleVtbl *vfptr;
  AIModuleID idValue;
  int playerNumberValue;
  char playerNameValue[64];
  int runningValue;
  int pausedValue;
  int logHistoryValue;
  int logCommonHistoryValue;
  FILE *historyLogFile;
  char historyLogFilename[64];
  int intelligenceLevelValue;
  int priorityValue;
  int processFrameValue;
  BuildItem buildList;
  int uniqueIDValue;
  char buildListNameValue[257];
  char lastBuildItemRequestedValue[257];
  char currentBuildItemRequestedValue[257];
  char nextBuildItemRequestedValue[257];
  int numberItemsIntoBuildListValue;
  ManagedArray_int_ typesToIgnore;
};
#pragma pack(pop)

/* 950 */
#pragma pack(push, 8)
struct BuildAIModuleVtbl
{
  void *(__thiscall *__vecDelDtor)(BuildAIModule *, unsigned int);
  int (__thiscall *loggingHistory)(BuildAIModule *);
  void (__thiscall *setLogHistory)(BuildAIModule *, int);
  void (__thiscall *toggleLogHistory)(BuildAIModule *);
  void (__thiscall *setHistoryFilename)(BuildAIModule *, char *);
  int (__thiscall *loggingCommonHistory)(BuildAIModule *);
  void (__thiscall *setLogCommonHistory)(BuildAIModule *, int);
  void (__thiscall *toggleLogCommonHistory)(BuildAIModule *);
  int (__thiscall *loadState)(BuildAIModule *, char *);
  int (__thiscall *saveState)(BuildAIModule *, char *);
  int (__thiscall *gleanState)(BuildAIModule *, int);
  int (__thiscall *processMessage)(BuildAIModule *, AIModuleMessage *);
  int (__thiscall *update)(BuildAIModule *, int);
  void (__thiscall *setCallbackMessage)(BuildAIModule *, AIModuleMessage *);
  int (__thiscall *filterOutMessage)(BuildAIModule *, AIModuleMessage *);
  int (__thiscall *save)(BuildAIModule *, int);
  void (__thiscall *displayBuildList)(BuildAIModule *);
  int (__thiscall *numberBuiltOrInProgressItemsOfType)(BuildAIModule *, int, int);
};
#pragma pack(pop)

/* 301 */
#pragma pack(push, 8)
struct AIModule
{
  AIModuleVtbl *vfptr;
  AIModuleID idValue;
  int playerNumberValue;
  char playerNameValue[64];
  int runningValue;
  int pausedValue;
  int logHistoryValue;
  int logCommonHistoryValue;
  FILE *historyLogFile;
  char historyLogFilename[64];
  int intelligenceLevelValue;
  int priorityValue;
  int processFrameValue;
};
#pragma pack(pop)

/* 933 */
#pragma pack(push, 8)
struct AIModuleVtbl
{
  void *(__thiscall *__vecDelDtor)(AIModule *, unsigned int);
  int (__thiscall *loggingHistory)(AIModule *);
  void (__thiscall *setLogHistory)(AIModule *, int);
  void (__thiscall *toggleLogHistory)(AIModule *);
  void (__thiscall *setHistoryFilename)(AIModule *, char *);
  int (__thiscall *loggingCommonHistory)(AIModule *);
  void (__thiscall *setLogCommonHistory)(AIModule *, int);
  void (__thiscall *toggleLogCommonHistory)(AIModule *);
  int (__thiscall *loadState)(AIModule *, char *);
  int (__thiscall *saveState)(AIModule *, char *);
  int (__thiscall *gleanState)(AIModule *, int);
  int (__thiscall *processMessage)(AIModule *, AIModuleMessage *);
  int (__thiscall *update)(AIModule *, int);
  void (__thiscall *setCallbackMessage)(AIModule *, AIModuleMessage *);
  int (__thiscall *filterOutMessage)(AIModule *, AIModuleMessage *);
};
#pragma pack(pop)

/* 304 */
#pragma pack(push, 8)
struct ConstructionItem
{
  ConstructionItemVtbl *vfptr;
  int typeIDValue;
  int gameIDValue;
  int uniqueIDValue;
  char nameValue[64];
  float xValue;
  float yValue;
  float zValue;
  float xSizeValue;
  float ySizeValue;
  float zSizeValue;
  int skipValue;
  ConstructionItem *next;
  ConstructionItem *prev;
  int inProgressValue;
  int builtValue;
  int buildAttemptsValue;
};
#pragma pack(pop)

/* 944 */
typedef int ConstructionAIModule__PlacementResult;

/* 302 */
#pragma pack(push, 8)
struct TribeConstructionAIModule
{
  TribeConstructionAIModuleVtbl *vfptr;
  AIModuleID idValue;
  int playerNumberValue;
  char playerNameValue[64];
  int runningValue;
  int pausedValue;
  int logHistoryValue;
  int logCommonHistoryValue;
  FILE *historyLogFile;
  char historyLogFilename[64];
  int intelligenceLevelValue;
  int priorityValue;
  int processFrameValue;
  int numberConstructionLotsValue;
  ConstructionItem constructionLots;
  int numberRandomConstructionLotsValue;
  ConstructionItem randomConstructionLots;
  char constructionPlanNameValue[257];
  float xReferencePointValue;
  float yReferencePointValue;
  float zReferencePointValue;
  int mapXSizeValue;
  int mapYSizeValue;
  ConstructionAIModule__PlacementResult lastPlacementReturnCodeValue;
  TribeMainDecisionAIModule *md;
};
#pragma pack(pop)

/* 943 */
#pragma pack(push, 8)
struct TribeConstructionAIModuleVtbl
{
  void *(__thiscall *__vecDelDtor)(TribeConstructionAIModule *, unsigned int);
  int (__thiscall *loggingHistory)(TribeConstructionAIModule *);
  void (__thiscall *setLogHistory)(TribeConstructionAIModule *, int);
  void (__thiscall *toggleLogHistory)(TribeConstructionAIModule *);
  void (__thiscall *setHistoryFilename)(TribeConstructionAIModule *, char *);
  int (__thiscall *loggingCommonHistory)(TribeConstructionAIModule *);
  void (__thiscall *setLogCommonHistory)(TribeConstructionAIModule *, int);
  void (__thiscall *toggleLogCommonHistory)(TribeConstructionAIModule *);
  int (__thiscall *loadState)(TribeConstructionAIModule *, char *);
  int (__thiscall *saveState)(TribeConstructionAIModule *, char *);
  int (__thiscall *gleanState)(TribeConstructionAIModule *, int);
  int (__thiscall *processMessage)(TribeConstructionAIModule *, AIModuleMessage *);
  int (__thiscall *update)(TribeConstructionAIModule *, int);
  void (__thiscall *setCallbackMessage)(TribeConstructionAIModule *, AIModuleMessage *);
  int (__thiscall *filterOutMessage)(TribeConstructionAIModule *, AIModuleMessage *);
  int (__thiscall *save)(TribeConstructionAIModule *, int);
  int (__thiscall *loadConstructionPlan)(TribeConstructionAIModule *, char *, int, int, float, float, float);
  ConstructionItem *(__thiscall *placeStructure)(TribeConstructionAIModule *, BuildItem *);
  void (__thiscall *setBuilt)(TribeConstructionAIModule *, ConstructionItem *, int);
  int (__thiscall *unplaceStructure_2)(TribeConstructionAIModule *, float, float, int);
  int (__thiscall *unplaceStructure_1)(TribeConstructionAIModule *, ConstructionItem *, int);
  void (__thiscall *decrementBuildAttempts)(TribeConstructionAIModule *, float, float, int);
  void (__thiscall *incrementBuildAttempts)(TribeConstructionAIModule *, float, float, int);
};
#pragma pack(pop)

/* 946 */
#pragma pack(push, 8)
struct ConstructionItemVtbl
{
  void *(__thiscall *__vecDelDtor)(ConstructionItem *, unsigned int);
};
#pragma pack(pop)

/* 303 */
#pragma pack(push, 8)
struct ConstructionAIModule
{
  ConstructionAIModuleVtbl *vfptr;
  AIModuleID idValue;
  int playerNumberValue;
  char playerNameValue[64];
  int runningValue;
  int pausedValue;
  int logHistoryValue;
  int logCommonHistoryValue;
  FILE *historyLogFile;
  char historyLogFilename[64];
  int intelligenceLevelValue;
  int priorityValue;
  int processFrameValue;
  int numberConstructionLotsValue;
  ConstructionItem constructionLots;
  int numberRandomConstructionLotsValue;
  ConstructionItem randomConstructionLots;
  char constructionPlanNameValue[257];
  float xReferencePointValue;
  float yReferencePointValue;
  float zReferencePointValue;
  int mapXSizeValue;
  int mapYSizeValue;
  ConstructionAIModule__PlacementResult lastPlacementReturnCodeValue;
};
#pragma pack(pop)

/* 945 */
#pragma pack(push, 8)
struct ConstructionAIModuleVtbl
{
  void *(__thiscall *__vecDelDtor)(ConstructionAIModule *, unsigned int);
  int (__thiscall *loggingHistory)(ConstructionAIModule *);
  void (__thiscall *setLogHistory)(ConstructionAIModule *, int);
  void (__thiscall *toggleLogHistory)(ConstructionAIModule *);
  void (__thiscall *setHistoryFilename)(ConstructionAIModule *, char *);
  int (__thiscall *loggingCommonHistory)(ConstructionAIModule *);
  void (__thiscall *setLogCommonHistory)(ConstructionAIModule *, int);
  void (__thiscall *toggleLogCommonHistory)(ConstructionAIModule *);
  int (__thiscall *loadState)(ConstructionAIModule *, char *);
  int (__thiscall *saveState)(ConstructionAIModule *, char *);
  int (__thiscall *gleanState)(ConstructionAIModule *, int);
  int (__thiscall *processMessage)(ConstructionAIModule *, AIModuleMessage *);
  int (__thiscall *update)(ConstructionAIModule *, int);
  void (__thiscall *setCallbackMessage)(ConstructionAIModule *, AIModuleMessage *);
  int (__thiscall *filterOutMessage)(ConstructionAIModule *, AIModuleMessage *);
  int (__thiscall *save)(ConstructionAIModule *, int);
  int (__thiscall *loadConstructionPlan)(ConstructionAIModule *, char *, int, int, float, float, float);
  ConstructionItem *(__thiscall *placeStructure)(ConstructionAIModule *, BuildItem *);
  void (__thiscall *setBuilt)(ConstructionAIModule *, ConstructionItem *, int);
  int (__thiscall *unplaceStructure_2)(ConstructionAIModule *, float, float, int);
  int (__thiscall *unplaceStructure_1)(ConstructionAIModule *, ConstructionItem *, int);
  void (__thiscall *decrementBuildAttempts)(ConstructionAIModule *, float, float, int);
  void (__thiscall *incrementBuildAttempts)(ConstructionAIModule *, float, float, int);
};
#pragma pack(pop)

/* 305 */
#pragma pack(push, 8)
struct BaseItem
{
  BaseItemVtbl *vfptr;
  int typeIDValue;
  int gameIDValue;
  int uniqueIDValue;
  char nameValue[64];
  float xValue;
  float yValue;
  float zValue;
  float xSizeValue;
  float ySizeValue;
  float zSizeValue;
  int skipValue;
};
#pragma pack(pop)

/* 949 */
#pragma pack(push, 8)
struct BaseItemVtbl
{
  void *(__thiscall *__vecDelDtor)(BaseItem *, unsigned int);
};
#pragma pack(pop)

/* 306 */
#pragma pack(push, 8)
struct DiplomacyAIModule
{
  DiplomacyAIModuleVtbl *vfptr;
  AIModuleID idValue;
  int playerNumberValue;
  char playerNameValue[64];
  int runningValue;
  int pausedValue;
  int logHistoryValue;
  int logCommonHistoryValue;
  FILE *historyLogFile;
  char historyLogFilename[64];
  int intelligenceLevelValue;
  int priorityValue;
  int processFrameValue;
  MainDecisionAIModule *md;
  int dislikeTable[10];
  int likeTable[10];
  unsigned __int8 changeableTable[10];
  int currentMostHatedEnemy;
};
#pragma pack(pop)

/* 942 */
#pragma pack(push, 8)
struct DiplomacyAIModuleVtbl
{
  void *(__thiscall *__vecDelDtor)(DiplomacyAIModule *, unsigned int);
  int (__thiscall *loggingHistory)(DiplomacyAIModule *);
  void (__thiscall *setLogHistory)(DiplomacyAIModule *, int);
  void (__thiscall *toggleLogHistory)(DiplomacyAIModule *);
  void (__thiscall *setHistoryFilename)(DiplomacyAIModule *, char *);
  int (__thiscall *loggingCommonHistory)(DiplomacyAIModule *);
  void (__thiscall *setLogCommonHistory)(DiplomacyAIModule *, int);
  void (__thiscall *toggleLogCommonHistory)(DiplomacyAIModule *);
  int (__thiscall *loadState)(DiplomacyAIModule *, char *);
  int (__thiscall *saveState)(DiplomacyAIModule *, char *);
  int (__thiscall *gleanState)(DiplomacyAIModule *, int);
  int (__thiscall *processMessage)(DiplomacyAIModule *, AIModuleMessage *);
  int (__thiscall *update)(DiplomacyAIModule *, int);
  void (__thiscall *setCallbackMessage)(DiplomacyAIModule *, AIModuleMessage *);
  int (__thiscall *filterOutMessage)(DiplomacyAIModule *, AIModuleMessage *);
  int (__thiscall *save)(DiplomacyAIModule *, int);
};
#pragma pack(pop)

/* 315 */
#pragma pack(push, 1)
struct MainDecisionAIModule
{
};
#pragma pack(pop)

/* 307 */
#pragma pack(push, 8)
struct EmotionalAIModule
{
  EmotionalAIModuleVtbl *vfptr;
  AIModuleID idValue;
  int playerNumberValue;
  char playerNameValue[64];
  int runningValue;
  int pausedValue;
  int logHistoryValue;
  int logCommonHistoryValue;
  FILE *historyLogFile;
  char historyLogFilename[64];
  int intelligenceLevelValue;
  int priorityValue;
  int processFrameValue;
  MainDecisionAIModule *md;
  int stateValue[6];
  char stateNameValue[6][30];
};
#pragma pack(pop)

/* 941 */
#pragma pack(push, 8)
struct EmotionalAIModuleVtbl
{
  void *(__thiscall *__vecDelDtor)(EmotionalAIModule *, unsigned int);
  int (__thiscall *loggingHistory)(EmotionalAIModule *);
  void (__thiscall *setLogHistory)(EmotionalAIModule *, int);
  void (__thiscall *toggleLogHistory)(EmotionalAIModule *);
  void (__thiscall *setHistoryFilename)(EmotionalAIModule *, char *);
  int (__thiscall *loggingCommonHistory)(EmotionalAIModule *);
  void (__thiscall *setLogCommonHistory)(EmotionalAIModule *, int);
  void (__thiscall *toggleLogCommonHistory)(EmotionalAIModule *);
  int (__thiscall *loadState)(EmotionalAIModule *, char *);
  int (__thiscall *saveState)(EmotionalAIModule *, char *);
  int (__thiscall *gleanState)(EmotionalAIModule *, int);
  int (__thiscall *processMessage)(EmotionalAIModule *, AIModuleMessage *);
  int (__thiscall *update)(EmotionalAIModule *, int);
  void (__thiscall *setCallbackMessage)(EmotionalAIModule *, AIModuleMessage *);
  int (__thiscall *filterOutMessage)(EmotionalAIModule *, AIModuleMessage *);
  int (__thiscall *save)(EmotionalAIModule *, int);
};
#pragma pack(pop)

/* 308 */
#pragma pack(push, 1)
struct InformationAIModule
{
};
#pragma pack(pop)

/* 309 */
#pragma pack(push, 8)
struct TribeResourceAIModule
{
  TribeResourceAIModuleVtbl *vfptr;
  AIModuleID idValue;
  int playerNumberValue;
  char playerNameValue[64];
  int runningValue;
  int pausedValue;
  int logHistoryValue;
  int logCommonHistoryValue;
  FILE *historyLogFile;
  char historyLogFilename[64];
  int intelligenceLevelValue;
  int priorityValue;
  int processFrameValue;
  TribeMainDecisionAIModule *md;
  int numberResourcesValue;
};
#pragma pack(pop)

/* 940 */
#pragma pack(push, 8)
struct TribeResourceAIModuleVtbl
{
  void *(__thiscall *__vecDelDtor)(TribeResourceAIModule *, unsigned int);
  int (__thiscall *loggingHistory)(TribeResourceAIModule *);
  void (__thiscall *setLogHistory)(TribeResourceAIModule *, int);
  void (__thiscall *toggleLogHistory)(TribeResourceAIModule *);
  void (__thiscall *setHistoryFilename)(TribeResourceAIModule *, char *);
  int (__thiscall *loggingCommonHistory)(TribeResourceAIModule *);
  void (__thiscall *setLogCommonHistory)(TribeResourceAIModule *, int);
  void (__thiscall *toggleLogCommonHistory)(TribeResourceAIModule *);
  int (__thiscall *loadState)(TribeResourceAIModule *, char *);
  int (__thiscall *saveState)(TribeResourceAIModule *, char *);
  int (__thiscall *gleanState)(TribeResourceAIModule *, int);
  int (__thiscall *processMessage)(TribeResourceAIModule *, AIModuleMessage *);
  int (__thiscall *update)(TribeResourceAIModule *, int);
  void (__thiscall *setCallbackMessage)(TribeResourceAIModule *, AIModuleMessage *);
  int (__thiscall *filterOutMessage)(TribeResourceAIModule *, AIModuleMessage *);
  int (__thiscall *save)(TribeResourceAIModule *, int);
};
#pragma pack(pop)

/* 310 */
#pragma pack(push, 8)
struct StrategyAIModule
{
  StrategyAIModuleVtbl *vfptr;
  AIModuleID idValue;
  int playerNumberValue;
  char playerNameValue[64];
  int runningValue;
  int pausedValue;
  int logHistoryValue;
  int logCommonHistoryValue;
  FILE *historyLogFile;
  char historyLogFilename[64];
  int intelligenceLevelValue;
  int priorityValue;
  int processFrameValue;
};
#pragma pack(pop)

/* 934 */
#pragma pack(push, 8)
struct StrategyAIModuleVtbl
{
  void *(__thiscall *__vecDelDtor)(StrategyAIModule *, unsigned int);
  int (__thiscall *loggingHistory)(StrategyAIModule *);
  void (__thiscall *setLogHistory)(StrategyAIModule *, int);
  void (__thiscall *toggleLogHistory)(StrategyAIModule *);
  void (__thiscall *setHistoryFilename)(StrategyAIModule *, char *);
  int (__thiscall *loggingCommonHistory)(StrategyAIModule *);
  void (__thiscall *setLogCommonHistory)(StrategyAIModule *, int);
  void (__thiscall *toggleLogCommonHistory)(StrategyAIModule *);
  int (__thiscall *loadState)(StrategyAIModule *, char *);
  int (__thiscall *saveState)(StrategyAIModule *, char *);
  int (__thiscall *gleanState)(StrategyAIModule *, int);
  int (__thiscall *processMessage)(StrategyAIModule *, AIModuleMessage *);
  int (__thiscall *update)(StrategyAIModule *, int);
  void (__thiscall *setCallbackMessage)(StrategyAIModule *, AIModuleMessage *);
  int (__thiscall *filterOutMessage)(StrategyAIModule *, AIModuleMessage *);
};
#pragma pack(pop)

/* 312 */
#pragma pack(push, 1)
struct TacticalAIModule
{
};
#pragma pack(pop)

/* 313 */
#pragma pack(push, 1)
struct TacticalAIGroup
{
};
#pragma pack(pop)

/* 314 */
#pragma pack(push, 1)
struct TradeAIModule
{
};
#pragma pack(pop)

/* 318 */
#pragma pack(push, 8)
struct TRIBE_Action_Make_Obj
{
  TRIBE_Action_Make_ObjVtbl *vfptr;
  __int16 action_type;
  RGE_Action_Object *obj;
  unsigned __int8 state;
  RGE_Static_Object *target_obj;
  RGE_Static_Object *target_obj2;
  int targetID;
  int target2ID;
  float target_x;
  float target_y;
  float target_z;
  float timer;
  RGE_Task *task;
  RGE_Action_List *sub_actions;
  RGE_Sprite *sprite;
  unsigned __int8 subActionValue;
  unsigned __int8 mTargetMovedState;
  unsigned __int8 RGE_Action_gap[2];
  __int16 obj_id;
  float work_done;
  int unique_id;
  int side_switch;
};
#pragma pack(pop)

/* 732 */
#pragma pack(push, 8)
struct TRIBE_Action_Make_ObjVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Action_Make_Obj *, unsigned int);
  int (__thiscall *setup_2)(TRIBE_Action_Make_Obj *, RGE_Action_Object *);
  int (__thiscall *setup_1)(TRIBE_Action_Make_Obj *, int, RGE_Action_Object *);
  RGE_Action_List *(__thiscall *create_action_list)(TRIBE_Action_Make_Obj *, RGE_Action_Object *);
  void (__thiscall *rehook)(TRIBE_Action_Make_Obj *);
  void (__thiscall *save)(TRIBE_Action_Make_Obj *, int);
  __int16 (__thiscall *type)(TRIBE_Action_Make_Obj *);
  void (__thiscall *first_in_stack)(TRIBE_Action_Make_Obj *, unsigned __int8);
  unsigned __int8 (__thiscall *inside_obj_update)(TRIBE_Action_Make_Obj *);
  unsigned __int8 (__thiscall *idle_update)(TRIBE_Action_Make_Obj *);
  unsigned __int8 (__thiscall *update)(TRIBE_Action_Make_Obj *);
  int (__thiscall *stop)(TRIBE_Action_Make_Obj *);
  int (__thiscall *move_to)(TRIBE_Action_Make_Obj *, RGE_Static_Object *, float, float, float);
  int (__thiscall *work)(TRIBE_Action_Make_Obj *, RGE_Static_Object *, float, float, float);
  int (__thiscall *gbg_unknown1)(TRIBE_Action_Make_Obj *, int, int);
  unsigned __int8 (__thiscall *attack_response)(TRIBE_Action_Make_Obj *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *relation_response)(TRIBE_Action_Make_Obj *, int, unsigned __int8);
  void (__thiscall *copy_obj)(TRIBE_Action_Make_Obj *, RGE_Master_Action_Object *);
  void (__thiscall *copy_obj_sprites)(TRIBE_Action_Make_Obj *, RGE_Master_Action_Object *, RGE_Task *, RGE_Task *);
  void (__thiscall *get_state_name)(TRIBE_Action_Make_Obj *, char *);
  RGE_Static_Object *(__thiscall *get_target_obj)(TRIBE_Action_Make_Obj *);
  RGE_Static_Object *(__thiscall *get_target_obj2)(TRIBE_Action_Make_Obj *);
  void (__thiscall *set_target_obj)(TRIBE_Action_Make_Obj *, RGE_Static_Object *);
  void (__thiscall *set_target_obj2)(TRIBE_Action_Make_Obj *, RGE_Static_Object *);
  void (__thiscall *set_state)(TRIBE_Action_Make_Obj *, unsigned __int8);
};
#pragma pack(pop)

/* 321 */
#pragma pack(push, 8)
struct RGE_Action_Missile
{
  RGE_Action_MissileVtbl *vfptr;
  __int16 action_type;
  RGE_Missile_Object *obj;
  unsigned __int8 state;
  RGE_Combat_Object *target_obj;
  RGE_Combat_Object *target_obj2;
  int targetID;
  int target2ID;
  float target_x;
  float target_y;
  float target_z;
  float timer;
  RGE_Task *task;
  RGE_Action_List *sub_actions;
  RGE_Sprite *sprite;
  unsigned __int8 subActionValue;
  unsigned __int8 mTargetMovedState;
  unsigned __int8 RGE_Action_gap[2];
  float velocity_x;
  float velocity_y;
  float velocity_z;
  float ballistic_velocity;
  float ballistic_acceleration;
  float distance;
  unsigned __int8 missile_hit_info;
  RGE_Check_List *old_bounds;
};
#pragma pack(pop)

/* 727 */
#pragma pack(push, 8)
struct RGE_Action_MissileVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Action_Missile *, unsigned int);
  int (__thiscall *setup_2)(RGE_Action_Missile *, RGE_Action_Object *);
  int (__thiscall *setup_1)(RGE_Action_Missile *, int, RGE_Action_Object *);
  RGE_Action_List *(__thiscall *create_action_list)(RGE_Action_Missile *, RGE_Action_Object *);
  void (__thiscall *rehook)(RGE_Action_Missile *);
  void (__thiscall *save)(RGE_Action_Missile *, int);
  __int16 (__thiscall *type)(RGE_Action_Missile *);
  void (__thiscall *first_in_stack)(RGE_Action_Missile *, unsigned __int8);
  unsigned __int8 (__thiscall *inside_obj_update)(RGE_Action_Missile *);
  unsigned __int8 (__thiscall *idle_update)(RGE_Action_Missile *);
  unsigned __int8 (__thiscall *update)(RGE_Action_Missile *);
  int (__thiscall *stop)(RGE_Action_Missile *);
  int (__thiscall *move_to)(RGE_Action_Missile *, RGE_Static_Object *, float, float, float);
  int (__thiscall *work)(RGE_Action_Missile *, RGE_Static_Object *, float, float, float);
  int (__thiscall *gbg_unknown1)(RGE_Action_Missile *, int, int);
  unsigned __int8 (__thiscall *attack_response)(RGE_Action_Missile *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *relation_response)(RGE_Action_Missile *, int, unsigned __int8);
  void (__thiscall *copy_obj)(RGE_Action_Missile *, RGE_Master_Action_Object *);
  void (__thiscall *copy_obj_sprites)(RGE_Action_Missile *, RGE_Master_Action_Object *, RGE_Task *, RGE_Task *);
  void (__thiscall *get_state_name)(RGE_Action_Missile *, char *);
  RGE_Static_Object *(__thiscall *get_target_obj)(RGE_Action_Missile *);
  RGE_Static_Object *(__thiscall *get_target_obj2)(RGE_Action_Missile *);
  void (__thiscall *set_target_obj)(RGE_Action_Missile *, RGE_Static_Object *);
  void (__thiscall *set_target_obj2)(RGE_Action_Missile *, RGE_Static_Object *);
  void (__thiscall *set_state)(RGE_Action_Missile *, unsigned __int8);
};
#pragma pack(pop)

/* 322 */
#pragma pack(push, 8)
struct RGE_Check_List
{
  RGE_Check_Node *list;
};
#pragma pack(pop)

/* 590 */
#pragma pack(push, 8)
struct RGE_Check_Node
{
  RGE_Static_Object *node;
  float dx;
  float dy;
  unsigned __int8 flag;
  RGE_Check_Node *next;
};
#pragma pack(pop)

/* 326 */
#pragma pack(push, 1)
struct SLP_Template
{
};
#pragma pack(pop)

/* 329 */
#pragma pack(push, 8)
struct RGE_Diamond_Map_View
{
  RGE_Diamond_Map_ViewVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  RGE_Game_World *world;
  RGE_Player *player;
  RGE_Map *map;
  int all_visible;
  int render_all;
  int mouse_last_x;
  int mouse_last_y;
  int repos_mouse;
  RECT view_rect;
  RGE_Player *last_player;
  RGE_Map_Image_Line *map_image_lines;
  RGE_Map_Tile_Row *map_tile_rows;
  __int16 map_wid;
  __int16 map_hgt;
  __int16 map_image_start_y;
  __int16 map_image_wid;
  __int16 map_image_hgt;
  __int16 map_tile_row_cnt;
  float map_row_step;
  float map_col_ratio;
  float map_row_ratio;
  __int16 map_tile_draw_hgt;
  __int16 map_tile_draw_wid;
  __int16 view_col;
  __int16 view_row;
  RGE_View *main_view;
  int scrolling;
  unsigned __int8 fog_color;
  int draw_objects_mode;
  unsigned int cur_player_bit;
  int own_save_area;
  TDrawArea *save_area;
};
#pragma pack(pop)

/* 992 */
#pragma pack(push, 8)
struct RGE_Diamond_Map_ViewVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Diamond_Map_View *, unsigned int);
  int (__thiscall *setup)(RGE_Diamond_Map_View *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(RGE_Diamond_Map_View *, RECT);
  void (__thiscall *set_rect_1)(RGE_Diamond_Map_View *, int, int, int, int);
  void (__thiscall *set_color)(RGE_Diamond_Map_View *, unsigned __int8);
  void (__thiscall *set_active)(RGE_Diamond_Map_View *, int);
  void (__thiscall *unknown1)(RGE_Diamond_Map_View *);
  void (__thiscall *unknown2)(RGE_Diamond_Map_View *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(RGE_Diamond_Map_View *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(RGE_Diamond_Map_View *, int);
  void (__thiscall *set_fixed_position)(RGE_Diamond_Map_View *, int, int, int, int);
  void (__thiscall *set_redraw)(RGE_Diamond_Map_View *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(RGE_Diamond_Map_View *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(RGE_Diamond_Map_View *, int);
  void (__thiscall *draw_finish)(RGE_Diamond_Map_View *);
  void (__thiscall *draw)(RGE_Diamond_Map_View *);
  void (__thiscall *draw_rect)(RGE_Diamond_Map_View *, RECT *);
  void (__thiscall *draw_offset)(RGE_Diamond_Map_View *, int, int, RECT *);
  void (__thiscall *draw_rect2)(RGE_Diamond_Map_View *, RECT *);
  void (__thiscall *draw_offset2)(RGE_Diamond_Map_View *, int, int, RECT *);
  void (__thiscall *paint)(RGE_Diamond_Map_View *);
  int (__thiscall *wnd_proc)(RGE_Diamond_Map_View *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(RGE_Diamond_Map_View *);
  int (__thiscall *handle_size)(RGE_Diamond_Map_View *, int, int);
  int (__thiscall *handle_paint)(RGE_Diamond_Map_View *);
  int (__thiscall *handle_key_down)(RGE_Diamond_Map_View *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(RGE_Diamond_Map_View *, int, __int16);
  int (__thiscall *handle_command)(RGE_Diamond_Map_View *, unsigned int, int);
  int (__thiscall *handle_user_command)(RGE_Diamond_Map_View *, unsigned int, int);
  int (__thiscall *handle_timer_command)(RGE_Diamond_Map_View *, unsigned int, int);
  int (__thiscall *handle_scroll)(RGE_Diamond_Map_View *, int, int);
  int (__thiscall *handle_mouse_down)(RGE_Diamond_Map_View *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(RGE_Diamond_Map_View *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(RGE_Diamond_Map_View *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(RGE_Diamond_Map_View *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(RGE_Diamond_Map_View *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(RGE_Diamond_Map_View *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(RGE_Diamond_Map_View *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(RGE_Diamond_Map_View *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(RGE_Diamond_Map_View *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(RGE_Diamond_Map_View *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(RGE_Diamond_Map_View *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(RGE_Diamond_Map_View *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(RGE_Diamond_Map_View *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(RGE_Diamond_Map_View *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(RGE_Diamond_Map_View *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(RGE_Diamond_Map_View *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(RGE_Diamond_Map_View *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(RGE_Diamond_Map_View *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(RGE_Diamond_Map_View *, int, int, int, int);
  int (__thiscall *key_down_action)(RGE_Diamond_Map_View *, int, __int16, int, int, int);
  int (__thiscall *char_action)(RGE_Diamond_Map_View *, int, __int16);
  int (__thiscall *action)(RGE_Diamond_Map_View *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(RGE_Diamond_Map_View *, RECT *);
  int (__thiscall *is_inside)(RGE_Diamond_Map_View *, int, int);
  void (__thiscall *set_focus)(RGE_Diamond_Map_View *, int);
  void (__thiscall *set_tab_order_2)(RGE_Diamond_Map_View *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(RGE_Diamond_Map_View *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(RGE_Diamond_Map_View *);
  unsigned __int8 (__thiscall *get_help_info)(RGE_Diamond_Map_View *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(RGE_Diamond_Map_View *);
  int (__thiscall *restart_sound_system)(RGE_Diamond_Map_View *);
  void (__thiscall *take_snapshot)(RGE_Diamond_Map_View *);
  void (__thiscall *handle_reactivate)(RGE_Diamond_Map_View *);
  int (__thiscall *pointing_at)(RGE_Diamond_Map_View *, int, int, int *, int *, int *, int *, char *, int);
  void (__thiscall *draw_tile)(RGE_Diamond_Map_View *, __int16, __int16, int, unsigned __int8);
  void (__thiscall *draw_selected_area)(RGE_Diamond_Map_View *);
  void (__thiscall *draw_objects)(RGE_Diamond_Map_View *);
  void (__thiscall *draw_visible_object)(RGE_Diamond_Map_View *, RGE_Static_Object *, unsigned __int8, unsigned __int8);
  void (__thiscall *draw_object)(RGE_Diamond_Map_View *, __int16, __int16, unsigned __int8, __int16, RGE_Static_Object *);
  void (__thiscall *draw_view_rect)(RGE_Diamond_Map_View *);
  int (__thiscall *command_make_do)(RGE_Diamond_Map_View *, int, int);
  int (__thiscall *command_make_move)(RGE_Diamond_Map_View *, int, int);
  int (__thiscall *command_make_work)(RGE_Diamond_Map_View *, int, int);
};
#pragma pack(pop)

/* 331 */
#pragma pack(push, 8)
struct TRIBE_Task_List
{
  TRIBE_Task_ListVtbl *vfptr;
  RGE_Task **list;
  __int16 list_num;
  unsigned __int8 RGE_Task_List_gap[2];
};
#pragma pack(pop)

/* 849 */
#pragma pack(push, 8)
struct TRIBE_Task_ListVtbl
{
  RGE_Task *(__thiscall *create_task)(TRIBE_Task_List *, __int16, __int16);
  RGE_Task *(__thiscall *get_target_task)(TRIBE_Task_List *, RGE_Action_Object *, RGE_Master_Action_Object *, RGE_Static_Object *, float, float, float, __int16, int);
  int (__thiscall *is_attack_task)(TRIBE_Task_List *, RGE_Task *);
  int (__thiscall *check_task)(TRIBE_Task_List *, RGE_Task *, RGE_Action_Object *, RGE_Static_Object *);
};
#pragma pack(pop)

/* 332 */
#pragma pack(push, 1)
struct TRIBE_Screen_Sed
{
};
#pragma pack(pop)

/* 334 */
#pragma pack(push, 8)
struct TRIBE_Dialog_Sed_Menu
{
  TRIBE_Dialog_Sed_MenuVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  HWND dlg_wnd;
  TPanel *save_parent_child;
  TPanel *save_parent;
  int text_font_id;
  int input_font_id;
  int button_font_id;
  int button_sound_id;
  TRIBE_Screen_Sed *scenario_editor;
  TTextPanel *title;
  TButtonPanel *buttons[7];
};
#pragma pack(pop)

/* 917 */
#pragma pack(push, 8)
struct TRIBE_Dialog_Sed_MenuVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Dialog_Sed_Menu *, unsigned int);
  int (__thiscall *setup)(TRIBE_Dialog_Sed_Menu *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TRIBE_Dialog_Sed_Menu *, RECT);
  void (__thiscall *set_rect_1)(TRIBE_Dialog_Sed_Menu *, int, int, int, int);
  void (__thiscall *set_color)(TRIBE_Dialog_Sed_Menu *, unsigned __int8);
  void (__thiscall *set_active)(TRIBE_Dialog_Sed_Menu *, int);
  void (__thiscall *unknown1)(TRIBE_Dialog_Sed_Menu *);
  void (__thiscall *unknown2)(TRIBE_Dialog_Sed_Menu *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TRIBE_Dialog_Sed_Menu *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TRIBE_Dialog_Sed_Menu *, int);
  void (__thiscall *set_fixed_position)(TRIBE_Dialog_Sed_Menu *, int, int, int, int);
  void (__thiscall *set_redraw)(TRIBE_Dialog_Sed_Menu *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TRIBE_Dialog_Sed_Menu *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TRIBE_Dialog_Sed_Menu *, int);
  void (__thiscall *draw_finish)(TRIBE_Dialog_Sed_Menu *);
  void (__thiscall *draw)(TRIBE_Dialog_Sed_Menu *);
  void (__thiscall *draw_rect)(TRIBE_Dialog_Sed_Menu *, RECT *);
  void (__thiscall *draw_offset)(TRIBE_Dialog_Sed_Menu *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TRIBE_Dialog_Sed_Menu *, RECT *);
  void (__thiscall *draw_offset2)(TRIBE_Dialog_Sed_Menu *, int, int, RECT *);
  void (__thiscall *paint)(TRIBE_Dialog_Sed_Menu *);
  int (__thiscall *wnd_proc)(TRIBE_Dialog_Sed_Menu *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TRIBE_Dialog_Sed_Menu *);
  int (__thiscall *handle_size)(TRIBE_Dialog_Sed_Menu *, int, int);
  int (__thiscall *handle_paint)(TRIBE_Dialog_Sed_Menu *);
  int (__thiscall *handle_key_down)(TRIBE_Dialog_Sed_Menu *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TRIBE_Dialog_Sed_Menu *, int, __int16);
  int (__thiscall *handle_command)(TRIBE_Dialog_Sed_Menu *, unsigned int, int);
  int (__thiscall *handle_user_command)(TRIBE_Dialog_Sed_Menu *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TRIBE_Dialog_Sed_Menu *, unsigned int, int);
  int (__thiscall *handle_scroll)(TRIBE_Dialog_Sed_Menu *, int, int);
  int (__thiscall *handle_mouse_down)(TRIBE_Dialog_Sed_Menu *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TRIBE_Dialog_Sed_Menu *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TRIBE_Dialog_Sed_Menu *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TRIBE_Dialog_Sed_Menu *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TRIBE_Dialog_Sed_Menu *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TRIBE_Dialog_Sed_Menu *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TRIBE_Dialog_Sed_Menu *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TRIBE_Dialog_Sed_Menu *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TRIBE_Dialog_Sed_Menu *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TRIBE_Dialog_Sed_Menu *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TRIBE_Dialog_Sed_Menu *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TRIBE_Dialog_Sed_Menu *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TRIBE_Dialog_Sed_Menu *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TRIBE_Dialog_Sed_Menu *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TRIBE_Dialog_Sed_Menu *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TRIBE_Dialog_Sed_Menu *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TRIBE_Dialog_Sed_Menu *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TRIBE_Dialog_Sed_Menu *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TRIBE_Dialog_Sed_Menu *, int, int, int, int);
  int (__thiscall *key_down_action)(TRIBE_Dialog_Sed_Menu *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TRIBE_Dialog_Sed_Menu *, int, __int16);
  int (__thiscall *action)(TRIBE_Dialog_Sed_Menu *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TRIBE_Dialog_Sed_Menu *, RECT *);
  int (__thiscall *is_inside)(TRIBE_Dialog_Sed_Menu *, int, int);
  void (__thiscall *set_focus)(TRIBE_Dialog_Sed_Menu *, int);
  void (__thiscall *set_tab_order_2)(TRIBE_Dialog_Sed_Menu *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TRIBE_Dialog_Sed_Menu *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TRIBE_Dialog_Sed_Menu *);
  unsigned __int8 (__thiscall *get_help_info)(TRIBE_Dialog_Sed_Menu *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TRIBE_Dialog_Sed_Menu *);
  int (__thiscall *restart_sound_system)(TRIBE_Dialog_Sed_Menu *);
  void (__thiscall *take_snapshot)(TRIBE_Dialog_Sed_Menu *);
  void (__thiscall *handle_reactivate)(TRIBE_Dialog_Sed_Menu *);
  int (__thiscall *pointing_at)(TRIBE_Dialog_Sed_Menu *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TRIBE_Dialog_Sed_Menu *);
  int (__thiscall *get_ideal_width)(TRIBE_Dialog_Sed_Menu *);
  void (__thiscall *draw_background)(TRIBE_Dialog_Sed_Menu *, int);
  void (__thiscall *set_ideal_size)(TRIBE_Dialog_Sed_Menu *, int, int);
  int (__thiscall *create_button_2)(TRIBE_Dialog_Sed_Menu *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TRIBE_Dialog_Sed_Menu *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TRIBE_Dialog_Sed_Menu *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TRIBE_Dialog_Sed_Menu *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TRIBE_Dialog_Sed_Menu *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TRIBE_Dialog_Sed_Menu *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TRIBE_Dialog_Sed_Menu *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TRIBE_Dialog_Sed_Menu *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TRIBE_Dialog_Sed_Menu *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TRIBE_Dialog_Sed_Menu *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TRIBE_Dialog_Sed_Menu *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TRIBE_Dialog_Sed_Menu *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TRIBE_Dialog_Sed_Menu *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TRIBE_Dialog_Sed_Menu *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TRIBE_Dialog_Sed_Menu *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TRIBE_Dialog_Sed_Menu *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TRIBE_Dialog_Sed_Menu *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TRIBE_Dialog_Sed_Menu *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TRIBE_Dialog_Sed_Menu *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TRIBE_Dialog_Sed_Menu *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TRIBE_Dialog_Sed_Menu *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TRIBE_Dialog_Sed_Menu *, TPanel *, int, int, int, int);
  int (__thiscall *setup_3)(TRIBE_Dialog_Sed_Menu *, TDrawArea *, TPanel *, int, int, unsigned __int8, int);
  int (__thiscall *setup_2)(TRIBE_Dialog_Sed_Menu *, TDrawArea *, TPanel *, int, int, char *, int, int);
};
#pragma pack(pop)

/* 336 */
#pragma pack(push, 1)
struct TRIBE_Ages
{
};
#pragma pack(pop)

/* 337 */
#pragma pack(push, 1)
struct TRIBE_Technologies
{
};
#pragma pack(pop)

/* 338 */
#pragma pack(push, 1)
struct TRIBE_Units
{
};
#pragma pack(pop)

/* 339 */
#pragma pack(push, 1)
struct TRIBE_Buildings
{
};
#pragma pack(pop)

/* 340 */
#pragma pack(push, 1)
struct TRIBE_Preregs
{
};
#pragma pack(pop)

/* 344 */
#pragma pack(push, 1)
struct TRIBE_Scenario_Editor_Panel_Object
{
};
#pragma pack(pop)

/* 347 */
#pragma pack(push, 1)
struct ResourceItem
{
};
#pragma pack(pop)

/* 348 */
#pragma pack(push, 8)
struct TRIBE_Action_Offboard_Trade
{
  TRIBE_Action_Offboard_TradeVtbl *vfptr;
  __int16 action_type;
  RGE_Action_Object *obj;
  unsigned __int8 state;
  RGE_Static_Object *target_obj;
  RGE_Static_Object *target_obj2;
  int targetID;
  int target2ID;
  float target_x;
  float target_y;
  float target_z;
  float timer;
  RGE_Task *task;
  RGE_Action_List *sub_actions;
  RGE_Sprite *sprite;
  unsigned __int8 subActionValue;
  unsigned __int8 mTargetMovedState;
  unsigned __int8 RGE_Action_gap[2];
  int trade_route_being_used;
  int trade_route_being_explored;
};
#pragma pack(pop)

/* 744 */
#pragma pack(push, 8)
struct TRIBE_Action_Offboard_TradeVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Action_Offboard_Trade *, unsigned int);
  int (__thiscall *setup_2)(TRIBE_Action_Offboard_Trade *, RGE_Action_Object *);
  int (__thiscall *setup_1)(TRIBE_Action_Offboard_Trade *, int, RGE_Action_Object *);
  RGE_Action_List *(__thiscall *create_action_list)(TRIBE_Action_Offboard_Trade *, RGE_Action_Object *);
  void (__thiscall *rehook)(TRIBE_Action_Offboard_Trade *);
  void (__thiscall *save)(TRIBE_Action_Offboard_Trade *, int);
  __int16 (__thiscall *type)(TRIBE_Action_Offboard_Trade *);
  void (__thiscall *first_in_stack)(TRIBE_Action_Offboard_Trade *, unsigned __int8);
  unsigned __int8 (__thiscall *inside_obj_update)(TRIBE_Action_Offboard_Trade *);
  unsigned __int8 (__thiscall *idle_update)(TRIBE_Action_Offboard_Trade *);
  unsigned __int8 (__thiscall *update)(TRIBE_Action_Offboard_Trade *);
  int (__thiscall *stop)(TRIBE_Action_Offboard_Trade *);
  int (__thiscall *move_to)(TRIBE_Action_Offboard_Trade *, RGE_Static_Object *, float, float, float);
  int (__thiscall *work)(TRIBE_Action_Offboard_Trade *, RGE_Static_Object *, float, float, float);
  int (__thiscall *gbg_unknown1)(TRIBE_Action_Offboard_Trade *, int, int);
  unsigned __int8 (__thiscall *attack_response)(TRIBE_Action_Offboard_Trade *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *relation_response)(TRIBE_Action_Offboard_Trade *, int, unsigned __int8);
  void (__thiscall *copy_obj)(TRIBE_Action_Offboard_Trade *, RGE_Master_Action_Object *);
  void (__thiscall *copy_obj_sprites)(TRIBE_Action_Offboard_Trade *, RGE_Master_Action_Object *, RGE_Task *, RGE_Task *);
  void (__thiscall *get_state_name)(TRIBE_Action_Offboard_Trade *, char *);
  RGE_Static_Object *(__thiscall *get_target_obj)(TRIBE_Action_Offboard_Trade *);
  RGE_Static_Object *(__thiscall *get_target_obj2)(TRIBE_Action_Offboard_Trade *);
  void (__thiscall *set_target_obj)(TRIBE_Action_Offboard_Trade *, RGE_Static_Object *);
  void (__thiscall *set_target_obj2)(TRIBE_Action_Offboard_Trade *, RGE_Static_Object *);
  void (__thiscall *set_state)(TRIBE_Action_Offboard_Trade *, unsigned __int8);
};
#pragma pack(pop)

/* 349 */
#pragma pack(push, 8)
struct TRIBE_Object_List
{
  TRIBE_Object_ListVtbl *vfptr;
  RGE_Static_Object **List;
  int Number_of_objects;
  int ListSize;
  int GrowSize;
  unsigned __int8 DeletingAll;
  unsigned __int8 RGE_Player_Object_List_gap[3];
};
#pragma pack(pop)

/* 918 */
#pragma pack(push, 8)
struct TRIBE_Object_ListVtbl
{
  void (__thiscall *Load)(TRIBE_Object_List *, unsigned __int8, int, RGE_Game_World *);
};
#pragma pack(pop)

/* 781 */
typedef int TribeSaveGameScreen__Mode;

/* 351 */
#pragma pack(push, 8)
struct TribeSaveGameScreen
{
  TribeSaveGameScreenVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  TTextPanel *title;
  TEditPanel *input;
  TListPanel *list;
  TScrollBarPanel *scrollbar;
  TButtonPanel *okButton;
  TButtonPanel *cancelButton;
  TButtonPanel *deleteButton;
  char fileName[260];
  char fileNameNoExt[260];
  TribeSaveGameScreen__Mode modeValue;
  int quit_after_save;
  int mStartCommandLogs;
  int mAutoSave;
};
#pragma pack(pop)

/* 780 */
#pragma pack(push, 8)
struct TribeSaveGameScreenVtbl
{
  void *(__thiscall *__vecDelDtor)(TribeSaveGameScreen *, unsigned int);
  int (__thiscall *setup)(TribeSaveGameScreen *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TribeSaveGameScreen *, RECT);
  void (__thiscall *set_rect_1)(TribeSaveGameScreen *, int, int, int, int);
  void (__thiscall *set_color)(TribeSaveGameScreen *, unsigned __int8);
  void (__thiscall *set_active)(TribeSaveGameScreen *, int);
  void (__thiscall *unknown1)(TribeSaveGameScreen *);
  void (__thiscall *unknown2)(TribeSaveGameScreen *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TribeSaveGameScreen *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TribeSaveGameScreen *, int);
  void (__thiscall *set_fixed_position)(TribeSaveGameScreen *, int, int, int, int);
  void (__thiscall *set_redraw)(TribeSaveGameScreen *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TribeSaveGameScreen *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TribeSaveGameScreen *, int);
  void (__thiscall *draw_finish)(TribeSaveGameScreen *);
  void (__thiscall *draw)(TribeSaveGameScreen *);
  void (__thiscall *draw_rect)(TribeSaveGameScreen *, RECT *);
  void (__thiscall *draw_offset)(TribeSaveGameScreen *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TribeSaveGameScreen *, RECT *);
  void (__thiscall *draw_offset2)(TribeSaveGameScreen *, int, int, RECT *);
  void (__thiscall *paint)(TribeSaveGameScreen *);
  int (__thiscall *wnd_proc)(TribeSaveGameScreen *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TribeSaveGameScreen *);
  int (__thiscall *handle_size)(TribeSaveGameScreen *, int, int);
  int (__thiscall *handle_paint)(TribeSaveGameScreen *);
  int (__thiscall *handle_key_down)(TribeSaveGameScreen *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TribeSaveGameScreen *, int, __int16);
  int (__thiscall *handle_command)(TribeSaveGameScreen *, unsigned int, int);
  int (__thiscall *handle_user_command)(TribeSaveGameScreen *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TribeSaveGameScreen *, unsigned int, int);
  int (__thiscall *handle_scroll)(TribeSaveGameScreen *, int, int);
  int (__thiscall *handle_mouse_down)(TribeSaveGameScreen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TribeSaveGameScreen *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TribeSaveGameScreen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TribeSaveGameScreen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TribeSaveGameScreen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TribeSaveGameScreen *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TribeSaveGameScreen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TribeSaveGameScreen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TribeSaveGameScreen *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TribeSaveGameScreen *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TribeSaveGameScreen *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TribeSaveGameScreen *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TribeSaveGameScreen *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TribeSaveGameScreen *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TribeSaveGameScreen *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TribeSaveGameScreen *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TribeSaveGameScreen *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TribeSaveGameScreen *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TribeSaveGameScreen *, int, int, int, int);
  int (__thiscall *key_down_action)(TribeSaveGameScreen *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TribeSaveGameScreen *, int, __int16);
  int (__thiscall *action)(TribeSaveGameScreen *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TribeSaveGameScreen *, RECT *);
  int (__thiscall *is_inside)(TribeSaveGameScreen *, int, int);
  void (__thiscall *set_focus)(TribeSaveGameScreen *, int);
  void (__thiscall *set_tab_order_2)(TribeSaveGameScreen *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TribeSaveGameScreen *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TribeSaveGameScreen *);
  unsigned __int8 (__thiscall *get_help_info)(TribeSaveGameScreen *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TribeSaveGameScreen *);
  int (__thiscall *restart_sound_system)(TribeSaveGameScreen *);
  void (__thiscall *take_snapshot)(TribeSaveGameScreen *);
  void (__thiscall *handle_reactivate)(TribeSaveGameScreen *);
  int (__thiscall *pointing_at)(TribeSaveGameScreen *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TribeSaveGameScreen *);
  int (__thiscall *get_ideal_width)(TribeSaveGameScreen *);
  void (__thiscall *draw_background)(TribeSaveGameScreen *, int);
  void (__thiscall *set_ideal_size)(TribeSaveGameScreen *, int, int);
  int (__thiscall *create_button_2)(TribeSaveGameScreen *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TribeSaveGameScreen *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TribeSaveGameScreen *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TribeSaveGameScreen *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TribeSaveGameScreen *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TribeSaveGameScreen *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TribeSaveGameScreen *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TribeSaveGameScreen *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TribeSaveGameScreen *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TribeSaveGameScreen *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TribeSaveGameScreen *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TribeSaveGameScreen *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TribeSaveGameScreen *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TribeSaveGameScreen *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TribeSaveGameScreen *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TribeSaveGameScreen *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TribeSaveGameScreen *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TribeSaveGameScreen *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TribeSaveGameScreen *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TribeSaveGameScreen *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TribeSaveGameScreen *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TribeSaveGameScreen *, TPanel *, int, int, int, int);
};
#pragma pack(pop)

/* 352 */
#pragma pack(push, 8)
struct TribeMenuDialog
{
  TribeMenuDialogVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  HWND dlg_wnd;
  TPanel *save_parent_child;
  TPanel *save_parent;
  int text_font_id;
  int input_font_id;
  int button_font_id;
  int button_sound_id;
  TButtonPanel *button[12];
};
#pragma pack(pop)

/* 867 */
#pragma pack(push, 8)
struct TribeMenuDialogVtbl
{
  void *(__thiscall *__vecDelDtor)(TribeMenuDialog *, unsigned int);
  int (__thiscall *setup)(TribeMenuDialog *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TribeMenuDialog *, RECT);
  void (__thiscall *set_rect_1)(TribeMenuDialog *, int, int, int, int);
  void (__thiscall *set_color)(TribeMenuDialog *, unsigned __int8);
  void (__thiscall *set_active)(TribeMenuDialog *, int);
  void (__thiscall *unknown1)(TribeMenuDialog *);
  void (__thiscall *unknown2)(TribeMenuDialog *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TribeMenuDialog *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TribeMenuDialog *, int);
  void (__thiscall *set_fixed_position)(TribeMenuDialog *, int, int, int, int);
  void (__thiscall *set_redraw)(TribeMenuDialog *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TribeMenuDialog *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TribeMenuDialog *, int);
  void (__thiscall *draw_finish)(TribeMenuDialog *);
  void (__thiscall *draw)(TribeMenuDialog *);
  void (__thiscall *draw_rect)(TribeMenuDialog *, RECT *);
  void (__thiscall *draw_offset)(TribeMenuDialog *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TribeMenuDialog *, RECT *);
  void (__thiscall *draw_offset2)(TribeMenuDialog *, int, int, RECT *);
  void (__thiscall *paint)(TribeMenuDialog *);
  int (__thiscall *wnd_proc)(TribeMenuDialog *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TribeMenuDialog *);
  int (__thiscall *handle_size)(TribeMenuDialog *, int, int);
  int (__thiscall *handle_paint)(TribeMenuDialog *);
  int (__thiscall *handle_key_down)(TribeMenuDialog *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TribeMenuDialog *, int, __int16);
  int (__thiscall *handle_command)(TribeMenuDialog *, unsigned int, int);
  int (__thiscall *handle_user_command)(TribeMenuDialog *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TribeMenuDialog *, unsigned int, int);
  int (__thiscall *handle_scroll)(TribeMenuDialog *, int, int);
  int (__thiscall *handle_mouse_down)(TribeMenuDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TribeMenuDialog *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TribeMenuDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TribeMenuDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TribeMenuDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TribeMenuDialog *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TribeMenuDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TribeMenuDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TribeMenuDialog *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TribeMenuDialog *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TribeMenuDialog *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TribeMenuDialog *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TribeMenuDialog *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TribeMenuDialog *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TribeMenuDialog *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TribeMenuDialog *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TribeMenuDialog *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TribeMenuDialog *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TribeMenuDialog *, int, int, int, int);
  int (__thiscall *key_down_action)(TribeMenuDialog *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TribeMenuDialog *, int, __int16);
  int (__thiscall *action)(TribeMenuDialog *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TribeMenuDialog *, RECT *);
  int (__thiscall *is_inside)(TribeMenuDialog *, int, int);
  void (__thiscall *set_focus)(TribeMenuDialog *, int);
  void (__thiscall *set_tab_order_2)(TribeMenuDialog *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TribeMenuDialog *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TribeMenuDialog *);
  unsigned __int8 (__thiscall *get_help_info)(TribeMenuDialog *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TribeMenuDialog *);
  int (__thiscall *restart_sound_system)(TribeMenuDialog *);
  void (__thiscall *take_snapshot)(TribeMenuDialog *);
  void (__thiscall *handle_reactivate)(TribeMenuDialog *);
  int (__thiscall *pointing_at)(TribeMenuDialog *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TribeMenuDialog *);
  int (__thiscall *get_ideal_width)(TribeMenuDialog *);
  void (__thiscall *draw_background)(TribeMenuDialog *, int);
  void (__thiscall *set_ideal_size)(TribeMenuDialog *, int, int);
  int (__thiscall *create_button_2)(TribeMenuDialog *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TribeMenuDialog *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TribeMenuDialog *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TribeMenuDialog *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TribeMenuDialog *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TribeMenuDialog *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TribeMenuDialog *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TribeMenuDialog *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TribeMenuDialog *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TribeMenuDialog *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TribeMenuDialog *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TribeMenuDialog *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TribeMenuDialog *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TribeMenuDialog *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TribeMenuDialog *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TribeMenuDialog *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TribeMenuDialog *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TribeMenuDialog *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TribeMenuDialog *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TribeMenuDialog *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TribeMenuDialog *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TribeMenuDialog *, TPanel *, int, int, int, int);
  int (__thiscall *setup_3)(TribeMenuDialog *, TDrawArea *, TPanel *, int, int, unsigned __int8, int);
  int (__thiscall *setup_2)(TribeMenuDialog *, TDrawArea *, TPanel *, int, int, char *, int, int);
};
#pragma pack(pop)

/* 353 */
#pragma pack(push, 8)
struct FullMapPrintStatusDialog
{
  FullMapPrintStatusDialogVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  HWND dlg_wnd;
  TPanel *save_parent_child;
  TPanel *save_parent;
  int text_font_id;
  int input_font_id;
  int button_font_id;
  int button_sound_id;
  TTextPanel *title;
  TTextPanel *file_info;
  TTextPanel *progress;
  TButtonPanel *cancel_button;
};
#pragma pack(pop)

/* 922 */
#pragma pack(push, 8)
struct FullMapPrintStatusDialogVtbl
{
  void *(__thiscall *__vecDelDtor)(FullMapPrintStatusDialog *, unsigned int);
  int (__thiscall *setup)(FullMapPrintStatusDialog *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(FullMapPrintStatusDialog *, RECT);
  void (__thiscall *set_rect_1)(FullMapPrintStatusDialog *, int, int, int, int);
  void (__thiscall *set_color)(FullMapPrintStatusDialog *, unsigned __int8);
  void (__thiscall *set_active)(FullMapPrintStatusDialog *, int);
  void (__thiscall *unknown1)(FullMapPrintStatusDialog *);
  void (__thiscall *unknown2)(FullMapPrintStatusDialog *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(FullMapPrintStatusDialog *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(FullMapPrintStatusDialog *, int);
  void (__thiscall *set_fixed_position)(FullMapPrintStatusDialog *, int, int, int, int);
  void (__thiscall *set_redraw)(FullMapPrintStatusDialog *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(FullMapPrintStatusDialog *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(FullMapPrintStatusDialog *, int);
  void (__thiscall *draw_finish)(FullMapPrintStatusDialog *);
  void (__thiscall *draw)(FullMapPrintStatusDialog *);
  void (__thiscall *draw_rect)(FullMapPrintStatusDialog *, RECT *);
  void (__thiscall *draw_offset)(FullMapPrintStatusDialog *, int, int, RECT *);
  void (__thiscall *draw_rect2)(FullMapPrintStatusDialog *, RECT *);
  void (__thiscall *draw_offset2)(FullMapPrintStatusDialog *, int, int, RECT *);
  void (__thiscall *paint)(FullMapPrintStatusDialog *);
  int (__thiscall *wnd_proc)(FullMapPrintStatusDialog *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(FullMapPrintStatusDialog *);
  int (__thiscall *handle_size)(FullMapPrintStatusDialog *, int, int);
  int (__thiscall *handle_paint)(FullMapPrintStatusDialog *);
  int (__thiscall *handle_key_down)(FullMapPrintStatusDialog *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(FullMapPrintStatusDialog *, int, __int16);
  int (__thiscall *handle_command)(FullMapPrintStatusDialog *, unsigned int, int);
  int (__thiscall *handle_user_command)(FullMapPrintStatusDialog *, unsigned int, int);
  int (__thiscall *handle_timer_command)(FullMapPrintStatusDialog *, unsigned int, int);
  int (__thiscall *handle_scroll)(FullMapPrintStatusDialog *, int, int);
  int (__thiscall *handle_mouse_down)(FullMapPrintStatusDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(FullMapPrintStatusDialog *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(FullMapPrintStatusDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(FullMapPrintStatusDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(FullMapPrintStatusDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(FullMapPrintStatusDialog *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(FullMapPrintStatusDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(FullMapPrintStatusDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(FullMapPrintStatusDialog *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(FullMapPrintStatusDialog *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(FullMapPrintStatusDialog *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(FullMapPrintStatusDialog *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(FullMapPrintStatusDialog *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(FullMapPrintStatusDialog *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(FullMapPrintStatusDialog *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(FullMapPrintStatusDialog *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(FullMapPrintStatusDialog *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(FullMapPrintStatusDialog *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(FullMapPrintStatusDialog *, int, int, int, int);
  int (__thiscall *key_down_action)(FullMapPrintStatusDialog *, int, __int16, int, int, int);
  int (__thiscall *char_action)(FullMapPrintStatusDialog *, int, __int16);
  int (__thiscall *action)(FullMapPrintStatusDialog *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(FullMapPrintStatusDialog *, RECT *);
  int (__thiscall *is_inside)(FullMapPrintStatusDialog *, int, int);
  void (__thiscall *set_focus)(FullMapPrintStatusDialog *, int);
  void (__thiscall *set_tab_order_2)(FullMapPrintStatusDialog *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(FullMapPrintStatusDialog *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(FullMapPrintStatusDialog *);
  unsigned __int8 (__thiscall *get_help_info)(FullMapPrintStatusDialog *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(FullMapPrintStatusDialog *);
  int (__thiscall *restart_sound_system)(FullMapPrintStatusDialog *);
  void (__thiscall *take_snapshot)(FullMapPrintStatusDialog *);
  void (__thiscall *handle_reactivate)(FullMapPrintStatusDialog *);
  int (__thiscall *pointing_at)(FullMapPrintStatusDialog *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(FullMapPrintStatusDialog *);
  int (__thiscall *get_ideal_width)(FullMapPrintStatusDialog *);
  void (__thiscall *draw_background)(FullMapPrintStatusDialog *, int);
  void (__thiscall *set_ideal_size)(FullMapPrintStatusDialog *, int, int);
  int (__thiscall *create_button_2)(FullMapPrintStatusDialog *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(FullMapPrintStatusDialog *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(FullMapPrintStatusDialog *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(FullMapPrintStatusDialog *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(FullMapPrintStatusDialog *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(FullMapPrintStatusDialog *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(FullMapPrintStatusDialog *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(FullMapPrintStatusDialog *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(FullMapPrintStatusDialog *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(FullMapPrintStatusDialog *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(FullMapPrintStatusDialog *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(FullMapPrintStatusDialog *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(FullMapPrintStatusDialog *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(FullMapPrintStatusDialog *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(FullMapPrintStatusDialog *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(FullMapPrintStatusDialog *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(FullMapPrintStatusDialog *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(FullMapPrintStatusDialog *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(FullMapPrintStatusDialog *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(FullMapPrintStatusDialog *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(FullMapPrintStatusDialog *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(FullMapPrintStatusDialog *, TPanel *, int, int, int, int);
  int (__thiscall *setup_3)(FullMapPrintStatusDialog *, TDrawArea *, TPanel *, int, int, unsigned __int8, int);
  int (__thiscall *setup_2)(FullMapPrintStatusDialog *, TDrawArea *, TPanel *, int, int, char *, int, int);
};
#pragma pack(pop)

/* 355 */
#pragma pack(push, 8)
struct TRIBE_Screen_Sed_Open
{
  TRIBE_Screen_Sed_OpenVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  TTextPanel *title;
  TTextPanel *listTitle;
  TListPanel *list;
  TScrollBarPanel *scrollbar;
  TButtonPanel *okButton;
  TButtonPanel *cancelButton;
  TButtonPanel *deleteButton;
};
#pragma pack(pop)

/* 898 */
#pragma pack(push, 8)
struct TRIBE_Screen_Sed_OpenVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Screen_Sed_Open *, unsigned int);
  int (__thiscall *setup)(TRIBE_Screen_Sed_Open *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TRIBE_Screen_Sed_Open *, RECT);
  void (__thiscall *set_rect_1)(TRIBE_Screen_Sed_Open *, int, int, int, int);
  void (__thiscall *set_color)(TRIBE_Screen_Sed_Open *, unsigned __int8);
  void (__thiscall *set_active)(TRIBE_Screen_Sed_Open *, int);
  void (__thiscall *unknown1)(TRIBE_Screen_Sed_Open *);
  void (__thiscall *unknown2)(TRIBE_Screen_Sed_Open *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TRIBE_Screen_Sed_Open *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TRIBE_Screen_Sed_Open *, int);
  void (__thiscall *set_fixed_position)(TRIBE_Screen_Sed_Open *, int, int, int, int);
  void (__thiscall *set_redraw)(TRIBE_Screen_Sed_Open *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TRIBE_Screen_Sed_Open *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TRIBE_Screen_Sed_Open *, int);
  void (__thiscall *draw_finish)(TRIBE_Screen_Sed_Open *);
  void (__thiscall *draw)(TRIBE_Screen_Sed_Open *);
  void (__thiscall *draw_rect)(TRIBE_Screen_Sed_Open *, RECT *);
  void (__thiscall *draw_offset)(TRIBE_Screen_Sed_Open *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TRIBE_Screen_Sed_Open *, RECT *);
  void (__thiscall *draw_offset2)(TRIBE_Screen_Sed_Open *, int, int, RECT *);
  void (__thiscall *paint)(TRIBE_Screen_Sed_Open *);
  int (__thiscall *wnd_proc)(TRIBE_Screen_Sed_Open *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TRIBE_Screen_Sed_Open *);
  int (__thiscall *handle_size)(TRIBE_Screen_Sed_Open *, int, int);
  int (__thiscall *handle_paint)(TRIBE_Screen_Sed_Open *);
  int (__thiscall *handle_key_down)(TRIBE_Screen_Sed_Open *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TRIBE_Screen_Sed_Open *, int, __int16);
  int (__thiscall *handle_command)(TRIBE_Screen_Sed_Open *, unsigned int, int);
  int (__thiscall *handle_user_command)(TRIBE_Screen_Sed_Open *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TRIBE_Screen_Sed_Open *, unsigned int, int);
  int (__thiscall *handle_scroll)(TRIBE_Screen_Sed_Open *, int, int);
  int (__thiscall *handle_mouse_down)(TRIBE_Screen_Sed_Open *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TRIBE_Screen_Sed_Open *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TRIBE_Screen_Sed_Open *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TRIBE_Screen_Sed_Open *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TRIBE_Screen_Sed_Open *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TRIBE_Screen_Sed_Open *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TRIBE_Screen_Sed_Open *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TRIBE_Screen_Sed_Open *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TRIBE_Screen_Sed_Open *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TRIBE_Screen_Sed_Open *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TRIBE_Screen_Sed_Open *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TRIBE_Screen_Sed_Open *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TRIBE_Screen_Sed_Open *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TRIBE_Screen_Sed_Open *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TRIBE_Screen_Sed_Open *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TRIBE_Screen_Sed_Open *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TRIBE_Screen_Sed_Open *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TRIBE_Screen_Sed_Open *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TRIBE_Screen_Sed_Open *, int, int, int, int);
  int (__thiscall *key_down_action)(TRIBE_Screen_Sed_Open *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TRIBE_Screen_Sed_Open *, int, __int16);
  int (__thiscall *action)(TRIBE_Screen_Sed_Open *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TRIBE_Screen_Sed_Open *, RECT *);
  int (__thiscall *is_inside)(TRIBE_Screen_Sed_Open *, int, int);
  void (__thiscall *set_focus)(TRIBE_Screen_Sed_Open *, int);
  void (__thiscall *set_tab_order_2)(TRIBE_Screen_Sed_Open *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TRIBE_Screen_Sed_Open *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TRIBE_Screen_Sed_Open *);
  unsigned __int8 (__thiscall *get_help_info)(TRIBE_Screen_Sed_Open *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TRIBE_Screen_Sed_Open *);
  int (__thiscall *restart_sound_system)(TRIBE_Screen_Sed_Open *);
  void (__thiscall *take_snapshot)(TRIBE_Screen_Sed_Open *);
  void (__thiscall *handle_reactivate)(TRIBE_Screen_Sed_Open *);
  int (__thiscall *pointing_at)(TRIBE_Screen_Sed_Open *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TRIBE_Screen_Sed_Open *);
  int (__thiscall *get_ideal_width)(TRIBE_Screen_Sed_Open *);
  void (__thiscall *draw_background)(TRIBE_Screen_Sed_Open *, int);
  void (__thiscall *set_ideal_size)(TRIBE_Screen_Sed_Open *, int, int);
  int (__thiscall *create_button_2)(TRIBE_Screen_Sed_Open *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TRIBE_Screen_Sed_Open *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TRIBE_Screen_Sed_Open *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TRIBE_Screen_Sed_Open *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TRIBE_Screen_Sed_Open *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TRIBE_Screen_Sed_Open *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TRIBE_Screen_Sed_Open *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TRIBE_Screen_Sed_Open *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TRIBE_Screen_Sed_Open *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TRIBE_Screen_Sed_Open *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TRIBE_Screen_Sed_Open *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TRIBE_Screen_Sed_Open *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TRIBE_Screen_Sed_Open *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TRIBE_Screen_Sed_Open *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TRIBE_Screen_Sed_Open *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TRIBE_Screen_Sed_Open *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TRIBE_Screen_Sed_Open *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TRIBE_Screen_Sed_Open *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TRIBE_Screen_Sed_Open *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TRIBE_Screen_Sed_Open *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TRIBE_Screen_Sed_Open *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TRIBE_Screen_Sed_Open *, TPanel *, int, int, int, int);
};
#pragma pack(pop)

/* 356 */
#pragma pack(push, 8)
struct RGE_Action_Bird
{
  RGE_Action_BirdVtbl *vfptr;
  __int16 action_type;
  RGE_Action_Object *obj;
  unsigned __int8 state;
  RGE_Static_Object *target_obj;
  RGE_Static_Object *target_obj2;
  int targetID;
  int target2ID;
  float target_x;
  float target_y;
  float target_z;
  float timer;
  RGE_Task *task;
  RGE_Action_List *sub_actions;
  RGE_Sprite *sprite;
  unsigned __int8 subActionValue;
  unsigned __int8 mTargetMovedState;
  unsigned __int8 RGE_Action_gap[2];
};
#pragma pack(pop)

/* 722 */
#pragma pack(push, 8)
struct RGE_Action_BirdVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Action_Bird *, unsigned int);
  int (__thiscall *setup_2)(RGE_Action_Bird *, RGE_Action_Object *);
  int (__thiscall *setup_1)(RGE_Action_Bird *, int, RGE_Action_Object *);
  RGE_Action_List *(__thiscall *create_action_list)(RGE_Action_Bird *, RGE_Action_Object *);
  void (__thiscall *rehook)(RGE_Action_Bird *);
  void (__thiscall *save)(RGE_Action_Bird *, int);
  __int16 (__thiscall *type)(RGE_Action_Bird *);
  void (__thiscall *first_in_stack)(RGE_Action_Bird *, unsigned __int8);
  unsigned __int8 (__thiscall *inside_obj_update)(RGE_Action_Bird *);
  unsigned __int8 (__thiscall *idle_update)(RGE_Action_Bird *);
  unsigned __int8 (__thiscall *update)(RGE_Action_Bird *);
  int (__thiscall *stop)(RGE_Action_Bird *);
  int (__thiscall *move_to)(RGE_Action_Bird *, RGE_Static_Object *, float, float, float);
  int (__thiscall *work)(RGE_Action_Bird *, RGE_Static_Object *, float, float, float);
  int (__thiscall *gbg_unknown1)(RGE_Action_Bird *, int, int);
  unsigned __int8 (__thiscall *attack_response)(RGE_Action_Bird *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *relation_response)(RGE_Action_Bird *, int, unsigned __int8);
  void (__thiscall *copy_obj)(RGE_Action_Bird *, RGE_Master_Action_Object *);
  void (__thiscall *copy_obj_sprites)(RGE_Action_Bird *, RGE_Master_Action_Object *, RGE_Task *, RGE_Task *);
  void (__thiscall *get_state_name)(RGE_Action_Bird *, char *);
  RGE_Static_Object *(__thiscall *get_target_obj)(RGE_Action_Bird *);
  RGE_Static_Object *(__thiscall *get_target_obj2)(RGE_Action_Bird *);
  void (__thiscall *set_target_obj)(RGE_Action_Bird *, RGE_Static_Object *);
  void (__thiscall *set_target_obj2)(RGE_Action_Bird *, RGE_Static_Object *);
  void (__thiscall *set_state)(RGE_Action_Bird *, unsigned __int8);
};
#pragma pack(pop)

/* 357 */
#pragma pack(push, 8)
struct RGE_Action_Enter
{
  RGE_Action_EnterVtbl *vfptr;
  __int16 action_type;
  RGE_Action_Object *obj;
  unsigned __int8 state;
  RGE_Static_Object *target_obj;
  RGE_Static_Object *target_obj2;
  int targetID;
  int target2ID;
  float target_x;
  float target_y;
  float target_z;
  float timer;
  RGE_Task *task;
  RGE_Action_List *sub_actions;
  RGE_Sprite *sprite;
  unsigned __int8 subActionValue;
  unsigned __int8 mTargetMovedState;
  unsigned __int8 RGE_Action_gap[2];
  int mFirstTimeEnter;
};
#pragma pack(pop)

/* 725 */
#pragma pack(push, 8)
struct RGE_Action_EnterVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Action_Enter *, unsigned int);
  int (__thiscall *setup_2)(RGE_Action_Enter *, RGE_Action_Object *);
  int (__thiscall *setup_1)(RGE_Action_Enter *, int, RGE_Action_Object *);
  RGE_Action_List *(__thiscall *create_action_list)(RGE_Action_Enter *, RGE_Action_Object *);
  void (__thiscall *rehook)(RGE_Action_Enter *);
  void (__thiscall *save)(RGE_Action_Enter *, int);
  __int16 (__thiscall *type)(RGE_Action_Enter *);
  void (__thiscall *first_in_stack)(RGE_Action_Enter *, unsigned __int8);
  unsigned __int8 (__thiscall *inside_obj_update)(RGE_Action_Enter *);
  unsigned __int8 (__thiscall *idle_update)(RGE_Action_Enter *);
  unsigned __int8 (__thiscall *update)(RGE_Action_Enter *);
  int (__thiscall *stop)(RGE_Action_Enter *);
  int (__thiscall *move_to)(RGE_Action_Enter *, RGE_Static_Object *, float, float, float);
  int (__thiscall *work)(RGE_Action_Enter *, RGE_Static_Object *, float, float, float);
  int (__thiscall *gbg_unknown1)(RGE_Action_Enter *, int, int);
  unsigned __int8 (__thiscall *attack_response)(RGE_Action_Enter *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *relation_response)(RGE_Action_Enter *, int, unsigned __int8);
  void (__thiscall *copy_obj)(RGE_Action_Enter *, RGE_Master_Action_Object *);
  void (__thiscall *copy_obj_sprites)(RGE_Action_Enter *, RGE_Master_Action_Object *, RGE_Task *, RGE_Task *);
  void (__thiscall *get_state_name)(RGE_Action_Enter *, char *);
  RGE_Static_Object *(__thiscall *get_target_obj)(RGE_Action_Enter *);
  RGE_Static_Object *(__thiscall *get_target_obj2)(RGE_Action_Enter *);
  void (__thiscall *set_target_obj)(RGE_Action_Enter *, RGE_Static_Object *);
  void (__thiscall *set_target_obj2)(RGE_Action_Enter *, RGE_Static_Object *);
  void (__thiscall *set_state)(RGE_Action_Enter *, unsigned __int8);
};
#pragma pack(pop)

/* 358 */
#pragma pack(push, 8)
struct RGE_Action_Explore
{
  RGE_Action_ExploreVtbl *vfptr;
  __int16 action_type;
  RGE_Action_Object *obj;
  unsigned __int8 state;
  RGE_Static_Object *target_obj;
  RGE_Static_Object *target_obj2;
  int targetID;
  int target2ID;
  float target_x;
  float target_y;
  float target_z;
  float timer;
  RGE_Task *task;
  RGE_Action_List *sub_actions;
  RGE_Sprite *sprite;
  unsigned __int8 subActionValue;
  unsigned __int8 mTargetMovedState;
  unsigned __int8 RGE_Action_gap[2];
};
#pragma pack(pop)

/* 724 */
#pragma pack(push, 8)
struct RGE_Action_ExploreVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Action_Explore *, unsigned int);
  int (__thiscall *setup_2)(RGE_Action_Explore *, RGE_Action_Object *);
  int (__thiscall *setup_1)(RGE_Action_Explore *, int, RGE_Action_Object *);
  RGE_Action_List *(__thiscall *create_action_list)(RGE_Action_Explore *, RGE_Action_Object *);
  void (__thiscall *rehook)(RGE_Action_Explore *);
  void (__thiscall *save)(RGE_Action_Explore *, int);
  __int16 (__thiscall *type)(RGE_Action_Explore *);
  void (__thiscall *first_in_stack)(RGE_Action_Explore *, unsigned __int8);
  unsigned __int8 (__thiscall *inside_obj_update)(RGE_Action_Explore *);
  unsigned __int8 (__thiscall *idle_update)(RGE_Action_Explore *);
  unsigned __int8 (__thiscall *update)(RGE_Action_Explore *);
  int (__thiscall *stop)(RGE_Action_Explore *);
  int (__thiscall *move_to)(RGE_Action_Explore *, RGE_Static_Object *, float, float, float);
  int (__thiscall *work)(RGE_Action_Explore *, RGE_Static_Object *, float, float, float);
  int (__thiscall *gbg_unknown1)(RGE_Action_Explore *, int, int);
  unsigned __int8 (__thiscall *attack_response)(RGE_Action_Explore *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *relation_response)(RGE_Action_Explore *, int, unsigned __int8);
  void (__thiscall *copy_obj)(RGE_Action_Explore *, RGE_Master_Action_Object *);
  void (__thiscall *copy_obj_sprites)(RGE_Action_Explore *, RGE_Master_Action_Object *, RGE_Task *, RGE_Task *);
  void (__thiscall *get_state_name)(RGE_Action_Explore *, char *);
  RGE_Static_Object *(__thiscall *get_target_obj)(RGE_Action_Explore *);
  RGE_Static_Object *(__thiscall *get_target_obj2)(RGE_Action_Explore *);
  void (__thiscall *set_target_obj)(RGE_Action_Explore *, RGE_Static_Object *);
  void (__thiscall *set_target_obj2)(RGE_Action_Explore *, RGE_Static_Object *);
  void (__thiscall *set_state)(RGE_Action_Explore *, unsigned __int8);
};
#pragma pack(pop)

/* 359 */
#pragma pack(push, 8)
struct RGE_Action_Gather
{
  RGE_Action_GatherVtbl *vfptr;
  __int16 action_type;
  RGE_Action_Object *obj;
  unsigned __int8 state;
  RGE_Static_Object *target_obj;
  RGE_Static_Object *target_obj2;
  int targetID;
  int target2ID;
  float target_x;
  float target_y;
  float target_z;
  float timer;
  RGE_Task *task;
  RGE_Action_List *sub_actions;
  RGE_Sprite *sprite;
  unsigned __int8 subActionValue;
  unsigned __int8 mTargetMovedState;
  unsigned __int8 RGE_Action_gap[2];
  int targetType;
  unsigned __int8 numberStops;
  unsigned __int8 currentStop;
  float timePerStop;
  float timeAtCurrentStop;
  unsigned __int8 lastStopX;
  unsigned __int8 lastStopY;
  unsigned __int8 have_worked;
  float farm_x;
  float farm_y;
  int gbg_unknown_1;
};
#pragma pack(pop)

/* 726 */
#pragma pack(push, 8)
struct RGE_Action_GatherVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Action_Gather *, unsigned int);
  int (__thiscall *setup_2)(RGE_Action_Gather *, RGE_Action_Object *);
  int (__thiscall *setup_1)(RGE_Action_Gather *, int, RGE_Action_Object *);
  RGE_Action_List *(__thiscall *create_action_list)(RGE_Action_Gather *, RGE_Action_Object *);
  void (__thiscall *rehook)(RGE_Action_Gather *);
  void (__thiscall *save)(RGE_Action_Gather *, int);
  __int16 (__thiscall *type)(RGE_Action_Gather *);
  void (__thiscall *first_in_stack)(RGE_Action_Gather *, unsigned __int8);
  unsigned __int8 (__thiscall *inside_obj_update)(RGE_Action_Gather *);
  unsigned __int8 (__thiscall *idle_update)(RGE_Action_Gather *);
  unsigned __int8 (__thiscall *update)(RGE_Action_Gather *);
  int (__thiscall *stop)(RGE_Action_Gather *);
  int (__thiscall *move_to)(RGE_Action_Gather *, RGE_Static_Object *, float, float, float);
  int (__thiscall *work)(RGE_Action_Gather *, RGE_Static_Object *, float, float, float);
  int (__thiscall *gbg_unknown1)(RGE_Action_Gather *, int, int);
  unsigned __int8 (__thiscall *attack_response)(RGE_Action_Gather *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *relation_response)(RGE_Action_Gather *, int, unsigned __int8);
  void (__thiscall *copy_obj)(RGE_Action_Gather *, RGE_Master_Action_Object *);
  void (__thiscall *copy_obj_sprites)(RGE_Action_Gather *, RGE_Master_Action_Object *, RGE_Task *, RGE_Task *);
  void (__thiscall *get_state_name)(RGE_Action_Gather *, char *);
  RGE_Static_Object *(__thiscall *get_target_obj)(RGE_Action_Gather *);
  RGE_Static_Object *(__thiscall *get_target_obj2)(RGE_Action_Gather *);
  void (__thiscall *set_target_obj)(RGE_Action_Gather *, RGE_Static_Object *);
  void (__thiscall *set_target_obj2)(RGE_Action_Gather *, RGE_Static_Object *);
  void (__thiscall *set_state)(RGE_Action_Gather *, unsigned __int8);
};
#pragma pack(pop)

/* 360 */
#pragma pack(push, 8)
struct RGE_Action_Guard
{
  RGE_Action_GuardVtbl *vfptr;
  __int16 action_type;
  RGE_Action_Object *obj;
  unsigned __int8 state;
  RGE_Static_Object *target_obj;
  RGE_Static_Object *target_obj2;
  int targetID;
  int target2ID;
  float target_x;
  float target_y;
  float target_z;
  float timer;
  RGE_Task *task;
  RGE_Action_List *sub_actions;
  RGE_Sprite *sprite;
  unsigned __int8 subActionValue;
  unsigned __int8 mTargetMovedState;
  unsigned __int8 RGE_Action_gap[2];
};
#pragma pack(pop)

/* 730 */
#pragma pack(push, 8)
struct RGE_Action_GuardVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Action_Guard *, unsigned int);
  int (__thiscall *setup_2)(RGE_Action_Guard *, RGE_Action_Object *);
  int (__thiscall *setup_1)(RGE_Action_Guard *, int, RGE_Action_Object *);
  RGE_Action_List *(__thiscall *create_action_list)(RGE_Action_Guard *, RGE_Action_Object *);
  void (__thiscall *rehook)(RGE_Action_Guard *);
  void (__thiscall *save)(RGE_Action_Guard *, int);
  __int16 (__thiscall *type)(RGE_Action_Guard *);
  void (__thiscall *first_in_stack)(RGE_Action_Guard *, unsigned __int8);
  unsigned __int8 (__thiscall *inside_obj_update)(RGE_Action_Guard *);
  unsigned __int8 (__thiscall *idle_update)(RGE_Action_Guard *);
  unsigned __int8 (__thiscall *update)(RGE_Action_Guard *);
  int (__thiscall *stop)(RGE_Action_Guard *);
  int (__thiscall *move_to)(RGE_Action_Guard *, RGE_Static_Object *, float, float, float);
  int (__thiscall *work)(RGE_Action_Guard *, RGE_Static_Object *, float, float, float);
  int (__thiscall *gbg_unknown1)(RGE_Action_Guard *, int, int);
  unsigned __int8 (__thiscall *attack_response)(RGE_Action_Guard *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *relation_response)(RGE_Action_Guard *, int, unsigned __int8);
  void (__thiscall *copy_obj)(RGE_Action_Guard *, RGE_Master_Action_Object *);
  void (__thiscall *copy_obj_sprites)(RGE_Action_Guard *, RGE_Master_Action_Object *, RGE_Task *, RGE_Task *);
  void (__thiscall *get_state_name)(RGE_Action_Guard *, char *);
  RGE_Static_Object *(__thiscall *get_target_obj)(RGE_Action_Guard *);
  RGE_Static_Object *(__thiscall *get_target_obj2)(RGE_Action_Guard *);
  void (__thiscall *set_target_obj)(RGE_Action_Guard *, RGE_Static_Object *);
  void (__thiscall *set_target_obj2)(RGE_Action_Guard *, RGE_Static_Object *);
  void (__thiscall *set_state)(RGE_Action_Guard *, unsigned __int8);
};
#pragma pack(pop)

/* 361 */
#pragma pack(push, 8)
struct RGE_Action_Make
{
  RGE_Action_MakeVtbl *vfptr;
  __int16 action_type;
  RGE_Action_Object *obj;
  unsigned __int8 state;
  RGE_Static_Object *target_obj;
  RGE_Static_Object *target_obj2;
  int targetID;
  int target2ID;
  float target_x;
  float target_y;
  float target_z;
  float timer;
  RGE_Task *task;
  RGE_Action_List *sub_actions;
  RGE_Sprite *sprite;
  unsigned __int8 subActionValue;
  unsigned __int8 mTargetMovedState;
  unsigned __int8 RGE_Action_gap[2];
  float work_timer;
};
#pragma pack(pop)

/* 729 */
#pragma pack(push, 8)
struct RGE_Action_MakeVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Action_Make *, unsigned int);
  int (__thiscall *setup_2)(RGE_Action_Make *, RGE_Action_Object *);
  int (__thiscall *setup_1)(RGE_Action_Make *, int, RGE_Action_Object *);
  RGE_Action_List *(__thiscall *create_action_list)(RGE_Action_Make *, RGE_Action_Object *);
  void (__thiscall *rehook)(RGE_Action_Make *);
  void (__thiscall *save)(RGE_Action_Make *, int);
  __int16 (__thiscall *type)(RGE_Action_Make *);
  void (__thiscall *first_in_stack)(RGE_Action_Make *, unsigned __int8);
  unsigned __int8 (__thiscall *inside_obj_update)(RGE_Action_Make *);
  unsigned __int8 (__thiscall *idle_update)(RGE_Action_Make *);
  unsigned __int8 (__thiscall *update)(RGE_Action_Make *);
  int (__thiscall *stop)(RGE_Action_Make *);
  int (__thiscall *move_to)(RGE_Action_Make *, RGE_Static_Object *, float, float, float);
  int (__thiscall *work)(RGE_Action_Make *, RGE_Static_Object *, float, float, float);
  int (__thiscall *gbg_unknown1)(RGE_Action_Make *, int, int);
  unsigned __int8 (__thiscall *attack_response)(RGE_Action_Make *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *relation_response)(RGE_Action_Make *, int, unsigned __int8);
  void (__thiscall *copy_obj)(RGE_Action_Make *, RGE_Master_Action_Object *);
  void (__thiscall *copy_obj_sprites)(RGE_Action_Make *, RGE_Master_Action_Object *, RGE_Task *, RGE_Task *);
  void (__thiscall *get_state_name)(RGE_Action_Make *, char *);
  RGE_Static_Object *(__thiscall *get_target_obj)(RGE_Action_Make *);
  RGE_Static_Object *(__thiscall *get_target_obj2)(RGE_Action_Make *);
  void (__thiscall *set_target_obj)(RGE_Action_Make *, RGE_Static_Object *);
  void (__thiscall *set_target_obj2)(RGE_Action_Make *, RGE_Static_Object *);
  void (__thiscall *set_state)(RGE_Action_Make *, unsigned __int8);
};
#pragma pack(pop)

/* 362 */
#pragma pack(push, 8)
struct RGE_Action_Transport
{
  RGE_Action_TransportVtbl *vfptr;
  __int16 action_type;
  RGE_Action_Object *obj;
  unsigned __int8 state;
  RGE_Static_Object *target_obj;
  RGE_Static_Object *target_obj2;
  int targetID;
  int target2ID;
  float target_x;
  float target_y;
  float target_z;
  float timer;
  RGE_Task *task;
  RGE_Action_List *sub_actions;
  RGE_Sprite *sprite;
  unsigned __int8 subActionValue;
  unsigned __int8 mTargetMovedState;
  unsigned __int8 RGE_Action_gap[2];
};
#pragma pack(pop)

/* 753 */
#pragma pack(push, 8)
struct RGE_Action_TransportVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_Action_Transport *, unsigned int);
  int (__thiscall *setup_2)(RGE_Action_Transport *, RGE_Action_Object *);
  int (__thiscall *setup_1)(RGE_Action_Transport *, int, RGE_Action_Object *);
  RGE_Action_List *(__thiscall *create_action_list)(RGE_Action_Transport *, RGE_Action_Object *);
  void (__thiscall *rehook)(RGE_Action_Transport *);
  void (__thiscall *save)(RGE_Action_Transport *, int);
  __int16 (__thiscall *type)(RGE_Action_Transport *);
  void (__thiscall *first_in_stack)(RGE_Action_Transport *, unsigned __int8);
  unsigned __int8 (__thiscall *inside_obj_update)(RGE_Action_Transport *);
  unsigned __int8 (__thiscall *idle_update)(RGE_Action_Transport *);
  unsigned __int8 (__thiscall *update)(RGE_Action_Transport *);
  int (__thiscall *stop)(RGE_Action_Transport *);
  int (__thiscall *move_to)(RGE_Action_Transport *, RGE_Static_Object *, float, float, float);
  int (__thiscall *work)(RGE_Action_Transport *, RGE_Static_Object *, float, float, float);
  int (__thiscall *gbg_unknown1)(RGE_Action_Transport *, int, int);
  unsigned __int8 (__thiscall *attack_response)(RGE_Action_Transport *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *relation_response)(RGE_Action_Transport *, int, unsigned __int8);
  void (__thiscall *copy_obj)(RGE_Action_Transport *, RGE_Master_Action_Object *);
  void (__thiscall *copy_obj_sprites)(RGE_Action_Transport *, RGE_Master_Action_Object *, RGE_Task *, RGE_Task *);
  void (__thiscall *get_state_name)(RGE_Action_Transport *, char *);
  RGE_Static_Object *(__thiscall *get_target_obj)(RGE_Action_Transport *);
  RGE_Static_Object *(__thiscall *get_target_obj2)(RGE_Action_Transport *);
  void (__thiscall *set_target_obj)(RGE_Action_Transport *, RGE_Static_Object *);
  void (__thiscall *set_target_obj2)(RGE_Action_Transport *, RGE_Static_Object *);
  void (__thiscall *set_state)(RGE_Action_Transport *, unsigned __int8);
  int (__thiscall *next_to_drop_off_terrain)(RGE_Action_Transport *);
};
#pragma pack(pop)

/* 363 */
#pragma pack(push, 8)
struct TRIBE_Campaign_Editor_Screen
{
  TRIBE_Campaign_Editor_ScreenVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  unsigned __int8 need_to_save;
  TTextPanel *title;
  TTextPanel *filename_title;
  TTextPanel *scenarios_title;
  TTextPanel *campaign_scenarios_title;
  TListPanel *scenarios;
  TListPanel *campaign_scenarios;
  TScrollBarPanel *scenarios_bar;
  TScrollBarPanel *campaign_scenarios_bar;
  TEditPanel *filename;
  TButtonPanel *ok_button;
  TButtonPanel *cancel_button;
  TButtonPanel *save_button;
  TButtonPanel *add_button;
  TButtonPanel *remove_button;
  TButtonPanel *move_scenario_up_button;
  TButtonPanel *move_scenario_down_button;
  TDropDownPanel *filename_drop;
  RGE_Campaign *campaign;
};
#pragma pack(pop)

/* 807 */
#pragma pack(push, 8)
struct TRIBE_Campaign_Editor_ScreenVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Campaign_Editor_Screen *, unsigned int);
  int (__thiscall *setup)(TRIBE_Campaign_Editor_Screen *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TRIBE_Campaign_Editor_Screen *, RECT);
  void (__thiscall *set_rect_1)(TRIBE_Campaign_Editor_Screen *, int, int, int, int);
  void (__thiscall *set_color)(TRIBE_Campaign_Editor_Screen *, unsigned __int8);
  void (__thiscall *set_active)(TRIBE_Campaign_Editor_Screen *, int);
  void (__thiscall *unknown1)(TRIBE_Campaign_Editor_Screen *);
  void (__thiscall *unknown2)(TRIBE_Campaign_Editor_Screen *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TRIBE_Campaign_Editor_Screen *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TRIBE_Campaign_Editor_Screen *, int);
  void (__thiscall *set_fixed_position)(TRIBE_Campaign_Editor_Screen *, int, int, int, int);
  void (__thiscall *set_redraw)(TRIBE_Campaign_Editor_Screen *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TRIBE_Campaign_Editor_Screen *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TRIBE_Campaign_Editor_Screen *, int);
  void (__thiscall *draw_finish)(TRIBE_Campaign_Editor_Screen *);
  void (__thiscall *draw)(TRIBE_Campaign_Editor_Screen *);
  void (__thiscall *draw_rect)(TRIBE_Campaign_Editor_Screen *, RECT *);
  void (__thiscall *draw_offset)(TRIBE_Campaign_Editor_Screen *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TRIBE_Campaign_Editor_Screen *, RECT *);
  void (__thiscall *draw_offset2)(TRIBE_Campaign_Editor_Screen *, int, int, RECT *);
  void (__thiscall *paint)(TRIBE_Campaign_Editor_Screen *);
  int (__thiscall *wnd_proc)(TRIBE_Campaign_Editor_Screen *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TRIBE_Campaign_Editor_Screen *);
  int (__thiscall *handle_size)(TRIBE_Campaign_Editor_Screen *, int, int);
  int (__thiscall *handle_paint)(TRIBE_Campaign_Editor_Screen *);
  int (__thiscall *handle_key_down)(TRIBE_Campaign_Editor_Screen *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TRIBE_Campaign_Editor_Screen *, int, __int16);
  int (__thiscall *handle_command)(TRIBE_Campaign_Editor_Screen *, unsigned int, int);
  int (__thiscall *handle_user_command)(TRIBE_Campaign_Editor_Screen *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TRIBE_Campaign_Editor_Screen *, unsigned int, int);
  int (__thiscall *handle_scroll)(TRIBE_Campaign_Editor_Screen *, int, int);
  int (__thiscall *handle_mouse_down)(TRIBE_Campaign_Editor_Screen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TRIBE_Campaign_Editor_Screen *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TRIBE_Campaign_Editor_Screen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TRIBE_Campaign_Editor_Screen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TRIBE_Campaign_Editor_Screen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TRIBE_Campaign_Editor_Screen *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TRIBE_Campaign_Editor_Screen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TRIBE_Campaign_Editor_Screen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TRIBE_Campaign_Editor_Screen *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TRIBE_Campaign_Editor_Screen *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TRIBE_Campaign_Editor_Screen *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TRIBE_Campaign_Editor_Screen *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TRIBE_Campaign_Editor_Screen *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TRIBE_Campaign_Editor_Screen *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TRIBE_Campaign_Editor_Screen *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TRIBE_Campaign_Editor_Screen *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TRIBE_Campaign_Editor_Screen *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TRIBE_Campaign_Editor_Screen *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TRIBE_Campaign_Editor_Screen *, int, int, int, int);
  int (__thiscall *key_down_action)(TRIBE_Campaign_Editor_Screen *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TRIBE_Campaign_Editor_Screen *, int, __int16);
  int (__thiscall *action)(TRIBE_Campaign_Editor_Screen *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TRIBE_Campaign_Editor_Screen *, RECT *);
  int (__thiscall *is_inside)(TRIBE_Campaign_Editor_Screen *, int, int);
  void (__thiscall *set_focus)(TRIBE_Campaign_Editor_Screen *, int);
  void (__thiscall *set_tab_order_2)(TRIBE_Campaign_Editor_Screen *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TRIBE_Campaign_Editor_Screen *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TRIBE_Campaign_Editor_Screen *);
  unsigned __int8 (__thiscall *get_help_info)(TRIBE_Campaign_Editor_Screen *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TRIBE_Campaign_Editor_Screen *);
  int (__thiscall *restart_sound_system)(TRIBE_Campaign_Editor_Screen *);
  void (__thiscall *take_snapshot)(TRIBE_Campaign_Editor_Screen *);
  void (__thiscall *handle_reactivate)(TRIBE_Campaign_Editor_Screen *);
  int (__thiscall *pointing_at)(TRIBE_Campaign_Editor_Screen *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TRIBE_Campaign_Editor_Screen *);
  int (__thiscall *get_ideal_width)(TRIBE_Campaign_Editor_Screen *);
  void (__thiscall *draw_background)(TRIBE_Campaign_Editor_Screen *, int);
  void (__thiscall *set_ideal_size)(TRIBE_Campaign_Editor_Screen *, int, int);
  int (__thiscall *create_button_2)(TRIBE_Campaign_Editor_Screen *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TRIBE_Campaign_Editor_Screen *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TRIBE_Campaign_Editor_Screen *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TRIBE_Campaign_Editor_Screen *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TRIBE_Campaign_Editor_Screen *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TRIBE_Campaign_Editor_Screen *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TRIBE_Campaign_Editor_Screen *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TRIBE_Campaign_Editor_Screen *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TRIBE_Campaign_Editor_Screen *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TRIBE_Campaign_Editor_Screen *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TRIBE_Campaign_Editor_Screen *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TRIBE_Campaign_Editor_Screen *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TRIBE_Campaign_Editor_Screen *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TRIBE_Campaign_Editor_Screen *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TRIBE_Campaign_Editor_Screen *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TRIBE_Campaign_Editor_Screen *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TRIBE_Campaign_Editor_Screen *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TRIBE_Campaign_Editor_Screen *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TRIBE_Campaign_Editor_Screen *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TRIBE_Campaign_Editor_Screen *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TRIBE_Campaign_Editor_Screen *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TRIBE_Campaign_Editor_Screen *, TPanel *, int, int, int, int);
};
#pragma pack(pop)

/* 366 */
#pragma pack(push, 1)
struct TribeTechHelpScreen
{
};
#pragma pack(pop)

/* 367 */
#pragma pack(push, 8)
struct TribeSelectScenarioScreen
{
  TribeSelectScenarioScreenVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  TTextPanel *title;
  TTextPanel *scenarioTitle;
  TTextPanel *scenarioPlayersTitle;
  int scenarioListX;
  int scenarioListY;
  int scenarioListWidth;
  int scenarioListHeight;
  TListPanel *scenarioList;
  TScrollBarPanel *scenarioScrollbar;
  int scenarioCount;
  char **scenarioMission;
  int *scenarioFixed;
  int scenariosLoaded;
  TTextPanel *missionTitle;
  int missionTextX;
  int missionTextY;
  int missionTextWidth;
  int missionTextHeight;
  TTextPanel *missionText;
  TScrollBarPanel *missionScrollbar;
  TribeMPSetupScreen *chat_scr;
  TButtonPanel *okButton;
  TButtonPanel *cancelButton;
  TButtonPanel *close_button;
  int last_scenario_line;
  TTextPanel *difficultyTitle;
  TDropDownPanel *difficultyDrop;
  int first_idle_after_focus;
};
#pragma pack(pop)

/* 863 */
#pragma pack(push, 8)
struct TribeSelectScenarioScreenVtbl
{
  void *(__thiscall *__vecDelDtor)(TribeSelectScenarioScreen *, unsigned int);
  int (__thiscall *setup)(TribeSelectScenarioScreen *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TribeSelectScenarioScreen *, RECT);
  void (__thiscall *set_rect_1)(TribeSelectScenarioScreen *, int, int, int, int);
  void (__thiscall *set_color)(TribeSelectScenarioScreen *, unsigned __int8);
  void (__thiscall *set_active)(TribeSelectScenarioScreen *, int);
  void (__thiscall *unknown1)(TribeSelectScenarioScreen *);
  void (__thiscall *unknown2)(TribeSelectScenarioScreen *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TribeSelectScenarioScreen *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TribeSelectScenarioScreen *, int);
  void (__thiscall *set_fixed_position)(TribeSelectScenarioScreen *, int, int, int, int);
  void (__thiscall *set_redraw)(TribeSelectScenarioScreen *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TribeSelectScenarioScreen *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TribeSelectScenarioScreen *, int);
  void (__thiscall *draw_finish)(TribeSelectScenarioScreen *);
  void (__thiscall *draw)(TribeSelectScenarioScreen *);
  void (__thiscall *draw_rect)(TribeSelectScenarioScreen *, RECT *);
  void (__thiscall *draw_offset)(TribeSelectScenarioScreen *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TribeSelectScenarioScreen *, RECT *);
  void (__thiscall *draw_offset2)(TribeSelectScenarioScreen *, int, int, RECT *);
  void (__thiscall *paint)(TribeSelectScenarioScreen *);
  int (__thiscall *wnd_proc)(TribeSelectScenarioScreen *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TribeSelectScenarioScreen *);
  int (__thiscall *handle_size)(TribeSelectScenarioScreen *, int, int);
  int (__thiscall *handle_paint)(TribeSelectScenarioScreen *);
  int (__thiscall *handle_key_down)(TribeSelectScenarioScreen *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TribeSelectScenarioScreen *, int, __int16);
  int (__thiscall *handle_command)(TribeSelectScenarioScreen *, unsigned int, int);
  int (__thiscall *handle_user_command)(TribeSelectScenarioScreen *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TribeSelectScenarioScreen *, unsigned int, int);
  int (__thiscall *handle_scroll)(TribeSelectScenarioScreen *, int, int);
  int (__thiscall *handle_mouse_down)(TribeSelectScenarioScreen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TribeSelectScenarioScreen *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TribeSelectScenarioScreen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TribeSelectScenarioScreen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TribeSelectScenarioScreen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TribeSelectScenarioScreen *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TribeSelectScenarioScreen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TribeSelectScenarioScreen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TribeSelectScenarioScreen *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TribeSelectScenarioScreen *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TribeSelectScenarioScreen *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TribeSelectScenarioScreen *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TribeSelectScenarioScreen *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TribeSelectScenarioScreen *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TribeSelectScenarioScreen *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TribeSelectScenarioScreen *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TribeSelectScenarioScreen *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TribeSelectScenarioScreen *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TribeSelectScenarioScreen *, int, int, int, int);
  int (__thiscall *key_down_action)(TribeSelectScenarioScreen *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TribeSelectScenarioScreen *, int, __int16);
  int (__thiscall *action)(TribeSelectScenarioScreen *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TribeSelectScenarioScreen *, RECT *);
  int (__thiscall *is_inside)(TribeSelectScenarioScreen *, int, int);
  void (__thiscall *set_focus)(TribeSelectScenarioScreen *, int);
  void (__thiscall *set_tab_order_2)(TribeSelectScenarioScreen *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TribeSelectScenarioScreen *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TribeSelectScenarioScreen *);
  unsigned __int8 (__thiscall *get_help_info)(TribeSelectScenarioScreen *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TribeSelectScenarioScreen *);
  int (__thiscall *restart_sound_system)(TribeSelectScenarioScreen *);
  void (__thiscall *take_snapshot)(TribeSelectScenarioScreen *);
  void (__thiscall *handle_reactivate)(TribeSelectScenarioScreen *);
  int (__thiscall *pointing_at)(TribeSelectScenarioScreen *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TribeSelectScenarioScreen *);
  int (__thiscall *get_ideal_width)(TribeSelectScenarioScreen *);
  void (__thiscall *draw_background)(TribeSelectScenarioScreen *, int);
  void (__thiscall *set_ideal_size)(TribeSelectScenarioScreen *, int, int);
  int (__thiscall *create_button_2)(TribeSelectScenarioScreen *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TribeSelectScenarioScreen *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TribeSelectScenarioScreen *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TribeSelectScenarioScreen *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TribeSelectScenarioScreen *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TribeSelectScenarioScreen *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TribeSelectScenarioScreen *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TribeSelectScenarioScreen *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TribeSelectScenarioScreen *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TribeSelectScenarioScreen *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TribeSelectScenarioScreen *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TribeSelectScenarioScreen *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TribeSelectScenarioScreen *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TribeSelectScenarioScreen *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TribeSelectScenarioScreen *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TribeSelectScenarioScreen *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TribeSelectScenarioScreen *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TribeSelectScenarioScreen *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TribeSelectScenarioScreen *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TribeSelectScenarioScreen *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TribeSelectScenarioScreen *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TribeSelectScenarioScreen *, TPanel *, int, int, int, int);
};
#pragma pack(pop)

/* 370 */
#pragma pack(push, 1)
struct __declspec(align(4)) TRIBE_Prereg_Info
{
  char number_preregs;
  __declspec(align(4)) int id[5];
  int type[5];
  int draw_node[5];
};
#pragma pack(pop)

/* 369 */
#pragma pack(push, 1)
struct __declspec(align(4)) Tech_Tree_Node
{
  float zone_id;
  int tech_tree_node_id;
  int node_id;
  int bld_id;
  int pic_index;
  char name1[120];
  char name2[120];
  char t_name1[120];
  char t_name2[120];
  int level_no;
  int age_id;
  int node_status;
  int node_type;
  int use_type;
  int draw_node_type;
  TRIBE_Prereg_Info non_path_prereg_info;
  int link_flag;
  int link_no;
  int link_age;
  int link_id;
  int unit_tech_bld_link_flag;
  int unit_tech_bld_link_id;
  int unit_tech_bld_link_age;
  int trigger_tech_id;
  int is_linked;
  int string1;
  int string2;
  int help_string_id;
  int help_page_id;
  int fixed_x_loc;
  int fixed_y_loc;
  int temp_fixed_x_loc;
  int temp_fixed_y_loc;
};
#pragma pack(pop)

/* 822 */
typedef int Zone_Usage_Type;

/* 823 */
#pragma pack(push, 8)
struct TribePopUpHelp__Button_Pic
{
  int node_id;
  Zone_Usage_Type usage_type;
  Tech_Tree_Node *draw_node;
  int button_x_loc;
  int button_y_loc;
};
#pragma pack(pop)

/* 636 */
typedef int TTextPanel__BevelType;

/* 821 */
typedef TTextPanel__BevelType TribePopUpHelp__BevelType;

/* 371 */
#pragma pack(push, 8)
struct TribePopUpHelp
{
  TribePopUpHelpVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int button_flag;
  int num_button_pics;
  TribePopUpHelp__Button_Pic buttons[4];
  TShape *button_pics_bld;
  TShape *button_pics_unit;
  TShape *button_pics_tech;
  TShape *technode_popup_pics;
  int node_zone_height;
  int node_zone_width;
  int button_pic_height;
  int button_pic_width;
  int button_node_offset_x;
  int button_node_offset_y;
  int popup_node_font_width;
  int popup_node_font_height;
  int popup_tech_node_font;
  int fixed_popup_text_width;
  TTextPanel *TextArea;
  TribePopUpHelp__BevelType bevel_type;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned __int8 outline_color;
  int border_size;
};
#pragma pack(pop)

/* 824 */
#pragma pack(push, 8)
struct TribePopUpHelpVtbl
{
  void *(__thiscall *__vecDelDtor)(TribePopUpHelp *, unsigned int);
  int (__thiscall *setup)(TribePopUpHelp *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TribePopUpHelp *, RECT);
  void (__thiscall *set_rect_1)(TribePopUpHelp *, int, int, int, int);
  void (__thiscall *set_color)(TribePopUpHelp *, unsigned __int8);
  void (__thiscall *set_active)(TribePopUpHelp *, int);
  void (__thiscall *unknown1)(TribePopUpHelp *);
  void (__thiscall *unknown2)(TribePopUpHelp *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TribePopUpHelp *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TribePopUpHelp *, int);
  void (__thiscall *set_fixed_position)(TribePopUpHelp *, int, int, int, int);
  void (__thiscall *set_redraw)(TribePopUpHelp *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TribePopUpHelp *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TribePopUpHelp *, int);
  void (__thiscall *draw_finish)(TribePopUpHelp *);
  void (__thiscall *draw)(TribePopUpHelp *);
  void (__thiscall *draw_rect)(TribePopUpHelp *, RECT *);
  void (__thiscall *draw_offset)(TribePopUpHelp *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TribePopUpHelp *, RECT *);
  void (__thiscall *draw_offset2)(TribePopUpHelp *, int, int, RECT *);
  void (__thiscall *paint)(TribePopUpHelp *);
  int (__thiscall *wnd_proc)(TribePopUpHelp *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TribePopUpHelp *);
  int (__thiscall *handle_size)(TribePopUpHelp *, int, int);
  int (__thiscall *handle_paint)(TribePopUpHelp *);
  int (__thiscall *handle_key_down)(TribePopUpHelp *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TribePopUpHelp *, int, __int16);
  int (__thiscall *handle_command)(TribePopUpHelp *, unsigned int, int);
  int (__thiscall *handle_user_command)(TribePopUpHelp *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TribePopUpHelp *, unsigned int, int);
  int (__thiscall *handle_scroll)(TribePopUpHelp *, int, int);
  int (__thiscall *handle_mouse_down)(TribePopUpHelp *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TribePopUpHelp *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TribePopUpHelp *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TribePopUpHelp *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TribePopUpHelp *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TribePopUpHelp *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TribePopUpHelp *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TribePopUpHelp *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TribePopUpHelp *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TribePopUpHelp *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TribePopUpHelp *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TribePopUpHelp *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TribePopUpHelp *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TribePopUpHelp *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TribePopUpHelp *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TribePopUpHelp *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TribePopUpHelp *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TribePopUpHelp *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TribePopUpHelp *, int, int, int, int);
  int (__thiscall *key_down_action)(TribePopUpHelp *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TribePopUpHelp *, int, __int16);
  int (__thiscall *action)(TribePopUpHelp *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TribePopUpHelp *, RECT *);
  int (__thiscall *is_inside)(TribePopUpHelp *, int, int);
  void (__thiscall *set_focus)(TribePopUpHelp *, int);
  void (__thiscall *set_tab_order_2)(TribePopUpHelp *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TribePopUpHelp *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TribePopUpHelp *);
  unsigned __int8 (__thiscall *get_help_info)(TribePopUpHelp *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TribePopUpHelp *);
  int (__thiscall *restart_sound_system)(TribePopUpHelp *);
  void (__thiscall *take_snapshot)(TribePopUpHelp *);
  void (__thiscall *handle_reactivate)(TribePopUpHelp *);
  int (__thiscall *pointing_at)(TribePopUpHelp *, int, int, int *, int *, int *, int *, char *, int);
  void (__thiscall *set_bevel_info)(TribePopUpHelp *, TribePopUpHelp__BevelType, int, int, int, int, int, int);
};
#pragma pack(pop)

/* 372 */
#pragma pack(push, 1)
struct Bld_Zone_Constructer
{
};
#pragma pack(pop)

/* 373 */
#pragma pack(push, 1)
struct UnitTech_Zone_Constructer
{
};
#pragma pack(pop)

/* 374 */
#pragma pack(push, 1)
struct Unit_Tech_Zone
{
};
#pragma pack(pop)

/* 375 */
#pragma pack(push, 8)
struct TribePlayerNameDialog
{
  TribePlayerNameDialogVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  HWND dlg_wnd;
  TPanel *save_parent_child;
  TPanel *save_parent;
  int text_font_id;
  int input_font_id;
  int button_font_id;
  int button_sound_id;
  int func;
  int removePlayerID;
  TScreenPanel *parentPanel;
  TTextPanel *title;
  TTextPanel *nameTitle;
  TTextPanel *areYouSure;
  TButtonPanel *okButton;
  TButtonPanel *cancelButton;
  TEditPanel *nameInput;
  int do_primary_action;
};
#pragma pack(pop)

/* 903 */
#pragma pack(push, 8)
struct TribePlayerNameDialogVtbl
{
  void *(__thiscall *__vecDelDtor)(TribePlayerNameDialog *, unsigned int);
  int (__thiscall *setup)(TribePlayerNameDialog *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TribePlayerNameDialog *, RECT);
  void (__thiscall *set_rect_1)(TribePlayerNameDialog *, int, int, int, int);
  void (__thiscall *set_color)(TribePlayerNameDialog *, unsigned __int8);
  void (__thiscall *set_active)(TribePlayerNameDialog *, int);
  void (__thiscall *unknown1)(TribePlayerNameDialog *);
  void (__thiscall *unknown2)(TribePlayerNameDialog *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TribePlayerNameDialog *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TribePlayerNameDialog *, int);
  void (__thiscall *set_fixed_position)(TribePlayerNameDialog *, int, int, int, int);
  void (__thiscall *set_redraw)(TribePlayerNameDialog *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TribePlayerNameDialog *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TribePlayerNameDialog *, int);
  void (__thiscall *draw_finish)(TribePlayerNameDialog *);
  void (__thiscall *draw)(TribePlayerNameDialog *);
  void (__thiscall *draw_rect)(TribePlayerNameDialog *, RECT *);
  void (__thiscall *draw_offset)(TribePlayerNameDialog *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TribePlayerNameDialog *, RECT *);
  void (__thiscall *draw_offset2)(TribePlayerNameDialog *, int, int, RECT *);
  void (__thiscall *paint)(TribePlayerNameDialog *);
  int (__thiscall *wnd_proc)(TribePlayerNameDialog *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TribePlayerNameDialog *);
  int (__thiscall *handle_size)(TribePlayerNameDialog *, int, int);
  int (__thiscall *handle_paint)(TribePlayerNameDialog *);
  int (__thiscall *handle_key_down)(TribePlayerNameDialog *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TribePlayerNameDialog *, int, __int16);
  int (__thiscall *handle_command)(TribePlayerNameDialog *, unsigned int, int);
  int (__thiscall *handle_user_command)(TribePlayerNameDialog *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TribePlayerNameDialog *, unsigned int, int);
  int (__thiscall *handle_scroll)(TribePlayerNameDialog *, int, int);
  int (__thiscall *handle_mouse_down)(TribePlayerNameDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TribePlayerNameDialog *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TribePlayerNameDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TribePlayerNameDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TribePlayerNameDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TribePlayerNameDialog *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TribePlayerNameDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TribePlayerNameDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TribePlayerNameDialog *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TribePlayerNameDialog *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TribePlayerNameDialog *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TribePlayerNameDialog *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TribePlayerNameDialog *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TribePlayerNameDialog *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TribePlayerNameDialog *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TribePlayerNameDialog *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TribePlayerNameDialog *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TribePlayerNameDialog *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TribePlayerNameDialog *, int, int, int, int);
  int (__thiscall *key_down_action)(TribePlayerNameDialog *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TribePlayerNameDialog *, int, __int16);
  int (__thiscall *action)(TribePlayerNameDialog *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TribePlayerNameDialog *, RECT *);
  int (__thiscall *is_inside)(TribePlayerNameDialog *, int, int);
  void (__thiscall *set_focus)(TribePlayerNameDialog *, int);
  void (__thiscall *set_tab_order_2)(TribePlayerNameDialog *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TribePlayerNameDialog *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TribePlayerNameDialog *);
  unsigned __int8 (__thiscall *get_help_info)(TribePlayerNameDialog *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TribePlayerNameDialog *);
  int (__thiscall *restart_sound_system)(TribePlayerNameDialog *);
  void (__thiscall *take_snapshot)(TribePlayerNameDialog *);
  void (__thiscall *handle_reactivate)(TribePlayerNameDialog *);
  int (__thiscall *pointing_at)(TribePlayerNameDialog *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TribePlayerNameDialog *);
  int (__thiscall *get_ideal_width)(TribePlayerNameDialog *);
  void (__thiscall *draw_background)(TribePlayerNameDialog *, int);
  void (__thiscall *set_ideal_size)(TribePlayerNameDialog *, int, int);
  int (__thiscall *create_button_2)(TribePlayerNameDialog *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TribePlayerNameDialog *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TribePlayerNameDialog *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TribePlayerNameDialog *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TribePlayerNameDialog *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TribePlayerNameDialog *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TribePlayerNameDialog *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TribePlayerNameDialog *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TribePlayerNameDialog *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TribePlayerNameDialog *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TribePlayerNameDialog *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TribePlayerNameDialog *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TribePlayerNameDialog *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TribePlayerNameDialog *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TribePlayerNameDialog *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TribePlayerNameDialog *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TribePlayerNameDialog *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TribePlayerNameDialog *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TribePlayerNameDialog *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TribePlayerNameDialog *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TribePlayerNameDialog *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TribePlayerNameDialog *, TPanel *, int, int, int, int);
  int (__thiscall *setup_3)(TribePlayerNameDialog *, TDrawArea *, TPanel *, int, int, unsigned __int8, int);
  int (__thiscall *setup_2)(TribePlayerNameDialog *, TDrawArea *, TPanel *, int, int, char *, int, int);
};
#pragma pack(pop)

/* 376 */
#pragma pack(push, 8)
struct TribeAboutDialog
{
  TribeAboutDialogVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  HWND dlg_wnd;
  TPanel *save_parent_child;
  TPanel *save_parent;
  int text_font_id;
  int input_font_id;
  int button_font_id;
  int button_sound_id;
  TTextPanel *title_text;
  TTextPanel *version_text;
  TTextPanel *ms_copy_text1;
  TTextPanel *ms_copy_text2;
  TTextPanel *ens_copy_text;
  TTextPanel *genie_copy_text;
  TTextPanel *pid_label_text;
  TTextPanel *pid_text;
  TTextPanel *warning_text;
  TTextPanel *background;
  TTextPanel *background2;
  TButtonPanel *mslogo_button;
  TButtonPanel *eslogo_button;
  TButtonPanel *credits_button;
  TButtonPanel *close_button;
  TPicturePanel *circle_p_pic;
  TShape *mslogo_pic;
  TShape *eslogo_pic;
};
#pragma pack(pop)

/* 904 */
#pragma pack(push, 8)
struct TribeAboutDialogVtbl
{
  void *(__thiscall *__vecDelDtor)(TribeAboutDialog *, unsigned int);
  int (__thiscall *setup)(TribeAboutDialog *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TribeAboutDialog *, RECT);
  void (__thiscall *set_rect_1)(TribeAboutDialog *, int, int, int, int);
  void (__thiscall *set_color)(TribeAboutDialog *, unsigned __int8);
  void (__thiscall *set_active)(TribeAboutDialog *, int);
  void (__thiscall *unknown1)(TribeAboutDialog *);
  void (__thiscall *unknown2)(TribeAboutDialog *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TribeAboutDialog *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TribeAboutDialog *, int);
  void (__thiscall *set_fixed_position)(TribeAboutDialog *, int, int, int, int);
  void (__thiscall *set_redraw)(TribeAboutDialog *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TribeAboutDialog *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TribeAboutDialog *, int);
  void (__thiscall *draw_finish)(TribeAboutDialog *);
  void (__thiscall *draw)(TribeAboutDialog *);
  void (__thiscall *draw_rect)(TribeAboutDialog *, RECT *);
  void (__thiscall *draw_offset)(TribeAboutDialog *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TribeAboutDialog *, RECT *);
  void (__thiscall *draw_offset2)(TribeAboutDialog *, int, int, RECT *);
  void (__thiscall *paint)(TribeAboutDialog *);
  int (__thiscall *wnd_proc)(TribeAboutDialog *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TribeAboutDialog *);
  int (__thiscall *handle_size)(TribeAboutDialog *, int, int);
  int (__thiscall *handle_paint)(TribeAboutDialog *);
  int (__thiscall *handle_key_down)(TribeAboutDialog *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TribeAboutDialog *, int, __int16);
  int (__thiscall *handle_command)(TribeAboutDialog *, unsigned int, int);
  int (__thiscall *handle_user_command)(TribeAboutDialog *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TribeAboutDialog *, unsigned int, int);
  int (__thiscall *handle_scroll)(TribeAboutDialog *, int, int);
  int (__thiscall *handle_mouse_down)(TribeAboutDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TribeAboutDialog *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TribeAboutDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TribeAboutDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TribeAboutDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TribeAboutDialog *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TribeAboutDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TribeAboutDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TribeAboutDialog *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TribeAboutDialog *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TribeAboutDialog *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TribeAboutDialog *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TribeAboutDialog *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TribeAboutDialog *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TribeAboutDialog *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TribeAboutDialog *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TribeAboutDialog *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TribeAboutDialog *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TribeAboutDialog *, int, int, int, int);
  int (__thiscall *key_down_action)(TribeAboutDialog *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TribeAboutDialog *, int, __int16);
  int (__thiscall *action)(TribeAboutDialog *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TribeAboutDialog *, RECT *);
  int (__thiscall *is_inside)(TribeAboutDialog *, int, int);
  void (__thiscall *set_focus)(TribeAboutDialog *, int);
  void (__thiscall *set_tab_order_2)(TribeAboutDialog *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TribeAboutDialog *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TribeAboutDialog *);
  unsigned __int8 (__thiscall *get_help_info)(TribeAboutDialog *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TribeAboutDialog *);
  int (__thiscall *restart_sound_system)(TribeAboutDialog *);
  void (__thiscall *take_snapshot)(TribeAboutDialog *);
  void (__thiscall *handle_reactivate)(TribeAboutDialog *);
  int (__thiscall *pointing_at)(TribeAboutDialog *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TribeAboutDialog *);
  int (__thiscall *get_ideal_width)(TribeAboutDialog *);
  void (__thiscall *draw_background)(TribeAboutDialog *, int);
  void (__thiscall *set_ideal_size)(TribeAboutDialog *, int, int);
  int (__thiscall *create_button_2)(TribeAboutDialog *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TribeAboutDialog *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TribeAboutDialog *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TribeAboutDialog *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TribeAboutDialog *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TribeAboutDialog *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TribeAboutDialog *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TribeAboutDialog *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TribeAboutDialog *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TribeAboutDialog *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TribeAboutDialog *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TribeAboutDialog *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TribeAboutDialog *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TribeAboutDialog *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TribeAboutDialog *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TribeAboutDialog *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TribeAboutDialog *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TribeAboutDialog *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TribeAboutDialog *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TribeAboutDialog *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TribeAboutDialog *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TribeAboutDialog *, TPanel *, int, int, int, int);
  int (__thiscall *setup_3)(TribeAboutDialog *, TDrawArea *, TPanel *, int, int, unsigned __int8, int);
  int (__thiscall *setup_2)(TribeAboutDialog *, TDrawArea *, TPanel *, int, int, char *, int, int);
};
#pragma pack(pop)

/* 804 */
typedef int TRIBE_Credits_Screen__ScreenMode;

/* 377 */
#pragma pack(push, 8)
struct TRIBE_Credits_Screen
{
  TRIBE_Credits_ScreenVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  TScrollTextPanel *text_panel;
  int text_set;
  int picture_set;
  unsigned int last_picture_time;
  unsigned int last_pause_time;
  TRIBE_Credits_Screen__ScreenMode mode;
  PALETTEENTRY color_table[256];
  PALETTEENTRY color_TRIBE_Credits_Screen;
  int first_draw;
  int text_done;
  int musicID;
};
#pragma pack(pop)

/* 803 */
#pragma pack(push, 8)
struct TRIBE_Credits_ScreenVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Credits_Screen *, unsigned int);
  int (__thiscall *setup)(TRIBE_Credits_Screen *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TRIBE_Credits_Screen *, RECT);
  void (__thiscall *set_rect_1)(TRIBE_Credits_Screen *, int, int, int, int);
  void (__thiscall *set_color)(TRIBE_Credits_Screen *, unsigned __int8);
  void (__thiscall *set_active)(TRIBE_Credits_Screen *, int);
  void (__thiscall *unknown1)(TRIBE_Credits_Screen *);
  void (__thiscall *unknown2)(TRIBE_Credits_Screen *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TRIBE_Credits_Screen *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TRIBE_Credits_Screen *, int);
  void (__thiscall *set_fixed_position)(TRIBE_Credits_Screen *, int, int, int, int);
  void (__thiscall *set_redraw)(TRIBE_Credits_Screen *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TRIBE_Credits_Screen *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TRIBE_Credits_Screen *, int);
  void (__thiscall *draw_finish)(TRIBE_Credits_Screen *);
  void (__thiscall *draw)(TRIBE_Credits_Screen *);
  void (__thiscall *draw_rect)(TRIBE_Credits_Screen *, RECT *);
  void (__thiscall *draw_offset)(TRIBE_Credits_Screen *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TRIBE_Credits_Screen *, RECT *);
  void (__thiscall *draw_offset2)(TRIBE_Credits_Screen *, int, int, RECT *);
  void (__thiscall *paint)(TRIBE_Credits_Screen *);
  int (__thiscall *wnd_proc)(TRIBE_Credits_Screen *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TRIBE_Credits_Screen *);
  int (__thiscall *handle_size)(TRIBE_Credits_Screen *, int, int);
  int (__thiscall *handle_paint)(TRIBE_Credits_Screen *);
  int (__thiscall *handle_key_down)(TRIBE_Credits_Screen *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TRIBE_Credits_Screen *, int, __int16);
  int (__thiscall *handle_command)(TRIBE_Credits_Screen *, unsigned int, int);
  int (__thiscall *handle_user_command)(TRIBE_Credits_Screen *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TRIBE_Credits_Screen *, unsigned int, int);
  int (__thiscall *handle_scroll)(TRIBE_Credits_Screen *, int, int);
  int (__thiscall *handle_mouse_down)(TRIBE_Credits_Screen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TRIBE_Credits_Screen *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TRIBE_Credits_Screen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TRIBE_Credits_Screen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TRIBE_Credits_Screen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TRIBE_Credits_Screen *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TRIBE_Credits_Screen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TRIBE_Credits_Screen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TRIBE_Credits_Screen *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TRIBE_Credits_Screen *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TRIBE_Credits_Screen *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TRIBE_Credits_Screen *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TRIBE_Credits_Screen *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TRIBE_Credits_Screen *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TRIBE_Credits_Screen *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TRIBE_Credits_Screen *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TRIBE_Credits_Screen *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TRIBE_Credits_Screen *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TRIBE_Credits_Screen *, int, int, int, int);
  int (__thiscall *key_down_action)(TRIBE_Credits_Screen *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TRIBE_Credits_Screen *, int, __int16);
  int (__thiscall *action)(TRIBE_Credits_Screen *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TRIBE_Credits_Screen *, RECT *);
  int (__thiscall *is_inside)(TRIBE_Credits_Screen *, int, int);
  void (__thiscall *set_focus)(TRIBE_Credits_Screen *, int);
  void (__thiscall *set_tab_order_2)(TRIBE_Credits_Screen *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TRIBE_Credits_Screen *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TRIBE_Credits_Screen *);
  unsigned __int8 (__thiscall *get_help_info)(TRIBE_Credits_Screen *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TRIBE_Credits_Screen *);
  int (__thiscall *restart_sound_system)(TRIBE_Credits_Screen *);
  void (__thiscall *take_snapshot)(TRIBE_Credits_Screen *);
  void (__thiscall *handle_reactivate)(TRIBE_Credits_Screen *);
  int (__thiscall *pointing_at)(TRIBE_Credits_Screen *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TRIBE_Credits_Screen *);
  int (__thiscall *get_ideal_width)(TRIBE_Credits_Screen *);
  void (__thiscall *draw_background)(TRIBE_Credits_Screen *, int);
  void (__thiscall *set_ideal_size)(TRIBE_Credits_Screen *, int, int);
  int (__thiscall *create_button_2)(TRIBE_Credits_Screen *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TRIBE_Credits_Screen *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TRIBE_Credits_Screen *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TRIBE_Credits_Screen *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TRIBE_Credits_Screen *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TRIBE_Credits_Screen *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TRIBE_Credits_Screen *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TRIBE_Credits_Screen *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TRIBE_Credits_Screen *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TRIBE_Credits_Screen *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TRIBE_Credits_Screen *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TRIBE_Credits_Screen *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TRIBE_Credits_Screen *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TRIBE_Credits_Screen *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TRIBE_Credits_Screen *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TRIBE_Credits_Screen *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TRIBE_Credits_Screen *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TRIBE_Credits_Screen *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TRIBE_Credits_Screen *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TRIBE_Credits_Screen *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TRIBE_Credits_Screen *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TRIBE_Credits_Screen *, TPanel *, int, int, int, int);
};
#pragma pack(pop)

/* 378 */
#pragma pack(push, 8)
struct TScrollTextPanel
{
  TScrollTextPanelVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  TTextPanel__TextNode *list;
  __int16 num_lines;
  __int16 draw_lines;
  __int16 top_line;
  __int16 bot_line;
  __int16 cur_line;
  __int16 cur_col;
  HFONT font[4];
  int font_wid;
  int font_hgt;
  TTextPanel__Alignment vert_align;
  TTextPanel__Alignment horz_align;
  TTextPanel__Alignment horz_align2;
  int word_wrap;
  TTextPanel__Style text_style;
  TTextPanel__Style highlight_style;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int highlightTextColor1;
  unsigned int highlightTextColor2;
  TScrollBarPanel *scbar_panel;
  int auto_scbar;
  __int16 fixed_len;
  int text_wid;
  int text_hgt;
  TShape *back_pic;
  __int16 back_pic_wid;
  __int16 back_pic_hgt;
  TTextPanel__BackType fill_back;
  unsigned __int8 back_color;
  unsigned __int8 progress_bar_color;
  int progress_bar_width;
  int progress_bar_current;
  int outline;
  unsigned __int8 outline_color;
  int sorted;
  int second_column_pos;
  int full_width;
  int scbar_width;
  int scbar_active;
  int bevel_type;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  HRGN clip_rgn2;
  int border_size;
  int spacer_size;
  int formatted_text;
  int use_large_font_for_wordwrap;
  int done;
  int scroll;
  unsigned int last_time;
  int speed;
  int dist;
  int drawingLastLine;
  unsigned int lastLineTime;
};
#pragma pack(pop)

/* 883 */
#pragma pack(push, 8)
struct TScrollTextPanelVtbl
{
  void *(__thiscall *__vecDelDtor)(TScrollTextPanel *, unsigned int);
  int (__thiscall *setup)(TScrollTextPanel *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TScrollTextPanel *, RECT);
  void (__thiscall *set_rect_1)(TScrollTextPanel *, int, int, int, int);
  void (__thiscall *set_color)(TScrollTextPanel *, unsigned __int8);
  void (__thiscall *set_active)(TScrollTextPanel *, int);
  void (__thiscall *unknown1)(TScrollTextPanel *);
  void (__thiscall *unknown2)(TScrollTextPanel *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TScrollTextPanel *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TScrollTextPanel *, int);
  void (__thiscall *set_fixed_position)(TScrollTextPanel *, int, int, int, int);
  void (__thiscall *set_redraw)(TScrollTextPanel *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TScrollTextPanel *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TScrollTextPanel *, int);
  void (__thiscall *draw_finish)(TScrollTextPanel *);
  void (__thiscall *draw)(TScrollTextPanel *);
  void (__thiscall *draw_rect)(TScrollTextPanel *, RECT *);
  void (__thiscall *draw_offset)(TScrollTextPanel *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TScrollTextPanel *, RECT *);
  void (__thiscall *draw_offset2)(TScrollTextPanel *, int, int, RECT *);
  void (__thiscall *paint)(TScrollTextPanel *);
  int (__thiscall *wnd_proc)(TScrollTextPanel *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TScrollTextPanel *);
  int (__thiscall *handle_size)(TScrollTextPanel *, int, int);
  int (__thiscall *handle_paint)(TScrollTextPanel *);
  int (__thiscall *handle_key_down)(TScrollTextPanel *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TScrollTextPanel *, int, __int16);
  int (__thiscall *handle_command)(TScrollTextPanel *, unsigned int, int);
  int (__thiscall *handle_user_command)(TScrollTextPanel *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TScrollTextPanel *, unsigned int, int);
  int (__thiscall *handle_scroll)(TScrollTextPanel *, int, int);
  int (__thiscall *handle_mouse_down)(TScrollTextPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TScrollTextPanel *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TScrollTextPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TScrollTextPanel *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TScrollTextPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TScrollTextPanel *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TScrollTextPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TScrollTextPanel *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TScrollTextPanel *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TScrollTextPanel *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TScrollTextPanel *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TScrollTextPanel *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TScrollTextPanel *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TScrollTextPanel *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TScrollTextPanel *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TScrollTextPanel *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TScrollTextPanel *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TScrollTextPanel *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TScrollTextPanel *, int, int, int, int);
  int (__thiscall *key_down_action)(TScrollTextPanel *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TScrollTextPanel *, int, __int16);
  int (__thiscall *action)(TScrollTextPanel *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TScrollTextPanel *, RECT *);
  int (__thiscall *is_inside)(TScrollTextPanel *, int, int);
  void (__thiscall *set_focus)(TScrollTextPanel *, int);
  void (__thiscall *set_tab_order_2)(TScrollTextPanel *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TScrollTextPanel *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TScrollTextPanel *);
  unsigned __int8 (__thiscall *get_help_info)(TScrollTextPanel *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TScrollTextPanel *);
  int (__thiscall *restart_sound_system)(TScrollTextPanel *);
  void (__thiscall *take_snapshot)(TScrollTextPanel *);
  void (__thiscall *handle_reactivate)(TScrollTextPanel *);
  int (__thiscall *pointing_at)(TScrollTextPanel *, int, int, int *, int *, int *, int *, char *, int);
  void (__thiscall *set_text)(TScrollTextPanel *, char **, __int16);
  void (__thiscall *set_text2)(TScrollTextPanel *, int);
  void (__thiscall *set_text3)(TScrollTextPanel *, const char *, TTextPanel__FontChangeNode *);
  void (__thiscall *set_text_parsed)(TScrollTextPanel *, char **, __int16, int, int);
  void (__thiscall *set_text_parsed2)(TScrollTextPanel *, int, int, int);
  void (__thiscall *set_text_parsed3)(TScrollTextPanel *, const char *, int, int);
  void (__thiscall *set_bevel_info)(TScrollTextPanel *, int, int, int, int, int, int, int);
  void (__thiscall *set_bevel_type)(TScrollTextPanel *, int);
  void (__thiscall *draw_line)(TScrollTextPanel *, HDC, __int16, __int16, unsigned __int8);
  int (__thiscall *insert_line)(TScrollTextPanel *, int, char *, char *, int, TTextPanel__FontChangeNode *);
  char *(__thiscall *get_text)(TScrollTextPanel *, int);
  void (__thiscall *free_text)(TScrollTextPanel *);
};
#pragma pack(pop)

/* 379 */
#pragma pack(push, 8)
struct FullMapPrintDialog
{
  FullMapPrintDialogVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  HWND dlg_wnd;
  TPanel *save_parent_child;
  TPanel *save_parent;
  int text_font_id;
  int input_font_id;
  int button_font_id;
  int button_sound_id;
  TTextPanel *title;
  TTextPanel *reduction_label;
  TButtonPanel *reduction_button;
  TButtonPanel *ok_button;
  TButtonPanel *cancel_button;
};
#pragma pack(pop)

/* 923 */
#pragma pack(push, 8)
struct FullMapPrintDialogVtbl
{
  void *(__thiscall *__vecDelDtor)(FullMapPrintDialog *, unsigned int);
  int (__thiscall *setup)(FullMapPrintDialog *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(FullMapPrintDialog *, RECT);
  void (__thiscall *set_rect_1)(FullMapPrintDialog *, int, int, int, int);
  void (__thiscall *set_color)(FullMapPrintDialog *, unsigned __int8);
  void (__thiscall *set_active)(FullMapPrintDialog *, int);
  void (__thiscall *unknown1)(FullMapPrintDialog *);
  void (__thiscall *unknown2)(FullMapPrintDialog *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(FullMapPrintDialog *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(FullMapPrintDialog *, int);
  void (__thiscall *set_fixed_position)(FullMapPrintDialog *, int, int, int, int);
  void (__thiscall *set_redraw)(FullMapPrintDialog *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(FullMapPrintDialog *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(FullMapPrintDialog *, int);
  void (__thiscall *draw_finish)(FullMapPrintDialog *);
  void (__thiscall *draw)(FullMapPrintDialog *);
  void (__thiscall *draw_rect)(FullMapPrintDialog *, RECT *);
  void (__thiscall *draw_offset)(FullMapPrintDialog *, int, int, RECT *);
  void (__thiscall *draw_rect2)(FullMapPrintDialog *, RECT *);
  void (__thiscall *draw_offset2)(FullMapPrintDialog *, int, int, RECT *);
  void (__thiscall *paint)(FullMapPrintDialog *);
  int (__thiscall *wnd_proc)(FullMapPrintDialog *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(FullMapPrintDialog *);
  int (__thiscall *handle_size)(FullMapPrintDialog *, int, int);
  int (__thiscall *handle_paint)(FullMapPrintDialog *);
  int (__thiscall *handle_key_down)(FullMapPrintDialog *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(FullMapPrintDialog *, int, __int16);
  int (__thiscall *handle_command)(FullMapPrintDialog *, unsigned int, int);
  int (__thiscall *handle_user_command)(FullMapPrintDialog *, unsigned int, int);
  int (__thiscall *handle_timer_command)(FullMapPrintDialog *, unsigned int, int);
  int (__thiscall *handle_scroll)(FullMapPrintDialog *, int, int);
  int (__thiscall *handle_mouse_down)(FullMapPrintDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(FullMapPrintDialog *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(FullMapPrintDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(FullMapPrintDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(FullMapPrintDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(FullMapPrintDialog *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(FullMapPrintDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(FullMapPrintDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(FullMapPrintDialog *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(FullMapPrintDialog *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(FullMapPrintDialog *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(FullMapPrintDialog *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(FullMapPrintDialog *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(FullMapPrintDialog *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(FullMapPrintDialog *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(FullMapPrintDialog *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(FullMapPrintDialog *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(FullMapPrintDialog *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(FullMapPrintDialog *, int, int, int, int);
  int (__thiscall *key_down_action)(FullMapPrintDialog *, int, __int16, int, int, int);
  int (__thiscall *char_action)(FullMapPrintDialog *, int, __int16);
  int (__thiscall *action)(FullMapPrintDialog *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(FullMapPrintDialog *, RECT *);
  int (__thiscall *is_inside)(FullMapPrintDialog *, int, int);
  void (__thiscall *set_focus)(FullMapPrintDialog *, int);
  void (__thiscall *set_tab_order_2)(FullMapPrintDialog *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(FullMapPrintDialog *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(FullMapPrintDialog *);
  unsigned __int8 (__thiscall *get_help_info)(FullMapPrintDialog *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(FullMapPrintDialog *);
  int (__thiscall *restart_sound_system)(FullMapPrintDialog *);
  void (__thiscall *take_snapshot)(FullMapPrintDialog *);
  void (__thiscall *handle_reactivate)(FullMapPrintDialog *);
  int (__thiscall *pointing_at)(FullMapPrintDialog *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(FullMapPrintDialog *);
  int (__thiscall *get_ideal_width)(FullMapPrintDialog *);
  void (__thiscall *draw_background)(FullMapPrintDialog *, int);
  void (__thiscall *set_ideal_size)(FullMapPrintDialog *, int, int);
  int (__thiscall *create_button_2)(FullMapPrintDialog *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(FullMapPrintDialog *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(FullMapPrintDialog *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(FullMapPrintDialog *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(FullMapPrintDialog *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(FullMapPrintDialog *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(FullMapPrintDialog *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(FullMapPrintDialog *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(FullMapPrintDialog *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(FullMapPrintDialog *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(FullMapPrintDialog *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(FullMapPrintDialog *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(FullMapPrintDialog *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(FullMapPrintDialog *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(FullMapPrintDialog *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(FullMapPrintDialog *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(FullMapPrintDialog *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(FullMapPrintDialog *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(FullMapPrintDialog *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(FullMapPrintDialog *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(FullMapPrintDialog *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(FullMapPrintDialog *, TPanel *, int, int, int, int);
  int (__thiscall *setup_3)(FullMapPrintDialog *, TDrawArea *, TPanel *, int, int, unsigned __int8, int);
  int (__thiscall *setup_2)(FullMapPrintDialog *, TDrawArea *, TPanel *, int, int, char *, int, int);
};
#pragma pack(pop)

/* 380 */
#pragma pack(push, 1)
struct TribeDiplomacyDialog
{
};
#pragma pack(pop)

/* 907 */
typedef int TribeConfigDialog__Mode;

/* 381 */
#pragma pack(push, 8)
struct TribeConfigDialog
{
  TribeConfigDialogVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  HWND dlg_wnd;
  TPanel *save_parent_child;
  TPanel *save_parent;
  int text_font_id;
  int input_font_id;
  int button_font_id;
  int button_sound_id;
  TribeConfigDialog__Mode modeValue;
  TTextPanel *title;
  TTextPanel *speedTitle[4];
  TButtonPanel *speedButton[3];
  TTextPanel *detailTitle[4];
  TButtonPanel *detailButton[3];
  TTextPanel *musicTitle[3];
  TVerticalSliderPanel *musicSlider;
  TTextPanel *soundTitle[3];
  TVerticalSliderPanel *soundSlider;
  TTextPanel *scrollSpeedTitle[3];
  TVerticalSliderPanel *scrollSpeedSlider;
  TTextPanel *sizeTitle[5];
  TButtonPanel *sizeButton[4];
  TTextPanel *tauntTitle;
  TButtonPanel *tauntButton;
  TTextPanel *garrisonTitle;
  TButtonPanel *garrisonButton;
  TTextPanel *mouseTitle;
  TButtonPanel *mouseButton;
  TTextPanel *friendorfoeTitle;
  TButtonPanel *friendorfoeButton;
  TButtonPanel *okButton;
  TButtonPanel *cancelButton;
  TButtonPanel *hotkeyButton;
  int musicVolume;
  int soundVolume;
  float gameSpeed;
  int scrollSpeed;
  int newMusicVolume;
  int newSoundVolume;
};
#pragma pack(pop)

/* 906 */
#pragma pack(push, 8)
struct TribeConfigDialogVtbl
{
  void *(__thiscall *__vecDelDtor)(TribeConfigDialog *, unsigned int);
  int (__thiscall *setup)(TribeConfigDialog *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TribeConfigDialog *, RECT);
  void (__thiscall *set_rect_1)(TribeConfigDialog *, int, int, int, int);
  void (__thiscall *set_color)(TribeConfigDialog *, unsigned __int8);
  void (__thiscall *set_active)(TribeConfigDialog *, int);
  void (__thiscall *unknown1)(TribeConfigDialog *);
  void (__thiscall *unknown2)(TribeConfigDialog *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TribeConfigDialog *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TribeConfigDialog *, int);
  void (__thiscall *set_fixed_position)(TribeConfigDialog *, int, int, int, int);
  void (__thiscall *set_redraw)(TribeConfigDialog *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TribeConfigDialog *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TribeConfigDialog *, int);
  void (__thiscall *draw_finish)(TribeConfigDialog *);
  void (__thiscall *draw)(TribeConfigDialog *);
  void (__thiscall *draw_rect)(TribeConfigDialog *, RECT *);
  void (__thiscall *draw_offset)(TribeConfigDialog *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TribeConfigDialog *, RECT *);
  void (__thiscall *draw_offset2)(TribeConfigDialog *, int, int, RECT *);
  void (__thiscall *paint)(TribeConfigDialog *);
  int (__thiscall *wnd_proc)(TribeConfigDialog *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TribeConfigDialog *);
  int (__thiscall *handle_size)(TribeConfigDialog *, int, int);
  int (__thiscall *handle_paint)(TribeConfigDialog *);
  int (__thiscall *handle_key_down)(TribeConfigDialog *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TribeConfigDialog *, int, __int16);
  int (__thiscall *handle_command)(TribeConfigDialog *, unsigned int, int);
  int (__thiscall *handle_user_command)(TribeConfigDialog *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TribeConfigDialog *, unsigned int, int);
  int (__thiscall *handle_scroll)(TribeConfigDialog *, int, int);
  int (__thiscall *handle_mouse_down)(TribeConfigDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TribeConfigDialog *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TribeConfigDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TribeConfigDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TribeConfigDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TribeConfigDialog *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TribeConfigDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TribeConfigDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TribeConfigDialog *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TribeConfigDialog *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TribeConfigDialog *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TribeConfigDialog *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TribeConfigDialog *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TribeConfigDialog *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TribeConfigDialog *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TribeConfigDialog *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TribeConfigDialog *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TribeConfigDialog *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TribeConfigDialog *, int, int, int, int);
  int (__thiscall *key_down_action)(TribeConfigDialog *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TribeConfigDialog *, int, __int16);
  int (__thiscall *action)(TribeConfigDialog *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TribeConfigDialog *, RECT *);
  int (__thiscall *is_inside)(TribeConfigDialog *, int, int);
  void (__thiscall *set_focus)(TribeConfigDialog *, int);
  void (__thiscall *set_tab_order_2)(TribeConfigDialog *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TribeConfigDialog *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TribeConfigDialog *);
  unsigned __int8 (__thiscall *get_help_info)(TribeConfigDialog *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TribeConfigDialog *);
  int (__thiscall *restart_sound_system)(TribeConfigDialog *);
  void (__thiscall *take_snapshot)(TribeConfigDialog *);
  void (__thiscall *handle_reactivate)(TribeConfigDialog *);
  int (__thiscall *pointing_at)(TribeConfigDialog *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TribeConfigDialog *);
  int (__thiscall *get_ideal_width)(TribeConfigDialog *);
  void (__thiscall *draw_background)(TribeConfigDialog *, int);
  void (__thiscall *set_ideal_size)(TribeConfigDialog *, int, int);
  int (__thiscall *create_button_2)(TribeConfigDialog *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TribeConfigDialog *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TribeConfigDialog *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TribeConfigDialog *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TribeConfigDialog *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TribeConfigDialog *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TribeConfigDialog *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TribeConfigDialog *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TribeConfigDialog *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TribeConfigDialog *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TribeConfigDialog *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TribeConfigDialog *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TribeConfigDialog *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TribeConfigDialog *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TribeConfigDialog *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TribeConfigDialog *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TribeConfigDialog *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TribeConfigDialog *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TribeConfigDialog *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TribeConfigDialog *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TribeConfigDialog *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TribeConfigDialog *, TPanel *, int, int, int, int);
  int (__thiscall *setup_3)(TribeConfigDialog *, TDrawArea *, TPanel *, int, int, unsigned __int8, int);
  int (__thiscall *setup_2)(TribeConfigDialog *, TDrawArea *, TPanel *, int, int, char *, int, int);
};
#pragma pack(pop)

/* 384 */
#pragma pack(push, 8)
struct RGE_Command_Order
{
  unsigned __int8 command;
  unsigned __int8 comm_player_id;
  RGE_Obj_Info target;
  unsigned __int8 unit_num;
  float location_x;
  float location_y;
};
#pragma pack(pop)

/* 385 */
#pragma pack(push, 8)
struct RGE_Command_Stop
{
  unsigned __int8 command;
  unsigned __int8 unit_num;
};
#pragma pack(pop)

/* 387 */
#pragma pack(push, 8)
struct RGE_Command_Group_AI_Order
{
  unsigned __int8 command;
  unsigned __int8 player_id;
  unsigned __int8 issuer;
  unsigned __int8 recipient_count;
  __int16 orderType;
  unsigned __int8 orderPriority;
  int target;
  unsigned __int8 targetOwner;
  float targetX;
  float targetY;
  float targetZ;
  float range;
  unsigned __int8 immediate;
  unsigned __int8 inFront;
};
#pragma pack(pop)

/* 388 */
#pragma pack(push, 8)
struct RGE_Command_Resign
{
  unsigned __int8 command;
  unsigned __int8 player_id;
  unsigned __int8 comm_player_id;
  unsigned __int8 dropped;
};
#pragma pack(pop)

/* 389 */
#pragma pack(push, 8)
struct RGE_Command_Group_Waypoint
{
  unsigned __int8 command;
  unsigned __int8 comm_player_id;
  unsigned __int8 unit_num;
  unsigned __int8 x;
  unsigned __int8 y;
};
#pragma pack(pop)

/* 390 */
#pragma pack(push, 8)
struct RGE_Command_Group_Multi_Waypoints
{
  unsigned __int8 command;
  unsigned __int8 unit_num;
  unsigned __int8 waypoint_num;
};
#pragma pack(pop)

/* 391 */
#pragma pack(push, 8)
struct RGE_Command_Unit_AI_State
{
  unsigned __int8 command;
  unsigned __int8 unit_num;
  unsigned __int8 state;
};
#pragma pack(pop)

/* 392 */
#pragma pack(push, 8)
struct RGE_Command_Guard
{
  unsigned __int8 command;
  unsigned __int8 unit_num;
  int target;
};
#pragma pack(pop)

/* 393 */
#pragma pack(push, 8)
struct RGE_Command_Follow
{
  unsigned __int8 command;
  unsigned __int8 unit_num;
  int target;
};
#pragma pack(pop)

/* 394 */
#pragma pack(push, 8)
struct RGE_Command_Patrol
{
  unsigned __int8 command;
  unsigned __int8 unit_num;
  unsigned __int8 location_num;
  float x[10];
  float y[10];
};
#pragma pack(pop)

/* 395 */
#pragma pack(push, 8)
struct RGE_Command_Form_Formation
{
  unsigned __int8 command;
  unsigned __int8 unit_num;
  unsigned __int8 player_id;
  int formation_type;
};
#pragma pack(pop)

/* 397 */
typedef $65758D9D43B54B363A052B56EC34040F DPSESSIONDESC2;

/* 399 */
union $65758D9D43B54B363A052B56EC34040F__$4BC380B0414FD4D1A387B4548A8B198D
{
    LPWSTR lpszSessionName;
    LPSTR lpszSessionNameA;
};

/* 401 */
union $65758D9D43B54B363A052B56EC34040F__$9D1752F92D652BDA7BF3CD505478029C
{
    LPWSTR lpszPassword;
    LPSTR lpszPasswordA;
};

/* 398 */
struct $65758D9D43B54B363A052B56EC34040F
{
    DWORD dwSize;
    DWORD dwFlags;
    GUID guidInstance;
    GUID guidApplication;
    DWORD dwMaxPlayers;
    DWORD dwCurrentPlayers;
    union
    {
        LPWSTR lpszSessionName;
        LPSTR lpszSessionNameA;
    };
    union
    {
        LPWSTR lpszPassword;
        LPSTR lpszPasswordA;
    };
    DWORD dwReserved1;
    DWORD dwReserved2;
    DWORD dwUser1;
    DWORD dwUser2;
    DWORD dwUser3;
    DWORD dwUser4;
};

/* 404 */
#pragma pack(push, 1)
struct ObjectMemory
{
};
#pragma pack(pop)

/* 406 */
#pragma pack(push, 8)
struct AIBestUnitToAttackEntry
{
  int mID;
  int mMemoryIndex;
  int mUnitBuilding;
  int mWall;
  float mTTK;
  float mTTBK;
  float mDistance;
  int mSameZone;
  float mTTKFactor;
  float mTTBKFactor;
  float mDistanceFactor;
  float mZoneFactor;
  float mTotalFactor;
};
#pragma pack(pop)

/* 405 */
#pragma pack(push, 8)
struct AIBestUnitToAttackStatistics
{
  float mShortestTTK;
  float mLongestTTK;
  float mShortestTTBK;
  float mLongestTTBK;
  float mShortestDistance;
  float mLongestDistance;
  AIBestUnitToAttackEntry mTargets[1024];
  int mNumberTargets;
  int mSortedTargetIndices[1024];
  Exclude_Rect *mExcludeRegions;
  int mNumberExcludeRegions;
  int mMaximumNumberExcludeRegions;
};
#pragma pack(pop)

/* 407 */
#pragma pack(push, 1)
struct UnitData
{
};
#pragma pack(pop)

/* 408 */
#pragma pack(push, 8)
struct WallLine
{
  int lineType;
  int wallType;
  int gateCount;
  int segmentCount;
  int invisibleSegmentCount;
  int unfinishedSegmentCount;
  XYPoint lineStart;
  XYPoint lineEnd;
};
#pragma pack(pop)

/* 409 */
#pragma pack(push, 8)
struct WallLineData
{
  int invisibleSegmentCount;
  int unfinishedSegmentCount;
};
#pragma pack(pop)

/* 411 */
#pragma pack(push, 1)
struct PlacementState
{
};
#pragma pack(pop)

/* 412 */
#pragma pack(push, 8)
struct TRIBE_Screen_Game_Campaign
{
  TRIBE_Screen_Game_CampaignVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  TTextPanel *title;
  TRIBE_Screen_Multimedia *multiMediaScreen;
  int scenarioListX;
  int scenarioListY;
  int scenarioListWidth;
  int scenarioListHeight;
  TTextPanel *scenarioTitle;
  TTextPanel *scenarioList;
  TScrollBarPanel *scenarioScrollbar;
  TTextPanel *difficultyTitle;
  TDropDownPanel *difficultyDrop;
  TRIBE_Panel_Button *campaignButtons[8];
  int campaignButtonX[8];
  int campaignButtonY[8];
  int campaignButtonWidth[8];
  int campaignButtonHeight[8];
  int campaign_game_values[8];
  TTextPanel *campaignTitle[8];
  int campaignTextX[8];
  int campaignTextY[8];
  int campaignTextWidth[8];
  int campaignTextHeight[8];
  TButtonPanel *okButton;
  TButtonPanel *cancelButton;
  TButtonPanel *close_button;
  TButtonPanel *replayIntroButton;
  TButtonPanel *replayEndingButton;
  TTextPanel *campaignList;
  TScrollBarPanel *campaignScrollbar;
};
#pragma pack(pop)

/* 802 */
#pragma pack(push, 8)
struct TRIBE_Screen_Game_CampaignVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Screen_Game_Campaign *, unsigned int);
  int (__thiscall *setup)(TRIBE_Screen_Game_Campaign *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TRIBE_Screen_Game_Campaign *, RECT);
  void (__thiscall *set_rect_1)(TRIBE_Screen_Game_Campaign *, int, int, int, int);
  void (__thiscall *set_color)(TRIBE_Screen_Game_Campaign *, unsigned __int8);
  void (__thiscall *set_active)(TRIBE_Screen_Game_Campaign *, int);
  void (__thiscall *unknown1)(TRIBE_Screen_Game_Campaign *);
  void (__thiscall *unknown2)(TRIBE_Screen_Game_Campaign *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TRIBE_Screen_Game_Campaign *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TRIBE_Screen_Game_Campaign *, int);
  void (__thiscall *set_fixed_position)(TRIBE_Screen_Game_Campaign *, int, int, int, int);
  void (__thiscall *set_redraw)(TRIBE_Screen_Game_Campaign *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TRIBE_Screen_Game_Campaign *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TRIBE_Screen_Game_Campaign *, int);
  void (__thiscall *draw_finish)(TRIBE_Screen_Game_Campaign *);
  void (__thiscall *draw)(TRIBE_Screen_Game_Campaign *);
  void (__thiscall *draw_rect)(TRIBE_Screen_Game_Campaign *, RECT *);
  void (__thiscall *draw_offset)(TRIBE_Screen_Game_Campaign *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TRIBE_Screen_Game_Campaign *, RECT *);
  void (__thiscall *draw_offset2)(TRIBE_Screen_Game_Campaign *, int, int, RECT *);
  void (__thiscall *paint)(TRIBE_Screen_Game_Campaign *);
  int (__thiscall *wnd_proc)(TRIBE_Screen_Game_Campaign *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TRIBE_Screen_Game_Campaign *);
  int (__thiscall *handle_size)(TRIBE_Screen_Game_Campaign *, int, int);
  int (__thiscall *handle_paint)(TRIBE_Screen_Game_Campaign *);
  int (__thiscall *handle_key_down)(TRIBE_Screen_Game_Campaign *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TRIBE_Screen_Game_Campaign *, int, __int16);
  int (__thiscall *handle_command)(TRIBE_Screen_Game_Campaign *, unsigned int, int);
  int (__thiscall *handle_user_command)(TRIBE_Screen_Game_Campaign *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TRIBE_Screen_Game_Campaign *, unsigned int, int);
  int (__thiscall *handle_scroll)(TRIBE_Screen_Game_Campaign *, int, int);
  int (__thiscall *handle_mouse_down)(TRIBE_Screen_Game_Campaign *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TRIBE_Screen_Game_Campaign *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TRIBE_Screen_Game_Campaign *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TRIBE_Screen_Game_Campaign *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TRIBE_Screen_Game_Campaign *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TRIBE_Screen_Game_Campaign *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TRIBE_Screen_Game_Campaign *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TRIBE_Screen_Game_Campaign *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TRIBE_Screen_Game_Campaign *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TRIBE_Screen_Game_Campaign *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TRIBE_Screen_Game_Campaign *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TRIBE_Screen_Game_Campaign *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TRIBE_Screen_Game_Campaign *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TRIBE_Screen_Game_Campaign *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TRIBE_Screen_Game_Campaign *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TRIBE_Screen_Game_Campaign *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TRIBE_Screen_Game_Campaign *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TRIBE_Screen_Game_Campaign *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TRIBE_Screen_Game_Campaign *, int, int, int, int);
  int (__thiscall *key_down_action)(TRIBE_Screen_Game_Campaign *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TRIBE_Screen_Game_Campaign *, int, __int16);
  int (__thiscall *action)(TRIBE_Screen_Game_Campaign *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TRIBE_Screen_Game_Campaign *, RECT *);
  int (__thiscall *is_inside)(TRIBE_Screen_Game_Campaign *, int, int);
  void (__thiscall *set_focus)(TRIBE_Screen_Game_Campaign *, int);
  void (__thiscall *set_tab_order_2)(TRIBE_Screen_Game_Campaign *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TRIBE_Screen_Game_Campaign *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TRIBE_Screen_Game_Campaign *);
  unsigned __int8 (__thiscall *get_help_info)(TRIBE_Screen_Game_Campaign *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TRIBE_Screen_Game_Campaign *);
  int (__thiscall *restart_sound_system)(TRIBE_Screen_Game_Campaign *);
  void (__thiscall *take_snapshot)(TRIBE_Screen_Game_Campaign *);
  void (__thiscall *handle_reactivate)(TRIBE_Screen_Game_Campaign *);
  int (__thiscall *pointing_at)(TRIBE_Screen_Game_Campaign *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TRIBE_Screen_Game_Campaign *);
  int (__thiscall *get_ideal_width)(TRIBE_Screen_Game_Campaign *);
  void (__thiscall *draw_background)(TRIBE_Screen_Game_Campaign *, int);
  void (__thiscall *set_ideal_size)(TRIBE_Screen_Game_Campaign *, int, int);
  int (__thiscall *create_button_2)(TRIBE_Screen_Game_Campaign *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TRIBE_Screen_Game_Campaign *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TRIBE_Screen_Game_Campaign *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TRIBE_Screen_Game_Campaign *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TRIBE_Screen_Game_Campaign *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TRIBE_Screen_Game_Campaign *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TRIBE_Screen_Game_Campaign *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TRIBE_Screen_Game_Campaign *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TRIBE_Screen_Game_Campaign *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TRIBE_Screen_Game_Campaign *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TRIBE_Screen_Game_Campaign *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TRIBE_Screen_Game_Campaign *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TRIBE_Screen_Game_Campaign *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TRIBE_Screen_Game_Campaign *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TRIBE_Screen_Game_Campaign *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TRIBE_Screen_Game_Campaign *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TRIBE_Screen_Game_Campaign *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TRIBE_Screen_Game_Campaign *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TRIBE_Screen_Game_Campaign *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TRIBE_Screen_Game_Campaign *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TRIBE_Screen_Game_Campaign *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TRIBE_Screen_Game_Campaign *, TPanel *, int, int, int, int);
};
#pragma pack(pop)

/* 413 */
#pragma pack(push, 8)
struct TRIBE_Game_Mission_Screen
{
  TRIBE_Game_Mission_ScreenVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  int selectedScenario;
  int scenario_game_values[12];
  int currNumScenarios;
  int previousPanel;
  TTextPanel *title;
  TTextPanel *subtitle;
  TTextPanel *list;
  TScrollBarPanel *scrollBar;
  TButtonPanel *okButton;
  TButtonPanel *cancelButton;
  TRIBE_Panel_Button *scenarioButtons[12];
  TTextPanel *scenarioTitles[12];
  TButtonPanel *close_button;
  TTextPanel *difficultyTitle;
  TDropDownPanel *difficultyDrop;
  TTextPanel *scenarioInfoText;
  int scenarioButtonX[12];
  int scenarioButtonY[12];
  int scenarioButtonWidth[12];
  int scenarioButtonHeight[12];
  int scenarioTextX[12];
  int scenarioTextY[12];
  int scenarioTextWidth[12];
  int scenarioTextHeight[12];
};
#pragma pack(pop)

/* 801 */
#pragma pack(push, 8)
struct TRIBE_Game_Mission_ScreenVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Game_Mission_Screen *, unsigned int);
  int (__thiscall *setup)(TRIBE_Game_Mission_Screen *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TRIBE_Game_Mission_Screen *, RECT);
  void (__thiscall *set_rect_1)(TRIBE_Game_Mission_Screen *, int, int, int, int);
  void (__thiscall *set_color)(TRIBE_Game_Mission_Screen *, unsigned __int8);
  void (__thiscall *set_active)(TRIBE_Game_Mission_Screen *, int);
  void (__thiscall *unknown1)(TRIBE_Game_Mission_Screen *);
  void (__thiscall *unknown2)(TRIBE_Game_Mission_Screen *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TRIBE_Game_Mission_Screen *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TRIBE_Game_Mission_Screen *, int);
  void (__thiscall *set_fixed_position)(TRIBE_Game_Mission_Screen *, int, int, int, int);
  void (__thiscall *set_redraw)(TRIBE_Game_Mission_Screen *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TRIBE_Game_Mission_Screen *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TRIBE_Game_Mission_Screen *, int);
  void (__thiscall *draw_finish)(TRIBE_Game_Mission_Screen *);
  void (__thiscall *draw)(TRIBE_Game_Mission_Screen *);
  void (__thiscall *draw_rect)(TRIBE_Game_Mission_Screen *, RECT *);
  void (__thiscall *draw_offset)(TRIBE_Game_Mission_Screen *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TRIBE_Game_Mission_Screen *, RECT *);
  void (__thiscall *draw_offset2)(TRIBE_Game_Mission_Screen *, int, int, RECT *);
  void (__thiscall *paint)(TRIBE_Game_Mission_Screen *);
  int (__thiscall *wnd_proc)(TRIBE_Game_Mission_Screen *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TRIBE_Game_Mission_Screen *);
  int (__thiscall *handle_size)(TRIBE_Game_Mission_Screen *, int, int);
  int (__thiscall *handle_paint)(TRIBE_Game_Mission_Screen *);
  int (__thiscall *handle_key_down)(TRIBE_Game_Mission_Screen *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TRIBE_Game_Mission_Screen *, int, __int16);
  int (__thiscall *handle_command)(TRIBE_Game_Mission_Screen *, unsigned int, int);
  int (__thiscall *handle_user_command)(TRIBE_Game_Mission_Screen *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TRIBE_Game_Mission_Screen *, unsigned int, int);
  int (__thiscall *handle_scroll)(TRIBE_Game_Mission_Screen *, int, int);
  int (__thiscall *handle_mouse_down)(TRIBE_Game_Mission_Screen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TRIBE_Game_Mission_Screen *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TRIBE_Game_Mission_Screen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TRIBE_Game_Mission_Screen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TRIBE_Game_Mission_Screen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TRIBE_Game_Mission_Screen *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TRIBE_Game_Mission_Screen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TRIBE_Game_Mission_Screen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TRIBE_Game_Mission_Screen *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TRIBE_Game_Mission_Screen *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TRIBE_Game_Mission_Screen *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TRIBE_Game_Mission_Screen *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TRIBE_Game_Mission_Screen *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TRIBE_Game_Mission_Screen *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TRIBE_Game_Mission_Screen *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TRIBE_Game_Mission_Screen *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TRIBE_Game_Mission_Screen *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TRIBE_Game_Mission_Screen *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TRIBE_Game_Mission_Screen *, int, int, int, int);
  int (__thiscall *key_down_action)(TRIBE_Game_Mission_Screen *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TRIBE_Game_Mission_Screen *, int, __int16);
  int (__thiscall *action)(TRIBE_Game_Mission_Screen *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TRIBE_Game_Mission_Screen *, RECT *);
  int (__thiscall *is_inside)(TRIBE_Game_Mission_Screen *, int, int);
  void (__thiscall *set_focus)(TRIBE_Game_Mission_Screen *, int);
  void (__thiscall *set_tab_order_2)(TRIBE_Game_Mission_Screen *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TRIBE_Game_Mission_Screen *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TRIBE_Game_Mission_Screen *);
  unsigned __int8 (__thiscall *get_help_info)(TRIBE_Game_Mission_Screen *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TRIBE_Game_Mission_Screen *);
  int (__thiscall *restart_sound_system)(TRIBE_Game_Mission_Screen *);
  void (__thiscall *take_snapshot)(TRIBE_Game_Mission_Screen *);
  void (__thiscall *handle_reactivate)(TRIBE_Game_Mission_Screen *);
  int (__thiscall *pointing_at)(TRIBE_Game_Mission_Screen *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TRIBE_Game_Mission_Screen *);
  int (__thiscall *get_ideal_width)(TRIBE_Game_Mission_Screen *);
  void (__thiscall *draw_background)(TRIBE_Game_Mission_Screen *, int);
  void (__thiscall *set_ideal_size)(TRIBE_Game_Mission_Screen *, int, int);
  int (__thiscall *create_button_2)(TRIBE_Game_Mission_Screen *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TRIBE_Game_Mission_Screen *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TRIBE_Game_Mission_Screen *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TRIBE_Game_Mission_Screen *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TRIBE_Game_Mission_Screen *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TRIBE_Game_Mission_Screen *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TRIBE_Game_Mission_Screen *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TRIBE_Game_Mission_Screen *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TRIBE_Game_Mission_Screen *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TRIBE_Game_Mission_Screen *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TRIBE_Game_Mission_Screen *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TRIBE_Game_Mission_Screen *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TRIBE_Game_Mission_Screen *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TRIBE_Game_Mission_Screen *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TRIBE_Game_Mission_Screen *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TRIBE_Game_Mission_Screen *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TRIBE_Game_Mission_Screen *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TRIBE_Game_Mission_Screen *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TRIBE_Game_Mission_Screen *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TRIBE_Game_Mission_Screen *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TRIBE_Game_Mission_Screen *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TRIBE_Game_Mission_Screen *, TPanel *, int, int, int, int);
};
#pragma pack(pop)

/* 414 */
#pragma pack(push, 8)
struct TribeScenarioDifficultyDialog
{
  TribeScenarioDifficultyDialogVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  HWND dlg_wnd;
  TPanel *save_parent_child;
  TPanel *save_parent;
  int text_font_id;
  int input_font_id;
  int button_font_id;
  int button_sound_id;
  TTextPanel *title;
  TTextPanel *easy_text;
  TTextPanel *moderate_text;
  TTextPanel *hard_text;
  TTextPanel *info_text;
  TButtonPanel *easy_button;
  TButtonPanel *moderate_button;
  TButtonPanel *hard_button;
  TButtonPanel *ok_button;
  TButtonPanel *cancel_button;
};
#pragma pack(pop)

/* 902 */
#pragma pack(push, 8)
struct TribeScenarioDifficultyDialogVtbl
{
  void *(__thiscall *__vecDelDtor)(TribeScenarioDifficultyDialog *, unsigned int);
  int (__thiscall *setup)(TribeScenarioDifficultyDialog *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TribeScenarioDifficultyDialog *, RECT);
  void (__thiscall *set_rect_1)(TribeScenarioDifficultyDialog *, int, int, int, int);
  void (__thiscall *set_color)(TribeScenarioDifficultyDialog *, unsigned __int8);
  void (__thiscall *set_active)(TribeScenarioDifficultyDialog *, int);
  void (__thiscall *unknown1)(TribeScenarioDifficultyDialog *);
  void (__thiscall *unknown2)(TribeScenarioDifficultyDialog *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TribeScenarioDifficultyDialog *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TribeScenarioDifficultyDialog *, int);
  void (__thiscall *set_fixed_position)(TribeScenarioDifficultyDialog *, int, int, int, int);
  void (__thiscall *set_redraw)(TribeScenarioDifficultyDialog *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TribeScenarioDifficultyDialog *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TribeScenarioDifficultyDialog *, int);
  void (__thiscall *draw_finish)(TribeScenarioDifficultyDialog *);
  void (__thiscall *draw)(TribeScenarioDifficultyDialog *);
  void (__thiscall *draw_rect)(TribeScenarioDifficultyDialog *, RECT *);
  void (__thiscall *draw_offset)(TribeScenarioDifficultyDialog *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TribeScenarioDifficultyDialog *, RECT *);
  void (__thiscall *draw_offset2)(TribeScenarioDifficultyDialog *, int, int, RECT *);
  void (__thiscall *paint)(TribeScenarioDifficultyDialog *);
  int (__thiscall *wnd_proc)(TribeScenarioDifficultyDialog *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TribeScenarioDifficultyDialog *);
  int (__thiscall *handle_size)(TribeScenarioDifficultyDialog *, int, int);
  int (__thiscall *handle_paint)(TribeScenarioDifficultyDialog *);
  int (__thiscall *handle_key_down)(TribeScenarioDifficultyDialog *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TribeScenarioDifficultyDialog *, int, __int16);
  int (__thiscall *handle_command)(TribeScenarioDifficultyDialog *, unsigned int, int);
  int (__thiscall *handle_user_command)(TribeScenarioDifficultyDialog *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TribeScenarioDifficultyDialog *, unsigned int, int);
  int (__thiscall *handle_scroll)(TribeScenarioDifficultyDialog *, int, int);
  int (__thiscall *handle_mouse_down)(TribeScenarioDifficultyDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TribeScenarioDifficultyDialog *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TribeScenarioDifficultyDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TribeScenarioDifficultyDialog *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TribeScenarioDifficultyDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TribeScenarioDifficultyDialog *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TribeScenarioDifficultyDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TribeScenarioDifficultyDialog *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TribeScenarioDifficultyDialog *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TribeScenarioDifficultyDialog *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TribeScenarioDifficultyDialog *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TribeScenarioDifficultyDialog *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TribeScenarioDifficultyDialog *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TribeScenarioDifficultyDialog *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TribeScenarioDifficultyDialog *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TribeScenarioDifficultyDialog *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TribeScenarioDifficultyDialog *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TribeScenarioDifficultyDialog *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TribeScenarioDifficultyDialog *, int, int, int, int);
  int (__thiscall *key_down_action)(TribeScenarioDifficultyDialog *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TribeScenarioDifficultyDialog *, int, __int16);
  int (__thiscall *action)(TribeScenarioDifficultyDialog *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TribeScenarioDifficultyDialog *, RECT *);
  int (__thiscall *is_inside)(TribeScenarioDifficultyDialog *, int, int);
  void (__thiscall *set_focus)(TribeScenarioDifficultyDialog *, int);
  void (__thiscall *set_tab_order_2)(TribeScenarioDifficultyDialog *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TribeScenarioDifficultyDialog *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TribeScenarioDifficultyDialog *);
  unsigned __int8 (__thiscall *get_help_info)(TribeScenarioDifficultyDialog *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TribeScenarioDifficultyDialog *);
  int (__thiscall *restart_sound_system)(TribeScenarioDifficultyDialog *);
  void (__thiscall *take_snapshot)(TribeScenarioDifficultyDialog *);
  void (__thiscall *handle_reactivate)(TribeScenarioDifficultyDialog *);
  int (__thiscall *pointing_at)(TribeScenarioDifficultyDialog *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TribeScenarioDifficultyDialog *);
  int (__thiscall *get_ideal_width)(TribeScenarioDifficultyDialog *);
  void (__thiscall *draw_background)(TribeScenarioDifficultyDialog *, int);
  void (__thiscall *set_ideal_size)(TribeScenarioDifficultyDialog *, int, int);
  int (__thiscall *create_button_2)(TribeScenarioDifficultyDialog *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TribeScenarioDifficultyDialog *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TribeScenarioDifficultyDialog *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TribeScenarioDifficultyDialog *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TribeScenarioDifficultyDialog *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TribeScenarioDifficultyDialog *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TribeScenarioDifficultyDialog *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TribeScenarioDifficultyDialog *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TribeScenarioDifficultyDialog *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TribeScenarioDifficultyDialog *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TribeScenarioDifficultyDialog *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TribeScenarioDifficultyDialog *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TribeScenarioDifficultyDialog *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TribeScenarioDifficultyDialog *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TribeScenarioDifficultyDialog *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TribeScenarioDifficultyDialog *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TribeScenarioDifficultyDialog *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TribeScenarioDifficultyDialog *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TribeScenarioDifficultyDialog *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TribeScenarioDifficultyDialog *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TribeScenarioDifficultyDialog *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TribeScenarioDifficultyDialog *, TPanel *, int, int, int, int);
  int (__thiscall *setup_3)(TribeScenarioDifficultyDialog *, TDrawArea *, TPanel *, int, int, unsigned __int8, int);
  int (__thiscall *setup_2)(TribeScenarioDifficultyDialog *, TDrawArea *, TPanel *, int, int, char *, int, int);
};
#pragma pack(pop)

/* 415 */
#pragma pack(push, 8)
struct TribeHistoryScreen
{
  TribeHistoryScreenVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  TListPanel *m_topicList;
  TScrollBarPanel *m_topicScrollbar;
  TTextPanel *m_title;
  TTextPanel *m_writeupText;
  TScrollBarPanel *m_writeupScrollbar;
  TPicturePanel *m_picture;
  TPicturePanel *m_picture2;
  TPicturePanel *m_xpicture;
  TPicturePanel *m_xpicture2;
  TButtonPanel *m_okButton;
  TButtonPanel *m_closeButton;
  int m_last_id;
  TShape *m_scbar_art;
  int m_civ_sound_id;
};
#pragma pack(pop)

/* 800 */
#pragma pack(push, 8)
struct TribeHistoryScreenVtbl
{
  void *(__thiscall *__vecDelDtor)(TribeHistoryScreen *, unsigned int);
  int (__thiscall *setup)(TribeHistoryScreen *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TribeHistoryScreen *, RECT);
  void (__thiscall *set_rect_1)(TribeHistoryScreen *, int, int, int, int);
  void (__thiscall *set_color)(TribeHistoryScreen *, unsigned __int8);
  void (__thiscall *set_active)(TribeHistoryScreen *, int);
  void (__thiscall *unknown1)(TribeHistoryScreen *);
  void (__thiscall *unknown2)(TribeHistoryScreen *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TribeHistoryScreen *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TribeHistoryScreen *, int);
  void (__thiscall *set_fixed_position)(TribeHistoryScreen *, int, int, int, int);
  void (__thiscall *set_redraw)(TribeHistoryScreen *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TribeHistoryScreen *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TribeHistoryScreen *, int);
  void (__thiscall *draw_finish)(TribeHistoryScreen *);
  void (__thiscall *draw)(TribeHistoryScreen *);
  void (__thiscall *draw_rect)(TribeHistoryScreen *, RECT *);
  void (__thiscall *draw_offset)(TribeHistoryScreen *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TribeHistoryScreen *, RECT *);
  void (__thiscall *draw_offset2)(TribeHistoryScreen *, int, int, RECT *);
  void (__thiscall *paint)(TribeHistoryScreen *);
  int (__thiscall *wnd_proc)(TribeHistoryScreen *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TribeHistoryScreen *);
  int (__thiscall *handle_size)(TribeHistoryScreen *, int, int);
  int (__thiscall *handle_paint)(TribeHistoryScreen *);
  int (__thiscall *handle_key_down)(TribeHistoryScreen *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TribeHistoryScreen *, int, __int16);
  int (__thiscall *handle_command)(TribeHistoryScreen *, unsigned int, int);
  int (__thiscall *handle_user_command)(TribeHistoryScreen *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TribeHistoryScreen *, unsigned int, int);
  int (__thiscall *handle_scroll)(TribeHistoryScreen *, int, int);
  int (__thiscall *handle_mouse_down)(TribeHistoryScreen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TribeHistoryScreen *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TribeHistoryScreen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TribeHistoryScreen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TribeHistoryScreen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TribeHistoryScreen *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TribeHistoryScreen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TribeHistoryScreen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TribeHistoryScreen *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TribeHistoryScreen *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TribeHistoryScreen *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TribeHistoryScreen *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TribeHistoryScreen *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TribeHistoryScreen *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TribeHistoryScreen *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TribeHistoryScreen *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TribeHistoryScreen *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TribeHistoryScreen *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TribeHistoryScreen *, int, int, int, int);
  int (__thiscall *key_down_action)(TribeHistoryScreen *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TribeHistoryScreen *, int, __int16);
  int (__thiscall *action)(TribeHistoryScreen *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TribeHistoryScreen *, RECT *);
  int (__thiscall *is_inside)(TribeHistoryScreen *, int, int);
  void (__thiscall *set_focus)(TribeHistoryScreen *, int);
  void (__thiscall *set_tab_order_2)(TribeHistoryScreen *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TribeHistoryScreen *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TribeHistoryScreen *);
  unsigned __int8 (__thiscall *get_help_info)(TribeHistoryScreen *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TribeHistoryScreen *);
  int (__thiscall *restart_sound_system)(TribeHistoryScreen *);
  void (__thiscall *take_snapshot)(TribeHistoryScreen *);
  void (__thiscall *handle_reactivate)(TribeHistoryScreen *);
  int (__thiscall *pointing_at)(TribeHistoryScreen *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TribeHistoryScreen *);
  int (__thiscall *get_ideal_width)(TribeHistoryScreen *);
  void (__thiscall *draw_background)(TribeHistoryScreen *, int);
  void (__thiscall *set_ideal_size)(TribeHistoryScreen *, int, int);
  int (__thiscall *create_button_2)(TribeHistoryScreen *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TribeHistoryScreen *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TribeHistoryScreen *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TribeHistoryScreen *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TribeHistoryScreen *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TribeHistoryScreen *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TribeHistoryScreen *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TribeHistoryScreen *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TribeHistoryScreen *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TribeHistoryScreen *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TribeHistoryScreen *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TribeHistoryScreen *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TribeHistoryScreen *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TribeHistoryScreen *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TribeHistoryScreen *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TribeHistoryScreen *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TribeHistoryScreen *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TribeHistoryScreen *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TribeHistoryScreen *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TribeHistoryScreen *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TribeHistoryScreen *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TribeHistoryScreen *, TPanel *, int, int, int, int);
};
#pragma pack(pop)

/* 416 */
#pragma pack(push, 8)
struct TribeLoadSavedGameScreen
{
  TribeLoadSavedGameScreenVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  TTextPanel *screenTitle;
  TTextPanel *listTitle;
  TListPanel *list;
  TScrollBarPanel *scrollbar;
  TButtonPanel *okButton;
  TButtonPanel *cancelButton;
  TButtonPanel *deleteButton;
};
#pragma pack(pop)

/* 799 */
#pragma pack(push, 8)
struct TribeLoadSavedGameScreenVtbl
{
  void *(__thiscall *__vecDelDtor)(TribeLoadSavedGameScreen *, unsigned int);
  int (__thiscall *setup)(TribeLoadSavedGameScreen *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TribeLoadSavedGameScreen *, RECT);
  void (__thiscall *set_rect_1)(TribeLoadSavedGameScreen *, int, int, int, int);
  void (__thiscall *set_color)(TribeLoadSavedGameScreen *, unsigned __int8);
  void (__thiscall *set_active)(TribeLoadSavedGameScreen *, int);
  void (__thiscall *unknown1)(TribeLoadSavedGameScreen *);
  void (__thiscall *unknown2)(TribeLoadSavedGameScreen *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TribeLoadSavedGameScreen *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TribeLoadSavedGameScreen *, int);
  void (__thiscall *set_fixed_position)(TribeLoadSavedGameScreen *, int, int, int, int);
  void (__thiscall *set_redraw)(TribeLoadSavedGameScreen *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TribeLoadSavedGameScreen *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TribeLoadSavedGameScreen *, int);
  void (__thiscall *draw_finish)(TribeLoadSavedGameScreen *);
  void (__thiscall *draw)(TribeLoadSavedGameScreen *);
  void (__thiscall *draw_rect)(TribeLoadSavedGameScreen *, RECT *);
  void (__thiscall *draw_offset)(TribeLoadSavedGameScreen *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TribeLoadSavedGameScreen *, RECT *);
  void (__thiscall *draw_offset2)(TribeLoadSavedGameScreen *, int, int, RECT *);
  void (__thiscall *paint)(TribeLoadSavedGameScreen *);
  int (__thiscall *wnd_proc)(TribeLoadSavedGameScreen *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TribeLoadSavedGameScreen *);
  int (__thiscall *handle_size)(TribeLoadSavedGameScreen *, int, int);
  int (__thiscall *handle_paint)(TribeLoadSavedGameScreen *);
  int (__thiscall *handle_key_down)(TribeLoadSavedGameScreen *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TribeLoadSavedGameScreen *, int, __int16);
  int (__thiscall *handle_command)(TribeLoadSavedGameScreen *, unsigned int, int);
  int (__thiscall *handle_user_command)(TribeLoadSavedGameScreen *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TribeLoadSavedGameScreen *, unsigned int, int);
  int (__thiscall *handle_scroll)(TribeLoadSavedGameScreen *, int, int);
  int (__thiscall *handle_mouse_down)(TribeLoadSavedGameScreen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TribeLoadSavedGameScreen *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TribeLoadSavedGameScreen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TribeLoadSavedGameScreen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TribeLoadSavedGameScreen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TribeLoadSavedGameScreen *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TribeLoadSavedGameScreen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TribeLoadSavedGameScreen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TribeLoadSavedGameScreen *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TribeLoadSavedGameScreen *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TribeLoadSavedGameScreen *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TribeLoadSavedGameScreen *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TribeLoadSavedGameScreen *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TribeLoadSavedGameScreen *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TribeLoadSavedGameScreen *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TribeLoadSavedGameScreen *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TribeLoadSavedGameScreen *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TribeLoadSavedGameScreen *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TribeLoadSavedGameScreen *, int, int, int, int);
  int (__thiscall *key_down_action)(TribeLoadSavedGameScreen *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TribeLoadSavedGameScreen *, int, __int16);
  int (__thiscall *action)(TribeLoadSavedGameScreen *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TribeLoadSavedGameScreen *, RECT *);
  int (__thiscall *is_inside)(TribeLoadSavedGameScreen *, int, int);
  void (__thiscall *set_focus)(TribeLoadSavedGameScreen *, int);
  void (__thiscall *set_tab_order_2)(TribeLoadSavedGameScreen *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TribeLoadSavedGameScreen *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TribeLoadSavedGameScreen *);
  unsigned __int8 (__thiscall *get_help_info)(TribeLoadSavedGameScreen *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TribeLoadSavedGameScreen *);
  int (__thiscall *restart_sound_system)(TribeLoadSavedGameScreen *);
  void (__thiscall *take_snapshot)(TribeLoadSavedGameScreen *);
  void (__thiscall *handle_reactivate)(TribeLoadSavedGameScreen *);
  int (__thiscall *pointing_at)(TribeLoadSavedGameScreen *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TribeLoadSavedGameScreen *);
  int (__thiscall *get_ideal_width)(TribeLoadSavedGameScreen *);
  void (__thiscall *draw_background)(TribeLoadSavedGameScreen *, int);
  void (__thiscall *set_ideal_size)(TribeLoadSavedGameScreen *, int, int);
  int (__thiscall *create_button_2)(TribeLoadSavedGameScreen *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TribeLoadSavedGameScreen *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TribeLoadSavedGameScreen *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TribeLoadSavedGameScreen *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TribeLoadSavedGameScreen *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TribeLoadSavedGameScreen *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TribeLoadSavedGameScreen *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TribeLoadSavedGameScreen *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TribeLoadSavedGameScreen *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TribeLoadSavedGameScreen *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TribeLoadSavedGameScreen *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TribeLoadSavedGameScreen *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TribeLoadSavedGameScreen *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TribeLoadSavedGameScreen *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TribeLoadSavedGameScreen *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TribeLoadSavedGameScreen *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TribeLoadSavedGameScreen *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TribeLoadSavedGameScreen *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TribeLoadSavedGameScreen *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TribeLoadSavedGameScreen *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TribeLoadSavedGameScreen *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TribeLoadSavedGameScreen *, TPanel *, int, int, int, int);
};
#pragma pack(pop)

/* 417 */
#pragma pack(push, 8)
struct TribeLoadMultiplayerSavedGameScreen
{
  TribeLoadMultiplayerSavedGameScreenVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  TTextPanel *screenTitle;
  TTextPanel *listTitle;
  TTextPanel *detailsTitle;
  TListPanel *list;
  TListPanel *savegameDetails;
  TScrollBarPanel *scrollbar;
  TButtonPanel *okButton;
  TButtonPanel *cancelButton;
  TButtonPanel *deleteButton;
};
#pragma pack(pop)

/* 796 */
#pragma pack(push, 8)
struct TribeLoadMultiplayerSavedGameScreenVtbl
{
  void *(__thiscall *__vecDelDtor)(TribeLoadMultiplayerSavedGameScreen *, unsigned int);
  int (__thiscall *setup)(TribeLoadMultiplayerSavedGameScreen *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TribeLoadMultiplayerSavedGameScreen *, RECT);
  void (__thiscall *set_rect_1)(TribeLoadMultiplayerSavedGameScreen *, int, int, int, int);
  void (__thiscall *set_color)(TribeLoadMultiplayerSavedGameScreen *, unsigned __int8);
  void (__thiscall *set_active)(TribeLoadMultiplayerSavedGameScreen *, int);
  void (__thiscall *unknown1)(TribeLoadMultiplayerSavedGameScreen *);
  void (__thiscall *unknown2)(TribeLoadMultiplayerSavedGameScreen *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TribeLoadMultiplayerSavedGameScreen *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TribeLoadMultiplayerSavedGameScreen *, int);
  void (__thiscall *set_fixed_position)(TribeLoadMultiplayerSavedGameScreen *, int, int, int, int);
  void (__thiscall *set_redraw)(TribeLoadMultiplayerSavedGameScreen *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TribeLoadMultiplayerSavedGameScreen *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TribeLoadMultiplayerSavedGameScreen *, int);
  void (__thiscall *draw_finish)(TribeLoadMultiplayerSavedGameScreen *);
  void (__thiscall *draw)(TribeLoadMultiplayerSavedGameScreen *);
  void (__thiscall *draw_rect)(TribeLoadMultiplayerSavedGameScreen *, RECT *);
  void (__thiscall *draw_offset)(TribeLoadMultiplayerSavedGameScreen *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TribeLoadMultiplayerSavedGameScreen *, RECT *);
  void (__thiscall *draw_offset2)(TribeLoadMultiplayerSavedGameScreen *, int, int, RECT *);
  void (__thiscall *paint)(TribeLoadMultiplayerSavedGameScreen *);
  int (__thiscall *wnd_proc)(TribeLoadMultiplayerSavedGameScreen *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TribeLoadMultiplayerSavedGameScreen *);
  int (__thiscall *handle_size)(TribeLoadMultiplayerSavedGameScreen *, int, int);
  int (__thiscall *handle_paint)(TribeLoadMultiplayerSavedGameScreen *);
  int (__thiscall *handle_key_down)(TribeLoadMultiplayerSavedGameScreen *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TribeLoadMultiplayerSavedGameScreen *, int, __int16);
  int (__thiscall *handle_command)(TribeLoadMultiplayerSavedGameScreen *, unsigned int, int);
  int (__thiscall *handle_user_command)(TribeLoadMultiplayerSavedGameScreen *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TribeLoadMultiplayerSavedGameScreen *, unsigned int, int);
  int (__thiscall *handle_scroll)(TribeLoadMultiplayerSavedGameScreen *, int, int);
  int (__thiscall *handle_mouse_down)(TribeLoadMultiplayerSavedGameScreen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TribeLoadMultiplayerSavedGameScreen *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TribeLoadMultiplayerSavedGameScreen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TribeLoadMultiplayerSavedGameScreen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TribeLoadMultiplayerSavedGameScreen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TribeLoadMultiplayerSavedGameScreen *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TribeLoadMultiplayerSavedGameScreen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TribeLoadMultiplayerSavedGameScreen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TribeLoadMultiplayerSavedGameScreen *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TribeLoadMultiplayerSavedGameScreen *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TribeLoadMultiplayerSavedGameScreen *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TribeLoadMultiplayerSavedGameScreen *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TribeLoadMultiplayerSavedGameScreen *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TribeLoadMultiplayerSavedGameScreen *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TribeLoadMultiplayerSavedGameScreen *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TribeLoadMultiplayerSavedGameScreen *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TribeLoadMultiplayerSavedGameScreen *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TribeLoadMultiplayerSavedGameScreen *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TribeLoadMultiplayerSavedGameScreen *, int, int, int, int);
  int (__thiscall *key_down_action)(TribeLoadMultiplayerSavedGameScreen *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TribeLoadMultiplayerSavedGameScreen *, int, __int16);
  int (__thiscall *action)(TribeLoadMultiplayerSavedGameScreen *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TribeLoadMultiplayerSavedGameScreen *, RECT *);
  int (__thiscall *is_inside)(TribeLoadMultiplayerSavedGameScreen *, int, int);
  void (__thiscall *set_focus)(TribeLoadMultiplayerSavedGameScreen *, int);
  void (__thiscall *set_tab_order_2)(TribeLoadMultiplayerSavedGameScreen *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TribeLoadMultiplayerSavedGameScreen *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TribeLoadMultiplayerSavedGameScreen *);
  unsigned __int8 (__thiscall *get_help_info)(TribeLoadMultiplayerSavedGameScreen *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TribeLoadMultiplayerSavedGameScreen *);
  int (__thiscall *restart_sound_system)(TribeLoadMultiplayerSavedGameScreen *);
  void (__thiscall *take_snapshot)(TribeLoadMultiplayerSavedGameScreen *);
  void (__thiscall *handle_reactivate)(TribeLoadMultiplayerSavedGameScreen *);
  int (__thiscall *pointing_at)(TribeLoadMultiplayerSavedGameScreen *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TribeLoadMultiplayerSavedGameScreen *);
  int (__thiscall *get_ideal_width)(TribeLoadMultiplayerSavedGameScreen *);
  void (__thiscall *draw_background)(TribeLoadMultiplayerSavedGameScreen *, int);
  void (__thiscall *set_ideal_size)(TribeLoadMultiplayerSavedGameScreen *, int, int);
  int (__thiscall *create_button_2)(TribeLoadMultiplayerSavedGameScreen *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TribeLoadMultiplayerSavedGameScreen *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TribeLoadMultiplayerSavedGameScreen *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TribeLoadMultiplayerSavedGameScreen *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TribeLoadMultiplayerSavedGameScreen *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TribeLoadMultiplayerSavedGameScreen *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TribeLoadMultiplayerSavedGameScreen *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TribeLoadMultiplayerSavedGameScreen *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TribeLoadMultiplayerSavedGameScreen *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TribeLoadMultiplayerSavedGameScreen *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TribeLoadMultiplayerSavedGameScreen *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TribeLoadMultiplayerSavedGameScreen *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TribeLoadMultiplayerSavedGameScreen *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TribeLoadMultiplayerSavedGameScreen *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TribeLoadMultiplayerSavedGameScreen *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TribeLoadMultiplayerSavedGameScreen *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TribeLoadMultiplayerSavedGameScreen *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TribeLoadMultiplayerSavedGameScreen *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TribeLoadMultiplayerSavedGameScreen *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TribeLoadMultiplayerSavedGameScreen *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TribeLoadMultiplayerSavedGameScreen *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TribeLoadMultiplayerSavedGameScreen *, TPanel *, int, int, int, int);
};
#pragma pack(pop)

/* 783 */
typedef TribeSaveGameScreen__Mode TribeMultiplayerSaveGameScreen__Mode;

/* 418 */
#pragma pack(push, 8)
struct TribeMultiplayerSaveGameScreen
{
  TribeMultiplayerSaveGameScreenVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  TTextPanel *title;
  TEditPanel *input;
  TListPanel *list;
  TScrollBarPanel *scrollbar;
  TButtonPanel *okButton;
  TButtonPanel *cancelButton;
  TButtonPanel *deleteButton;
  char fileName[260];
  char fileNameNoExt[260];
  TribeMultiplayerSaveGameScreen__Mode modeValue;
  int mExitAfterSave;
};
#pragma pack(pop)

/* 784 */
#pragma pack(push, 8)
struct TribeMultiplayerSaveGameScreenVtbl
{
  void *(__thiscall *__vecDelDtor)(TribeMultiplayerSaveGameScreen *, unsigned int);
  int (__thiscall *setup)(TribeMultiplayerSaveGameScreen *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TribeMultiplayerSaveGameScreen *, RECT);
  void (__thiscall *set_rect_1)(TribeMultiplayerSaveGameScreen *, int, int, int, int);
  void (__thiscall *set_color)(TribeMultiplayerSaveGameScreen *, unsigned __int8);
  void (__thiscall *set_active)(TribeMultiplayerSaveGameScreen *, int);
  void (__thiscall *unknown1)(TribeMultiplayerSaveGameScreen *);
  void (__thiscall *unknown2)(TribeMultiplayerSaveGameScreen *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TribeMultiplayerSaveGameScreen *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TribeMultiplayerSaveGameScreen *, int);
  void (__thiscall *set_fixed_position)(TribeMultiplayerSaveGameScreen *, int, int, int, int);
  void (__thiscall *set_redraw)(TribeMultiplayerSaveGameScreen *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TribeMultiplayerSaveGameScreen *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TribeMultiplayerSaveGameScreen *, int);
  void (__thiscall *draw_finish)(TribeMultiplayerSaveGameScreen *);
  void (__thiscall *draw)(TribeMultiplayerSaveGameScreen *);
  void (__thiscall *draw_rect)(TribeMultiplayerSaveGameScreen *, RECT *);
  void (__thiscall *draw_offset)(TribeMultiplayerSaveGameScreen *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TribeMultiplayerSaveGameScreen *, RECT *);
  void (__thiscall *draw_offset2)(TribeMultiplayerSaveGameScreen *, int, int, RECT *);
  void (__thiscall *paint)(TribeMultiplayerSaveGameScreen *);
  int (__thiscall *wnd_proc)(TribeMultiplayerSaveGameScreen *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TribeMultiplayerSaveGameScreen *);
  int (__thiscall *handle_size)(TribeMultiplayerSaveGameScreen *, int, int);
  int (__thiscall *handle_paint)(TribeMultiplayerSaveGameScreen *);
  int (__thiscall *handle_key_down)(TribeMultiplayerSaveGameScreen *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TribeMultiplayerSaveGameScreen *, int, __int16);
  int (__thiscall *handle_command)(TribeMultiplayerSaveGameScreen *, unsigned int, int);
  int (__thiscall *handle_user_command)(TribeMultiplayerSaveGameScreen *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TribeMultiplayerSaveGameScreen *, unsigned int, int);
  int (__thiscall *handle_scroll)(TribeMultiplayerSaveGameScreen *, int, int);
  int (__thiscall *handle_mouse_down)(TribeMultiplayerSaveGameScreen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TribeMultiplayerSaveGameScreen *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TribeMultiplayerSaveGameScreen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TribeMultiplayerSaveGameScreen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TribeMultiplayerSaveGameScreen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TribeMultiplayerSaveGameScreen *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TribeMultiplayerSaveGameScreen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TribeMultiplayerSaveGameScreen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TribeMultiplayerSaveGameScreen *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TribeMultiplayerSaveGameScreen *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TribeMultiplayerSaveGameScreen *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TribeMultiplayerSaveGameScreen *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TribeMultiplayerSaveGameScreen *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TribeMultiplayerSaveGameScreen *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TribeMultiplayerSaveGameScreen *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TribeMultiplayerSaveGameScreen *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TribeMultiplayerSaveGameScreen *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TribeMultiplayerSaveGameScreen *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TribeMultiplayerSaveGameScreen *, int, int, int, int);
  int (__thiscall *key_down_action)(TribeMultiplayerSaveGameScreen *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TribeMultiplayerSaveGameScreen *, int, __int16);
  int (__thiscall *action)(TribeMultiplayerSaveGameScreen *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TribeMultiplayerSaveGameScreen *, RECT *);
  int (__thiscall *is_inside)(TribeMultiplayerSaveGameScreen *, int, int);
  void (__thiscall *set_focus)(TribeMultiplayerSaveGameScreen *, int);
  void (__thiscall *set_tab_order_2)(TribeMultiplayerSaveGameScreen *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TribeMultiplayerSaveGameScreen *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TribeMultiplayerSaveGameScreen *);
  unsigned __int8 (__thiscall *get_help_info)(TribeMultiplayerSaveGameScreen *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TribeMultiplayerSaveGameScreen *);
  int (__thiscall *restart_sound_system)(TribeMultiplayerSaveGameScreen *);
  void (__thiscall *take_snapshot)(TribeMultiplayerSaveGameScreen *);
  void (__thiscall *handle_reactivate)(TribeMultiplayerSaveGameScreen *);
  int (__thiscall *pointing_at)(TribeMultiplayerSaveGameScreen *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TribeMultiplayerSaveGameScreen *);
  int (__thiscall *get_ideal_width)(TribeMultiplayerSaveGameScreen *);
  void (__thiscall *draw_background)(TribeMultiplayerSaveGameScreen *, int);
  void (__thiscall *set_ideal_size)(TribeMultiplayerSaveGameScreen *, int, int);
  int (__thiscall *create_button_2)(TribeMultiplayerSaveGameScreen *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TribeMultiplayerSaveGameScreen *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TribeMultiplayerSaveGameScreen *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TribeMultiplayerSaveGameScreen *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TribeMultiplayerSaveGameScreen *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TribeMultiplayerSaveGameScreen *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TribeMultiplayerSaveGameScreen *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TribeMultiplayerSaveGameScreen *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TribeMultiplayerSaveGameScreen *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TribeMultiplayerSaveGameScreen *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TribeMultiplayerSaveGameScreen *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TribeMultiplayerSaveGameScreen *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TribeMultiplayerSaveGameScreen *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TribeMultiplayerSaveGameScreen *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TribeMultiplayerSaveGameScreen *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TribeMultiplayerSaveGameScreen *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TribeMultiplayerSaveGameScreen *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TribeMultiplayerSaveGameScreen *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TribeMultiplayerSaveGameScreen *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TribeMultiplayerSaveGameScreen *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TribeMultiplayerSaveGameScreen *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TribeMultiplayerSaveGameScreen *, TPanel *, int, int, int, int);
};
#pragma pack(pop)

/* 419 */
#pragma pack(push, 8)
struct Event
{
  int id;
  int type;
  int status;
  int xpos;
  int ypos;
  int width;
  int height;
  int start_time;
  int display_time;
  int frame_number;
  char *string;
  unsigned int text_color;
  int sound_id;
  int fade;
  int last_time;
};
#pragma pack(pop)

/* 421 */
#pragma pack(push, 8)
struct DriveInformation
{
  int initialDriveValue;
  char initialDirectoryValue[256];
  int currentDriveValue;
  char currentDirectoryValue[256];
  int driveValues[27];
};
#pragma pack(pop)

/* 426 */
#pragma pack(push, 8)
struct TRIBE_Action_Artifact
{
  TRIBE_Action_ArtifactVtbl *vfptr;
  __int16 action_type;
  RGE_Action_Object *obj;
  unsigned __int8 state;
  RGE_Static_Object *target_obj;
  RGE_Static_Object *target_obj2;
  int targetID;
  int target2ID;
  float target_x;
  float target_y;
  float target_z;
  float timer;
  RGE_Task *task;
  RGE_Action_List *sub_actions;
  RGE_Sprite *sprite;
  unsigned __int8 subActionValue;
  unsigned __int8 mTargetMovedState;
  unsigned __int8 RGE_Action_gap[2];
};
#pragma pack(pop)

/* 737 */
#pragma pack(push, 8)
struct TRIBE_Action_ArtifactVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Action_Artifact *, unsigned int);
  int (__thiscall *setup_2)(TRIBE_Action_Artifact *, RGE_Action_Object *);
  int (__thiscall *setup_1)(TRIBE_Action_Artifact *, int, RGE_Action_Object *);
  RGE_Action_List *(__thiscall *create_action_list)(TRIBE_Action_Artifact *, RGE_Action_Object *);
  void (__thiscall *rehook)(TRIBE_Action_Artifact *);
  void (__thiscall *save)(TRIBE_Action_Artifact *, int);
  __int16 (__thiscall *type)(TRIBE_Action_Artifact *);
  void (__thiscall *first_in_stack)(TRIBE_Action_Artifact *, unsigned __int8);
  unsigned __int8 (__thiscall *inside_obj_update)(TRIBE_Action_Artifact *);
  unsigned __int8 (__thiscall *idle_update)(TRIBE_Action_Artifact *);
  unsigned __int8 (__thiscall *update)(TRIBE_Action_Artifact *);
  int (__thiscall *stop)(TRIBE_Action_Artifact *);
  int (__thiscall *move_to)(TRIBE_Action_Artifact *, RGE_Static_Object *, float, float, float);
  int (__thiscall *work)(TRIBE_Action_Artifact *, RGE_Static_Object *, float, float, float);
  int (__thiscall *gbg_unknown1)(TRIBE_Action_Artifact *, int, int);
  unsigned __int8 (__thiscall *attack_response)(TRIBE_Action_Artifact *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *relation_response)(TRIBE_Action_Artifact *, int, unsigned __int8);
  void (__thiscall *copy_obj)(TRIBE_Action_Artifact *, RGE_Master_Action_Object *);
  void (__thiscall *copy_obj_sprites)(TRIBE_Action_Artifact *, RGE_Master_Action_Object *, RGE_Task *, RGE_Task *);
  void (__thiscall *get_state_name)(TRIBE_Action_Artifact *, char *);
  RGE_Static_Object *(__thiscall *get_target_obj)(TRIBE_Action_Artifact *);
  RGE_Static_Object *(__thiscall *get_target_obj2)(TRIBE_Action_Artifact *);
  void (__thiscall *set_target_obj)(TRIBE_Action_Artifact *, RGE_Static_Object *);
  void (__thiscall *set_target_obj2)(TRIBE_Action_Artifact *, RGE_Static_Object *);
  void (__thiscall *set_state)(TRIBE_Action_Artifact *, unsigned __int8);
};
#pragma pack(pop)

/* 427 */
#pragma pack(push, 8)
struct TRIBE_Action_Build
{
  TRIBE_Action_BuildVtbl *vfptr;
  __int16 action_type;
  RGE_Action_Object *obj;
  unsigned __int8 state;
  RGE_Static_Object *target_obj;
  RGE_Static_Object *target_obj2;
  int targetID;
  int target2ID;
  float target_x;
  float target_y;
  float target_z;
  float timer;
  RGE_Task *task;
  RGE_Action_List *sub_actions;
  RGE_Sprite *sprite;
  unsigned __int8 subActionValue;
  unsigned __int8 mTargetMovedState;
  unsigned __int8 RGE_Action_gap[2];
  int added_to_num_builders;
};
#pragma pack(pop)

/* 731 */
#pragma pack(push, 8)
struct TRIBE_Action_BuildVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Action_Build *, unsigned int);
  int (__thiscall *setup_2)(TRIBE_Action_Build *, RGE_Action_Object *);
  int (__thiscall *setup_1)(TRIBE_Action_Build *, int, RGE_Action_Object *);
  RGE_Action_List *(__thiscall *create_action_list)(TRIBE_Action_Build *, RGE_Action_Object *);
  void (__thiscall *rehook)(TRIBE_Action_Build *);
  void (__thiscall *save)(TRIBE_Action_Build *, int);
  __int16 (__thiscall *type)(TRIBE_Action_Build *);
  void (__thiscall *first_in_stack)(TRIBE_Action_Build *, unsigned __int8);
  unsigned __int8 (__thiscall *inside_obj_update)(TRIBE_Action_Build *);
  unsigned __int8 (__thiscall *idle_update)(TRIBE_Action_Build *);
  unsigned __int8 (__thiscall *update)(TRIBE_Action_Build *);
  int (__thiscall *stop)(TRIBE_Action_Build *);
  int (__thiscall *move_to)(TRIBE_Action_Build *, RGE_Static_Object *, float, float, float);
  int (__thiscall *work)(TRIBE_Action_Build *, RGE_Static_Object *, float, float, float);
  int (__thiscall *gbg_unknown1)(TRIBE_Action_Build *, int, int);
  unsigned __int8 (__thiscall *attack_response)(TRIBE_Action_Build *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *relation_response)(TRIBE_Action_Build *, int, unsigned __int8);
  void (__thiscall *copy_obj)(TRIBE_Action_Build *, RGE_Master_Action_Object *);
  void (__thiscall *copy_obj_sprites)(TRIBE_Action_Build *, RGE_Master_Action_Object *, RGE_Task *, RGE_Task *);
  void (__thiscall *get_state_name)(TRIBE_Action_Build *, char *);
  RGE_Static_Object *(__thiscall *get_target_obj)(TRIBE_Action_Build *);
  RGE_Static_Object *(__thiscall *get_target_obj2)(TRIBE_Action_Build *);
  void (__thiscall *set_target_obj)(TRIBE_Action_Build *, RGE_Static_Object *);
  void (__thiscall *set_target_obj2)(TRIBE_Action_Build *, RGE_Static_Object *);
  void (__thiscall *set_state)(TRIBE_Action_Build *, unsigned __int8);
};
#pragma pack(pop)

/* 428 */
#pragma pack(push, 8)
struct TRIBE_Action_Capture
{
  TRIBE_Action_CaptureVtbl *vfptr;
  __int16 action_type;
  RGE_Action_Object *obj;
  unsigned __int8 state;
  RGE_Static_Object *target_obj;
  RGE_Static_Object *target_obj2;
  int targetID;
  int target2ID;
  float target_x;
  float target_y;
  float target_z;
  float timer;
  RGE_Task *task;
  RGE_Action_List *sub_actions;
  RGE_Sprite *sprite;
  unsigned __int8 subActionValue;
  unsigned __int8 mTargetMovedState;
  unsigned __int8 RGE_Action_gap[2];
};
#pragma pack(pop)

/* 750 */
#pragma pack(push, 8)
struct TRIBE_Action_CaptureVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Action_Capture *, unsigned int);
  int (__thiscall *setup_2)(TRIBE_Action_Capture *, RGE_Action_Object *);
  int (__thiscall *setup_1)(TRIBE_Action_Capture *, int, RGE_Action_Object *);
  RGE_Action_List *(__thiscall *create_action_list)(TRIBE_Action_Capture *, RGE_Action_Object *);
  void (__thiscall *rehook)(TRIBE_Action_Capture *);
  void (__thiscall *save)(TRIBE_Action_Capture *, int);
  __int16 (__thiscall *type)(TRIBE_Action_Capture *);
  void (__thiscall *first_in_stack)(TRIBE_Action_Capture *, unsigned __int8);
  unsigned __int8 (__thiscall *inside_obj_update)(TRIBE_Action_Capture *);
  unsigned __int8 (__thiscall *idle_update)(TRIBE_Action_Capture *);
  unsigned __int8 (__thiscall *update)(TRIBE_Action_Capture *);
  int (__thiscall *stop)(TRIBE_Action_Capture *);
  int (__thiscall *move_to)(TRIBE_Action_Capture *, RGE_Static_Object *, float, float, float);
  int (__thiscall *work)(TRIBE_Action_Capture *, RGE_Static_Object *, float, float, float);
  int (__thiscall *gbg_unknown1)(TRIBE_Action_Capture *, int, int);
  unsigned __int8 (__thiscall *attack_response)(TRIBE_Action_Capture *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *relation_response)(TRIBE_Action_Capture *, int, unsigned __int8);
  void (__thiscall *copy_obj)(TRIBE_Action_Capture *, RGE_Master_Action_Object *);
  void (__thiscall *copy_obj_sprites)(TRIBE_Action_Capture *, RGE_Master_Action_Object *, RGE_Task *, RGE_Task *);
  void (__thiscall *get_state_name)(TRIBE_Action_Capture *, char *);
  RGE_Static_Object *(__thiscall *get_target_obj)(TRIBE_Action_Capture *);
  RGE_Static_Object *(__thiscall *get_target_obj2)(TRIBE_Action_Capture *);
  void (__thiscall *set_target_obj)(TRIBE_Action_Capture *, RGE_Static_Object *);
  void (__thiscall *set_target_obj2)(TRIBE_Action_Capture *, RGE_Static_Object *);
  void (__thiscall *set_state)(TRIBE_Action_Capture *, unsigned __int8);
};
#pragma pack(pop)

/* 429 */
#pragma pack(push, 8)
struct TRIBE_Action_Convert
{
  TRIBE_Action_ConvertVtbl *vfptr;
  __int16 action_type;
  RGE_Action_Object *obj;
  unsigned __int8 state;
  RGE_Static_Object *target_obj;
  RGE_Static_Object *target_obj2;
  int targetID;
  int target2ID;
  float target_x;
  float target_y;
  float target_z;
  float timer;
  RGE_Task *task;
  RGE_Action_List *sub_actions;
  RGE_Sprite *sprite;
  unsigned __int8 subActionValue;
  unsigned __int8 mTargetMovedState;
  unsigned __int8 RGE_Action_gap[2];
  unsigned __int8 was_same_owner;
  float requiredRange;
  float total_timer;
  unsigned __int8 target_locked;
  unsigned __int8 save_own_master;
  float save_speed;
  float lastTargetXPoint;
  float lastTargetYPoint;
  int savedTargetID;
};
#pragma pack(pop)

/* 734 */
#pragma pack(push, 8)
struct TRIBE_Action_ConvertVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Action_Convert *, unsigned int);
  int (__thiscall *setup_2)(TRIBE_Action_Convert *, RGE_Action_Object *);
  int (__thiscall *setup_1)(TRIBE_Action_Convert *, int, RGE_Action_Object *);
  RGE_Action_List *(__thiscall *create_action_list)(TRIBE_Action_Convert *, RGE_Action_Object *);
  void (__thiscall *rehook)(TRIBE_Action_Convert *);
  void (__thiscall *save)(TRIBE_Action_Convert *, int);
  __int16 (__thiscall *type)(TRIBE_Action_Convert *);
  void (__thiscall *first_in_stack)(TRIBE_Action_Convert *, unsigned __int8);
  unsigned __int8 (__thiscall *inside_obj_update)(TRIBE_Action_Convert *);
  unsigned __int8 (__thiscall *idle_update)(TRIBE_Action_Convert *);
  unsigned __int8 (__thiscall *update)(TRIBE_Action_Convert *);
  int (__thiscall *stop)(TRIBE_Action_Convert *);
  int (__thiscall *move_to)(TRIBE_Action_Convert *, RGE_Static_Object *, float, float, float);
  int (__thiscall *work)(TRIBE_Action_Convert *, RGE_Static_Object *, float, float, float);
  int (__thiscall *gbg_unknown1)(TRIBE_Action_Convert *, int, int);
  unsigned __int8 (__thiscall *attack_response)(TRIBE_Action_Convert *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *relation_response)(TRIBE_Action_Convert *, int, unsigned __int8);
  void (__thiscall *copy_obj)(TRIBE_Action_Convert *, RGE_Master_Action_Object *);
  void (__thiscall *copy_obj_sprites)(TRIBE_Action_Convert *, RGE_Master_Action_Object *, RGE_Task *, RGE_Task *);
  void (__thiscall *get_state_name)(TRIBE_Action_Convert *, char *);
  RGE_Static_Object *(__thiscall *get_target_obj)(TRIBE_Action_Convert *);
  RGE_Static_Object *(__thiscall *get_target_obj2)(TRIBE_Action_Convert *);
  void (__thiscall *set_target_obj)(TRIBE_Action_Convert *, RGE_Static_Object *);
  void (__thiscall *set_target_obj2)(TRIBE_Action_Convert *, RGE_Static_Object *);
  void (__thiscall *set_state)(TRIBE_Action_Convert *, unsigned __int8);
};
#pragma pack(pop)

/* 430 */
#pragma pack(push, 8)
struct TRIBE_Action_Charge
{
  TRIBE_Action_ChargeVtbl *vfptr;
  __int16 action_type;
  RGE_Action_Object *obj;
  unsigned __int8 state;
  RGE_Static_Object *target_obj;
  RGE_Static_Object *target_obj2;
  int targetID;
  int target2ID;
  float target_x;
  float target_y;
  float target_z;
  float timer;
  RGE_Task *task;
  RGE_Action_List *sub_actions;
  RGE_Sprite *sprite;
  unsigned __int8 subActionValue;
  unsigned __int8 mTargetMovedState;
  unsigned __int8 RGE_Action_gap[2];
};
#pragma pack(pop)

/* 746 */
#pragma pack(push, 8)
struct TRIBE_Action_ChargeVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Action_Charge *, unsigned int);
  int (__thiscall *setup_2)(TRIBE_Action_Charge *, RGE_Action_Object *);
  int (__thiscall *setup_1)(TRIBE_Action_Charge *, int, RGE_Action_Object *);
  RGE_Action_List *(__thiscall *create_action_list)(TRIBE_Action_Charge *, RGE_Action_Object *);
  void (__thiscall *rehook)(TRIBE_Action_Charge *);
  void (__thiscall *save)(TRIBE_Action_Charge *, int);
  __int16 (__thiscall *type)(TRIBE_Action_Charge *);
  void (__thiscall *first_in_stack)(TRIBE_Action_Charge *, unsigned __int8);
  unsigned __int8 (__thiscall *inside_obj_update)(TRIBE_Action_Charge *);
  unsigned __int8 (__thiscall *idle_update)(TRIBE_Action_Charge *);
  unsigned __int8 (__thiscall *update)(TRIBE_Action_Charge *);
  int (__thiscall *stop)(TRIBE_Action_Charge *);
  int (__thiscall *move_to)(TRIBE_Action_Charge *, RGE_Static_Object *, float, float, float);
  int (__thiscall *work)(TRIBE_Action_Charge *, RGE_Static_Object *, float, float, float);
  int (__thiscall *gbg_unknown1)(TRIBE_Action_Charge *, int, int);
  unsigned __int8 (__thiscall *attack_response)(TRIBE_Action_Charge *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *relation_response)(TRIBE_Action_Charge *, int, unsigned __int8);
  void (__thiscall *copy_obj)(TRIBE_Action_Charge *, RGE_Master_Action_Object *);
  void (__thiscall *copy_obj_sprites)(TRIBE_Action_Charge *, RGE_Master_Action_Object *, RGE_Task *, RGE_Task *);
  void (__thiscall *get_state_name)(TRIBE_Action_Charge *, char *);
  RGE_Static_Object *(__thiscall *get_target_obj)(TRIBE_Action_Charge *);
  RGE_Static_Object *(__thiscall *get_target_obj2)(TRIBE_Action_Charge *);
  void (__thiscall *set_target_obj)(TRIBE_Action_Charge *, RGE_Static_Object *);
  void (__thiscall *set_target_obj2)(TRIBE_Action_Charge *, RGE_Static_Object *);
  void (__thiscall *set_state)(TRIBE_Action_Charge *, unsigned __int8);
};
#pragma pack(pop)

/* 431 */
#pragma pack(push, 8)
struct TRIBE_Action_Discovery_Artifact
{
  TRIBE_Action_Discovery_ArtifactVtbl *vfptr;
  __int16 action_type;
  RGE_Action_Object *obj;
  unsigned __int8 state;
  RGE_Static_Object *target_obj;
  RGE_Static_Object *target_obj2;
  int targetID;
  int target2ID;
  float target_x;
  float target_y;
  float target_z;
  float timer;
  RGE_Task *task;
  RGE_Action_List *sub_actions;
  RGE_Sprite *sprite;
  unsigned __int8 subActionValue;
  unsigned __int8 mTargetMovedState;
  unsigned __int8 RGE_Action_gap[2];
  unsigned __int8 *flags;
};
#pragma pack(pop)

/* 739 */
#pragma pack(push, 8)
struct TRIBE_Action_Discovery_ArtifactVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Action_Discovery_Artifact *, unsigned int);
  int (__thiscall *setup_2)(TRIBE_Action_Discovery_Artifact *, RGE_Action_Object *);
  int (__thiscall *setup_1)(TRIBE_Action_Discovery_Artifact *, int, RGE_Action_Object *);
  RGE_Action_List *(__thiscall *create_action_list)(TRIBE_Action_Discovery_Artifact *, RGE_Action_Object *);
  void (__thiscall *rehook)(TRIBE_Action_Discovery_Artifact *);
  void (__thiscall *save)(TRIBE_Action_Discovery_Artifact *, int);
  __int16 (__thiscall *type)(TRIBE_Action_Discovery_Artifact *);
  void (__thiscall *first_in_stack)(TRIBE_Action_Discovery_Artifact *, unsigned __int8);
  unsigned __int8 (__thiscall *inside_obj_update)(TRIBE_Action_Discovery_Artifact *);
  unsigned __int8 (__thiscall *idle_update)(TRIBE_Action_Discovery_Artifact *);
  unsigned __int8 (__thiscall *update)(TRIBE_Action_Discovery_Artifact *);
  int (__thiscall *stop)(TRIBE_Action_Discovery_Artifact *);
  int (__thiscall *move_to)(TRIBE_Action_Discovery_Artifact *, RGE_Static_Object *, float, float, float);
  int (__thiscall *work)(TRIBE_Action_Discovery_Artifact *, RGE_Static_Object *, float, float, float);
  int (__thiscall *gbg_unknown1)(TRIBE_Action_Discovery_Artifact *, int, int);
  unsigned __int8 (__thiscall *attack_response)(TRIBE_Action_Discovery_Artifact *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *relation_response)(TRIBE_Action_Discovery_Artifact *, int, unsigned __int8);
  void (__thiscall *copy_obj)(TRIBE_Action_Discovery_Artifact *, RGE_Master_Action_Object *);
  void (__thiscall *copy_obj_sprites)(TRIBE_Action_Discovery_Artifact *, RGE_Master_Action_Object *, RGE_Task *, RGE_Task *);
  void (__thiscall *get_state_name)(TRIBE_Action_Discovery_Artifact *, char *);
  RGE_Static_Object *(__thiscall *get_target_obj)(TRIBE_Action_Discovery_Artifact *);
  RGE_Static_Object *(__thiscall *get_target_obj2)(TRIBE_Action_Discovery_Artifact *);
  void (__thiscall *set_target_obj)(TRIBE_Action_Discovery_Artifact *, RGE_Static_Object *);
  void (__thiscall *set_target_obj2)(TRIBE_Action_Discovery_Artifact *, RGE_Static_Object *);
  void (__thiscall *set_state)(TRIBE_Action_Discovery_Artifact *, unsigned __int8);
};
#pragma pack(pop)

/* 432 */
#pragma pack(push, 8)
struct TRIBE_Action_Farm
{
  TRIBE_Action_FarmVtbl *vfptr;
  __int16 action_type;
  RGE_Action_Object *obj;
  unsigned __int8 state;
  RGE_Static_Object *target_obj;
  RGE_Static_Object *target_obj2;
  int targetID;
  int target2ID;
  float target_x;
  float target_y;
  float target_z;
  float timer;
  RGE_Task *task;
  RGE_Action_List *sub_actions;
  RGE_Sprite *sprite;
  unsigned __int8 subActionValue;
  unsigned __int8 mTargetMovedState;
  unsigned __int8 RGE_Action_gap[2];
};
#pragma pack(pop)

/* 740 */
#pragma pack(push, 8)
struct TRIBE_Action_FarmVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Action_Farm *, unsigned int);
  int (__thiscall *setup_2)(TRIBE_Action_Farm *, RGE_Action_Object *);
  int (__thiscall *setup_1)(TRIBE_Action_Farm *, int, RGE_Action_Object *);
  RGE_Action_List *(__thiscall *create_action_list)(TRIBE_Action_Farm *, RGE_Action_Object *);
  void (__thiscall *rehook)(TRIBE_Action_Farm *);
  void (__thiscall *save)(TRIBE_Action_Farm *, int);
  __int16 (__thiscall *type)(TRIBE_Action_Farm *);
  void (__thiscall *first_in_stack)(TRIBE_Action_Farm *, unsigned __int8);
  unsigned __int8 (__thiscall *inside_obj_update)(TRIBE_Action_Farm *);
  unsigned __int8 (__thiscall *idle_update)(TRIBE_Action_Farm *);
  unsigned __int8 (__thiscall *update)(TRIBE_Action_Farm *);
  int (__thiscall *stop)(TRIBE_Action_Farm *);
  int (__thiscall *move_to)(TRIBE_Action_Farm *, RGE_Static_Object *, float, float, float);
  int (__thiscall *work)(TRIBE_Action_Farm *, RGE_Static_Object *, float, float, float);
  int (__thiscall *gbg_unknown1)(TRIBE_Action_Farm *, int, int);
  unsigned __int8 (__thiscall *attack_response)(TRIBE_Action_Farm *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *relation_response)(TRIBE_Action_Farm *, int, unsigned __int8);
  void (__thiscall *copy_obj)(TRIBE_Action_Farm *, RGE_Master_Action_Object *);
  void (__thiscall *copy_obj_sprites)(TRIBE_Action_Farm *, RGE_Master_Action_Object *, RGE_Task *, RGE_Task *);
  void (__thiscall *get_state_name)(TRIBE_Action_Farm *, char *);
  RGE_Static_Object *(__thiscall *get_target_obj)(TRIBE_Action_Farm *);
  RGE_Static_Object *(__thiscall *get_target_obj2)(TRIBE_Action_Farm *);
  void (__thiscall *set_target_obj)(TRIBE_Action_Farm *, RGE_Static_Object *);
  void (__thiscall *set_target_obj2)(TRIBE_Action_Farm *, RGE_Static_Object *);
  void (__thiscall *set_state)(TRIBE_Action_Farm *, unsigned __int8);
};
#pragma pack(pop)

/* 433 */
#pragma pack(push, 8)
struct TRIBE_Action_Heal
{
  TRIBE_Action_HealVtbl *vfptr;
  __int16 action_type;
  RGE_Action_Object *obj;
  unsigned __int8 state;
  RGE_Static_Object *target_obj;
  RGE_Static_Object *target_obj2;
  int targetID;
  int target2ID;
  float target_x;
  float target_y;
  float target_z;
  float timer;
  RGE_Task *task;
  RGE_Action_List *sub_actions;
  RGE_Sprite *sprite;
  unsigned __int8 subActionValue;
  unsigned __int8 mTargetMovedState;
  unsigned __int8 RGE_Action_gap[2];
};
#pragma pack(pop)

/* 735 */
#pragma pack(push, 8)
struct TRIBE_Action_HealVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Action_Heal *, unsigned int);
  int (__thiscall *setup_2)(TRIBE_Action_Heal *, RGE_Action_Object *);
  int (__thiscall *setup_1)(TRIBE_Action_Heal *, int, RGE_Action_Object *);
  RGE_Action_List *(__thiscall *create_action_list)(TRIBE_Action_Heal *, RGE_Action_Object *);
  void (__thiscall *rehook)(TRIBE_Action_Heal *);
  void (__thiscall *save)(TRIBE_Action_Heal *, int);
  __int16 (__thiscall *type)(TRIBE_Action_Heal *);
  void (__thiscall *first_in_stack)(TRIBE_Action_Heal *, unsigned __int8);
  unsigned __int8 (__thiscall *inside_obj_update)(TRIBE_Action_Heal *);
  unsigned __int8 (__thiscall *idle_update)(TRIBE_Action_Heal *);
  unsigned __int8 (__thiscall *update)(TRIBE_Action_Heal *);
  int (__thiscall *stop)(TRIBE_Action_Heal *);
  int (__thiscall *move_to)(TRIBE_Action_Heal *, RGE_Static_Object *, float, float, float);
  int (__thiscall *work)(TRIBE_Action_Heal *, RGE_Static_Object *, float, float, float);
  int (__thiscall *gbg_unknown1)(TRIBE_Action_Heal *, int, int);
  unsigned __int8 (__thiscall *attack_response)(TRIBE_Action_Heal *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *relation_response)(TRIBE_Action_Heal *, int, unsigned __int8);
  void (__thiscall *copy_obj)(TRIBE_Action_Heal *, RGE_Master_Action_Object *);
  void (__thiscall *copy_obj_sprites)(TRIBE_Action_Heal *, RGE_Master_Action_Object *, RGE_Task *, RGE_Task *);
  void (__thiscall *get_state_name)(TRIBE_Action_Heal *, char *);
  RGE_Static_Object *(__thiscall *get_target_obj)(TRIBE_Action_Heal *);
  RGE_Static_Object *(__thiscall *get_target_obj2)(TRIBE_Action_Heal *);
  void (__thiscall *set_target_obj)(TRIBE_Action_Heal *, RGE_Static_Object *);
  void (__thiscall *set_target_obj2)(TRIBE_Action_Heal *, RGE_Static_Object *);
  void (__thiscall *set_state)(TRIBE_Action_Heal *, unsigned __int8);
};
#pragma pack(pop)

/* 434 */
#pragma pack(push, 8)
struct TRIBE_Action_Hunt
{
  TRIBE_Action_HuntVtbl *vfptr;
  __int16 action_type;
  RGE_Action_Object *obj;
  unsigned __int8 state;
  RGE_Static_Object *target_obj;
  RGE_Static_Object *target_obj2;
  int targetID;
  int target2ID;
  float target_x;
  float target_y;
  float target_z;
  float timer;
  RGE_Task *task;
  RGE_Action_List *sub_actions;
  RGE_Sprite *sprite;
  unsigned __int8 subActionValue;
  unsigned __int8 mTargetMovedState;
  unsigned __int8 RGE_Action_gap[2];
  int targetType;
  int moved_sheep;
  int sheep_drop_site_id;
  __int16 sheep_still_time;
  float sheep_start_x;
  float sheep_start_y;
};
#pragma pack(pop)

/* 741 */
#pragma pack(push, 8)
struct TRIBE_Action_HuntVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Action_Hunt *, unsigned int);
  int (__thiscall *setup_2)(TRIBE_Action_Hunt *, RGE_Action_Object *);
  int (__thiscall *setup_1)(TRIBE_Action_Hunt *, int, RGE_Action_Object *);
  RGE_Action_List *(__thiscall *create_action_list)(TRIBE_Action_Hunt *, RGE_Action_Object *);
  void (__thiscall *rehook)(TRIBE_Action_Hunt *);
  void (__thiscall *save)(TRIBE_Action_Hunt *, int);
  __int16 (__thiscall *type)(TRIBE_Action_Hunt *);
  void (__thiscall *first_in_stack)(TRIBE_Action_Hunt *, unsigned __int8);
  unsigned __int8 (__thiscall *inside_obj_update)(TRIBE_Action_Hunt *);
  unsigned __int8 (__thiscall *idle_update)(TRIBE_Action_Hunt *);
  unsigned __int8 (__thiscall *update)(TRIBE_Action_Hunt *);
  int (__thiscall *stop)(TRIBE_Action_Hunt *);
  int (__thiscall *move_to)(TRIBE_Action_Hunt *, RGE_Static_Object *, float, float, float);
  int (__thiscall *work)(TRIBE_Action_Hunt *, RGE_Static_Object *, float, float, float);
  int (__thiscall *gbg_unknown1)(TRIBE_Action_Hunt *, int, int);
  unsigned __int8 (__thiscall *attack_response)(TRIBE_Action_Hunt *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *relation_response)(TRIBE_Action_Hunt *, int, unsigned __int8);
  void (__thiscall *copy_obj)(TRIBE_Action_Hunt *, RGE_Master_Action_Object *);
  void (__thiscall *copy_obj_sprites)(TRIBE_Action_Hunt *, RGE_Master_Action_Object *, RGE_Task *, RGE_Task *);
  void (__thiscall *get_state_name)(TRIBE_Action_Hunt *, char *);
  RGE_Static_Object *(__thiscall *get_target_obj)(TRIBE_Action_Hunt *);
  RGE_Static_Object *(__thiscall *get_target_obj2)(TRIBE_Action_Hunt *);
  void (__thiscall *set_target_obj)(TRIBE_Action_Hunt *, RGE_Static_Object *);
  void (__thiscall *set_target_obj2)(TRIBE_Action_Hunt *, RGE_Static_Object *);
  void (__thiscall *set_state)(TRIBE_Action_Hunt *, unsigned __int8);
};
#pragma pack(pop)

/* 435 */
#pragma pack(push, 8)
struct TRIBE_Action_Deliver_Relic
{
  TRIBE_Action_Deliver_RelicVtbl *vfptr;
  __int16 action_type;
  RGE_Action_Object *obj;
  unsigned __int8 state;
  RGE_Static_Object *target_obj;
  RGE_Static_Object *target_obj2;
  int targetID;
  int target2ID;
  float target_x;
  float target_y;
  float target_z;
  float timer;
  RGE_Task *task;
  RGE_Action_List *sub_actions;
  RGE_Sprite *sprite;
  unsigned __int8 subActionValue;
  unsigned __int8 mTargetMovedState;
  unsigned __int8 RGE_Action_gap[2];
};
#pragma pack(pop)

/* 752 */
#pragma pack(push, 8)
struct TRIBE_Action_Deliver_RelicVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Action_Deliver_Relic *, unsigned int);
  int (__thiscall *setup_2)(TRIBE_Action_Deliver_Relic *, RGE_Action_Object *);
  int (__thiscall *setup_1)(TRIBE_Action_Deliver_Relic *, int, RGE_Action_Object *);
  RGE_Action_List *(__thiscall *create_action_list)(TRIBE_Action_Deliver_Relic *, RGE_Action_Object *);
  void (__thiscall *rehook)(TRIBE_Action_Deliver_Relic *);
  void (__thiscall *save)(TRIBE_Action_Deliver_Relic *, int);
  __int16 (__thiscall *type)(TRIBE_Action_Deliver_Relic *);
  void (__thiscall *first_in_stack)(TRIBE_Action_Deliver_Relic *, unsigned __int8);
  unsigned __int8 (__thiscall *inside_obj_update)(TRIBE_Action_Deliver_Relic *);
  unsigned __int8 (__thiscall *idle_update)(TRIBE_Action_Deliver_Relic *);
  unsigned __int8 (__thiscall *update)(TRIBE_Action_Deliver_Relic *);
  int (__thiscall *stop)(TRIBE_Action_Deliver_Relic *);
  int (__thiscall *move_to)(TRIBE_Action_Deliver_Relic *, RGE_Static_Object *, float, float, float);
  int (__thiscall *work)(TRIBE_Action_Deliver_Relic *, RGE_Static_Object *, float, float, float);
  int (__thiscall *gbg_unknown1)(TRIBE_Action_Deliver_Relic *, int, int);
  unsigned __int8 (__thiscall *attack_response)(TRIBE_Action_Deliver_Relic *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *relation_response)(TRIBE_Action_Deliver_Relic *, int, unsigned __int8);
  void (__thiscall *copy_obj)(TRIBE_Action_Deliver_Relic *, RGE_Master_Action_Object *);
  void (__thiscall *copy_obj_sprites)(TRIBE_Action_Deliver_Relic *, RGE_Master_Action_Object *, RGE_Task *, RGE_Task *);
  void (__thiscall *get_state_name)(TRIBE_Action_Deliver_Relic *, char *);
  RGE_Static_Object *(__thiscall *get_target_obj)(TRIBE_Action_Deliver_Relic *);
  RGE_Static_Object *(__thiscall *get_target_obj2)(TRIBE_Action_Deliver_Relic *);
  void (__thiscall *set_target_obj)(TRIBE_Action_Deliver_Relic *, RGE_Static_Object *);
  void (__thiscall *set_target_obj2)(TRIBE_Action_Deliver_Relic *, RGE_Static_Object *);
  void (__thiscall *set_state)(TRIBE_Action_Deliver_Relic *, unsigned __int8);
};
#pragma pack(pop)

/* 436 */
#pragma pack(push, 8)
struct TRIBE_Action_Pickup_Relic
{
  TRIBE_Action_Pickup_RelicVtbl *vfptr;
  __int16 action_type;
  RGE_Action_Object *obj;
  unsigned __int8 state;
  RGE_Static_Object *target_obj;
  RGE_Static_Object *target_obj2;
  int targetID;
  int target2ID;
  float target_x;
  float target_y;
  float target_z;
  float timer;
  RGE_Task *task;
  RGE_Action_List *sub_actions;
  RGE_Sprite *sprite;
  unsigned __int8 subActionValue;
  unsigned __int8 mTargetMovedState;
  unsigned __int8 RGE_Action_gap[2];
};
#pragma pack(pop)

/* 745 */
#pragma pack(push, 8)
struct TRIBE_Action_Pickup_RelicVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Action_Pickup_Relic *, unsigned int);
  int (__thiscall *setup_2)(TRIBE_Action_Pickup_Relic *, RGE_Action_Object *);
  int (__thiscall *setup_1)(TRIBE_Action_Pickup_Relic *, int, RGE_Action_Object *);
  RGE_Action_List *(__thiscall *create_action_list)(TRIBE_Action_Pickup_Relic *, RGE_Action_Object *);
  void (__thiscall *rehook)(TRIBE_Action_Pickup_Relic *);
  void (__thiscall *save)(TRIBE_Action_Pickup_Relic *, int);
  __int16 (__thiscall *type)(TRIBE_Action_Pickup_Relic *);
  void (__thiscall *first_in_stack)(TRIBE_Action_Pickup_Relic *, unsigned __int8);
  unsigned __int8 (__thiscall *inside_obj_update)(TRIBE_Action_Pickup_Relic *);
  unsigned __int8 (__thiscall *idle_update)(TRIBE_Action_Pickup_Relic *);
  unsigned __int8 (__thiscall *update)(TRIBE_Action_Pickup_Relic *);
  int (__thiscall *stop)(TRIBE_Action_Pickup_Relic *);
  int (__thiscall *move_to)(TRIBE_Action_Pickup_Relic *, RGE_Static_Object *, float, float, float);
  int (__thiscall *work)(TRIBE_Action_Pickup_Relic *, RGE_Static_Object *, float, float, float);
  int (__thiscall *gbg_unknown1)(TRIBE_Action_Pickup_Relic *, int, int);
  unsigned __int8 (__thiscall *attack_response)(TRIBE_Action_Pickup_Relic *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *relation_response)(TRIBE_Action_Pickup_Relic *, int, unsigned __int8);
  void (__thiscall *copy_obj)(TRIBE_Action_Pickup_Relic *, RGE_Master_Action_Object *);
  void (__thiscall *copy_obj_sprites)(TRIBE_Action_Pickup_Relic *, RGE_Master_Action_Object *, RGE_Task *, RGE_Task *);
  void (__thiscall *get_state_name)(TRIBE_Action_Pickup_Relic *, char *);
  RGE_Static_Object *(__thiscall *get_target_obj)(TRIBE_Action_Pickup_Relic *);
  RGE_Static_Object *(__thiscall *get_target_obj2)(TRIBE_Action_Pickup_Relic *);
  void (__thiscall *set_target_obj)(TRIBE_Action_Pickup_Relic *, RGE_Static_Object *);
  void (__thiscall *set_target_obj2)(TRIBE_Action_Pickup_Relic *, RGE_Static_Object *);
  void (__thiscall *set_state)(TRIBE_Action_Pickup_Relic *, unsigned __int8);
};
#pragma pack(pop)

/* 437 */
#pragma pack(push, 8)
struct TRIBE_Action_Repair
{
  TRIBE_Action_RepairVtbl *vfptr;
  __int16 action_type;
  RGE_Action_Object *obj;
  unsigned __int8 state;
  RGE_Static_Object *target_obj;
  RGE_Static_Object *target_obj2;
  int targetID;
  int target2ID;
  float target_x;
  float target_y;
  float target_z;
  float timer;
  RGE_Task *task;
  RGE_Action_List *sub_actions;
  RGE_Sprite *sprite;
  unsigned __int8 subActionValue;
  unsigned __int8 mTargetMovedState;
  unsigned __int8 RGE_Action_gap[2];
  unsigned __int8 save_target_command_flag;
  int added_to_num_builders;
};
#pragma pack(pop)

/* 742 */
#pragma pack(push, 8)
struct TRIBE_Action_RepairVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Action_Repair *, unsigned int);
  int (__thiscall *setup_2)(TRIBE_Action_Repair *, RGE_Action_Object *);
  int (__thiscall *setup_1)(TRIBE_Action_Repair *, int, RGE_Action_Object *);
  RGE_Action_List *(__thiscall *create_action_list)(TRIBE_Action_Repair *, RGE_Action_Object *);
  void (__thiscall *rehook)(TRIBE_Action_Repair *);
  void (__thiscall *save)(TRIBE_Action_Repair *, int);
  __int16 (__thiscall *type)(TRIBE_Action_Repair *);
  void (__thiscall *first_in_stack)(TRIBE_Action_Repair *, unsigned __int8);
  unsigned __int8 (__thiscall *inside_obj_update)(TRIBE_Action_Repair *);
  unsigned __int8 (__thiscall *idle_update)(TRIBE_Action_Repair *);
  unsigned __int8 (__thiscall *update)(TRIBE_Action_Repair *);
  int (__thiscall *stop)(TRIBE_Action_Repair *);
  int (__thiscall *move_to)(TRIBE_Action_Repair *, RGE_Static_Object *, float, float, float);
  int (__thiscall *work)(TRIBE_Action_Repair *, RGE_Static_Object *, float, float, float);
  int (__thiscall *gbg_unknown1)(TRIBE_Action_Repair *, int, int);
  unsigned __int8 (__thiscall *attack_response)(TRIBE_Action_Repair *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *relation_response)(TRIBE_Action_Repair *, int, unsigned __int8);
  void (__thiscall *copy_obj)(TRIBE_Action_Repair *, RGE_Master_Action_Object *);
  void (__thiscall *copy_obj_sprites)(TRIBE_Action_Repair *, RGE_Master_Action_Object *, RGE_Task *, RGE_Task *);
  void (__thiscall *get_state_name)(TRIBE_Action_Repair *, char *);
  RGE_Static_Object *(__thiscall *get_target_obj)(TRIBE_Action_Repair *);
  RGE_Static_Object *(__thiscall *get_target_obj2)(TRIBE_Action_Repair *);
  void (__thiscall *set_target_obj)(TRIBE_Action_Repair *, RGE_Static_Object *);
  void (__thiscall *set_target_obj2)(TRIBE_Action_Repair *, RGE_Static_Object *);
  void (__thiscall *set_state)(TRIBE_Action_Repair *, unsigned __int8);
};
#pragma pack(pop)

/* 438 */
#pragma pack(push, 8)
struct TRIBE_Action_Shepherd
{
  TRIBE_Action_ShepherdVtbl *vfptr;
  __int16 action_type;
  RGE_Action_Object *obj;
  unsigned __int8 state;
  RGE_Static_Object *target_obj;
  RGE_Static_Object *target_obj2;
  int targetID;
  int target2ID;
  float target_x;
  float target_y;
  float target_z;
  float timer;
  RGE_Task *task;
  RGE_Action_List *sub_actions;
  RGE_Sprite *sprite;
  unsigned __int8 subActionValue;
  unsigned __int8 mTargetMovedState;
  unsigned __int8 RGE_Action_gap[2];
};
#pragma pack(pop)

/* 751 */
#pragma pack(push, 8)
struct TRIBE_Action_ShepherdVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Action_Shepherd *, unsigned int);
  int (__thiscall *setup_2)(TRIBE_Action_Shepherd *, RGE_Action_Object *);
  int (__thiscall *setup_1)(TRIBE_Action_Shepherd *, int, RGE_Action_Object *);
  RGE_Action_List *(__thiscall *create_action_list)(TRIBE_Action_Shepherd *, RGE_Action_Object *);
  void (__thiscall *rehook)(TRIBE_Action_Shepherd *);
  void (__thiscall *save)(TRIBE_Action_Shepherd *, int);
  __int16 (__thiscall *type)(TRIBE_Action_Shepherd *);
  void (__thiscall *first_in_stack)(TRIBE_Action_Shepherd *, unsigned __int8);
  unsigned __int8 (__thiscall *inside_obj_update)(TRIBE_Action_Shepherd *);
  unsigned __int8 (__thiscall *idle_update)(TRIBE_Action_Shepherd *);
  unsigned __int8 (__thiscall *update)(TRIBE_Action_Shepherd *);
  int (__thiscall *stop)(TRIBE_Action_Shepherd *);
  int (__thiscall *move_to)(TRIBE_Action_Shepherd *, RGE_Static_Object *, float, float, float);
  int (__thiscall *work)(TRIBE_Action_Shepherd *, RGE_Static_Object *, float, float, float);
  int (__thiscall *gbg_unknown1)(TRIBE_Action_Shepherd *, int, int);
  unsigned __int8 (__thiscall *attack_response)(TRIBE_Action_Shepherd *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *relation_response)(TRIBE_Action_Shepherd *, int, unsigned __int8);
  void (__thiscall *copy_obj)(TRIBE_Action_Shepherd *, RGE_Master_Action_Object *);
  void (__thiscall *copy_obj_sprites)(TRIBE_Action_Shepherd *, RGE_Master_Action_Object *, RGE_Task *, RGE_Task *);
  void (__thiscall *get_state_name)(TRIBE_Action_Shepherd *, char *);
  RGE_Static_Object *(__thiscall *get_target_obj)(TRIBE_Action_Shepherd *);
  RGE_Static_Object *(__thiscall *get_target_obj2)(TRIBE_Action_Shepherd *);
  void (__thiscall *set_target_obj)(TRIBE_Action_Shepherd *, RGE_Static_Object *);
  void (__thiscall *set_target_obj2)(TRIBE_Action_Shepherd *, RGE_Static_Object *);
  void (__thiscall *set_state)(TRIBE_Action_Shepherd *, unsigned __int8);
};
#pragma pack(pop)

/* 439 */
#pragma pack(push, 8)
struct TRIBE_Action_Trade
{
  TRIBE_Action_TradeVtbl *vfptr;
  __int16 action_type;
  RGE_Action_Object *obj;
  unsigned __int8 state;
  RGE_Static_Object *target_obj;
  RGE_Static_Object *target_obj2;
  int targetID;
  int target2ID;
  float target_x;
  float target_y;
  float target_z;
  float timer;
  RGE_Task *task;
  RGE_Action_List *sub_actions;
  RGE_Sprite *sprite;
  unsigned __int8 subActionValue;
  unsigned __int8 mTargetMovedState;
  unsigned __int8 RGE_Action_gap[2];
  float pick_up_x;
  float pick_up_y;
  unsigned __int8 trade_attribute;
  float trade_left;
  float total_trade;
};
#pragma pack(pop)

/* 743 */
#pragma pack(push, 8)
struct TRIBE_Action_TradeVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Action_Trade *, unsigned int);
  int (__thiscall *setup_2)(TRIBE_Action_Trade *, RGE_Action_Object *);
  int (__thiscall *setup_1)(TRIBE_Action_Trade *, int, RGE_Action_Object *);
  RGE_Action_List *(__thiscall *create_action_list)(TRIBE_Action_Trade *, RGE_Action_Object *);
  void (__thiscall *rehook)(TRIBE_Action_Trade *);
  void (__thiscall *save)(TRIBE_Action_Trade *, int);
  __int16 (__thiscall *type)(TRIBE_Action_Trade *);
  void (__thiscall *first_in_stack)(TRIBE_Action_Trade *, unsigned __int8);
  unsigned __int8 (__thiscall *inside_obj_update)(TRIBE_Action_Trade *);
  unsigned __int8 (__thiscall *idle_update)(TRIBE_Action_Trade *);
  unsigned __int8 (__thiscall *update)(TRIBE_Action_Trade *);
  int (__thiscall *stop)(TRIBE_Action_Trade *);
  int (__thiscall *move_to)(TRIBE_Action_Trade *, RGE_Static_Object *, float, float, float);
  int (__thiscall *work)(TRIBE_Action_Trade *, RGE_Static_Object *, float, float, float);
  int (__thiscall *gbg_unknown1)(TRIBE_Action_Trade *, int, int);
  unsigned __int8 (__thiscall *attack_response)(TRIBE_Action_Trade *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *relation_response)(TRIBE_Action_Trade *, int, unsigned __int8);
  void (__thiscall *copy_obj)(TRIBE_Action_Trade *, RGE_Master_Action_Object *);
  void (__thiscall *copy_obj_sprites)(TRIBE_Action_Trade *, RGE_Master_Action_Object *, RGE_Task *, RGE_Task *);
  void (__thiscall *get_state_name)(TRIBE_Action_Trade *, char *);
  RGE_Static_Object *(__thiscall *get_target_obj)(TRIBE_Action_Trade *);
  RGE_Static_Object *(__thiscall *get_target_obj2)(TRIBE_Action_Trade *);
  void (__thiscall *set_target_obj)(TRIBE_Action_Trade *, RGE_Static_Object *);
  void (__thiscall *set_target_obj2)(TRIBE_Action_Trade *, RGE_Static_Object *);
  void (__thiscall *set_state)(TRIBE_Action_Trade *, unsigned __int8);
};
#pragma pack(pop)

/* 440 */
#pragma pack(push, 8)
struct TRIBE_Action_Wonder
{
  TRIBE_Action_WonderVtbl *vfptr;
  __int16 action_type;
  RGE_Action_Object *obj;
  unsigned __int8 state;
  RGE_Static_Object *target_obj;
  RGE_Static_Object *target_obj2;
  int targetID;
  int target2ID;
  float target_x;
  float target_y;
  float target_z;
  float timer;
  RGE_Task *task;
  RGE_Action_List *sub_actions;
  RGE_Sprite *sprite;
  unsigned __int8 subActionValue;
  unsigned __int8 mTargetMovedState;
  unsigned __int8 RGE_Action_gap[2];
  float wonder_time;
  unsigned __int8 warned1000years;
  unsigned __int8 warned500years;
  unsigned __int8 hun_bonus;
};
#pragma pack(pop)

/* 738 */
#pragma pack(push, 8)
struct TRIBE_Action_WonderVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Action_Wonder *, unsigned int);
  int (__thiscall *setup_2)(TRIBE_Action_Wonder *, RGE_Action_Object *);
  int (__thiscall *setup_1)(TRIBE_Action_Wonder *, int, RGE_Action_Object *);
  RGE_Action_List *(__thiscall *create_action_list)(TRIBE_Action_Wonder *, RGE_Action_Object *);
  void (__thiscall *rehook)(TRIBE_Action_Wonder *);
  void (__thiscall *save)(TRIBE_Action_Wonder *, int);
  __int16 (__thiscall *type)(TRIBE_Action_Wonder *);
  void (__thiscall *first_in_stack)(TRIBE_Action_Wonder *, unsigned __int8);
  unsigned __int8 (__thiscall *inside_obj_update)(TRIBE_Action_Wonder *);
  unsigned __int8 (__thiscall *idle_update)(TRIBE_Action_Wonder *);
  unsigned __int8 (__thiscall *update)(TRIBE_Action_Wonder *);
  int (__thiscall *stop)(TRIBE_Action_Wonder *);
  int (__thiscall *move_to)(TRIBE_Action_Wonder *, RGE_Static_Object *, float, float, float);
  int (__thiscall *work)(TRIBE_Action_Wonder *, RGE_Static_Object *, float, float, float);
  int (__thiscall *gbg_unknown1)(TRIBE_Action_Wonder *, int, int);
  unsigned __int8 (__thiscall *attack_response)(TRIBE_Action_Wonder *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *relation_response)(TRIBE_Action_Wonder *, int, unsigned __int8);
  void (__thiscall *copy_obj)(TRIBE_Action_Wonder *, RGE_Master_Action_Object *);
  void (__thiscall *copy_obj_sprites)(TRIBE_Action_Wonder *, RGE_Master_Action_Object *, RGE_Task *, RGE_Task *);
  void (__thiscall *get_state_name)(TRIBE_Action_Wonder *, char *);
  RGE_Static_Object *(__thiscall *get_target_obj)(TRIBE_Action_Wonder *);
  RGE_Static_Object *(__thiscall *get_target_obj2)(TRIBE_Action_Wonder *);
  void (__thiscall *set_target_obj)(TRIBE_Action_Wonder *, RGE_Static_Object *);
  void (__thiscall *set_target_obj2)(TRIBE_Action_Wonder *, RGE_Static_Object *);
  void (__thiscall *set_state)(TRIBE_Action_Wonder *, unsigned __int8);
};
#pragma pack(pop)

/* 442 */
#pragma pack(push, 8)
struct MConvexHull
{
  int NumPoints;
  Point *Points;
  int PointsAllocated;
  int *mEntrancePathIndices;
  float MinX;
  float MinY;
  float MaxX;
  float MaxY;
  int NumObjects;
  int ObjectsAllocated;
  ObstructionInfo *Objects;
};
#pragma pack(pop)

/* 447 */
#pragma pack(push, 8)
struct ObstructionInfo
{
  Point minPoint;
  Point maxPoint;
  int id;
};
#pragma pack(pop)

/* 444 */
#pragma pack(push, 8)
struct PathingNode
{
  Point location;
  PathingNode *parent;
  PathingNode *next;
  PathingNode *prev;
  float distanceToGoal;
  float costSoFar;
  int hullIndex;
  int vertexIndex;
  int direction;
};
#pragma pack(pop)

/* 450 */
#pragma pack(push, 8)
struct TRIBE_Mission_Screen
{
  TRIBE_Mission_ScreenVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  TTextPanel *title;
  TTextPanel *list;
  TScrollBarPanel *scroll_bar;
  TButtonPanel *ok_button;
  TButtonPanel *text_buttons[3];
  unsigned __int8 game_flag;
  TPicture *vc_back_bmp;
};
#pragma pack(pop)

/* 900 */
#pragma pack(push, 8)
struct TRIBE_Mission_ScreenVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Mission_Screen *, unsigned int);
  int (__thiscall *setup)(TRIBE_Mission_Screen *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TRIBE_Mission_Screen *, RECT);
  void (__thiscall *set_rect_1)(TRIBE_Mission_Screen *, int, int, int, int);
  void (__thiscall *set_color)(TRIBE_Mission_Screen *, unsigned __int8);
  void (__thiscall *set_active)(TRIBE_Mission_Screen *, int);
  void (__thiscall *unknown1)(TRIBE_Mission_Screen *);
  void (__thiscall *unknown2)(TRIBE_Mission_Screen *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TRIBE_Mission_Screen *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TRIBE_Mission_Screen *, int);
  void (__thiscall *set_fixed_position)(TRIBE_Mission_Screen *, int, int, int, int);
  void (__thiscall *set_redraw)(TRIBE_Mission_Screen *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TRIBE_Mission_Screen *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TRIBE_Mission_Screen *, int);
  void (__thiscall *draw_finish)(TRIBE_Mission_Screen *);
  void (__thiscall *draw)(TRIBE_Mission_Screen *);
  void (__thiscall *draw_rect)(TRIBE_Mission_Screen *, RECT *);
  void (__thiscall *draw_offset)(TRIBE_Mission_Screen *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TRIBE_Mission_Screen *, RECT *);
  void (__thiscall *draw_offset2)(TRIBE_Mission_Screen *, int, int, RECT *);
  void (__thiscall *paint)(TRIBE_Mission_Screen *);
  int (__thiscall *wnd_proc)(TRIBE_Mission_Screen *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TRIBE_Mission_Screen *);
  int (__thiscall *handle_size)(TRIBE_Mission_Screen *, int, int);
  int (__thiscall *handle_paint)(TRIBE_Mission_Screen *);
  int (__thiscall *handle_key_down)(TRIBE_Mission_Screen *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TRIBE_Mission_Screen *, int, __int16);
  int (__thiscall *handle_command)(TRIBE_Mission_Screen *, unsigned int, int);
  int (__thiscall *handle_user_command)(TRIBE_Mission_Screen *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TRIBE_Mission_Screen *, unsigned int, int);
  int (__thiscall *handle_scroll)(TRIBE_Mission_Screen *, int, int);
  int (__thiscall *handle_mouse_down)(TRIBE_Mission_Screen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TRIBE_Mission_Screen *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TRIBE_Mission_Screen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TRIBE_Mission_Screen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TRIBE_Mission_Screen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TRIBE_Mission_Screen *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TRIBE_Mission_Screen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TRIBE_Mission_Screen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TRIBE_Mission_Screen *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TRIBE_Mission_Screen *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TRIBE_Mission_Screen *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TRIBE_Mission_Screen *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TRIBE_Mission_Screen *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TRIBE_Mission_Screen *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TRIBE_Mission_Screen *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TRIBE_Mission_Screen *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TRIBE_Mission_Screen *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TRIBE_Mission_Screen *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TRIBE_Mission_Screen *, int, int, int, int);
  int (__thiscall *key_down_action)(TRIBE_Mission_Screen *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TRIBE_Mission_Screen *, int, __int16);
  int (__thiscall *action)(TRIBE_Mission_Screen *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TRIBE_Mission_Screen *, RECT *);
  int (__thiscall *is_inside)(TRIBE_Mission_Screen *, int, int);
  void (__thiscall *set_focus)(TRIBE_Mission_Screen *, int);
  void (__thiscall *set_tab_order_2)(TRIBE_Mission_Screen *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TRIBE_Mission_Screen *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TRIBE_Mission_Screen *);
  unsigned __int8 (__thiscall *get_help_info)(TRIBE_Mission_Screen *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TRIBE_Mission_Screen *);
  int (__thiscall *restart_sound_system)(TRIBE_Mission_Screen *);
  void (__thiscall *take_snapshot)(TRIBE_Mission_Screen *);
  void (__thiscall *handle_reactivate)(TRIBE_Mission_Screen *);
  int (__thiscall *pointing_at)(TRIBE_Mission_Screen *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TRIBE_Mission_Screen *);
  int (__thiscall *get_ideal_width)(TRIBE_Mission_Screen *);
  void (__thiscall *draw_background)(TRIBE_Mission_Screen *, int);
  void (__thiscall *set_ideal_size)(TRIBE_Mission_Screen *, int, int);
  int (__thiscall *create_button_2)(TRIBE_Mission_Screen *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TRIBE_Mission_Screen *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TRIBE_Mission_Screen *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TRIBE_Mission_Screen *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TRIBE_Mission_Screen *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TRIBE_Mission_Screen *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TRIBE_Mission_Screen *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TRIBE_Mission_Screen *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TRIBE_Mission_Screen *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TRIBE_Mission_Screen *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TRIBE_Mission_Screen *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TRIBE_Mission_Screen *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TRIBE_Mission_Screen *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TRIBE_Mission_Screen *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TRIBE_Mission_Screen *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TRIBE_Mission_Screen *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TRIBE_Mission_Screen *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TRIBE_Mission_Screen *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TRIBE_Mission_Screen *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TRIBE_Mission_Screen *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TRIBE_Mission_Screen *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TRIBE_Mission_Screen *, TPanel *, int, int, int, int);
};
#pragma pack(pop)

/* 454 */
#pragma pack(push, 8)
struct VSpanMiniList
{
  unsigned __int8 Y_delta;
  unsigned __int8 X_start;
  unsigned __int8 X_end;
};
#pragma pack(pop)

/* 457 */
#pragma pack(push, 8)
struct TRIBE_Aftermath_Screen
{
  TRIBE_Aftermath_ScreenVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  TTextPanel *title;
  TTextPanel *list;
  TScrollBarPanel *scroll_bar;
  TButtonPanel *ok_button;
};
#pragma pack(pop)

/* 808 */
#pragma pack(push, 8)
struct TRIBE_Aftermath_ScreenVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Aftermath_Screen *, unsigned int);
  int (__thiscall *setup)(TRIBE_Aftermath_Screen *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TRIBE_Aftermath_Screen *, RECT);
  void (__thiscall *set_rect_1)(TRIBE_Aftermath_Screen *, int, int, int, int);
  void (__thiscall *set_color)(TRIBE_Aftermath_Screen *, unsigned __int8);
  void (__thiscall *set_active)(TRIBE_Aftermath_Screen *, int);
  void (__thiscall *unknown1)(TRIBE_Aftermath_Screen *);
  void (__thiscall *unknown2)(TRIBE_Aftermath_Screen *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TRIBE_Aftermath_Screen *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TRIBE_Aftermath_Screen *, int);
  void (__thiscall *set_fixed_position)(TRIBE_Aftermath_Screen *, int, int, int, int);
  void (__thiscall *set_redraw)(TRIBE_Aftermath_Screen *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TRIBE_Aftermath_Screen *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TRIBE_Aftermath_Screen *, int);
  void (__thiscall *draw_finish)(TRIBE_Aftermath_Screen *);
  void (__thiscall *draw)(TRIBE_Aftermath_Screen *);
  void (__thiscall *draw_rect)(TRIBE_Aftermath_Screen *, RECT *);
  void (__thiscall *draw_offset)(TRIBE_Aftermath_Screen *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TRIBE_Aftermath_Screen *, RECT *);
  void (__thiscall *draw_offset2)(TRIBE_Aftermath_Screen *, int, int, RECT *);
  void (__thiscall *paint)(TRIBE_Aftermath_Screen *);
  int (__thiscall *wnd_proc)(TRIBE_Aftermath_Screen *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TRIBE_Aftermath_Screen *);
  int (__thiscall *handle_size)(TRIBE_Aftermath_Screen *, int, int);
  int (__thiscall *handle_paint)(TRIBE_Aftermath_Screen *);
  int (__thiscall *handle_key_down)(TRIBE_Aftermath_Screen *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TRIBE_Aftermath_Screen *, int, __int16);
  int (__thiscall *handle_command)(TRIBE_Aftermath_Screen *, unsigned int, int);
  int (__thiscall *handle_user_command)(TRIBE_Aftermath_Screen *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TRIBE_Aftermath_Screen *, unsigned int, int);
  int (__thiscall *handle_scroll)(TRIBE_Aftermath_Screen *, int, int);
  int (__thiscall *handle_mouse_down)(TRIBE_Aftermath_Screen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TRIBE_Aftermath_Screen *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TRIBE_Aftermath_Screen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TRIBE_Aftermath_Screen *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TRIBE_Aftermath_Screen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TRIBE_Aftermath_Screen *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TRIBE_Aftermath_Screen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TRIBE_Aftermath_Screen *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TRIBE_Aftermath_Screen *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TRIBE_Aftermath_Screen *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TRIBE_Aftermath_Screen *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TRIBE_Aftermath_Screen *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TRIBE_Aftermath_Screen *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TRIBE_Aftermath_Screen *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TRIBE_Aftermath_Screen *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TRIBE_Aftermath_Screen *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TRIBE_Aftermath_Screen *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TRIBE_Aftermath_Screen *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TRIBE_Aftermath_Screen *, int, int, int, int);
  int (__thiscall *key_down_action)(TRIBE_Aftermath_Screen *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TRIBE_Aftermath_Screen *, int, __int16);
  int (__thiscall *action)(TRIBE_Aftermath_Screen *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TRIBE_Aftermath_Screen *, RECT *);
  int (__thiscall *is_inside)(TRIBE_Aftermath_Screen *, int, int);
  void (__thiscall *set_focus)(TRIBE_Aftermath_Screen *, int);
  void (__thiscall *set_tab_order_2)(TRIBE_Aftermath_Screen *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TRIBE_Aftermath_Screen *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TRIBE_Aftermath_Screen *);
  unsigned __int8 (__thiscall *get_help_info)(TRIBE_Aftermath_Screen *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TRIBE_Aftermath_Screen *);
  int (__thiscall *restart_sound_system)(TRIBE_Aftermath_Screen *);
  void (__thiscall *take_snapshot)(TRIBE_Aftermath_Screen *);
  void (__thiscall *handle_reactivate)(TRIBE_Aftermath_Screen *);
  int (__thiscall *pointing_at)(TRIBE_Aftermath_Screen *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TRIBE_Aftermath_Screen *);
  int (__thiscall *get_ideal_width)(TRIBE_Aftermath_Screen *);
  void (__thiscall *draw_background)(TRIBE_Aftermath_Screen *, int);
  void (__thiscall *set_ideal_size)(TRIBE_Aftermath_Screen *, int, int);
  int (__thiscall *create_button_2)(TRIBE_Aftermath_Screen *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TRIBE_Aftermath_Screen *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TRIBE_Aftermath_Screen *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TRIBE_Aftermath_Screen *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TRIBE_Aftermath_Screen *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TRIBE_Aftermath_Screen *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TRIBE_Aftermath_Screen *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TRIBE_Aftermath_Screen *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TRIBE_Aftermath_Screen *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TRIBE_Aftermath_Screen *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TRIBE_Aftermath_Screen *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TRIBE_Aftermath_Screen *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TRIBE_Aftermath_Screen *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TRIBE_Aftermath_Screen *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TRIBE_Aftermath_Screen *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TRIBE_Aftermath_Screen *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TRIBE_Aftermath_Screen *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TRIBE_Aftermath_Screen *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TRIBE_Aftermath_Screen *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TRIBE_Aftermath_Screen *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TRIBE_Aftermath_Screen *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TRIBE_Aftermath_Screen *, TPanel *, int, int, int, int);
};
#pragma pack(pop)

/* 458 */
#pragma pack(push, 8)
struct TRIBE_Screen_Campaign_Selection
{
  TRIBE_Screen_Campaign_SelectionVtbl *vfptr;
  TPanel *previousPanelValue;
  TPanel *previousModalPanelValue;
  int pnl_x;
  int pnl_y;
  int pnl_wid;
  int pnl_hgt;
  char *panelNameValue;
  TDrawArea *render_area;
  RECT clip_rect;
  TPanel__PositionMode position_mode;
  TPanel__RedrawMode need_redraw;
  TPanel *curr_child;
  TPanel *parent_panel;
  TPanel *left_panel;
  TPanel *top_panel;
  TPanel *right_panel;
  TPanel *bottom_panel;
  PanelNode *node;
  PanelNode *first_child_node;
  PanelNode *last_child_node;
  TPanel *tab_prev_panel;
  TPanel *tab_next_panel;
  int mouse_captured;
  int active;
  int visible;
  int tab_stop;
  int have_focus;
  int overlapping_children;
  int handle_mouse_input;
  int just_drawn;
  int enabled;
  HRGN clip_rgn;
  RECT render_rect;
  int left_border;
  int top_border;
  int right_border;
  int bottom_border;
  int min_wid;
  int max_wid;
  int min_hgt;
  int max_hgt;
  int mouse_hold_interval;
  int mouse_move_tolerance;
  int mouse_down_x;
  int mouse_down_y;
  int mouse_down_ctrl;
  int mouse_down_shift;
  unsigned int mouse_down_time;
  int error_code;
  int z_order;
  int display_changed_count;
  int help_string_id;
  int help_page_id;
  unsigned __int8 mouse_action;
  unsigned __int8 mouse_down_button;
  unsigned __int8 panel_type;
  unsigned __int8 color;
  unsigned __int8 fill_in_background;
  unsigned __int8 clip_to_parent;
  unsigned __int8 draw_rect2_flag;
  unsigned __int8 need_restore;
  int ideal_width;
  int ideal_height;
  char info_file_name[260];
  int info_id;
  TShape *background_pic;
  TShape *background_pic2;
  HPALETTE palette;
  char cursor_file[260];
  int cursor_id;
  int background_pos;
  int use_bevels;
  int use_outline_bevels;
  unsigned __int8 bevel_color1;
  unsigned __int8 bevel_color2;
  unsigned __int8 bevel_color3;
  unsigned __int8 bevel_color4;
  unsigned __int8 bevel_color5;
  unsigned __int8 bevel_color6;
  unsigned int text_color1;
  unsigned int text_color2;
  unsigned int focus_color1;
  unsigned int focus_color2;
  unsigned int state_color1;
  unsigned int state_color2;
  unsigned int label_color1;
  unsigned int label_color2;
  int label_style;
  char popup_info_file_name[260];
  int popup_info_id;
  TShape *button_pics;
  RGE_Color_Table *shadow_color_table;
  int shadow_amount;
  unsigned __int8 background_color1;
  unsigned __int8 background_color2;
  int enable_ime;
  unsigned __int8 help_mode;
  int stock_brush;
  HBRUSH brush;
  unsigned int brush_color;
  TDrawArea *shadow_area;
  int allow_shadow_area;
  int saved_mouse_mode;
  int rollover_panel_always_active;
  TTextPanel *rollover_text_panel;
  int rollover_num;
  TPanel *rollover_panel[70];
  int rollover_string[70];
  int rollover_sound[70];
  TPanel *last_rollover_panel;
  int popup_dialogs_use_parent_text_colors;
  TTextPanel *title;
  int campaignListX;
  int campaignListY;
  int campaignListWidth;
  int campaignListHeight;
  TTextPanel *campaignTitle;
  TListPanel *campaignList;
  TScrollBarPanel *campaignScrollbar;
  int scenarioListX;
  int scenarioListY;
  int scenarioListWidth;
  int scenarioListHeight;
  TTextPanel *scenarioTitle;
  TListPanel *scenarioList;
  TScrollBarPanel *scenarioScrollbar;
  TTextPanel *difficultyTitle;
  TDropDownPanel *difficultyDrop;
  TButtonPanel *okButton;
  TButtonPanel *cancelButton;
  TButtonPanel *close_button;
  int campaignsLoaded;
};
#pragma pack(pop)

/* 806 */
#pragma pack(push, 8)
struct TRIBE_Screen_Campaign_SelectionVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Screen_Campaign_Selection *, unsigned int);
  int (__thiscall *setup)(TRIBE_Screen_Campaign_Selection *, TDrawArea *, TPanel *, int, int, int, int, unsigned __int8);
  void (__thiscall *set_rect_2)(TRIBE_Screen_Campaign_Selection *, RECT);
  void (__thiscall *set_rect_1)(TRIBE_Screen_Campaign_Selection *, int, int, int, int);
  void (__thiscall *set_color)(TRIBE_Screen_Campaign_Selection *, unsigned __int8);
  void (__thiscall *set_active)(TRIBE_Screen_Campaign_Selection *, int);
  void (__thiscall *unknown1)(TRIBE_Screen_Campaign_Selection *);
  void (__thiscall *unknown2)(TRIBE_Screen_Campaign_Selection *, int, int, int, int, int, int);
  void (__thiscall *set_positioning)(TRIBE_Screen_Campaign_Selection *, TPanel__PositionMode, int, int, int, int, int, int, int, int, TPanel *, TPanel *, TPanel *, TPanel *);
  void (__thiscall *unknown3)(TRIBE_Screen_Campaign_Selection *, int);
  void (__thiscall *set_fixed_position)(TRIBE_Screen_Campaign_Selection *, int, int, int, int);
  void (__thiscall *set_redraw)(TRIBE_Screen_Campaign_Selection *, TPanel__RedrawMode);
  void (__thiscall *set_overlapped_redraw)(TRIBE_Screen_Campaign_Selection *, TPanel *, TPanel *, TPanel__RedrawMode);
  void (__thiscall *draw_setup)(TRIBE_Screen_Campaign_Selection *, int);
  void (__thiscall *draw_finish)(TRIBE_Screen_Campaign_Selection *);
  void (__thiscall *draw)(TRIBE_Screen_Campaign_Selection *);
  void (__thiscall *draw_rect)(TRIBE_Screen_Campaign_Selection *, RECT *);
  void (__thiscall *draw_offset)(TRIBE_Screen_Campaign_Selection *, int, int, RECT *);
  void (__thiscall *draw_rect2)(TRIBE_Screen_Campaign_Selection *, RECT *);
  void (__thiscall *draw_offset2)(TRIBE_Screen_Campaign_Selection *, int, int, RECT *);
  void (__thiscall *paint)(TRIBE_Screen_Campaign_Selection *);
  int (__thiscall *wnd_proc)(TRIBE_Screen_Campaign_Selection *, HWND, unsigned int, unsigned int, int);
  int (__thiscall *handle_idle)(TRIBE_Screen_Campaign_Selection *);
  int (__thiscall *handle_size)(TRIBE_Screen_Campaign_Selection *, int, int);
  int (__thiscall *handle_paint)(TRIBE_Screen_Campaign_Selection *);
  int (__thiscall *handle_key_down)(TRIBE_Screen_Campaign_Selection *, int, __int16, int, int, int);
  int (__thiscall *handle_char)(TRIBE_Screen_Campaign_Selection *, int, __int16);
  int (__thiscall *handle_command)(TRIBE_Screen_Campaign_Selection *, unsigned int, int);
  int (__thiscall *handle_user_command)(TRIBE_Screen_Campaign_Selection *, unsigned int, int);
  int (__thiscall *handle_timer_command)(TRIBE_Screen_Campaign_Selection *, unsigned int, int);
  int (__thiscall *handle_scroll)(TRIBE_Screen_Campaign_Selection *, int, int);
  int (__thiscall *handle_mouse_down)(TRIBE_Screen_Campaign_Selection *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_move)(TRIBE_Screen_Campaign_Selection *, int, int, int, int);
  int (__thiscall *handle_mouse_up)(TRIBE_Screen_Campaign_Selection *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_dbl_click)(TRIBE_Screen_Campaign_Selection *, unsigned __int8, int, int, int, int);
  int (__thiscall *handle_mouse_wheel)(TRIBE_Screen_Campaign_Selection *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_wheel_action)(TRIBE_Screen_Campaign_Selection *, unsigned int, unsigned int, int);
  int (__thiscall *handle_mouse_xbuttons)(TRIBE_Screen_Campaign_Selection *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_xbuttons_action)(TRIBE_Screen_Campaign_Selection *, unsigned int, unsigned int, int);
  int (__thiscall *mouse_move_action)(TRIBE_Screen_Campaign_Selection *, int, int, int, int);
  int (__thiscall *mouse_left_down_action)(TRIBE_Screen_Campaign_Selection *, int, int, int, int);
  int (__thiscall *mouse_left_hold_action)(TRIBE_Screen_Campaign_Selection *, int, int, int, int);
  int (__thiscall *mouse_left_move_action)(TRIBE_Screen_Campaign_Selection *, int, int, int, int);
  int (__thiscall *mouse_left_up_action)(TRIBE_Screen_Campaign_Selection *, int, int, int, int);
  int (__thiscall *mouse_left_dbl_click_action)(TRIBE_Screen_Campaign_Selection *, int, int, int, int);
  int (__thiscall *mouse_right_down_action)(TRIBE_Screen_Campaign_Selection *, int, int, int, int);
  int (__thiscall *mouse_right_hold_action)(TRIBE_Screen_Campaign_Selection *, int, int, int, int);
  int (__thiscall *mouse_right_move_action)(TRIBE_Screen_Campaign_Selection *, int, int, int, int);
  int (__thiscall *mouse_right_up_action)(TRIBE_Screen_Campaign_Selection *, int, int, int, int);
  int (__thiscall *mouse_right_dbl_click_action)(TRIBE_Screen_Campaign_Selection *, int, int, int, int);
  int (__thiscall *key_down_action)(TRIBE_Screen_Campaign_Selection *, int, __int16, int, int, int);
  int (__thiscall *char_action)(TRIBE_Screen_Campaign_Selection *, int, __int16);
  int (__thiscall *action)(TRIBE_Screen_Campaign_Selection *, TPanel *, int, unsigned int, unsigned int);
  void (__thiscall *get_true_render_rect)(TRIBE_Screen_Campaign_Selection *, RECT *);
  int (__thiscall *is_inside)(TRIBE_Screen_Campaign_Selection *, int, int);
  void (__thiscall *set_focus)(TRIBE_Screen_Campaign_Selection *, int);
  void (__thiscall *set_tab_order_2)(TRIBE_Screen_Campaign_Selection *, TPanel *, TPanel *);
  void (__thiscall *set_tab_order_1)(TRIBE_Screen_Campaign_Selection *, TPanel **, __int16);
  TDrawArea *(__thiscall *renderArea)(TRIBE_Screen_Campaign_Selection *);
  unsigned __int8 (__thiscall *get_help_info)(TRIBE_Screen_Campaign_Selection *, char **, int *, int, int);
  void (__thiscall *stop_sound_system)(TRIBE_Screen_Campaign_Selection *);
  int (__thiscall *restart_sound_system)(TRIBE_Screen_Campaign_Selection *);
  void (__thiscall *take_snapshot)(TRIBE_Screen_Campaign_Selection *);
  void (__thiscall *handle_reactivate)(TRIBE_Screen_Campaign_Selection *);
  int (__thiscall *pointing_at)(TRIBE_Screen_Campaign_Selection *, int, int, int *, int *, int *, int *, char *, int);
  int (__thiscall *get_ideal_height)(TRIBE_Screen_Campaign_Selection *);
  int (__thiscall *get_ideal_width)(TRIBE_Screen_Campaign_Selection *);
  void (__thiscall *draw_background)(TRIBE_Screen_Campaign_Selection *, int);
  void (__thiscall *set_ideal_size)(TRIBE_Screen_Campaign_Selection *, int, int);
  int (__thiscall *create_button_2)(TRIBE_Screen_Campaign_Selection *, TPanel *, TButtonPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_button_1)(TRIBE_Screen_Campaign_Selection *, TPanel *, TButtonPanel **, char *, char *, int, int, int, int, int, int, int);
  int (__thiscall *create_check_box)(TRIBE_Screen_Campaign_Selection *, TPanel *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_radio_button)(TRIBE_Screen_Campaign_Selection *, TButtonPanel **, int, int, int, int, int, int);
  int (__thiscall *create_text_6)(TRIBE_Screen_Campaign_Selection *, TPanel *, TTextPanel **, int, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_5)(TRIBE_Screen_Campaign_Selection *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int *, int, int, int, int);
  int (__thiscall *create_text_4)(TRIBE_Screen_Campaign_Selection *, TPanel *, TTextPanel **, char *, int, int, int, int, int *, int, int, int, int, int);
  int (__thiscall *create_text_3)(TRIBE_Screen_Campaign_Selection *, TPanel *, TTextPanel **, int, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_2)(TRIBE_Screen_Campaign_Selection *, TPanel *, TTextPanel **, char **, int, int, int, int, int, int, int, int);
  int (__thiscall *create_text_1)(TRIBE_Screen_Campaign_Selection *, TPanel *, TTextPanel **, char *, int, int, int, int, int, int, int, int);
  int (__thiscall *create_input)(TRIBE_Screen_Campaign_Selection *, TPanel *, TInputPanel **, char *, __int16, TInputPanel__FormatType, int, int, int, int, int);
  int (__thiscall *create_edit)(TRIBE_Screen_Campaign_Selection *, TPanel *, TEditPanel **, char *, __int16, TEditPanel__FormatType, int, int, int, int, int, int, int, int);
  int (__thiscall *create_drop_down)(TRIBE_Screen_Campaign_Selection *, TPanel *, TDropDownPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_list)(TRIBE_Screen_Campaign_Selection *, TPanel *, TListPanel **, int, int, int, int, int);
  int (__thiscall *create_scrollbar)(TRIBE_Screen_Campaign_Selection *, TPanel *, TScrollBarPanel **, TTextPanel *, int, int, int, int, int);
  int (__thiscall *create_auto_scrollbar)(TRIBE_Screen_Campaign_Selection *, TScrollBarPanel **, TTextPanel *, int);
  int (__thiscall *create_vert_slider)(TRIBE_Screen_Campaign_Selection *, TPanel *, TVerticalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_horz_slider)(TRIBE_Screen_Campaign_Selection *, TPanel *, THorizontalSliderPanel **, int, int, int, int, int, int, int);
  int (__thiscall *create_picture_2)(TRIBE_Screen_Campaign_Selection *, TPanel *, TPicturePanel **, TShape *, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_picture_1)(TRIBE_Screen_Campaign_Selection *, TPanel *, TPicturePanel **, char *, int, int, int, int, int, int, int, unsigned int, unsigned __int8, unsigned __int8);
  int (__thiscall *create_timeline)(TRIBE_Screen_Campaign_Selection *, TPanel *, Time_Line_Panel **, int, int, int, int, int, int, int, int, int, int);
  void (__thiscall *position_panel)(TRIBE_Screen_Campaign_Selection *, TPanel *, int, int, int, int);
};
#pragma pack(pop)

/* 459 */
#pragma pack(push, 8)
struct RGE_RMM_Terrain_Generator
{
  RGE_RMM_Terrain_GeneratorVtbl *vfptr;
  RGE_Random_Map_Module *parent;
  RGE_Random_Map_Module_List *list;
  RGE_Map *map;
  RGE_Tile **map_row_offset;
  int map_width;
  int map_height;
  int max_map_width;
  int max_map_height;
  float schedule;
  unsigned __int8 *search_map;
  unsigned __int8 **search_map_rows;
  Map_Stack *stack_array;
  Map_Stack **stack_offsets;
  RGE_Terrain_Info info;
  RGE_Zone_Map *map_zone;
};
#pragma pack(pop)

/* 831 */
#pragma pack(push, 8)
struct RGE_RMM_Terrain_GeneratorVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_RMM_Terrain_Generator *, unsigned int);
  unsigned __int8 (__thiscall *generate)(RGE_RMM_Terrain_Generator *);
};
#pragma pack(pop)

/* 463 */
#pragma pack(push, 8)
struct RGE_RMM_Land_Generator
{
  RGE_RMM_Land_GeneratorVtbl *vfptr;
  RGE_Random_Map_Module *parent;
  RGE_Random_Map_Module_List *list;
  RGE_Map *map;
  RGE_Tile **map_row_offset;
  int map_width;
  int map_height;
  int max_map_width;
  int max_map_height;
  float schedule;
  unsigned __int8 *search_map;
  unsigned __int8 **search_map_rows;
  Map_Stack *stack_array;
  Map_Stack **stack_offsets;
  RGE_Land_Info info;
};
#pragma pack(pop)

/* 834 */
#pragma pack(push, 8)
struct RGE_RMM_Land_GeneratorVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_RMM_Land_Generator *, unsigned int);
  unsigned __int8 (__thiscall *generate)(RGE_RMM_Land_Generator *);
};
#pragma pack(pop)

/* 467 */
#pragma pack(push, 8)
struct RGE_RMM_Elevation_Generator
{
  RGE_RMM_Elevation_GeneratorVtbl *vfptr;
  RGE_Random_Map_Module *parent;
  RGE_Random_Map_Module_List *list;
  RGE_Map *map;
  RGE_Tile **map_row_offset;
  int map_width;
  int map_height;
  int max_map_width;
  int max_map_height;
  float schedule;
  unsigned __int8 *search_map;
  unsigned __int8 **search_map_rows;
  Map_Stack *stack_array;
  Map_Stack **stack_offsets;
  RGE_Elevation_Info info;
};
#pragma pack(pop)

/* 829 */
#pragma pack(push, 8)
struct RGE_RMM_Elevation_GeneratorVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_RMM_Elevation_Generator *, unsigned int);
  unsigned __int8 (__thiscall *generate)(RGE_RMM_Elevation_Generator *);
};
#pragma pack(pop)

/* 474 */
#pragma pack(push, 8)
struct RGE_Shallows_Info_Line
{
  int x;
  int y;
};
#pragma pack(pop)

/* 473 */
#pragma pack(push, 8)
struct RGE_Shallows_Info_Entry
{
  RGE_Shallows_Info_Line shallows[99];
  int shallows_num;
  int terrain_size[99];
  int terrain_variance[99];
  int terrain_replace[99];
  float terrain_cost[99];
};
#pragma pack(pop)

/* 472 */
#pragma pack(push, 8)
struct RGE_Shallows_Info
{
  RGE_Shallows_Info_Entry shallow_entries[99];
  int shallow_entries_num;
};
#pragma pack(pop)

/* 471 */
#pragma pack(push, 8)
struct RGE_RMM_Shallows_Generator
{
  RGE_RMM_Shallows_GeneratorVtbl *vfptr;
  RGE_Random_Map_Module *parent;
  RGE_Random_Map_Module_List *list;
  RGE_Map *map;
  RGE_Tile **map_row_offset;
  int map_width;
  int map_height;
  int max_map_width;
  int max_map_height;
  float schedule;
  unsigned __int8 *search_map;
  unsigned __int8 **search_map_rows;
  Map_Stack *stack_array;
  Map_Stack **stack_offsets;
  RGE_Shallows_Info info;
};
#pragma pack(pop)

/* 830 */
#pragma pack(push, 8)
struct RGE_RMM_Shallows_GeneratorVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_RMM_Shallows_Generator *, unsigned int);
  unsigned __int8 (__thiscall *generate)(RGE_RMM_Shallows_Generator *);
};
#pragma pack(pop)

/* 481 */
#pragma pack(push, 8)
struct RGE_Cliffs_Hot_Spots
{
  int x;
  int y;
  int radius;
};
#pragma pack(pop)

/* 480 */
#pragma pack(push, 8)
struct RGE_Cliffs_Info
{
  int min_number_of_cliffs;
  int max_number_of_cliffs;
  int min_cliff_size;
  int max_cliff_size;
  int curliness;
  int cliff_terrain_spacing;
  int cliff_to_cliff_spacing;
  RGE_Cliffs_Hot_Spots hot_spots[99];
  int hot_spot_num;
};
#pragma pack(pop)

/* 475 */
#pragma pack(push, 8)
struct RGE_RMM_Script_Controller
{
  RGE_RMM_Script_ControllerVtbl *vfptr;
  RGE_Random_Map_Module *parent;
  RGE_Random_Map_Module_List *list;
  RGE_Map *map;
  RGE_Tile **map_row_offset;
  int map_width;
  int map_height;
  int max_map_width;
  int max_map_height;
  float schedule;
  unsigned __int8 *search_map;
  unsigned __int8 **search_map_rows;
  Map_Stack *stack_array;
  Map_Stack **stack_offsets;
  char script_name[260];
  int script_id;
  RGE_Game_World *world;
  RGE_RMM_Elevation_Generator *elevation_module;
  RGE_RMM_Shallows_Generator *shallows_module;
  RGE_RMM_Terrain_Generator *terrain_module;
  RGE_RMM_Object_Generator *object_module;
  RGE_RMM_Cliffs_Generator *cliff_module;
  RGE_RMM_Land_Generator *land_module;
  RGE_Elevation_Info elevation_info;
  RGE_Shallows_Info shallows_info;
  RGE_Terrain_Info terrain_info;
  RGE_Object_Info object_info;
  RGE_Cliffs_Info cliff_info;
  RGE_Land_Info land_info;
  unsigned __int8 elevation_active;
  unsigned __int8 shallows_active;
  unsigned __int8 terrain_active;
  unsigned __int8 object_active;
  unsigned __int8 cliff_active;
  unsigned __int8 land_active;
  RGE_RMM_Token *token_list;
  RGE_RMM_Token *next_command;
  int state;
  int remark;
  int inside_braces;
  int if_state[100];
  int if_depth;
  char script_history[100][260];
  int script_history_index;
  unsigned __int8 inside_random_statement;
  int random_number[100];
  int random_state[100];
  int land_index1;
  int land_index2;
  unsigned __int8 placing_player_land;
  unsigned __int8 placing_land;
  int min_place_distance[99];
  int terrain_index;
  unsigned __int8 terrain_scaling[99];
  int elevation_index1;
  int elevation_index2;
  int elevation_scale_info[99];
  int object_index;
  int shallows_index;
  int shallows_connect_type[99];
  int param_numbers[4];
  char param_strings[4][100];
  RGE_RMM_Token *constants[4];
};
#pragma pack(pop)

/* 845 */
#pragma pack(push, 8)
struct RGE_RMM_Script_ControllerVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_RMM_Script_Controller *, unsigned int);
  unsigned __int8 (__thiscall *generate)(RGE_RMM_Script_Controller *);
  unsigned __int8 (__thiscall *do_player_positioning)(RGE_RMM_Script_Controller *);
  void (__thiscall *setup_script)(RGE_RMM_Script_Controller *);
  unsigned __int8 (__thiscall *do_player_command)(RGE_RMM_Script_Controller *, RGE_RMM_Token *);
  unsigned __int8 (__thiscall *do_land_command)(RGE_RMM_Script_Controller *, RGE_RMM_Token *);
  unsigned __int8 (__thiscall *do_terrain_command)(RGE_RMM_Script_Controller *, RGE_RMM_Token *);
  unsigned __int8 (__thiscall *do_cliff_command)(RGE_RMM_Script_Controller *, RGE_RMM_Token *);
  unsigned __int8 (__thiscall *do_object_command)(RGE_RMM_Script_Controller *, RGE_RMM_Token *);
  unsigned __int8 (__thiscall *do_shallows_command)(RGE_RMM_Script_Controller *, RGE_RMM_Token *);
  unsigned __int8 (__thiscall *do_elevation_command)(RGE_RMM_Script_Controller *, RGE_RMM_Token *);
  void (__thiscall *init_base_map_info)(RGE_RMM_Script_Controller *);
  void (__thiscall *setup_base_land)(RGE_RMM_Script_Controller *, int, int);
};
#pragma pack(pop)

/* 479 */
#pragma pack(push, 8)
struct RGE_RMM_Cliffs_Generator
{
  RGE_RMM_Cliffs_GeneratorVtbl *vfptr;
  RGE_Random_Map_Module *parent;
  RGE_Random_Map_Module_List *list;
  RGE_Map *map;
  RGE_Tile **map_row_offset;
  int map_width;
  int map_height;
  int max_map_width;
  int max_map_height;
  float schedule;
  unsigned __int8 *search_map;
  unsigned __int8 **search_map_rows;
  Map_Stack *stack_array;
  Map_Stack **stack_offsets;
  RGE_Cliffs_Info info;
  Map_Stack valid_cliff_sites;
};
#pragma pack(pop)

/* 477 */
#pragma pack(push, 8)
struct RGE_RMM_Token
{
  char name[100];
  unsigned __int8 type;
  int value;
  unsigned __int8 p[4];
  RGE_RMM_Token *left_link;
  RGE_RMM_Token *right_link;
};
#pragma pack(pop)

/* 833 */
#pragma pack(push, 8)
struct RGE_RMM_Cliffs_GeneratorVtbl
{
  void *(__thiscall *__vecDelDtor)(RGE_RMM_Cliffs_Generator *, unsigned int);
  unsigned __int8 (__thiscall *generate)(RGE_RMM_Cliffs_Generator *);
};
#pragma pack(pop)

/* 476 */
#pragma pack(push, 8)
struct TRIBE_RMM_Script_Controller
{
  TRIBE_RMM_Script_ControllerVtbl *vfptr;
  RGE_Random_Map_Module *parent;
  RGE_Random_Map_Module_List *list;
  RGE_Map *map;
  RGE_Tile **map_row_offset;
  int map_width;
  int map_height;
  int max_map_width;
  int max_map_height;
  float schedule;
  unsigned __int8 *search_map;
  unsigned __int8 **search_map_rows;
  Map_Stack *stack_array;
  Map_Stack **stack_offsets;
  char script_name[260];
  int script_id;
  RGE_Game_World *world;
  RGE_RMM_Elevation_Generator *elevation_module;
  RGE_RMM_Shallows_Generator *shallows_module;
  RGE_RMM_Terrain_Generator *terrain_module;
  RGE_RMM_Object_Generator *object_module;
  RGE_RMM_Cliffs_Generator *cliff_module;
  RGE_RMM_Land_Generator *land_module;
  RGE_Elevation_Info elevation_info;
  RGE_Shallows_Info shallows_info;
  RGE_Terrain_Info terrain_info;
  RGE_Object_Info object_info;
  RGE_Cliffs_Info cliff_info;
  RGE_Land_Info land_info;
  unsigned __int8 elevation_active;
  unsigned __int8 shallows_active;
  unsigned __int8 terrain_active;
  unsigned __int8 object_active;
  unsigned __int8 cliff_active;
  unsigned __int8 land_active;
  RGE_RMM_Token *token_list;
  RGE_RMM_Token *next_command;
  int state;
  int remark;
  int inside_braces;
  int if_state[100];
  int if_depth;
  char script_history[100][260];
  int script_history_index;
  unsigned __int8 inside_random_statement;
  int random_number[100];
  int random_state[100];
  int land_index1;
  int land_index2;
  unsigned __int8 placing_player_land;
  unsigned __int8 placing_land;
  int min_place_distance[99];
  int terrain_index;
  unsigned __int8 terrain_scaling[99];
  int elevation_index1;
  int elevation_index2;
  int elevation_scale_info[99];
  int object_index;
  int shallows_index;
  int shallows_connect_type[99];
  int param_numbers[4];
  char param_strings[4][100];
  RGE_RMM_Token *constants[4];
};
#pragma pack(pop)

/* 847 */
#pragma pack(push, 8)
struct TRIBE_RMM_Script_ControllerVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_RMM_Script_Controller *, unsigned int);
  unsigned __int8 (__thiscall *generate)(TRIBE_RMM_Script_Controller *);
  unsigned __int8 (__thiscall *do_player_positioning)(TRIBE_RMM_Script_Controller *);
  void (__thiscall *setup_script)(TRIBE_RMM_Script_Controller *);
  unsigned __int8 (__thiscall *do_player_command)(TRIBE_RMM_Script_Controller *, RGE_RMM_Token *);
  unsigned __int8 (__thiscall *do_land_command)(TRIBE_RMM_Script_Controller *, RGE_RMM_Token *);
  unsigned __int8 (__thiscall *do_terrain_command)(TRIBE_RMM_Script_Controller *, RGE_RMM_Token *);
  unsigned __int8 (__thiscall *do_cliff_command)(TRIBE_RMM_Script_Controller *, RGE_RMM_Token *);
  unsigned __int8 (__thiscall *do_object_command)(TRIBE_RMM_Script_Controller *, RGE_RMM_Token *);
  unsigned __int8 (__thiscall *do_shallows_command)(TRIBE_RMM_Script_Controller *, RGE_RMM_Token *);
  unsigned __int8 (__thiscall *do_elevation_command)(TRIBE_RMM_Script_Controller *, RGE_RMM_Token *);
  void (__thiscall *init_base_map_info)(TRIBE_RMM_Script_Controller *);
  void (__thiscall *setup_base_land)(TRIBE_RMM_Script_Controller *, int, int);
};
#pragma pack(pop)

/* 482 */
#pragma pack(push, 8)
struct TribeFishingShipUnitAIModule
{
  TribeFishingShipUnitAIModuleVtbl *vfptr;
  RGE_Combat_Object *objectValue;
  int moodValue;
  int objectCategoryValue;
  int orderQueueSizeValue;
  int orderQueueMaxSizeValue;
  OrderEvent *orderQueueValue;
  int notifyQueueSizeValue;
  int notifyQueueMaxSizeValue;
  NotifyEvent *notifyQueueValue;
  int currentOrderValue;
  int currentOrderPriorityValue;
  int currentActionValue;
  int currentTargetValue;
  int currentTargetTypeValue;
  float currentTargetXValue;
  float currentTargetYValue;
  float currentTargetZValue;
  float desiredTargetDistanceValue;
  int defendTargetValue;
  int lastOrderValue;
  int lastActionValue;
  int lastTargetValue;
  int lastTargetTypeValue;
  UnitAIOrderHistory mOrderHistory;
  int mOrderHistorySize;
  unsigned int mLastRetargetTime;
  ManagedArray_int_ attackingUnitsValue;
  Waypoint waypointQueue[8];
  int waypointQueueSizeValue;
  unsigned int lastUpdateTimeValue;
  unsigned int idleTimerValue;
  unsigned int adjustedIdleTimeoutValue;
  unsigned int idleTimeoutValue;
  unsigned int secondaryTimerValue;
  unsigned int lookAroundTimerValue;
  unsigned int lookAroundTimeoutValue;
  Waypoint lastWorldPositionValue;
  float defenseBufferValue;
  int *importantObjects;
  int numberImportantObjects;
  unsigned __int8 stopAfterTargetKilledValue;
  unsigned __int8 stateValue;
  float statePositionXValue;
  float statePositionYValue;
  float timeSinceEnemySighting;
  unsigned __int8 alertModeValue;
  int alertModeObjectIDValue;
  BPath *mPatrolPath;
  int mPatrolCurrentWaypoint;
  unsigned int mRandomizedRetargetTimer;
  int mBestUnitToAttackThisUpdate;
  unsigned __int8 mFormationType;
  unsigned __int8 autoAttackOrderFlag;
  int mNumberRetargetEntries;
  int mMaximumNumberRetargetEntries;
  UnitAIModule__UnitAIRetargetEntry *mRetargetEntries;
};
#pragma pack(pop)

/* 983 */
#pragma pack(push, 8)
struct TribeFishingShipUnitAIModuleVtbl
{
  void *(__thiscall *__vecDelDtor)(TribeFishingShipUnitAIModule *, unsigned int);
  void (__thiscall *save)(TribeFishingShipUnitAIModule *, int);
  void (__thiscall *load)(TribeFishingShipUnitAIModule *, int);
  RGE_Player *(__thiscall *owner)(TribeFishingShipUnitAIModule *);
  int (__thiscall *order)(TribeFishingShipUnitAIModule *, int, int, int, int, float, float, float, float, int, int, int);
  int (__thiscall *notify)(TribeFishingShipUnitAIModule *, int, int, int, int, int, int);
  int (__thiscall *notifyCommander_2)(TribeFishingShipUnitAIModule *, int, int, int, int, int, int);
  int (__thiscall *notifyCommander_1)(TribeFishingShipUnitAIModule *, NotifyEvent *);
  void (__thiscall *search)(TribeFishingShipUnitAIModule *, float, float, bool);
  int (__thiscall *importantWhenDead)(TribeFishingShipUnitAIModule *, int);
  int (__thiscall *retryableOrder)(TribeFishingShipUnitAIModule *, int);
  int (__thiscall *actionRequiresLiveTarget)(TribeFishingShipUnitAIModule *, int);
  int (__thiscall *mostDangerousEnemy)(TribeFishingShipUnitAIModule *, float *);
  int (__thiscall *weakestEnemy)(TribeFishingShipUnitAIModule *, float *);
  int (__thiscall *closestAttacker)(TribeFishingShipUnitAIModule *, float *);
  int (__thiscall *closestObject)(TribeFishingShipUnitAIModule *, int, int, int, int, int, int *);
  int (__thiscall *closestResourceObject)(TribeFishingShipUnitAIModule *, int, int, int, int *);
  int (__thiscall *closestUndiscoveredTile)(TribeFishingShipUnitAIModule *, int *, int *, int);
  void (*logDebug)(TribeFishingShipUnitAIModule *, char *, ...);
  int (__thiscall *canAttackUnit)(TribeFishingShipUnitAIModule *, RGE_Static_Object *);
  int (__thiscall *canAttackUnitAtNeutrality)(TribeFishingShipUnitAIModule *, int);
  int (__thiscall *stopObject)(TribeFishingShipUnitAIModule *, int);
  int (__thiscall *attackObject)(TribeFishingShipUnitAIModule *, int, int);
  int (__thiscall *attackRoundupObject)(TribeFishingShipUnitAIModule *, int);
  int (__thiscall *huntObject)(TribeFishingShipUnitAIModule *, int, int);
  int (__thiscall *gatherObject)(TribeFishingShipUnitAIModule *, int, int);
  int (__thiscall *convertObject)(TribeFishingShipUnitAIModule *, int, int);
  int (__thiscall *healObject)(TribeFishingShipUnitAIModule *, int, int);
  int (__thiscall *repairObject)(TribeFishingShipUnitAIModule *, int, int);
  int (__thiscall *buildObject)(TribeFishingShipUnitAIModule *, int, int);
  int (__thiscall *tradeWithObject)(TribeFishingShipUnitAIModule *, int, int);
  int (__thiscall *explore)(TribeFishingShipUnitAIModule *, int, int, int);
  int (__thiscall *enterObject)(TribeFishingShipUnitAIModule *, int, int);
  int (__thiscall *unload)(TribeFishingShipUnitAIModule *, int, float, float);
  int (__thiscall *transportObject)(TribeFishingShipUnitAIModule *, float, float, float, int);
  int (__thiscall *moveTo_3)(TribeFishingShipUnitAIModule *, float, float, float, float, int, int);
  int (__thiscall *moveTo_2)(TribeFishingShipUnitAIModule *, int, float, int);
  int (__thiscall *moveTo_1)(TribeFishingShipUnitAIModule *, int, int);
  int (__thiscall *evasiveMoveTo)(TribeFishingShipUnitAIModule *, float, float, float, int);
  int (__thiscall *intelligentEvasiveMoveTo)(TribeFishingShipUnitAIModule *, float, float, float, int, int);
  int (__thiscall *runAwayFromAttackers)(TribeFishingShipUnitAIModule *, int, int);
  int (__thiscall *followObject)(TribeFishingShipUnitAIModule *, int, float, int);
  int (__thiscall *defendObject)(TribeFishingShipUnitAIModule *, int, float, int);
  int (__thiscall *defendPosition)(TribeFishingShipUnitAIModule *, float, float, float, int);
  int (__thiscall *seekAndDestroy)(TribeFishingShipUnitAIModule *, int, int, int, int);
  int (__thiscall *exploreAndDestroy)(TribeFishingShipUnitAIModule *, int, int, int);
  int (__thiscall *importantObject)(TribeFishingShipUnitAIModule *, int);
  int (__thiscall *convertToLOSResourceType)(TribeFishingShipUnitAIModule *, int);
  int (__thiscall *canConvert)(TribeFishingShipUnitAIModule *, int, int);
  void (__thiscall *setState)(TribeFishingShipUnitAIModule *, unsigned __int8);
  char *(__thiscall *stateName)(TribeFishingShipUnitAIModule *, int);
  int (__thiscall *canMoveToAttack)(TribeFishingShipUnitAIModule *, int);
  int (__thiscall *findAlertModeObject)(TribeFishingShipUnitAIModule *);
  int (__thiscall *processOrder)(TribeFishingShipUnitAIModule *, OrderEvent *, int);
  int (__thiscall *processNotify)(TribeFishingShipUnitAIModule *, NotifyEvent *, unsigned int);
  int (__thiscall *processIdle)(TribeFishingShipUnitAIModule *, int);
  int (__thiscall *processIdle_search)(TribeFishingShipUnitAIModule *, int, int);
  int (__thiscall *processMisc)(TribeFishingShipUnitAIModule *);
  int (__thiscall *processRetryableOrder)(TribeFishingShipUnitAIModule *);
};
#pragma pack(pop)

/* 483 */
#pragma pack(push, 8)
struct TribeTradeShipUnitAIModule
{
  TribeTradeShipUnitAIModuleVtbl *vfptr;
  RGE_Combat_Object *objectValue;
  int moodValue;
  int objectCategoryValue;
  int orderQueueSizeValue;
  int orderQueueMaxSizeValue;
  OrderEvent *orderQueueValue;
  int notifyQueueSizeValue;
  int notifyQueueMaxSizeValue;
  NotifyEvent *notifyQueueValue;
  int currentOrderValue;
  int currentOrderPriorityValue;
  int currentActionValue;
  int currentTargetValue;
  int currentTargetTypeValue;
  float currentTargetXValue;
  float currentTargetYValue;
  float currentTargetZValue;
  float desiredTargetDistanceValue;
  int defendTargetValue;
  int lastOrderValue;
  int lastActionValue;
  int lastTargetValue;
  int lastTargetTypeValue;
  UnitAIOrderHistory mOrderHistory;
  int mOrderHistorySize;
  unsigned int mLastRetargetTime;
  ManagedArray_int_ attackingUnitsValue;
  Waypoint waypointQueue[8];
  int waypointQueueSizeValue;
  unsigned int lastUpdateTimeValue;
  unsigned int idleTimerValue;
  unsigned int adjustedIdleTimeoutValue;
  unsigned int idleTimeoutValue;
  unsigned int secondaryTimerValue;
  unsigned int lookAroundTimerValue;
  unsigned int lookAroundTimeoutValue;
  Waypoint lastWorldPositionValue;
  float defenseBufferValue;
  int *importantObjects;
  int numberImportantObjects;
  unsigned __int8 stopAfterTargetKilledValue;
  unsigned __int8 stateValue;
  float statePositionXValue;
  float statePositionYValue;
  float timeSinceEnemySighting;
  unsigned __int8 alertModeValue;
  int alertModeObjectIDValue;
  BPath *mPatrolPath;
  int mPatrolCurrentWaypoint;
  unsigned int mRandomizedRetargetTimer;
  int mBestUnitToAttackThisUpdate;
  unsigned __int8 mFormationType;
  unsigned __int8 autoAttackOrderFlag;
  int mNumberRetargetEntries;
  int mMaximumNumberRetargetEntries;
  UnitAIModule__UnitAIRetargetEntry *mRetargetEntries;
};
#pragma pack(pop)

/* 984 */
#pragma pack(push, 8)
struct TribeTradeShipUnitAIModuleVtbl
{
  void *(__thiscall *__vecDelDtor)(TribeTradeShipUnitAIModule *, unsigned int);
  void (__thiscall *save)(TribeTradeShipUnitAIModule *, int);
  void (__thiscall *load)(TribeTradeShipUnitAIModule *, int);
  RGE_Player *(__thiscall *owner)(TribeTradeShipUnitAIModule *);
  int (__thiscall *order)(TribeTradeShipUnitAIModule *, int, int, int, int, float, float, float, float, int, int, int);
  int (__thiscall *notify)(TribeTradeShipUnitAIModule *, int, int, int, int, int, int);
  int (__thiscall *notifyCommander_2)(TribeTradeShipUnitAIModule *, int, int, int, int, int, int);
  int (__thiscall *notifyCommander_1)(TribeTradeShipUnitAIModule *, NotifyEvent *);
  void (__thiscall *search)(TribeTradeShipUnitAIModule *, float, float, bool);
  int (__thiscall *importantWhenDead)(TribeTradeShipUnitAIModule *, int);
  int (__thiscall *retryableOrder)(TribeTradeShipUnitAIModule *, int);
  int (__thiscall *actionRequiresLiveTarget)(TribeTradeShipUnitAIModule *, int);
  int (__thiscall *mostDangerousEnemy)(TribeTradeShipUnitAIModule *, float *);
  int (__thiscall *weakestEnemy)(TribeTradeShipUnitAIModule *, float *);
  int (__thiscall *closestAttacker)(TribeTradeShipUnitAIModule *, float *);
  int (__thiscall *closestObject)(TribeTradeShipUnitAIModule *, int, int, int, int, int, int *);
  int (__thiscall *closestResourceObject)(TribeTradeShipUnitAIModule *, int, int, int, int *);
  int (__thiscall *closestUndiscoveredTile)(TribeTradeShipUnitAIModule *, int *, int *, int);
  void (*logDebug)(TribeTradeShipUnitAIModule *, char *, ...);
  int (__thiscall *canAttackUnit)(TribeTradeShipUnitAIModule *, RGE_Static_Object *);
  int (__thiscall *canAttackUnitAtNeutrality)(TribeTradeShipUnitAIModule *, int);
  int (__thiscall *stopObject)(TribeTradeShipUnitAIModule *, int);
  int (__thiscall *attackObject)(TribeTradeShipUnitAIModule *, int, int);
  int (__thiscall *attackRoundupObject)(TribeTradeShipUnitAIModule *, int);
  int (__thiscall *huntObject)(TribeTradeShipUnitAIModule *, int, int);
  int (__thiscall *gatherObject)(TribeTradeShipUnitAIModule *, int, int);
  int (__thiscall *convertObject)(TribeTradeShipUnitAIModule *, int, int);
  int (__thiscall *healObject)(TribeTradeShipUnitAIModule *, int, int);
  int (__thiscall *repairObject)(TribeTradeShipUnitAIModule *, int, int);
  int (__thiscall *buildObject)(TribeTradeShipUnitAIModule *, int, int);
  int (__thiscall *tradeWithObject)(TribeTradeShipUnitAIModule *, int, int);
  int (__thiscall *explore)(TribeTradeShipUnitAIModule *, int, int, int);
  int (__thiscall *enterObject)(TribeTradeShipUnitAIModule *, int, int);
  int (__thiscall *unload)(TribeTradeShipUnitAIModule *, int, float, float);
  int (__thiscall *transportObject)(TribeTradeShipUnitAIModule *, float, float, float, int);
  int (__thiscall *moveTo_3)(TribeTradeShipUnitAIModule *, float, float, float, float, int, int);
  int (__thiscall *moveTo_2)(TribeTradeShipUnitAIModule *, int, float, int);
  int (__thiscall *moveTo_1)(TribeTradeShipUnitAIModule *, int, int);
  int (__thiscall *evasiveMoveTo)(TribeTradeShipUnitAIModule *, float, float, float, int);
  int (__thiscall *intelligentEvasiveMoveTo)(TribeTradeShipUnitAIModule *, float, float, float, int, int);
  int (__thiscall *runAwayFromAttackers)(TribeTradeShipUnitAIModule *, int, int);
  int (__thiscall *followObject)(TribeTradeShipUnitAIModule *, int, float, int);
  int (__thiscall *defendObject)(TribeTradeShipUnitAIModule *, int, float, int);
  int (__thiscall *defendPosition)(TribeTradeShipUnitAIModule *, float, float, float, int);
  int (__thiscall *seekAndDestroy)(TribeTradeShipUnitAIModule *, int, int, int, int);
  int (__thiscall *exploreAndDestroy)(TribeTradeShipUnitAIModule *, int, int, int);
  int (__thiscall *importantObject)(TribeTradeShipUnitAIModule *, int);
  int (__thiscall *convertToLOSResourceType)(TribeTradeShipUnitAIModule *, int);
  int (__thiscall *canConvert)(TribeTradeShipUnitAIModule *, int, int);
  void (__thiscall *setState)(TribeTradeShipUnitAIModule *, unsigned __int8);
  char *(__thiscall *stateName)(TribeTradeShipUnitAIModule *, int);
  int (__thiscall *canMoveToAttack)(TribeTradeShipUnitAIModule *, int);
  int (__thiscall *findAlertModeObject)(TribeTradeShipUnitAIModule *);
  int (__thiscall *processOrder)(TribeTradeShipUnitAIModule *, OrderEvent *, int);
  int (__thiscall *processNotify)(TribeTradeShipUnitAIModule *, NotifyEvent *, unsigned int);
  int (__thiscall *processIdle)(TribeTradeShipUnitAIModule *, int);
  int (__thiscall *processIdle_search)(TribeTradeShipUnitAIModule *, int, int);
  int (__thiscall *processMisc)(TribeTradeShipUnitAIModule *);
  int (__thiscall *processRetryableOrder)(TribeTradeShipUnitAIModule *);
};
#pragma pack(pop)

/* 484 */
#pragma pack(push, 8)
struct TribeTransportShipUnitAIModule
{
  TribeTransportShipUnitAIModuleVtbl *vfptr;
  RGE_Combat_Object *objectValue;
  int moodValue;
  int objectCategoryValue;
  int orderQueueSizeValue;
  int orderQueueMaxSizeValue;
  OrderEvent *orderQueueValue;
  int notifyQueueSizeValue;
  int notifyQueueMaxSizeValue;
  NotifyEvent *notifyQueueValue;
  int currentOrderValue;
  int currentOrderPriorityValue;
  int currentActionValue;
  int currentTargetValue;
  int currentTargetTypeValue;
  float currentTargetXValue;
  float currentTargetYValue;
  float currentTargetZValue;
  float desiredTargetDistanceValue;
  int defendTargetValue;
  int lastOrderValue;
  int lastActionValue;
  int lastTargetValue;
  int lastTargetTypeValue;
  UnitAIOrderHistory mOrderHistory;
  int mOrderHistorySize;
  unsigned int mLastRetargetTime;
  ManagedArray_int_ attackingUnitsValue;
  Waypoint waypointQueue[8];
  int waypointQueueSizeValue;
  unsigned int lastUpdateTimeValue;
  unsigned int idleTimerValue;
  unsigned int adjustedIdleTimeoutValue;
  unsigned int idleTimeoutValue;
  unsigned int secondaryTimerValue;
  unsigned int lookAroundTimerValue;
  unsigned int lookAroundTimeoutValue;
  Waypoint lastWorldPositionValue;
  float defenseBufferValue;
  int *importantObjects;
  int numberImportantObjects;
  unsigned __int8 stopAfterTargetKilledValue;
  unsigned __int8 stateValue;
  float statePositionXValue;
  float statePositionYValue;
  float timeSinceEnemySighting;
  unsigned __int8 alertModeValue;
  int alertModeObjectIDValue;
  BPath *mPatrolPath;
  int mPatrolCurrentWaypoint;
  unsigned int mRandomizedRetargetTimer;
  int mBestUnitToAttackThisUpdate;
  unsigned __int8 mFormationType;
  unsigned __int8 autoAttackOrderFlag;
  int mNumberRetargetEntries;
  int mMaximumNumberRetargetEntries;
  UnitAIModule__UnitAIRetargetEntry *mRetargetEntries;
};
#pragma pack(pop)

/* 985 */
#pragma pack(push, 8)
struct TribeTransportShipUnitAIModuleVtbl
{
  void *(__thiscall *__vecDelDtor)(TribeTransportShipUnitAIModule *, unsigned int);
  void (__thiscall *save)(TribeTransportShipUnitAIModule *, int);
  void (__thiscall *load)(TribeTransportShipUnitAIModule *, int);
  RGE_Player *(__thiscall *owner)(TribeTransportShipUnitAIModule *);
  int (__thiscall *order)(TribeTransportShipUnitAIModule *, int, int, int, int, float, float, float, float, int, int, int);
  int (__thiscall *notify)(TribeTransportShipUnitAIModule *, int, int, int, int, int, int);
  int (__thiscall *notifyCommander_2)(TribeTransportShipUnitAIModule *, int, int, int, int, int, int);
  int (__thiscall *notifyCommander_1)(TribeTransportShipUnitAIModule *, NotifyEvent *);
  void (__thiscall *search)(TribeTransportShipUnitAIModule *, float, float, bool);
  int (__thiscall *importantWhenDead)(TribeTransportShipUnitAIModule *, int);
  int (__thiscall *retryableOrder)(TribeTransportShipUnitAIModule *, int);
  int (__thiscall *actionRequiresLiveTarget)(TribeTransportShipUnitAIModule *, int);
  int (__thiscall *mostDangerousEnemy)(TribeTransportShipUnitAIModule *, float *);
  int (__thiscall *weakestEnemy)(TribeTransportShipUnitAIModule *, float *);
  int (__thiscall *closestAttacker)(TribeTransportShipUnitAIModule *, float *);
  int (__thiscall *closestObject)(TribeTransportShipUnitAIModule *, int, int, int, int, int, int *);
  int (__thiscall *closestResourceObject)(TribeTransportShipUnitAIModule *, int, int, int, int *);
  int (__thiscall *closestUndiscoveredTile)(TribeTransportShipUnitAIModule *, int *, int *, int);
  void (*logDebug)(TribeTransportShipUnitAIModule *, char *, ...);
  int (__thiscall *canAttackUnit)(TribeTransportShipUnitAIModule *, RGE_Static_Object *);
  int (__thiscall *canAttackUnitAtNeutrality)(TribeTransportShipUnitAIModule *, int);
  int (__thiscall *stopObject)(TribeTransportShipUnitAIModule *, int);
  int (__thiscall *attackObject)(TribeTransportShipUnitAIModule *, int, int);
  int (__thiscall *attackRoundupObject)(TribeTransportShipUnitAIModule *, int);
  int (__thiscall *huntObject)(TribeTransportShipUnitAIModule *, int, int);
  int (__thiscall *gatherObject)(TribeTransportShipUnitAIModule *, int, int);
  int (__thiscall *convertObject)(TribeTransportShipUnitAIModule *, int, int);
  int (__thiscall *healObject)(TribeTransportShipUnitAIModule *, int, int);
  int (__thiscall *repairObject)(TribeTransportShipUnitAIModule *, int, int);
  int (__thiscall *buildObject)(TribeTransportShipUnitAIModule *, int, int);
  int (__thiscall *tradeWithObject)(TribeTransportShipUnitAIModule *, int, int);
  int (__thiscall *explore)(TribeTransportShipUnitAIModule *, int, int, int);
  int (__thiscall *enterObject)(TribeTransportShipUnitAIModule *, int, int);
  int (__thiscall *unload)(TribeTransportShipUnitAIModule *, int, float, float);
  int (__thiscall *transportObject)(TribeTransportShipUnitAIModule *, float, float, float, int);
  int (__thiscall *moveTo_3)(TribeTransportShipUnitAIModule *, float, float, float, float, int, int);
  int (__thiscall *moveTo_2)(TribeTransportShipUnitAIModule *, int, float, int);
  int (__thiscall *moveTo_1)(TribeTransportShipUnitAIModule *, int, int);
  int (__thiscall *evasiveMoveTo)(TribeTransportShipUnitAIModule *, float, float, float, int);
  int (__thiscall *intelligentEvasiveMoveTo)(TribeTransportShipUnitAIModule *, float, float, float, int, int);
  int (__thiscall *runAwayFromAttackers)(TribeTransportShipUnitAIModule *, int, int);
  int (__thiscall *followObject)(TribeTransportShipUnitAIModule *, int, float, int);
  int (__thiscall *defendObject)(TribeTransportShipUnitAIModule *, int, float, int);
  int (__thiscall *defendPosition)(TribeTransportShipUnitAIModule *, float, float, float, int);
  int (__thiscall *seekAndDestroy)(TribeTransportShipUnitAIModule *, int, int, int, int);
  int (__thiscall *exploreAndDestroy)(TribeTransportShipUnitAIModule *, int, int, int);
  int (__thiscall *importantObject)(TribeTransportShipUnitAIModule *, int);
  int (__thiscall *convertToLOSResourceType)(TribeTransportShipUnitAIModule *, int);
  int (__thiscall *canConvert)(TribeTransportShipUnitAIModule *, int, int);
  void (__thiscall *setState)(TribeTransportShipUnitAIModule *, unsigned __int8);
  char *(__thiscall *stateName)(TribeTransportShipUnitAIModule *, int);
  int (__thiscall *canMoveToAttack)(TribeTransportShipUnitAIModule *, int);
  int (__thiscall *findAlertModeObject)(TribeTransportShipUnitAIModule *);
  int (__thiscall *processOrder)(TribeTransportShipUnitAIModule *, OrderEvent *, int);
  int (__thiscall *processNotify)(TribeTransportShipUnitAIModule *, NotifyEvent *, unsigned int);
  int (__thiscall *processIdle)(TribeTransportShipUnitAIModule *, int);
  int (__thiscall *processIdle_search)(TribeTransportShipUnitAIModule *, int, int);
  int (__thiscall *processMisc)(TribeTransportShipUnitAIModule *);
  int (__thiscall *processRetryableOrder)(TribeTransportShipUnitAIModule *);
};
#pragma pack(pop)

/* 485 */
#pragma pack(push, 8)
struct TribePriestUnitAIModule
{
  TribePriestUnitAIModuleVtbl *vfptr;
  RGE_Combat_Object *objectValue;
  int moodValue;
  int objectCategoryValue;
  int orderQueueSizeValue;
  int orderQueueMaxSizeValue;
  OrderEvent *orderQueueValue;
  int notifyQueueSizeValue;
  int notifyQueueMaxSizeValue;
  NotifyEvent *notifyQueueValue;
  int currentOrderValue;
  int currentOrderPriorityValue;
  int currentActionValue;
  int currentTargetValue;
  int currentTargetTypeValue;
  float currentTargetXValue;
  float currentTargetYValue;
  float currentTargetZValue;
  float desiredTargetDistanceValue;
  int defendTargetValue;
  int lastOrderValue;
  int lastActionValue;
  int lastTargetValue;
  int lastTargetTypeValue;
  UnitAIOrderHistory mOrderHistory;
  int mOrderHistorySize;
  unsigned int mLastRetargetTime;
  ManagedArray_int_ attackingUnitsValue;
  Waypoint waypointQueue[8];
  int waypointQueueSizeValue;
  unsigned int lastUpdateTimeValue;
  unsigned int idleTimerValue;
  unsigned int adjustedIdleTimeoutValue;
  unsigned int idleTimeoutValue;
  unsigned int secondaryTimerValue;
  unsigned int lookAroundTimerValue;
  unsigned int lookAroundTimeoutValue;
  Waypoint lastWorldPositionValue;
  float defenseBufferValue;
  int *importantObjects;
  int numberImportantObjects;
  unsigned __int8 stopAfterTargetKilledValue;
  unsigned __int8 stateValue;
  float statePositionXValue;
  float statePositionYValue;
  float timeSinceEnemySighting;
  unsigned __int8 alertModeValue;
  int alertModeObjectIDValue;
  BPath *mPatrolPath;
  int mPatrolCurrentWaypoint;
  unsigned int mRandomizedRetargetTimer;
  int mBestUnitToAttackThisUpdate;
  unsigned __int8 mFormationType;
  unsigned __int8 autoAttackOrderFlag;
  int mNumberRetargetEntries;
  int mMaximumNumberRetargetEntries;
  UnitAIModule__UnitAIRetargetEntry *mRetargetEntries;
};
#pragma pack(pop)

/* 977 */
#pragma pack(push, 8)
struct TribePriestUnitAIModuleVtbl
{
  void *(__thiscall *__vecDelDtor)(TribePriestUnitAIModule *, unsigned int);
  void (__thiscall *save)(TribePriestUnitAIModule *, int);
  void (__thiscall *load)(TribePriestUnitAIModule *, int);
  RGE_Player *(__thiscall *owner)(TribePriestUnitAIModule *);
  int (__thiscall *order)(TribePriestUnitAIModule *, int, int, int, int, float, float, float, float, int, int, int);
  int (__thiscall *notify)(TribePriestUnitAIModule *, int, int, int, int, int, int);
  int (__thiscall *notifyCommander_2)(TribePriestUnitAIModule *, int, int, int, int, int, int);
  int (__thiscall *notifyCommander_1)(TribePriestUnitAIModule *, NotifyEvent *);
  void (__thiscall *search)(TribePriestUnitAIModule *, float, float, bool);
  int (__thiscall *importantWhenDead)(TribePriestUnitAIModule *, int);
  int (__thiscall *retryableOrder)(TribePriestUnitAIModule *, int);
  int (__thiscall *actionRequiresLiveTarget)(TribePriestUnitAIModule *, int);
  int (__thiscall *mostDangerousEnemy)(TribePriestUnitAIModule *, float *);
  int (__thiscall *weakestEnemy)(TribePriestUnitAIModule *, float *);
  int (__thiscall *closestAttacker)(TribePriestUnitAIModule *, float *);
  int (__thiscall *closestObject)(TribePriestUnitAIModule *, int, int, int, int, int, int *);
  int (__thiscall *closestResourceObject)(TribePriestUnitAIModule *, int, int, int, int *);
  int (__thiscall *closestUndiscoveredTile)(TribePriestUnitAIModule *, int *, int *, int);
  void (*logDebug)(TribePriestUnitAIModule *, char *, ...);
  int (__thiscall *canAttackUnit)(TribePriestUnitAIModule *, RGE_Static_Object *);
  int (__thiscall *canAttackUnitAtNeutrality)(TribePriestUnitAIModule *, int);
  int (__thiscall *stopObject)(TribePriestUnitAIModule *, int);
  int (__thiscall *attackObject)(TribePriestUnitAIModule *, int, int);
  int (__thiscall *attackRoundupObject)(TribePriestUnitAIModule *, int);
  int (__thiscall *huntObject)(TribePriestUnitAIModule *, int, int);
  int (__thiscall *gatherObject)(TribePriestUnitAIModule *, int, int);
  int (__thiscall *convertObject)(TribePriestUnitAIModule *, int, int);
  int (__thiscall *healObject)(TribePriestUnitAIModule *, int, int);
  int (__thiscall *repairObject)(TribePriestUnitAIModule *, int, int);
  int (__thiscall *buildObject)(TribePriestUnitAIModule *, int, int);
  int (__thiscall *tradeWithObject)(TribePriestUnitAIModule *, int, int);
  int (__thiscall *explore)(TribePriestUnitAIModule *, int, int, int);
  int (__thiscall *enterObject)(TribePriestUnitAIModule *, int, int);
  int (__thiscall *unload)(TribePriestUnitAIModule *, int, float, float);
  int (__thiscall *transportObject)(TribePriestUnitAIModule *, float, float, float, int);
  int (__thiscall *moveTo_3)(TribePriestUnitAIModule *, float, float, float, float, int, int);
  int (__thiscall *moveTo_2)(TribePriestUnitAIModule *, int, float, int);
  int (__thiscall *moveTo_1)(TribePriestUnitAIModule *, int, int);
  int (__thiscall *evasiveMoveTo)(TribePriestUnitAIModule *, float, float, float, int);
  int (__thiscall *intelligentEvasiveMoveTo)(TribePriestUnitAIModule *, float, float, float, int, int);
  int (__thiscall *runAwayFromAttackers)(TribePriestUnitAIModule *, int, int);
  int (__thiscall *followObject)(TribePriestUnitAIModule *, int, float, int);
  int (__thiscall *defendObject)(TribePriestUnitAIModule *, int, float, int);
  int (__thiscall *defendPosition)(TribePriestUnitAIModule *, float, float, float, int);
  int (__thiscall *seekAndDestroy)(TribePriestUnitAIModule *, int, int, int, int);
  int (__thiscall *exploreAndDestroy)(TribePriestUnitAIModule *, int, int, int);
  int (__thiscall *importantObject)(TribePriestUnitAIModule *, int);
  int (__thiscall *convertToLOSResourceType)(TribePriestUnitAIModule *, int);
  int (__thiscall *canConvert)(TribePriestUnitAIModule *, int, int);
  void (__thiscall *setState)(TribePriestUnitAIModule *, unsigned __int8);
  char *(__thiscall *stateName)(TribePriestUnitAIModule *, int);
  int (__thiscall *canMoveToAttack)(TribePriestUnitAIModule *, int);
  int (__thiscall *findAlertModeObject)(TribePriestUnitAIModule *);
  int (__thiscall *processOrder)(TribePriestUnitAIModule *, OrderEvent *, int);
  int (__thiscall *processNotify)(TribePriestUnitAIModule *, NotifyEvent *, unsigned int);
  int (__thiscall *processIdle)(TribePriestUnitAIModule *, int);
  int (__thiscall *processIdle_search)(TribePriestUnitAIModule *, int, int);
  int (__thiscall *processMisc)(TribePriestUnitAIModule *);
  int (__thiscall *processRetryableOrder)(TribePriestUnitAIModule *);
  int (__thiscall *bestUnitToConvert)(TribePriestUnitAIModule *, float *);
};
#pragma pack(pop)

/* 486 */
#pragma pack(push, 8)
struct TribeMedicUnitAIModule
{
  TribeMedicUnitAIModuleVtbl *vfptr;
  RGE_Combat_Object *objectValue;
  int moodValue;
  int objectCategoryValue;
  int orderQueueSizeValue;
  int orderQueueMaxSizeValue;
  OrderEvent *orderQueueValue;
  int notifyQueueSizeValue;
  int notifyQueueMaxSizeValue;
  NotifyEvent *notifyQueueValue;
  int currentOrderValue;
  int currentOrderPriorityValue;
  int currentActionValue;
  int currentTargetValue;
  int currentTargetTypeValue;
  float currentTargetXValue;
  float currentTargetYValue;
  float currentTargetZValue;
  float desiredTargetDistanceValue;
  int defendTargetValue;
  int lastOrderValue;
  int lastActionValue;
  int lastTargetValue;
  int lastTargetTypeValue;
  UnitAIOrderHistory mOrderHistory;
  int mOrderHistorySize;
  unsigned int mLastRetargetTime;
  ManagedArray_int_ attackingUnitsValue;
  Waypoint waypointQueue[8];
  int waypointQueueSizeValue;
  unsigned int lastUpdateTimeValue;
  unsigned int idleTimerValue;
  unsigned int adjustedIdleTimeoutValue;
  unsigned int idleTimeoutValue;
  unsigned int secondaryTimerValue;
  unsigned int lookAroundTimerValue;
  unsigned int lookAroundTimeoutValue;
  Waypoint lastWorldPositionValue;
  float defenseBufferValue;
  int *importantObjects;
  int numberImportantObjects;
  unsigned __int8 stopAfterTargetKilledValue;
  unsigned __int8 stateValue;
  float statePositionXValue;
  float statePositionYValue;
  float timeSinceEnemySighting;
  unsigned __int8 alertModeValue;
  int alertModeObjectIDValue;
  BPath *mPatrolPath;
  int mPatrolCurrentWaypoint;
  unsigned int mRandomizedRetargetTimer;
  int mBestUnitToAttackThisUpdate;
  unsigned __int8 mFormationType;
  unsigned __int8 autoAttackOrderFlag;
  int mNumberRetargetEntries;
  int mMaximumNumberRetargetEntries;
  UnitAIModule__UnitAIRetargetEntry *mRetargetEntries;
};
#pragma pack(pop)

/* 978 */
#pragma pack(push, 8)
struct TribeMedicUnitAIModuleVtbl
{
  void *(__thiscall *__vecDelDtor)(TribeMedicUnitAIModule *, unsigned int);
  void (__thiscall *save)(TribeMedicUnitAIModule *, int);
  void (__thiscall *load)(TribeMedicUnitAIModule *, int);
  RGE_Player *(__thiscall *owner)(TribeMedicUnitAIModule *);
  int (__thiscall *order)(TribeMedicUnitAIModule *, int, int, int, int, float, float, float, float, int, int, int);
  int (__thiscall *notify)(TribeMedicUnitAIModule *, int, int, int, int, int, int);
  int (__thiscall *notifyCommander_2)(TribeMedicUnitAIModule *, int, int, int, int, int, int);
  int (__thiscall *notifyCommander_1)(TribeMedicUnitAIModule *, NotifyEvent *);
  void (__thiscall *search)(TribeMedicUnitAIModule *, float, float, bool);
  int (__thiscall *importantWhenDead)(TribeMedicUnitAIModule *, int);
  int (__thiscall *retryableOrder)(TribeMedicUnitAIModule *, int);
  int (__thiscall *actionRequiresLiveTarget)(TribeMedicUnitAIModule *, int);
  int (__thiscall *mostDangerousEnemy)(TribeMedicUnitAIModule *, float *);
  int (__thiscall *weakestEnemy)(TribeMedicUnitAIModule *, float *);
  int (__thiscall *closestAttacker)(TribeMedicUnitAIModule *, float *);
  int (__thiscall *closestObject)(TribeMedicUnitAIModule *, int, int, int, int, int, int *);
  int (__thiscall *closestResourceObject)(TribeMedicUnitAIModule *, int, int, int, int *);
  int (__thiscall *closestUndiscoveredTile)(TribeMedicUnitAIModule *, int *, int *, int);
  void (*logDebug)(TribeMedicUnitAIModule *, char *, ...);
  int (__thiscall *canAttackUnit)(TribeMedicUnitAIModule *, RGE_Static_Object *);
  int (__thiscall *canAttackUnitAtNeutrality)(TribeMedicUnitAIModule *, int);
  int (__thiscall *stopObject)(TribeMedicUnitAIModule *, int);
  int (__thiscall *attackObject)(TribeMedicUnitAIModule *, int, int);
  int (__thiscall *attackRoundupObject)(TribeMedicUnitAIModule *, int);
  int (__thiscall *huntObject)(TribeMedicUnitAIModule *, int, int);
  int (__thiscall *gatherObject)(TribeMedicUnitAIModule *, int, int);
  int (__thiscall *convertObject)(TribeMedicUnitAIModule *, int, int);
  int (__thiscall *healObject)(TribeMedicUnitAIModule *, int, int);
  int (__thiscall *repairObject)(TribeMedicUnitAIModule *, int, int);
  int (__thiscall *buildObject)(TribeMedicUnitAIModule *, int, int);
  int (__thiscall *tradeWithObject)(TribeMedicUnitAIModule *, int, int);
  int (__thiscall *explore)(TribeMedicUnitAIModule *, int, int, int);
  int (__thiscall *enterObject)(TribeMedicUnitAIModule *, int, int);
  int (__thiscall *unload)(TribeMedicUnitAIModule *, int, float, float);
  int (__thiscall *transportObject)(TribeMedicUnitAIModule *, float, float, float, int);
  int (__thiscall *moveTo_3)(TribeMedicUnitAIModule *, float, float, float, float, int, int);
  int (__thiscall *moveTo_2)(TribeMedicUnitAIModule *, int, float, int);
  int (__thiscall *moveTo_1)(TribeMedicUnitAIModule *, int, int);
  int (__thiscall *evasiveMoveTo)(TribeMedicUnitAIModule *, float, float, float, int);
  int (__thiscall *intelligentEvasiveMoveTo)(TribeMedicUnitAIModule *, float, float, float, int, int);
  int (__thiscall *runAwayFromAttackers)(TribeMedicUnitAIModule *, int, int);
  int (__thiscall *followObject)(TribeMedicUnitAIModule *, int, float, int);
  int (__thiscall *defendObject)(TribeMedicUnitAIModule *, int, float, int);
  int (__thiscall *defendPosition)(TribeMedicUnitAIModule *, float, float, float, int);
  int (__thiscall *seekAndDestroy)(TribeMedicUnitAIModule *, int, int, int, int);
  int (__thiscall *exploreAndDestroy)(TribeMedicUnitAIModule *, int, int, int);
  int (__thiscall *importantObject)(TribeMedicUnitAIModule *, int);
  int (__thiscall *convertToLOSResourceType)(TribeMedicUnitAIModule *, int);
  int (__thiscall *canConvert)(TribeMedicUnitAIModule *, int, int);
  void (__thiscall *setState)(TribeMedicUnitAIModule *, unsigned __int8);
  char *(__thiscall *stateName)(TribeMedicUnitAIModule *, int);
  int (__thiscall *canMoveToAttack)(TribeMedicUnitAIModule *, int);
  int (__thiscall *findAlertModeObject)(TribeMedicUnitAIModule *);
  int (__thiscall *processOrder)(TribeMedicUnitAIModule *, OrderEvent *, int);
  int (__thiscall *processNotify)(TribeMedicUnitAIModule *, NotifyEvent *, unsigned int);
  int (__thiscall *processIdle)(TribeMedicUnitAIModule *, int);
  int (__thiscall *processIdle_search)(TribeMedicUnitAIModule *, int, int);
  int (__thiscall *processMisc)(TribeMedicUnitAIModule *);
  int (__thiscall *processRetryableOrder)(TribeMedicUnitAIModule *);
  int (__thiscall *bestUnitToHeal)(TribeMedicUnitAIModule *, int, float *);
};
#pragma pack(pop)

/* 487 */
#pragma pack(push, 8)
struct TribeCivilianUnitAIModule
{
  TribeCivilianUnitAIModuleVtbl *vfptr;
  RGE_Combat_Object *objectValue;
  int moodValue;
  int objectCategoryValue;
  int orderQueueSizeValue;
  int orderQueueMaxSizeValue;
  OrderEvent *orderQueueValue;
  int notifyQueueSizeValue;
  int notifyQueueMaxSizeValue;
  NotifyEvent *notifyQueueValue;
  int currentOrderValue;
  int currentOrderPriorityValue;
  int currentActionValue;
  int currentTargetValue;
  int currentTargetTypeValue;
  float currentTargetXValue;
  float currentTargetYValue;
  float currentTargetZValue;
  float desiredTargetDistanceValue;
  int defendTargetValue;
  int lastOrderValue;
  int lastActionValue;
  int lastTargetValue;
  int lastTargetTypeValue;
  UnitAIOrderHistory mOrderHistory;
  int mOrderHistorySize;
  unsigned int mLastRetargetTime;
  ManagedArray_int_ attackingUnitsValue;
  Waypoint waypointQueue[8];
  int waypointQueueSizeValue;
  unsigned int lastUpdateTimeValue;
  unsigned int idleTimerValue;
  unsigned int adjustedIdleTimeoutValue;
  unsigned int idleTimeoutValue;
  unsigned int secondaryTimerValue;
  unsigned int lookAroundTimerValue;
  unsigned int lookAroundTimeoutValue;
  Waypoint lastWorldPositionValue;
  float defenseBufferValue;
  int *importantObjects;
  int numberImportantObjects;
  unsigned __int8 stopAfterTargetKilledValue;
  unsigned __int8 stateValue;
  float statePositionXValue;
  float statePositionYValue;
  float timeSinceEnemySighting;
  unsigned __int8 alertModeValue;
  int alertModeObjectIDValue;
  BPath *mPatrolPath;
  int mPatrolCurrentWaypoint;
  unsigned int mRandomizedRetargetTimer;
  int mBestUnitToAttackThisUpdate;
  unsigned __int8 mFormationType;
  unsigned __int8 autoAttackOrderFlag;
  int mNumberRetargetEntries;
  int mMaximumNumberRetargetEntries;
  UnitAIModule__UnitAIRetargetEntry *mRetargetEntries;
};
#pragma pack(pop)

/* 976 */
#pragma pack(push, 8)
struct TribeCivilianUnitAIModuleVtbl
{
  void *(__thiscall *__vecDelDtor)(TribeCivilianUnitAIModule *, unsigned int);
  void (__thiscall *save)(TribeCivilianUnitAIModule *, int);
  void (__thiscall *load)(TribeCivilianUnitAIModule *, int);
  RGE_Player *(__thiscall *owner)(TribeCivilianUnitAIModule *);
  int (__thiscall *order)(TribeCivilianUnitAIModule *, int, int, int, int, float, float, float, float, int, int, int);
  int (__thiscall *notify)(TribeCivilianUnitAIModule *, int, int, int, int, int, int);
  int (__thiscall *notifyCommander_2)(TribeCivilianUnitAIModule *, int, int, int, int, int, int);
  int (__thiscall *notifyCommander_1)(TribeCivilianUnitAIModule *, NotifyEvent *);
  void (__thiscall *search)(TribeCivilianUnitAIModule *, float, float, bool);
  int (__thiscall *importantWhenDead)(TribeCivilianUnitAIModule *, int);
  int (__thiscall *retryableOrder)(TribeCivilianUnitAIModule *, int);
  int (__thiscall *actionRequiresLiveTarget)(TribeCivilianUnitAIModule *, int);
  int (__thiscall *mostDangerousEnemy)(TribeCivilianUnitAIModule *, float *);
  int (__thiscall *weakestEnemy)(TribeCivilianUnitAIModule *, float *);
  int (__thiscall *closestAttacker)(TribeCivilianUnitAIModule *, float *);
  int (__thiscall *closestObject)(TribeCivilianUnitAIModule *, int, int, int, int, int, int *);
  int (__thiscall *closestResourceObject)(TribeCivilianUnitAIModule *, int, int, int, int *);
  int (__thiscall *closestUndiscoveredTile)(TribeCivilianUnitAIModule *, int *, int *, int);
  void (*logDebug)(TribeCivilianUnitAIModule *, char *, ...);
  int (__thiscall *canAttackUnit)(TribeCivilianUnitAIModule *, RGE_Static_Object *);
  int (__thiscall *canAttackUnitAtNeutrality)(TribeCivilianUnitAIModule *, int);
  int (__thiscall *stopObject)(TribeCivilianUnitAIModule *, int);
  int (__thiscall *attackObject)(TribeCivilianUnitAIModule *, int, int);
  int (__thiscall *attackRoundupObject)(TribeCivilianUnitAIModule *, int);
  int (__thiscall *huntObject)(TribeCivilianUnitAIModule *, int, int);
  int (__thiscall *gatherObject)(TribeCivilianUnitAIModule *, int, int);
  int (__thiscall *convertObject)(TribeCivilianUnitAIModule *, int, int);
  int (__thiscall *healObject)(TribeCivilianUnitAIModule *, int, int);
  int (__thiscall *repairObject)(TribeCivilianUnitAIModule *, int, int);
  int (__thiscall *buildObject)(TribeCivilianUnitAIModule *, int, int);
  int (__thiscall *tradeWithObject)(TribeCivilianUnitAIModule *, int, int);
  int (__thiscall *explore)(TribeCivilianUnitAIModule *, int, int, int);
  int (__thiscall *enterObject)(TribeCivilianUnitAIModule *, int, int);
  int (__thiscall *unload)(TribeCivilianUnitAIModule *, int, float, float);
  int (__thiscall *transportObject)(TribeCivilianUnitAIModule *, float, float, float, int);
  int (__thiscall *moveTo_3)(TribeCivilianUnitAIModule *, float, float, float, float, int, int);
  int (__thiscall *moveTo_2)(TribeCivilianUnitAIModule *, int, float, int);
  int (__thiscall *moveTo_1)(TribeCivilianUnitAIModule *, int, int);
  int (__thiscall *evasiveMoveTo)(TribeCivilianUnitAIModule *, float, float, float, int);
  int (__thiscall *intelligentEvasiveMoveTo)(TribeCivilianUnitAIModule *, float, float, float, int, int);
  int (__thiscall *runAwayFromAttackers)(TribeCivilianUnitAIModule *, int, int);
  int (__thiscall *followObject)(TribeCivilianUnitAIModule *, int, float, int);
  int (__thiscall *defendObject)(TribeCivilianUnitAIModule *, int, float, int);
  int (__thiscall *defendPosition)(TribeCivilianUnitAIModule *, float, float, float, int);
  int (__thiscall *seekAndDestroy)(TribeCivilianUnitAIModule *, int, int, int, int);
  int (__thiscall *exploreAndDestroy)(TribeCivilianUnitAIModule *, int, int, int);
  int (__thiscall *importantObject)(TribeCivilianUnitAIModule *, int);
  int (__thiscall *convertToLOSResourceType)(TribeCivilianUnitAIModule *, int);
  int (__thiscall *canConvert)(TribeCivilianUnitAIModule *, int, int);
  void (__thiscall *setState)(TribeCivilianUnitAIModule *, unsigned __int8);
  char *(__thiscall *stateName)(TribeCivilianUnitAIModule *, int);
  int (__thiscall *canMoveToAttack)(TribeCivilianUnitAIModule *, int);
  int (__thiscall *findAlertModeObject)(TribeCivilianUnitAIModule *);
  int (__thiscall *processOrder)(TribeCivilianUnitAIModule *, OrderEvent *, int);
  int (__thiscall *processNotify)(TribeCivilianUnitAIModule *, NotifyEvent *, unsigned int);
  int (__thiscall *processIdle)(TribeCivilianUnitAIModule *, int);
  int (__thiscall *processIdle_search)(TribeCivilianUnitAIModule *, int, int);
  int (__thiscall *processMisc)(TribeCivilianUnitAIModule *);
  int (__thiscall *processRetryableOrder)(TribeCivilianUnitAIModule *);
  int (__thiscall *shepherdObject)(TribeCivilianUnitAIModule *, int, int);
};
#pragma pack(pop)

/* 488 */
#pragma pack(push, 8)
struct TribeArtifactUnitAIModule
{
  TribeArtifactUnitAIModuleVtbl *vfptr;
  RGE_Combat_Object *objectValue;
  int moodValue;
  int objectCategoryValue;
  int orderQueueSizeValue;
  int orderQueueMaxSizeValue;
  OrderEvent *orderQueueValue;
  int notifyQueueSizeValue;
  int notifyQueueMaxSizeValue;
  NotifyEvent *notifyQueueValue;
  int currentOrderValue;
  int currentOrderPriorityValue;
  int currentActionValue;
  int currentTargetValue;
  int currentTargetTypeValue;
  float currentTargetXValue;
  float currentTargetYValue;
  float currentTargetZValue;
  float desiredTargetDistanceValue;
  int defendTargetValue;
  int lastOrderValue;
  int lastActionValue;
  int lastTargetValue;
  int lastTargetTypeValue;
  UnitAIOrderHistory mOrderHistory;
  int mOrderHistorySize;
  unsigned int mLastRetargetTime;
  ManagedArray_int_ attackingUnitsValue;
  Waypoint waypointQueue[8];
  int waypointQueueSizeValue;
  unsigned int lastUpdateTimeValue;
  unsigned int idleTimerValue;
  unsigned int adjustedIdleTimeoutValue;
  unsigned int idleTimeoutValue;
  unsigned int secondaryTimerValue;
  unsigned int lookAroundTimerValue;
  unsigned int lookAroundTimeoutValue;
  Waypoint lastWorldPositionValue;
  float defenseBufferValue;
  int *importantObjects;
  int numberImportantObjects;
  unsigned __int8 stopAfterTargetKilledValue;
  unsigned __int8 stateValue;
  float statePositionXValue;
  float statePositionYValue;
  float timeSinceEnemySighting;
  unsigned __int8 alertModeValue;
  int alertModeObjectIDValue;
  BPath *mPatrolPath;
  int mPatrolCurrentWaypoint;
  unsigned int mRandomizedRetargetTimer;
  int mBestUnitToAttackThisUpdate;
  unsigned __int8 mFormationType;
  unsigned __int8 autoAttackOrderFlag;
  int mNumberRetargetEntries;
  int mMaximumNumberRetargetEntries;
  UnitAIModule__UnitAIRetargetEntry *mRetargetEntries;
};
#pragma pack(pop)

/* 975 */
#pragma pack(push, 8)
struct TribeArtifactUnitAIModuleVtbl
{
  void *(__thiscall *__vecDelDtor)(TribeArtifactUnitAIModule *, unsigned int);
  void (__thiscall *save)(TribeArtifactUnitAIModule *, int);
  void (__thiscall *load)(TribeArtifactUnitAIModule *, int);
  RGE_Player *(__thiscall *owner)(TribeArtifactUnitAIModule *);
  int (__thiscall *order)(TribeArtifactUnitAIModule *, int, int, int, int, float, float, float, float, int, int, int);
  int (__thiscall *notify)(TribeArtifactUnitAIModule *, int, int, int, int, int, int);
  int (__thiscall *notifyCommander_2)(TribeArtifactUnitAIModule *, int, int, int, int, int, int);
  int (__thiscall *notifyCommander_1)(TribeArtifactUnitAIModule *, NotifyEvent *);
  void (__thiscall *search)(TribeArtifactUnitAIModule *, float, float, bool);
  int (__thiscall *importantWhenDead)(TribeArtifactUnitAIModule *, int);
  int (__thiscall *retryableOrder)(TribeArtifactUnitAIModule *, int);
  int (__thiscall *actionRequiresLiveTarget)(TribeArtifactUnitAIModule *, int);
  int (__thiscall *mostDangerousEnemy)(TribeArtifactUnitAIModule *, float *);
  int (__thiscall *weakestEnemy)(TribeArtifactUnitAIModule *, float *);
  int (__thiscall *closestAttacker)(TribeArtifactUnitAIModule *, float *);
  int (__thiscall *closestObject)(TribeArtifactUnitAIModule *, int, int, int, int, int, int *);
  int (__thiscall *closestResourceObject)(TribeArtifactUnitAIModule *, int, int, int, int *);
  int (__thiscall *closestUndiscoveredTile)(TribeArtifactUnitAIModule *, int *, int *, int);
  void (*logDebug)(TribeArtifactUnitAIModule *, char *, ...);
  int (__thiscall *canAttackUnit)(TribeArtifactUnitAIModule *, RGE_Static_Object *);
  int (__thiscall *canAttackUnitAtNeutrality)(TribeArtifactUnitAIModule *, int);
  int (__thiscall *stopObject)(TribeArtifactUnitAIModule *, int);
  int (__thiscall *attackObject)(TribeArtifactUnitAIModule *, int, int);
  int (__thiscall *attackRoundupObject)(TribeArtifactUnitAIModule *, int);
  int (__thiscall *huntObject)(TribeArtifactUnitAIModule *, int, int);
  int (__thiscall *gatherObject)(TribeArtifactUnitAIModule *, int, int);
  int (__thiscall *convertObject)(TribeArtifactUnitAIModule *, int, int);
  int (__thiscall *healObject)(TribeArtifactUnitAIModule *, int, int);
  int (__thiscall *repairObject)(TribeArtifactUnitAIModule *, int, int);
  int (__thiscall *buildObject)(TribeArtifactUnitAIModule *, int, int);
  int (__thiscall *tradeWithObject)(TribeArtifactUnitAIModule *, int, int);
  int (__thiscall *explore)(TribeArtifactUnitAIModule *, int, int, int);
  int (__thiscall *enterObject)(TribeArtifactUnitAIModule *, int, int);
  int (__thiscall *unload)(TribeArtifactUnitAIModule *, int, float, float);
  int (__thiscall *transportObject)(TribeArtifactUnitAIModule *, float, float, float, int);
  int (__thiscall *moveTo_3)(TribeArtifactUnitAIModule *, float, float, float, float, int, int);
  int (__thiscall *moveTo_2)(TribeArtifactUnitAIModule *, int, float, int);
  int (__thiscall *moveTo_1)(TribeArtifactUnitAIModule *, int, int);
  int (__thiscall *evasiveMoveTo)(TribeArtifactUnitAIModule *, float, float, float, int);
  int (__thiscall *intelligentEvasiveMoveTo)(TribeArtifactUnitAIModule *, float, float, float, int, int);
  int (__thiscall *runAwayFromAttackers)(TribeArtifactUnitAIModule *, int, int);
  int (__thiscall *followObject)(TribeArtifactUnitAIModule *, int, float, int);
  int (__thiscall *defendObject)(TribeArtifactUnitAIModule *, int, float, int);
  int (__thiscall *defendPosition)(TribeArtifactUnitAIModule *, float, float, float, int);
  int (__thiscall *seekAndDestroy)(TribeArtifactUnitAIModule *, int, int, int, int);
  int (__thiscall *exploreAndDestroy)(TribeArtifactUnitAIModule *, int, int, int);
  int (__thiscall *importantObject)(TribeArtifactUnitAIModule *, int);
  int (__thiscall *convertToLOSResourceType)(TribeArtifactUnitAIModule *, int);
  int (__thiscall *canConvert)(TribeArtifactUnitAIModule *, int, int);
  void (__thiscall *setState)(TribeArtifactUnitAIModule *, unsigned __int8);
  char *(__thiscall *stateName)(TribeArtifactUnitAIModule *, int);
  int (__thiscall *canMoveToAttack)(TribeArtifactUnitAIModule *, int);
  int (__thiscall *findAlertModeObject)(TribeArtifactUnitAIModule *);
  int (__thiscall *processOrder)(TribeArtifactUnitAIModule *, OrderEvent *, int);
  int (__thiscall *processNotify)(TribeArtifactUnitAIModule *, NotifyEvent *, unsigned int);
  int (__thiscall *processIdle)(TribeArtifactUnitAIModule *, int);
  int (__thiscall *processIdle_search)(TribeArtifactUnitAIModule *, int, int);
  int (__thiscall *processMisc)(TribeArtifactUnitAIModule *);
  int (__thiscall *processRetryableOrder)(TribeArtifactUnitAIModule *);
};
#pragma pack(pop)

/* 489 */
#pragma pack(push, 8)
struct TribeSiegeUnitAIModule
{
  TribeSiegeUnitAIModuleVtbl *vfptr;
  RGE_Combat_Object *objectValue;
  int moodValue;
  int objectCategoryValue;
  int orderQueueSizeValue;
  int orderQueueMaxSizeValue;
  OrderEvent *orderQueueValue;
  int notifyQueueSizeValue;
  int notifyQueueMaxSizeValue;
  NotifyEvent *notifyQueueValue;
  int currentOrderValue;
  int currentOrderPriorityValue;
  int currentActionValue;
  int currentTargetValue;
  int currentTargetTypeValue;
  float currentTargetXValue;
  float currentTargetYValue;
  float currentTargetZValue;
  float desiredTargetDistanceValue;
  int defendTargetValue;
  int lastOrderValue;
  int lastActionValue;
  int lastTargetValue;
  int lastTargetTypeValue;
  UnitAIOrderHistory mOrderHistory;
  int mOrderHistorySize;
  unsigned int mLastRetargetTime;
  ManagedArray_int_ attackingUnitsValue;
  Waypoint waypointQueue[8];
  int waypointQueueSizeValue;
  unsigned int lastUpdateTimeValue;
  unsigned int idleTimerValue;
  unsigned int adjustedIdleTimeoutValue;
  unsigned int idleTimeoutValue;
  unsigned int secondaryTimerValue;
  unsigned int lookAroundTimerValue;
  unsigned int lookAroundTimeoutValue;
  Waypoint lastWorldPositionValue;
  float defenseBufferValue;
  int *importantObjects;
  int numberImportantObjects;
  unsigned __int8 stopAfterTargetKilledValue;
  unsigned __int8 stateValue;
  float statePositionXValue;
  float statePositionYValue;
  float timeSinceEnemySighting;
  unsigned __int8 alertModeValue;
  int alertModeObjectIDValue;
  BPath *mPatrolPath;
  int mPatrolCurrentWaypoint;
  unsigned int mRandomizedRetargetTimer;
  int mBestUnitToAttackThisUpdate;
  unsigned __int8 mFormationType;
  unsigned __int8 autoAttackOrderFlag;
  int mNumberRetargetEntries;
  int mMaximumNumberRetargetEntries;
  UnitAIModule__UnitAIRetargetEntry *mRetargetEntries;
};
#pragma pack(pop)

/* 982 */
#pragma pack(push, 8)
struct TribeSiegeUnitAIModuleVtbl
{
  void *(__thiscall *__vecDelDtor)(TribeSiegeUnitAIModule *, unsigned int);
  void (__thiscall *save)(TribeSiegeUnitAIModule *, int);
  void (__thiscall *load)(TribeSiegeUnitAIModule *, int);
  RGE_Player *(__thiscall *owner)(TribeSiegeUnitAIModule *);
  int (__thiscall *order)(TribeSiegeUnitAIModule *, int, int, int, int, float, float, float, float, int, int, int);
  int (__thiscall *notify)(TribeSiegeUnitAIModule *, int, int, int, int, int, int);
  int (__thiscall *notifyCommander_2)(TribeSiegeUnitAIModule *, int, int, int, int, int, int);
  int (__thiscall *notifyCommander_1)(TribeSiegeUnitAIModule *, NotifyEvent *);
  void (__thiscall *search)(TribeSiegeUnitAIModule *, float, float, bool);
  int (__thiscall *importantWhenDead)(TribeSiegeUnitAIModule *, int);
  int (__thiscall *retryableOrder)(TribeSiegeUnitAIModule *, int);
  int (__thiscall *actionRequiresLiveTarget)(TribeSiegeUnitAIModule *, int);
  int (__thiscall *mostDangerousEnemy)(TribeSiegeUnitAIModule *, float *);
  int (__thiscall *weakestEnemy)(TribeSiegeUnitAIModule *, float *);
  int (__thiscall *closestAttacker)(TribeSiegeUnitAIModule *, float *);
  int (__thiscall *closestObject)(TribeSiegeUnitAIModule *, int, int, int, int, int, int *);
  int (__thiscall *closestResourceObject)(TribeSiegeUnitAIModule *, int, int, int, int *);
  int (__thiscall *closestUndiscoveredTile)(TribeSiegeUnitAIModule *, int *, int *, int);
  void (*logDebug)(TribeSiegeUnitAIModule *, char *, ...);
  int (__thiscall *canAttackUnit)(TribeSiegeUnitAIModule *, RGE_Static_Object *);
  int (__thiscall *canAttackUnitAtNeutrality)(TribeSiegeUnitAIModule *, int);
  int (__thiscall *stopObject)(TribeSiegeUnitAIModule *, int);
  int (__thiscall *attackObject)(TribeSiegeUnitAIModule *, int, int);
  int (__thiscall *attackRoundupObject)(TribeSiegeUnitAIModule *, int);
  int (__thiscall *huntObject)(TribeSiegeUnitAIModule *, int, int);
  int (__thiscall *gatherObject)(TribeSiegeUnitAIModule *, int, int);
  int (__thiscall *convertObject)(TribeSiegeUnitAIModule *, int, int);
  int (__thiscall *healObject)(TribeSiegeUnitAIModule *, int, int);
  int (__thiscall *repairObject)(TribeSiegeUnitAIModule *, int, int);
  int (__thiscall *buildObject)(TribeSiegeUnitAIModule *, int, int);
  int (__thiscall *tradeWithObject)(TribeSiegeUnitAIModule *, int, int);
  int (__thiscall *explore)(TribeSiegeUnitAIModule *, int, int, int);
  int (__thiscall *enterObject)(TribeSiegeUnitAIModule *, int, int);
  int (__thiscall *unload)(TribeSiegeUnitAIModule *, int, float, float);
  int (__thiscall *transportObject)(TribeSiegeUnitAIModule *, float, float, float, int);
  int (__thiscall *moveTo_3)(TribeSiegeUnitAIModule *, float, float, float, float, int, int);
  int (__thiscall *moveTo_2)(TribeSiegeUnitAIModule *, int, float, int);
  int (__thiscall *moveTo_1)(TribeSiegeUnitAIModule *, int, int);
  int (__thiscall *evasiveMoveTo)(TribeSiegeUnitAIModule *, float, float, float, int);
  int (__thiscall *intelligentEvasiveMoveTo)(TribeSiegeUnitAIModule *, float, float, float, int, int);
  int (__thiscall *runAwayFromAttackers)(TribeSiegeUnitAIModule *, int, int);
  int (__thiscall *followObject)(TribeSiegeUnitAIModule *, int, float, int);
  int (__thiscall *defendObject)(TribeSiegeUnitAIModule *, int, float, int);
  int (__thiscall *defendPosition)(TribeSiegeUnitAIModule *, float, float, float, int);
  int (__thiscall *seekAndDestroy)(TribeSiegeUnitAIModule *, int, int, int, int);
  int (__thiscall *exploreAndDestroy)(TribeSiegeUnitAIModule *, int, int, int);
  int (__thiscall *importantObject)(TribeSiegeUnitAIModule *, int);
  int (__thiscall *convertToLOSResourceType)(TribeSiegeUnitAIModule *, int);
  int (__thiscall *canConvert)(TribeSiegeUnitAIModule *, int, int);
  void (__thiscall *setState)(TribeSiegeUnitAIModule *, unsigned __int8);
  char *(__thiscall *stateName)(TribeSiegeUnitAIModule *, int);
  int (__thiscall *canMoveToAttack)(TribeSiegeUnitAIModule *, int);
  int (__thiscall *findAlertModeObject)(TribeSiegeUnitAIModule *);
  int (__thiscall *processOrder)(TribeSiegeUnitAIModule *, OrderEvent *, int);
  int (__thiscall *processNotify)(TribeSiegeUnitAIModule *, NotifyEvent *, unsigned int);
  int (__thiscall *processIdle)(TribeSiegeUnitAIModule *, int);
  int (__thiscall *processIdle_search)(TribeSiegeUnitAIModule *, int, int);
  int (__thiscall *processMisc)(TribeSiegeUnitAIModule *);
  int (__thiscall *processRetryableOrder)(TribeSiegeUnitAIModule *);
};
#pragma pack(pop)

/* 490 */
#pragma pack(push, 8)
struct TribeLionUnitAIModule
{
  TribeLionUnitAIModuleVtbl *vfptr;
  RGE_Combat_Object *objectValue;
  int moodValue;
  int objectCategoryValue;
  int orderQueueSizeValue;
  int orderQueueMaxSizeValue;
  OrderEvent *orderQueueValue;
  int notifyQueueSizeValue;
  int notifyQueueMaxSizeValue;
  NotifyEvent *notifyQueueValue;
  int currentOrderValue;
  int currentOrderPriorityValue;
  int currentActionValue;
  int currentTargetValue;
  int currentTargetTypeValue;
  float currentTargetXValue;
  float currentTargetYValue;
  float currentTargetZValue;
  float desiredTargetDistanceValue;
  int defendTargetValue;
  int lastOrderValue;
  int lastActionValue;
  int lastTargetValue;
  int lastTargetTypeValue;
  UnitAIOrderHistory mOrderHistory;
  int mOrderHistorySize;
  unsigned int mLastRetargetTime;
  ManagedArray_int_ attackingUnitsValue;
  Waypoint waypointQueue[8];
  int waypointQueueSizeValue;
  unsigned int lastUpdateTimeValue;
  unsigned int idleTimerValue;
  unsigned int adjustedIdleTimeoutValue;
  unsigned int idleTimeoutValue;
  unsigned int secondaryTimerValue;
  unsigned int lookAroundTimerValue;
  unsigned int lookAroundTimeoutValue;
  Waypoint lastWorldPositionValue;
  float defenseBufferValue;
  int *importantObjects;
  int numberImportantObjects;
  unsigned __int8 stopAfterTargetKilledValue;
  unsigned __int8 stateValue;
  float statePositionXValue;
  float statePositionYValue;
  float timeSinceEnemySighting;
  unsigned __int8 alertModeValue;
  int alertModeObjectIDValue;
  BPath *mPatrolPath;
  int mPatrolCurrentWaypoint;
  unsigned int mRandomizedRetargetTimer;
  int mBestUnitToAttackThisUpdate;
  unsigned __int8 mFormationType;
  unsigned __int8 autoAttackOrderFlag;
  int mNumberRetargetEntries;
  int mMaximumNumberRetargetEntries;
  UnitAIModule__UnitAIRetargetEntry *mRetargetEntries;
  unsigned int last_animal_hunt;
};
#pragma pack(pop)

/* 981 */
#pragma pack(push, 8)
struct TribeLionUnitAIModuleVtbl
{
  void *(__thiscall *__vecDelDtor)(TribeLionUnitAIModule *, unsigned int);
  void (__thiscall *save)(TribeLionUnitAIModule *, int);
  void (__thiscall *load)(TribeLionUnitAIModule *, int);
  RGE_Player *(__thiscall *owner)(TribeLionUnitAIModule *);
  int (__thiscall *order)(TribeLionUnitAIModule *, int, int, int, int, float, float, float, float, int, int, int);
  int (__thiscall *notify)(TribeLionUnitAIModule *, int, int, int, int, int, int);
  int (__thiscall *notifyCommander_2)(TribeLionUnitAIModule *, int, int, int, int, int, int);
  int (__thiscall *notifyCommander_1)(TribeLionUnitAIModule *, NotifyEvent *);
  void (__thiscall *search)(TribeLionUnitAIModule *, float, float, bool);
  int (__thiscall *importantWhenDead)(TribeLionUnitAIModule *, int);
  int (__thiscall *retryableOrder)(TribeLionUnitAIModule *, int);
  int (__thiscall *actionRequiresLiveTarget)(TribeLionUnitAIModule *, int);
  int (__thiscall *mostDangerousEnemy)(TribeLionUnitAIModule *, float *);
  int (__thiscall *weakestEnemy)(TribeLionUnitAIModule *, float *);
  int (__thiscall *closestAttacker)(TribeLionUnitAIModule *, float *);
  int (__thiscall *closestObject)(TribeLionUnitAIModule *, int, int, int, int, int, int *);
  int (__thiscall *closestResourceObject)(TribeLionUnitAIModule *, int, int, int, int *);
  int (__thiscall *closestUndiscoveredTile)(TribeLionUnitAIModule *, int *, int *, int);
  void (*logDebug)(TribeLionUnitAIModule *, char *, ...);
  int (__thiscall *canAttackUnit)(TribeLionUnitAIModule *, RGE_Static_Object *);
  int (__thiscall *canAttackUnitAtNeutrality)(TribeLionUnitAIModule *, int);
  int (__thiscall *stopObject)(TribeLionUnitAIModule *, int);
  int (__thiscall *attackObject)(TribeLionUnitAIModule *, int, int);
  int (__thiscall *attackRoundupObject)(TribeLionUnitAIModule *, int);
  int (__thiscall *huntObject)(TribeLionUnitAIModule *, int, int);
  int (__thiscall *gatherObject)(TribeLionUnitAIModule *, int, int);
  int (__thiscall *convertObject)(TribeLionUnitAIModule *, int, int);
  int (__thiscall *healObject)(TribeLionUnitAIModule *, int, int);
  int (__thiscall *repairObject)(TribeLionUnitAIModule *, int, int);
  int (__thiscall *buildObject)(TribeLionUnitAIModule *, int, int);
  int (__thiscall *tradeWithObject)(TribeLionUnitAIModule *, int, int);
  int (__thiscall *explore)(TribeLionUnitAIModule *, int, int, int);
  int (__thiscall *enterObject)(TribeLionUnitAIModule *, int, int);
  int (__thiscall *unload)(TribeLionUnitAIModule *, int, float, float);
  int (__thiscall *transportObject)(TribeLionUnitAIModule *, float, float, float, int);
  int (__thiscall *moveTo_3)(TribeLionUnitAIModule *, float, float, float, float, int, int);
  int (__thiscall *moveTo_2)(TribeLionUnitAIModule *, int, float, int);
  int (__thiscall *moveTo_1)(TribeLionUnitAIModule *, int, int);
  int (__thiscall *evasiveMoveTo)(TribeLionUnitAIModule *, float, float, float, int);
  int (__thiscall *intelligentEvasiveMoveTo)(TribeLionUnitAIModule *, float, float, float, int, int);
  int (__thiscall *runAwayFromAttackers)(TribeLionUnitAIModule *, int, int);
  int (__thiscall *followObject)(TribeLionUnitAIModule *, int, float, int);
  int (__thiscall *defendObject)(TribeLionUnitAIModule *, int, float, int);
  int (__thiscall *defendPosition)(TribeLionUnitAIModule *, float, float, float, int);
  int (__thiscall *seekAndDestroy)(TribeLionUnitAIModule *, int, int, int, int);
  int (__thiscall *exploreAndDestroy)(TribeLionUnitAIModule *, int, int, int);
  int (__thiscall *importantObject)(TribeLionUnitAIModule *, int);
  int (__thiscall *convertToLOSResourceType)(TribeLionUnitAIModule *, int);
  int (__thiscall *canConvert)(TribeLionUnitAIModule *, int, int);
  void (__thiscall *setState)(TribeLionUnitAIModule *, unsigned __int8);
  char *(__thiscall *stateName)(TribeLionUnitAIModule *, int);
  int (__thiscall *canMoveToAttack)(TribeLionUnitAIModule *, int);
  int (__thiscall *findAlertModeObject)(TribeLionUnitAIModule *);
  int (__thiscall *processOrder)(TribeLionUnitAIModule *, OrderEvent *, int);
  int (__thiscall *processNotify)(TribeLionUnitAIModule *, NotifyEvent *, unsigned int);
  int (__thiscall *processIdle)(TribeLionUnitAIModule *, int);
  int (__thiscall *processIdle_search)(TribeLionUnitAIModule *, int, int);
  int (__thiscall *processMisc)(TribeLionUnitAIModule *);
  int (__thiscall *processRetryableOrder)(TribeLionUnitAIModule *);
};
#pragma pack(pop)

/* 491 */
#pragma pack(push, 8)
struct TribeElephantUnitAIModule
{
  TribeElephantUnitAIModuleVtbl *vfptr;
  RGE_Combat_Object *objectValue;
  int moodValue;
  int objectCategoryValue;
  int orderQueueSizeValue;
  int orderQueueMaxSizeValue;
  OrderEvent *orderQueueValue;
  int notifyQueueSizeValue;
  int notifyQueueMaxSizeValue;
  NotifyEvent *notifyQueueValue;
  int currentOrderValue;
  int currentOrderPriorityValue;
  int currentActionValue;
  int currentTargetValue;
  int currentTargetTypeValue;
  float currentTargetXValue;
  float currentTargetYValue;
  float currentTargetZValue;
  float desiredTargetDistanceValue;
  int defendTargetValue;
  int lastOrderValue;
  int lastActionValue;
  int lastTargetValue;
  int lastTargetTypeValue;
  UnitAIOrderHistory mOrderHistory;
  int mOrderHistorySize;
  unsigned int mLastRetargetTime;
  ManagedArray_int_ attackingUnitsValue;
  Waypoint waypointQueue[8];
  int waypointQueueSizeValue;
  unsigned int lastUpdateTimeValue;
  unsigned int idleTimerValue;
  unsigned int adjustedIdleTimeoutValue;
  unsigned int idleTimeoutValue;
  unsigned int secondaryTimerValue;
  unsigned int lookAroundTimerValue;
  unsigned int lookAroundTimeoutValue;
  Waypoint lastWorldPositionValue;
  float defenseBufferValue;
  int *importantObjects;
  int numberImportantObjects;
  unsigned __int8 stopAfterTargetKilledValue;
  unsigned __int8 stateValue;
  float statePositionXValue;
  float statePositionYValue;
  float timeSinceEnemySighting;
  unsigned __int8 alertModeValue;
  int alertModeObjectIDValue;
  BPath *mPatrolPath;
  int mPatrolCurrentWaypoint;
  unsigned int mRandomizedRetargetTimer;
  int mBestUnitToAttackThisUpdate;
  unsigned __int8 mFormationType;
  unsigned __int8 autoAttackOrderFlag;
  int mNumberRetargetEntries;
  int mMaximumNumberRetargetEntries;
  UnitAIModule__UnitAIRetargetEntry *mRetargetEntries;
  float originX;
  float originY;
  float originZ;
};
#pragma pack(pop)

/* 980 */
#pragma pack(push, 8)
struct TribeElephantUnitAIModuleVtbl
{
  void *(__thiscall *__vecDelDtor)(TribeElephantUnitAIModule *, unsigned int);
  void (__thiscall *save)(TribeElephantUnitAIModule *, int);
  void (__thiscall *load)(TribeElephantUnitAIModule *, int);
  RGE_Player *(__thiscall *owner)(TribeElephantUnitAIModule *);
  int (__thiscall *order)(TribeElephantUnitAIModule *, int, int, int, int, float, float, float, float, int, int, int);
  int (__thiscall *notify)(TribeElephantUnitAIModule *, int, int, int, int, int, int);
  int (__thiscall *notifyCommander_2)(TribeElephantUnitAIModule *, int, int, int, int, int, int);
  int (__thiscall *notifyCommander_1)(TribeElephantUnitAIModule *, NotifyEvent *);
  void (__thiscall *search)(TribeElephantUnitAIModule *, float, float, bool);
  int (__thiscall *importantWhenDead)(TribeElephantUnitAIModule *, int);
  int (__thiscall *retryableOrder)(TribeElephantUnitAIModule *, int);
  int (__thiscall *actionRequiresLiveTarget)(TribeElephantUnitAIModule *, int);
  int (__thiscall *mostDangerousEnemy)(TribeElephantUnitAIModule *, float *);
  int (__thiscall *weakestEnemy)(TribeElephantUnitAIModule *, float *);
  int (__thiscall *closestAttacker)(TribeElephantUnitAIModule *, float *);
  int (__thiscall *closestObject)(TribeElephantUnitAIModule *, int, int, int, int, int, int *);
  int (__thiscall *closestResourceObject)(TribeElephantUnitAIModule *, int, int, int, int *);
  int (__thiscall *closestUndiscoveredTile)(TribeElephantUnitAIModule *, int *, int *, int);
  void (*logDebug)(TribeElephantUnitAIModule *, char *, ...);
  int (__thiscall *canAttackUnit)(TribeElephantUnitAIModule *, RGE_Static_Object *);
  int (__thiscall *canAttackUnitAtNeutrality)(TribeElephantUnitAIModule *, int);
  int (__thiscall *stopObject)(TribeElephantUnitAIModule *, int);
  int (__thiscall *attackObject)(TribeElephantUnitAIModule *, int, int);
  int (__thiscall *attackRoundupObject)(TribeElephantUnitAIModule *, int);
  int (__thiscall *huntObject)(TribeElephantUnitAIModule *, int, int);
  int (__thiscall *gatherObject)(TribeElephantUnitAIModule *, int, int);
  int (__thiscall *convertObject)(TribeElephantUnitAIModule *, int, int);
  int (__thiscall *healObject)(TribeElephantUnitAIModule *, int, int);
  int (__thiscall *repairObject)(TribeElephantUnitAIModule *, int, int);
  int (__thiscall *buildObject)(TribeElephantUnitAIModule *, int, int);
  int (__thiscall *tradeWithObject)(TribeElephantUnitAIModule *, int, int);
  int (__thiscall *explore)(TribeElephantUnitAIModule *, int, int, int);
  int (__thiscall *enterObject)(TribeElephantUnitAIModule *, int, int);
  int (__thiscall *unload)(TribeElephantUnitAIModule *, int, float, float);
  int (__thiscall *transportObject)(TribeElephantUnitAIModule *, float, float, float, int);
  int (__thiscall *moveTo_3)(TribeElephantUnitAIModule *, float, float, float, float, int, int);
  int (__thiscall *moveTo_2)(TribeElephantUnitAIModule *, int, float, int);
  int (__thiscall *moveTo_1)(TribeElephantUnitAIModule *, int, int);
  int (__thiscall *evasiveMoveTo)(TribeElephantUnitAIModule *, float, float, float, int);
  int (__thiscall *intelligentEvasiveMoveTo)(TribeElephantUnitAIModule *, float, float, float, int, int);
  int (__thiscall *runAwayFromAttackers)(TribeElephantUnitAIModule *, int, int);
  int (__thiscall *followObject)(TribeElephantUnitAIModule *, int, float, int);
  int (__thiscall *defendObject)(TribeElephantUnitAIModule *, int, float, int);
  int (__thiscall *defendPosition)(TribeElephantUnitAIModule *, float, float, float, int);
  int (__thiscall *seekAndDestroy)(TribeElephantUnitAIModule *, int, int, int, int);
  int (__thiscall *exploreAndDestroy)(TribeElephantUnitAIModule *, int, int, int);
  int (__thiscall *importantObject)(TribeElephantUnitAIModule *, int);
  int (__thiscall *convertToLOSResourceType)(TribeElephantUnitAIModule *, int);
  int (__thiscall *canConvert)(TribeElephantUnitAIModule *, int, int);
  void (__thiscall *setState)(TribeElephantUnitAIModule *, unsigned __int8);
  char *(__thiscall *stateName)(TribeElephantUnitAIModule *, int);
  int (__thiscall *canMoveToAttack)(TribeElephantUnitAIModule *, int);
  int (__thiscall *findAlertModeObject)(TribeElephantUnitAIModule *);
  int (__thiscall *processOrder)(TribeElephantUnitAIModule *, OrderEvent *, int);
  int (__thiscall *processNotify)(TribeElephantUnitAIModule *, NotifyEvent *, unsigned int);
  int (__thiscall *processIdle)(TribeElephantUnitAIModule *, int);
  int (__thiscall *processIdle_search)(TribeElephantUnitAIModule *, int, int);
  int (__thiscall *processMisc)(TribeElephantUnitAIModule *);
  int (__thiscall *processRetryableOrder)(TribeElephantUnitAIModule *);
};
#pragma pack(pop)

/* 492 */
#pragma pack(push, 8)
struct TribeHuntedAnimalUnitAIModule
{
  TribeHuntedAnimalUnitAIModuleVtbl *vfptr;
  RGE_Combat_Object *objectValue;
  int moodValue;
  int objectCategoryValue;
  int orderQueueSizeValue;
  int orderQueueMaxSizeValue;
  OrderEvent *orderQueueValue;
  int notifyQueueSizeValue;
  int notifyQueueMaxSizeValue;
  NotifyEvent *notifyQueueValue;
  int currentOrderValue;
  int currentOrderPriorityValue;
  int currentActionValue;
  int currentTargetValue;
  int currentTargetTypeValue;
  float currentTargetXValue;
  float currentTargetYValue;
  float currentTargetZValue;
  float desiredTargetDistanceValue;
  int defendTargetValue;
  int lastOrderValue;
  int lastActionValue;
  int lastTargetValue;
  int lastTargetTypeValue;
  UnitAIOrderHistory mOrderHistory;
  int mOrderHistorySize;
  unsigned int mLastRetargetTime;
  ManagedArray_int_ attackingUnitsValue;
  Waypoint waypointQueue[8];
  int waypointQueueSizeValue;
  unsigned int lastUpdateTimeValue;
  unsigned int idleTimerValue;
  unsigned int adjustedIdleTimeoutValue;
  unsigned int idleTimeoutValue;
  unsigned int secondaryTimerValue;
  unsigned int lookAroundTimerValue;
  unsigned int lookAroundTimeoutValue;
  Waypoint lastWorldPositionValue;
  float defenseBufferValue;
  int *importantObjects;
  int numberImportantObjects;
  unsigned __int8 stopAfterTargetKilledValue;
  unsigned __int8 stateValue;
  float statePositionXValue;
  float statePositionYValue;
  float timeSinceEnemySighting;
  unsigned __int8 alertModeValue;
  int alertModeObjectIDValue;
  BPath *mPatrolPath;
  int mPatrolCurrentWaypoint;
  unsigned int mRandomizedRetargetTimer;
  int mBestUnitToAttackThisUpdate;
  unsigned __int8 mFormationType;
  unsigned __int8 autoAttackOrderFlag;
  int mNumberRetargetEntries;
  int mMaximumNumberRetargetEntries;
  UnitAIModule__UnitAIRetargetEntry *mRetargetEntries;
  float originX;
  float originY;
  float originZ;
};
#pragma pack(pop)

/* 979 */
#pragma pack(push, 8)
struct TribeHuntedAnimalUnitAIModuleVtbl
{
  void *(__thiscall *__vecDelDtor)(TribeHuntedAnimalUnitAIModule *, unsigned int);
  void (__thiscall *save)(TribeHuntedAnimalUnitAIModule *, int);
  void (__thiscall *load)(TribeHuntedAnimalUnitAIModule *, int);
  RGE_Player *(__thiscall *owner)(TribeHuntedAnimalUnitAIModule *);
  int (__thiscall *order)(TribeHuntedAnimalUnitAIModule *, int, int, int, int, float, float, float, float, int, int, int);
  int (__thiscall *notify)(TribeHuntedAnimalUnitAIModule *, int, int, int, int, int, int);
  int (__thiscall *notifyCommander_2)(TribeHuntedAnimalUnitAIModule *, int, int, int, int, int, int);
  int (__thiscall *notifyCommander_1)(TribeHuntedAnimalUnitAIModule *, NotifyEvent *);
  void (__thiscall *search)(TribeHuntedAnimalUnitAIModule *, float, float, bool);
  int (__thiscall *importantWhenDead)(TribeHuntedAnimalUnitAIModule *, int);
  int (__thiscall *retryableOrder)(TribeHuntedAnimalUnitAIModule *, int);
  int (__thiscall *actionRequiresLiveTarget)(TribeHuntedAnimalUnitAIModule *, int);
  int (__thiscall *mostDangerousEnemy)(TribeHuntedAnimalUnitAIModule *, float *);
  int (__thiscall *weakestEnemy)(TribeHuntedAnimalUnitAIModule *, float *);
  int (__thiscall *closestAttacker)(TribeHuntedAnimalUnitAIModule *, float *);
  int (__thiscall *closestObject)(TribeHuntedAnimalUnitAIModule *, int, int, int, int, int, int *);
  int (__thiscall *closestResourceObject)(TribeHuntedAnimalUnitAIModule *, int, int, int, int *);
  int (__thiscall *closestUndiscoveredTile)(TribeHuntedAnimalUnitAIModule *, int *, int *, int);
  void (*logDebug)(TribeHuntedAnimalUnitAIModule *, char *, ...);
  int (__thiscall *canAttackUnit)(TribeHuntedAnimalUnitAIModule *, RGE_Static_Object *);
  int (__thiscall *canAttackUnitAtNeutrality)(TribeHuntedAnimalUnitAIModule *, int);
  int (__thiscall *stopObject)(TribeHuntedAnimalUnitAIModule *, int);
  int (__thiscall *attackObject)(TribeHuntedAnimalUnitAIModule *, int, int);
  int (__thiscall *attackRoundupObject)(TribeHuntedAnimalUnitAIModule *, int);
  int (__thiscall *huntObject)(TribeHuntedAnimalUnitAIModule *, int, int);
  int (__thiscall *gatherObject)(TribeHuntedAnimalUnitAIModule *, int, int);
  int (__thiscall *convertObject)(TribeHuntedAnimalUnitAIModule *, int, int);
  int (__thiscall *healObject)(TribeHuntedAnimalUnitAIModule *, int, int);
  int (__thiscall *repairObject)(TribeHuntedAnimalUnitAIModule *, int, int);
  int (__thiscall *buildObject)(TribeHuntedAnimalUnitAIModule *, int, int);
  int (__thiscall *tradeWithObject)(TribeHuntedAnimalUnitAIModule *, int, int);
  int (__thiscall *explore)(TribeHuntedAnimalUnitAIModule *, int, int, int);
  int (__thiscall *enterObject)(TribeHuntedAnimalUnitAIModule *, int, int);
  int (__thiscall *unload)(TribeHuntedAnimalUnitAIModule *, int, float, float);
  int (__thiscall *transportObject)(TribeHuntedAnimalUnitAIModule *, float, float, float, int);
  int (__thiscall *moveTo_3)(TribeHuntedAnimalUnitAIModule *, float, float, float, float, int, int);
  int (__thiscall *moveTo_2)(TribeHuntedAnimalUnitAIModule *, int, float, int);
  int (__thiscall *moveTo_1)(TribeHuntedAnimalUnitAIModule *, int, int);
  int (__thiscall *evasiveMoveTo)(TribeHuntedAnimalUnitAIModule *, float, float, float, int);
  int (__thiscall *intelligentEvasiveMoveTo)(TribeHuntedAnimalUnitAIModule *, float, float, float, int, int);
  int (__thiscall *runAwayFromAttackers)(TribeHuntedAnimalUnitAIModule *, int, int);
  int (__thiscall *followObject)(TribeHuntedAnimalUnitAIModule *, int, float, int);
  int (__thiscall *defendObject)(TribeHuntedAnimalUnitAIModule *, int, float, int);
  int (__thiscall *defendPosition)(TribeHuntedAnimalUnitAIModule *, float, float, float, int);
  int (__thiscall *seekAndDestroy)(TribeHuntedAnimalUnitAIModule *, int, int, int, int);
  int (__thiscall *exploreAndDestroy)(TribeHuntedAnimalUnitAIModule *, int, int, int);
  int (__thiscall *importantObject)(TribeHuntedAnimalUnitAIModule *, int);
  int (__thiscall *convertToLOSResourceType)(TribeHuntedAnimalUnitAIModule *, int);
  int (__thiscall *canConvert)(TribeHuntedAnimalUnitAIModule *, int, int);
  void (__thiscall *setState)(TribeHuntedAnimalUnitAIModule *, unsigned __int8);
  char *(__thiscall *stateName)(TribeHuntedAnimalUnitAIModule *, int);
  int (__thiscall *canMoveToAttack)(TribeHuntedAnimalUnitAIModule *, int);
  int (__thiscall *findAlertModeObject)(TribeHuntedAnimalUnitAIModule *);
  int (__thiscall *processOrder)(TribeHuntedAnimalUnitAIModule *, OrderEvent *, int);
  int (__thiscall *processNotify)(TribeHuntedAnimalUnitAIModule *, NotifyEvent *, unsigned int);
  int (__thiscall *processIdle)(TribeHuntedAnimalUnitAIModule *, int);
  int (__thiscall *processIdle_search)(TribeHuntedAnimalUnitAIModule *, int, int);
  int (__thiscall *processMisc)(TribeHuntedAnimalUnitAIModule *);
  int (__thiscall *processRetryableOrder)(TribeHuntedAnimalUnitAIModule *);
};
#pragma pack(pop)

/* 493 */
#pragma pack(push, 8)
struct TribeBuildingUnitAIModule
{
  TribeBuildingUnitAIModuleVtbl *vfptr;
  RGE_Combat_Object *objectValue;
  int moodValue;
  int objectCategoryValue;
  int orderQueueSizeValue;
  int orderQueueMaxSizeValue;
  OrderEvent *orderQueueValue;
  int notifyQueueSizeValue;
  int notifyQueueMaxSizeValue;
  NotifyEvent *notifyQueueValue;
  int currentOrderValue;
  int currentOrderPriorityValue;
  int currentActionValue;
  int currentTargetValue;
  int currentTargetTypeValue;
  float currentTargetXValue;
  float currentTargetYValue;
  float currentTargetZValue;
  float desiredTargetDistanceValue;
  int defendTargetValue;
  int lastOrderValue;
  int lastActionValue;
  int lastTargetValue;
  int lastTargetTypeValue;
  UnitAIOrderHistory mOrderHistory;
  int mOrderHistorySize;
  unsigned int mLastRetargetTime;
  ManagedArray_int_ attackingUnitsValue;
  Waypoint waypointQueue[8];
  int waypointQueueSizeValue;
  unsigned int lastUpdateTimeValue;
  unsigned int idleTimerValue;
  unsigned int adjustedIdleTimeoutValue;
  unsigned int idleTimeoutValue;
  unsigned int secondaryTimerValue;
  unsigned int lookAroundTimerValue;
  unsigned int lookAroundTimeoutValue;
  Waypoint lastWorldPositionValue;
  float defenseBufferValue;
  int *importantObjects;
  int numberImportantObjects;
  unsigned __int8 stopAfterTargetKilledValue;
  unsigned __int8 stateValue;
  float statePositionXValue;
  float statePositionYValue;
  float timeSinceEnemySighting;
  unsigned __int8 alertModeValue;
  int alertModeObjectIDValue;
  BPath *mPatrolPath;
  int mPatrolCurrentWaypoint;
  unsigned int mRandomizedRetargetTimer;
  int mBestUnitToAttackThisUpdate;
  unsigned __int8 mFormationType;
  unsigned __int8 autoAttackOrderFlag;
  int mNumberRetargetEntries;
  int mMaximumNumberRetargetEntries;
  UnitAIModule__UnitAIRetargetEntry *mRetargetEntries;
};
#pragma pack(pop)

/* 986 */
#pragma pack(push, 8)
struct TribeBuildingUnitAIModuleVtbl
{
  void *(__thiscall *__vecDelDtor)(TribeBuildingUnitAIModule *, unsigned int);
  void (__thiscall *save)(TribeBuildingUnitAIModule *, int);
  void (__thiscall *load)(TribeBuildingUnitAIModule *, int);
  RGE_Player *(__thiscall *owner)(TribeBuildingUnitAIModule *);
  int (__thiscall *order)(TribeBuildingUnitAIModule *, int, int, int, int, float, float, float, float, int, int, int);
  int (__thiscall *notify)(TribeBuildingUnitAIModule *, int, int, int, int, int, int);
  int (__thiscall *notifyCommander_2)(TribeBuildingUnitAIModule *, int, int, int, int, int, int);
  int (__thiscall *notifyCommander_1)(TribeBuildingUnitAIModule *, NotifyEvent *);
  void (__thiscall *search)(TribeBuildingUnitAIModule *, float, float, bool);
  int (__thiscall *importantWhenDead)(TribeBuildingUnitAIModule *, int);
  int (__thiscall *retryableOrder)(TribeBuildingUnitAIModule *, int);
  int (__thiscall *actionRequiresLiveTarget)(TribeBuildingUnitAIModule *, int);
  int (__thiscall *mostDangerousEnemy)(TribeBuildingUnitAIModule *, float *);
  int (__thiscall *weakestEnemy)(TribeBuildingUnitAIModule *, float *);
  int (__thiscall *closestAttacker)(TribeBuildingUnitAIModule *, float *);
  int (__thiscall *closestObject)(TribeBuildingUnitAIModule *, int, int, int, int, int, int *);
  int (__thiscall *closestResourceObject)(TribeBuildingUnitAIModule *, int, int, int, int *);
  int (__thiscall *closestUndiscoveredTile)(TribeBuildingUnitAIModule *, int *, int *, int);
  void (*logDebug)(TribeBuildingUnitAIModule *, char *, ...);
  int (__thiscall *canAttackUnit)(TribeBuildingUnitAIModule *, RGE_Static_Object *);
  int (__thiscall *canAttackUnitAtNeutrality)(TribeBuildingUnitAIModule *, int);
  int (__thiscall *stopObject)(TribeBuildingUnitAIModule *, int);
  int (__thiscall *attackObject)(TribeBuildingUnitAIModule *, int, int);
  int (__thiscall *attackRoundupObject)(TribeBuildingUnitAIModule *, int);
  int (__thiscall *huntObject)(TribeBuildingUnitAIModule *, int, int);
  int (__thiscall *gatherObject)(TribeBuildingUnitAIModule *, int, int);
  int (__thiscall *convertObject)(TribeBuildingUnitAIModule *, int, int);
  int (__thiscall *healObject)(TribeBuildingUnitAIModule *, int, int);
  int (__thiscall *repairObject)(TribeBuildingUnitAIModule *, int, int);
  int (__thiscall *buildObject)(TribeBuildingUnitAIModule *, int, int);
  int (__thiscall *tradeWithObject)(TribeBuildingUnitAIModule *, int, int);
  int (__thiscall *explore)(TribeBuildingUnitAIModule *, int, int, int);
  int (__thiscall *enterObject)(TribeBuildingUnitAIModule *, int, int);
  int (__thiscall *unload)(TribeBuildingUnitAIModule *, int, float, float);
  int (__thiscall *transportObject)(TribeBuildingUnitAIModule *, float, float, float, int);
  int (__thiscall *moveTo_3)(TribeBuildingUnitAIModule *, float, float, float, float, int, int);
  int (__thiscall *moveTo_2)(TribeBuildingUnitAIModule *, int, float, int);
  int (__thiscall *moveTo_1)(TribeBuildingUnitAIModule *, int, int);
  int (__thiscall *evasiveMoveTo)(TribeBuildingUnitAIModule *, float, float, float, int);
  int (__thiscall *intelligentEvasiveMoveTo)(TribeBuildingUnitAIModule *, float, float, float, int, int);
  int (__thiscall *runAwayFromAttackers)(TribeBuildingUnitAIModule *, int, int);
  int (__thiscall *followObject)(TribeBuildingUnitAIModule *, int, float, int);
  int (__thiscall *defendObject)(TribeBuildingUnitAIModule *, int, float, int);
  int (__thiscall *defendPosition)(TribeBuildingUnitAIModule *, float, float, float, int);
  int (__thiscall *seekAndDestroy)(TribeBuildingUnitAIModule *, int, int, int, int);
  int (__thiscall *exploreAndDestroy)(TribeBuildingUnitAIModule *, int, int, int);
  int (__thiscall *importantObject)(TribeBuildingUnitAIModule *, int);
  int (__thiscall *convertToLOSResourceType)(TribeBuildingUnitAIModule *, int);
  int (__thiscall *canConvert)(TribeBuildingUnitAIModule *, int, int);
  void (__thiscall *setState)(TribeBuildingUnitAIModule *, unsigned __int8);
  char *(__thiscall *stateName)(TribeBuildingUnitAIModule *, int);
  int (__thiscall *canMoveToAttack)(TribeBuildingUnitAIModule *, int);
  int (__thiscall *findAlertModeObject)(TribeBuildingUnitAIModule *);
  int (__thiscall *processOrder)(TribeBuildingUnitAIModule *, OrderEvent *, int);
  int (__thiscall *processNotify)(TribeBuildingUnitAIModule *, NotifyEvent *, unsigned int);
  int (__thiscall *processIdle)(TribeBuildingUnitAIModule *, int);
  int (__thiscall *processIdle_search)(TribeBuildingUnitAIModule *, int, int);
  int (__thiscall *processMisc)(TribeBuildingUnitAIModule *);
  int (__thiscall *processRetryableOrder)(TribeBuildingUnitAIModule *);
};
#pragma pack(pop)

/* 494 */
#pragma pack(push, 8)
struct TribeTowerUnitAIModule
{
  TribeTowerUnitAIModuleVtbl *vfptr;
  RGE_Combat_Object *objectValue;
  int moodValue;
  int objectCategoryValue;
  int orderQueueSizeValue;
  int orderQueueMaxSizeValue;
  OrderEvent *orderQueueValue;
  int notifyQueueSizeValue;
  int notifyQueueMaxSizeValue;
  NotifyEvent *notifyQueueValue;
  int currentOrderValue;
  int currentOrderPriorityValue;
  int currentActionValue;
  int currentTargetValue;
  int currentTargetTypeValue;
  float currentTargetXValue;
  float currentTargetYValue;
  float currentTargetZValue;
  float desiredTargetDistanceValue;
  int defendTargetValue;
  int lastOrderValue;
  int lastActionValue;
  int lastTargetValue;
  int lastTargetTypeValue;
  UnitAIOrderHistory mOrderHistory;
  int mOrderHistorySize;
  unsigned int mLastRetargetTime;
  ManagedArray_int_ attackingUnitsValue;
  Waypoint waypointQueue[8];
  int waypointQueueSizeValue;
  unsigned int lastUpdateTimeValue;
  unsigned int idleTimerValue;
  unsigned int adjustedIdleTimeoutValue;
  unsigned int idleTimeoutValue;
  unsigned int secondaryTimerValue;
  unsigned int lookAroundTimerValue;
  unsigned int lookAroundTimeoutValue;
  Waypoint lastWorldPositionValue;
  float defenseBufferValue;
  int *importantObjects;
  int numberImportantObjects;
  unsigned __int8 stopAfterTargetKilledValue;
  unsigned __int8 stateValue;
  float statePositionXValue;
  float statePositionYValue;
  float timeSinceEnemySighting;
  unsigned __int8 alertModeValue;
  int alertModeObjectIDValue;
  BPath *mPatrolPath;
  int mPatrolCurrentWaypoint;
  unsigned int mRandomizedRetargetTimer;
  int mBestUnitToAttackThisUpdate;
  unsigned __int8 mFormationType;
  unsigned __int8 autoAttackOrderFlag;
  int mNumberRetargetEntries;
  int mMaximumNumberRetargetEntries;
  UnitAIModule__UnitAIRetargetEntry *mRetargetEntries;
};
#pragma pack(pop)

/* 987 */
#pragma pack(push, 8)
struct TribeTowerUnitAIModuleVtbl
{
  void *(__thiscall *__vecDelDtor)(TribeTowerUnitAIModule *, unsigned int);
  void (__thiscall *save)(TribeTowerUnitAIModule *, int);
  void (__thiscall *load)(TribeTowerUnitAIModule *, int);
  RGE_Player *(__thiscall *owner)(TribeTowerUnitAIModule *);
  int (__thiscall *order)(TribeTowerUnitAIModule *, int, int, int, int, float, float, float, float, int, int, int);
  int (__thiscall *notify)(TribeTowerUnitAIModule *, int, int, int, int, int, int);
  int (__thiscall *notifyCommander_2)(TribeTowerUnitAIModule *, int, int, int, int, int, int);
  int (__thiscall *notifyCommander_1)(TribeTowerUnitAIModule *, NotifyEvent *);
  void (__thiscall *search)(TribeTowerUnitAIModule *, float, float, bool);
  int (__thiscall *importantWhenDead)(TribeTowerUnitAIModule *, int);
  int (__thiscall *retryableOrder)(TribeTowerUnitAIModule *, int);
  int (__thiscall *actionRequiresLiveTarget)(TribeTowerUnitAIModule *, int);
  int (__thiscall *mostDangerousEnemy)(TribeTowerUnitAIModule *, float *);
  int (__thiscall *weakestEnemy)(TribeTowerUnitAIModule *, float *);
  int (__thiscall *closestAttacker)(TribeTowerUnitAIModule *, float *);
  int (__thiscall *closestObject)(TribeTowerUnitAIModule *, int, int, int, int, int, int *);
  int (__thiscall *closestResourceObject)(TribeTowerUnitAIModule *, int, int, int, int *);
  int (__thiscall *closestUndiscoveredTile)(TribeTowerUnitAIModule *, int *, int *, int);
  void (*logDebug)(TribeTowerUnitAIModule *, char *, ...);
  int (__thiscall *canAttackUnit)(TribeTowerUnitAIModule *, RGE_Static_Object *);
  int (__thiscall *canAttackUnitAtNeutrality)(TribeTowerUnitAIModule *, int);
  int (__thiscall *stopObject)(TribeTowerUnitAIModule *, int);
  int (__thiscall *attackObject)(TribeTowerUnitAIModule *, int, int);
  int (__thiscall *attackRoundupObject)(TribeTowerUnitAIModule *, int);
  int (__thiscall *huntObject)(TribeTowerUnitAIModule *, int, int);
  int (__thiscall *gatherObject)(TribeTowerUnitAIModule *, int, int);
  int (__thiscall *convertObject)(TribeTowerUnitAIModule *, int, int);
  int (__thiscall *healObject)(TribeTowerUnitAIModule *, int, int);
  int (__thiscall *repairObject)(TribeTowerUnitAIModule *, int, int);
  int (__thiscall *buildObject)(TribeTowerUnitAIModule *, int, int);
  int (__thiscall *tradeWithObject)(TribeTowerUnitAIModule *, int, int);
  int (__thiscall *explore)(TribeTowerUnitAIModule *, int, int, int);
  int (__thiscall *enterObject)(TribeTowerUnitAIModule *, int, int);
  int (__thiscall *unload)(TribeTowerUnitAIModule *, int, float, float);
  int (__thiscall *transportObject)(TribeTowerUnitAIModule *, float, float, float, int);
  int (__thiscall *moveTo_3)(TribeTowerUnitAIModule *, float, float, float, float, int, int);
  int (__thiscall *moveTo_2)(TribeTowerUnitAIModule *, int, float, int);
  int (__thiscall *moveTo_1)(TribeTowerUnitAIModule *, int, int);
  int (__thiscall *evasiveMoveTo)(TribeTowerUnitAIModule *, float, float, float, int);
  int (__thiscall *intelligentEvasiveMoveTo)(TribeTowerUnitAIModule *, float, float, float, int, int);
  int (__thiscall *runAwayFromAttackers)(TribeTowerUnitAIModule *, int, int);
  int (__thiscall *followObject)(TribeTowerUnitAIModule *, int, float, int);
  int (__thiscall *defendObject)(TribeTowerUnitAIModule *, int, float, int);
  int (__thiscall *defendPosition)(TribeTowerUnitAIModule *, float, float, float, int);
  int (__thiscall *seekAndDestroy)(TribeTowerUnitAIModule *, int, int, int, int);
  int (__thiscall *exploreAndDestroy)(TribeTowerUnitAIModule *, int, int, int);
  int (__thiscall *importantObject)(TribeTowerUnitAIModule *, int);
  int (__thiscall *convertToLOSResourceType)(TribeTowerUnitAIModule *, int);
  int (__thiscall *canConvert)(TribeTowerUnitAIModule *, int, int);
  void (__thiscall *setState)(TribeTowerUnitAIModule *, unsigned __int8);
  char *(__thiscall *stateName)(TribeTowerUnitAIModule *, int);
  int (__thiscall *canMoveToAttack)(TribeTowerUnitAIModule *, int);
  int (__thiscall *findAlertModeObject)(TribeTowerUnitAIModule *);
  int (__thiscall *processOrder)(TribeTowerUnitAIModule *, OrderEvent *, int);
  int (__thiscall *processNotify)(TribeTowerUnitAIModule *, NotifyEvent *, unsigned int);
  int (__thiscall *processIdle)(TribeTowerUnitAIModule *, int);
  int (__thiscall *processIdle_search)(TribeTowerUnitAIModule *, int, int);
  int (__thiscall *processMisc)(TribeTowerUnitAIModule *);
  int (__thiscall *processRetryableOrder)(TribeTowerUnitAIModule *);
};
#pragma pack(pop)

/* 495 */
#pragma pack(push, 8)
struct TribeSoldierUnitAIModule
{
  TribeSoldierUnitAIModuleVtbl *vfptr;
  RGE_Combat_Object *objectValue;
  int moodValue;
  int objectCategoryValue;
  int orderQueueSizeValue;
  int orderQueueMaxSizeValue;
  OrderEvent *orderQueueValue;
  int notifyQueueSizeValue;
  int notifyQueueMaxSizeValue;
  NotifyEvent *notifyQueueValue;
  int currentOrderValue;
  int currentOrderPriorityValue;
  int currentActionValue;
  int currentTargetValue;
  int currentTargetTypeValue;
  float currentTargetXValue;
  float currentTargetYValue;
  float currentTargetZValue;
  float desiredTargetDistanceValue;
  int defendTargetValue;
  int lastOrderValue;
  int lastActionValue;
  int lastTargetValue;
  int lastTargetTypeValue;
  UnitAIOrderHistory mOrderHistory;
  int mOrderHistorySize;
  unsigned int mLastRetargetTime;
  ManagedArray_int_ attackingUnitsValue;
  Waypoint waypointQueue[8];
  int waypointQueueSizeValue;
  unsigned int lastUpdateTimeValue;
  unsigned int idleTimerValue;
  unsigned int adjustedIdleTimeoutValue;
  unsigned int idleTimeoutValue;
  unsigned int secondaryTimerValue;
  unsigned int lookAroundTimerValue;
  unsigned int lookAroundTimeoutValue;
  Waypoint lastWorldPositionValue;
  float defenseBufferValue;
  int *importantObjects;
  int numberImportantObjects;
  unsigned __int8 stopAfterTargetKilledValue;
  unsigned __int8 stateValue;
  float statePositionXValue;
  float statePositionYValue;
  float timeSinceEnemySighting;
  unsigned __int8 alertModeValue;
  int alertModeObjectIDValue;
  BPath *mPatrolPath;
  int mPatrolCurrentWaypoint;
  unsigned int mRandomizedRetargetTimer;
  int mBestUnitToAttackThisUpdate;
  unsigned __int8 mFormationType;
  unsigned __int8 autoAttackOrderFlag;
  int mNumberRetargetEntries;
  int mMaximumNumberRetargetEntries;
  UnitAIModule__UnitAIRetargetEntry *mRetargetEntries;
};
#pragma pack(pop)

/* 988 */
#pragma pack(push, 8)
struct TribeSoldierUnitAIModuleVtbl
{
  void *(__thiscall *__vecDelDtor)(TribeSoldierUnitAIModule *, unsigned int);
  void (__thiscall *save)(TribeSoldierUnitAIModule *, int);
  void (__thiscall *load)(TribeSoldierUnitAIModule *, int);
  RGE_Player *(__thiscall *owner)(TribeSoldierUnitAIModule *);
  int (__thiscall *order)(TribeSoldierUnitAIModule *, int, int, int, int, float, float, float, float, int, int, int);
  int (__thiscall *notify)(TribeSoldierUnitAIModule *, int, int, int, int, int, int);
  int (__thiscall *notifyCommander_2)(TribeSoldierUnitAIModule *, int, int, int, int, int, int);
  int (__thiscall *notifyCommander_1)(TribeSoldierUnitAIModule *, NotifyEvent *);
  void (__thiscall *search)(TribeSoldierUnitAIModule *, float, float, bool);
  int (__thiscall *importantWhenDead)(TribeSoldierUnitAIModule *, int);
  int (__thiscall *retryableOrder)(TribeSoldierUnitAIModule *, int);
  int (__thiscall *actionRequiresLiveTarget)(TribeSoldierUnitAIModule *, int);
  int (__thiscall *mostDangerousEnemy)(TribeSoldierUnitAIModule *, float *);
  int (__thiscall *weakestEnemy)(TribeSoldierUnitAIModule *, float *);
  int (__thiscall *closestAttacker)(TribeSoldierUnitAIModule *, float *);
  int (__thiscall *closestObject)(TribeSoldierUnitAIModule *, int, int, int, int, int, int *);
  int (__thiscall *closestResourceObject)(TribeSoldierUnitAIModule *, int, int, int, int *);
  int (__thiscall *closestUndiscoveredTile)(TribeSoldierUnitAIModule *, int *, int *, int);
  void (*logDebug)(TribeSoldierUnitAIModule *, char *, ...);
  int (__thiscall *canAttackUnit)(TribeSoldierUnitAIModule *, RGE_Static_Object *);
  int (__thiscall *canAttackUnitAtNeutrality)(TribeSoldierUnitAIModule *, int);
  int (__thiscall *stopObject)(TribeSoldierUnitAIModule *, int);
  int (__thiscall *attackObject)(TribeSoldierUnitAIModule *, int, int);
  int (__thiscall *attackRoundupObject)(TribeSoldierUnitAIModule *, int);
  int (__thiscall *huntObject)(TribeSoldierUnitAIModule *, int, int);
  int (__thiscall *gatherObject)(TribeSoldierUnitAIModule *, int, int);
  int (__thiscall *convertObject)(TribeSoldierUnitAIModule *, int, int);
  int (__thiscall *healObject)(TribeSoldierUnitAIModule *, int, int);
  int (__thiscall *repairObject)(TribeSoldierUnitAIModule *, int, int);
  int (__thiscall *buildObject)(TribeSoldierUnitAIModule *, int, int);
  int (__thiscall *tradeWithObject)(TribeSoldierUnitAIModule *, int, int);
  int (__thiscall *explore)(TribeSoldierUnitAIModule *, int, int, int);
  int (__thiscall *enterObject)(TribeSoldierUnitAIModule *, int, int);
  int (__thiscall *unload)(TribeSoldierUnitAIModule *, int, float, float);
  int (__thiscall *transportObject)(TribeSoldierUnitAIModule *, float, float, float, int);
  int (__thiscall *moveTo_3)(TribeSoldierUnitAIModule *, float, float, float, float, int, int);
  int (__thiscall *moveTo_2)(TribeSoldierUnitAIModule *, int, float, int);
  int (__thiscall *moveTo_1)(TribeSoldierUnitAIModule *, int, int);
  int (__thiscall *evasiveMoveTo)(TribeSoldierUnitAIModule *, float, float, float, int);
  int (__thiscall *intelligentEvasiveMoveTo)(TribeSoldierUnitAIModule *, float, float, float, int, int);
  int (__thiscall *runAwayFromAttackers)(TribeSoldierUnitAIModule *, int, int);
  int (__thiscall *followObject)(TribeSoldierUnitAIModule *, int, float, int);
  int (__thiscall *defendObject)(TribeSoldierUnitAIModule *, int, float, int);
  int (__thiscall *defendPosition)(TribeSoldierUnitAIModule *, float, float, float, int);
  int (__thiscall *seekAndDestroy)(TribeSoldierUnitAIModule *, int, int, int, int);
  int (__thiscall *exploreAndDestroy)(TribeSoldierUnitAIModule *, int, int, int);
  int (__thiscall *importantObject)(TribeSoldierUnitAIModule *, int);
  int (__thiscall *convertToLOSResourceType)(TribeSoldierUnitAIModule *, int);
  int (__thiscall *canConvert)(TribeSoldierUnitAIModule *, int, int);
  void (__thiscall *setState)(TribeSoldierUnitAIModule *, unsigned __int8);
  char *(__thiscall *stateName)(TribeSoldierUnitAIModule *, int);
  int (__thiscall *canMoveToAttack)(TribeSoldierUnitAIModule *, int);
  int (__thiscall *findAlertModeObject)(TribeSoldierUnitAIModule *);
  int (__thiscall *processOrder)(TribeSoldierUnitAIModule *, OrderEvent *, int);
  int (__thiscall *processNotify)(TribeSoldierUnitAIModule *, NotifyEvent *, unsigned int);
  int (__thiscall *processIdle)(TribeSoldierUnitAIModule *, int);
  int (__thiscall *processIdle_search)(TribeSoldierUnitAIModule *, int, int);
  int (__thiscall *processMisc)(TribeSoldierUnitAIModule *);
  int (__thiscall *processRetryableOrder)(TribeSoldierUnitAIModule *);
};
#pragma pack(pop)

/* 497 */
#pragma pack(push, 8)
struct BestUnitToAttackEntry
{
  int mID;
  bool mMoveable;
  float mTTK;
  float mDistance;
  int mAttackCategory;
  float mTTKFactor;
  float mDistanceFactor;
  float mTypeFactor;
  float mCurrentTargetFactor;
  float mTotalFactor;
};
#pragma pack(pop)

/* 496 */
#pragma pack(push, 8)
struct BestUnitToAttackStatistics
{
  float mShortestTargetDistance;
  float mLongestTargetDistance;
  float mShortestTTK;
  float mLongestTTK;
  float mShortestMoveableTargetDistance;
  float mLongestMoveableTargetDistance;
  float mShortestMoveableTTK;
  float mLongestMoveableTTK;
  int mNumberNonCurrentTargets;
  int mNumberMoveableTargets;
  int mNumberDamagingTargets;
  int mNumberTargetsInRange;
  int mAttackCategoryDistributions[12];
  float mClosestMoveableTargetDistance;
  int mClosestMoveableTargetID;
  BestUnitToAttackEntry mTargets[128];
  int mNumberTargets;
  int mSortedTargetIndices[128];
};
#pragma pack(pop)

/* 499 */
struct _EH4_SCOPETABLE_RECORD
{
  int EnclosingLevel;
  void *FilterFunc;
  void *HandlerFunc;
};

/* 500 */
struct _EH4_SCOPETABLE
{
  DWORD GSCookieOffset;
  DWORD GSCookieXOROffset;
  DWORD EHCookieOffset;
  DWORD EHCookieXOROffset;
  struct _EH4_SCOPETABLE_RECORD ScopeRecord[];
};

/* 501 */
#pragma pack(push, 8)
struct FULL_MAP_PRINT
{
  int Mode;
  int Error;
  int Abort;
  TFile *File;
  int FileSize;
  int DataOffset;
  unsigned __int8 *ClearBuffer;
  int ClearBufferSize;
  int BytesToClear;
  int ClearPos;
  FullMapPrintStatusDialog *StatusPanel;
  int XTarget;
  int YTarget;
  int Pass2;
  int Pass2Pos;
  int Steps;
  int CurStep;
  float Save_view_x;
  float Save_view_y;
  int XScaleRatio;
  int YScaleRatio;
  int WorldWidth;
  int WorldHalfHeight;
  int WorldTopPad;
  int XBMPpad;
  int YBMPpad;
  int BMP_Width;
  int BMP_Height;
};
#pragma pack(pop)

/* 519 */
#pragma pack(push, 8)
struct Shape_Outline
{
  unsigned __int16 Left_Offset;
  unsigned __int16 Right_Offset;
};
#pragma pack(pop)

/* 549 */
#pragma pack(push, 8)
struct PathingSystem__BYTEPoint
{
  unsigned __int8 x;
  unsigned __int8 y;
};
#pragma pack(pop)

/* 588 */
#pragma pack(push, 8)
struct InfluenceMapState
{
  int state;
  int substate;
  int substate2;
  int substate3;
};
#pragma pack(pop)

/* 613 */
typedef int TRIBE_Game__MenuType;

/* 637 */
typedef int TTextPanel__CharType;

/* 720 */
#pragma pack(push, 8)
struct TRIBE_GaiaVtbl
{
  void *(__thiscall *__vecDelDtor)(TRIBE_Gaia *, unsigned int);
  int (__thiscall *unknown1)(TRIBE_Gaia *, int);
  void (__thiscall *set_game_status)(TRIBE_Gaia *, unsigned __int8);
  void (__thiscall *do_resign)(TRIBE_Gaia *, int);
  void (__thiscall *changeToHumanPlayer)(TRIBE_Gaia *);
  void (__thiscall *changeToComputerPlayer)(TRIBE_Gaia *);
  char *(__thiscall *aiStatus)(TRIBE_Gaia *, int);
  int (__thiscall *computerPlayer)(TRIBE_Gaia *);
  int (__thiscall *isEnemy)(TRIBE_Gaia *, int);
  int (__thiscall *isAlly)(TRIBE_Gaia *, int);
  int (__thiscall *isNeutral)(TRIBE_Gaia *, int);
  int (__thiscall *isAllNeutral)(TRIBE_Gaia *);
  void (__thiscall *setDiplomaticStance)(TRIBE_Gaia *, int, int);
  void (__thiscall *loadAIInformation)(TRIBE_Gaia *, char *, char *, char *, int, int);
  void (__thiscall *sendUnitAIOrder)(TRIBE_Gaia *, int, int, int, int, int, float, float, float, float, int, int, int);
  void (__thiscall *processAIOrder)(TRIBE_Gaia *, int, int, int, int, int, float, float, float, float, int, int, int);
  void (__thiscall *kickAI)(TRIBE_Gaia *, int);
  int (__thiscall *strategicNumber)(TRIBE_Gaia *, int);
  void (__thiscall *sendGameOrder)(TRIBE_Gaia *, RGE_Static_Object *, RGE_Static_Object *, float, float);
  void (__thiscall *sendAddWaypointCommand)(TRIBE_Gaia *, int, XYZBYTEPoint *, int);
  void (__thiscall *processAddWaypointCommand)(TRIBE_Gaia *, int, XYZBYTEPoint *, int);
  int (__thiscall *sendAICommand)(TRIBE_Gaia *, int, int, int, int, int);
  void (__thiscall *setTileExplored)(TRIBE_Gaia *, int, int);
  int (__thiscall *objectCostByType)(TRIBE_Gaia *, int);
  void (__thiscall *trackUnitGather)(TRIBE_Gaia *, int, int, int);
  RGE_Static_Object *(__thiscall *make_scenario_obj)(TRIBE_Gaia *, float, float, float, __int16, unsigned __int8, float);
  void (__thiscall *scenario_save)(TRIBE_Gaia *, int);
  void (__thiscall *scenario_load)(TRIBE_Gaia *, int, int *, float);
  void (__thiscall *scenario_postsave)(TRIBE_Gaia *, int);
  void (__thiscall *scenario_postload)(TRIBE_Gaia *, int, int *, float);
  void (__thiscall *load)(TRIBE_Gaia *, int);
  void (__thiscall *new_attribute_num)(TRIBE_Gaia *, __int16, float);
  void (__thiscall *add_attribute_num)(TRIBE_Gaia *, __int16, float, unsigned __int8);
  void (__thiscall *update)(TRIBE_Gaia *);
  void (__thiscall *update_dopplegangers)(TRIBE_Gaia *);
  void (__thiscall *save)(TRIBE_Gaia *, int);
  void (__thiscall *save2)(TRIBE_Gaia *, int);
  void (__thiscall *save_info)(TRIBE_Gaia *, int);
  void (__thiscall *random_start)(TRIBE_Gaia *);
  void (__thiscall *modify_tobj)(TRIBE_Gaia *, __int16, __int16, float, unsigned __int8);
  void (__thiscall *modify_tobj_delta)(TRIBE_Gaia *, __int16, __int16, float, unsigned __int8);
  void (__thiscall *modify_tobj_percent)(TRIBE_Gaia *, __int16, __int16, float, unsigned __int8);
  void (__thiscall *copy_obj)(TRIBE_Gaia *, __int16, __int16);
  void (__thiscall *effect_add_attribute)(TRIBE_Gaia *, __int16, float, unsigned __int8);
  void (__thiscall *effect_multiply_attribute)(TRIBE_Gaia *, __int16, float);
  RGE_Static_Object *(__thiscall *make_new_object)(TRIBE_Gaia *, int, float, float, float, int);
  unsigned __int8 (__thiscall *get_selected_objects_to_command)(TRIBE_Gaia *, RGE_Static_Object ***, __int16 *, __int16, __int16, __int16, __int16, unsigned __int8, unsigned __int8, unsigned int);
  void (__thiscall *analyize_selected_objects)(TRIBE_Gaia *);
  int (__thiscall *get_mouse_pointer_action_vars)(TRIBE_Gaia *, int, int, int, int, int, int *, int *);
  unsigned __int8 (__thiscall *command_make_move)(TRIBE_Gaia *, RGE_Static_Object *, float, float);
  unsigned __int8 (__thiscall *command_make_work)(TRIBE_Gaia *, RGE_Static_Object *, float, float);
  unsigned __int8 (__thiscall *command_make_do)(TRIBE_Gaia *, RGE_Static_Object *, float, float);
  unsigned __int8 (__thiscall *command_make_unit_do)(TRIBE_Gaia *, RGE_Static_Object *, RGE_Static_Object *, float, float);
  unsigned __int8 (__thiscall *command_stop)(TRIBE_Gaia *);
  unsigned __int8 (__thiscall *command_place_object)(TRIBE_Gaia *, __int16, float, float, float);
  unsigned __int8 (__thiscall *command_add_attribute)(TRIBE_Gaia *, int, float);
  unsigned __int8 (__thiscall *command_give_attribute)(TRIBE_Gaia *, int, int, float);
  unsigned __int8 (__thiscall *command_stand_ground)(TRIBE_Gaia *);
  unsigned __int8 (__thiscall *command_resign)(TRIBE_Gaia *, int, int);
  unsigned __int8 (__thiscall *command_add_waypoint)(TRIBE_Gaia *, float, float, float);
  unsigned __int8 (__thiscall *command_unit_ai_state)(TRIBE_Gaia *, unsigned __int8);
  unsigned __int8 (__thiscall *command_guard)(TRIBE_Gaia *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *command_follow)(TRIBE_Gaia *, RGE_Static_Object *);
  unsigned __int8 (__thiscall *command_patrol)(TRIBE_Gaia *, unsigned __int8, float *, float *);
  unsigned __int8 (__thiscall *command_scout)(TRIBE_Gaia *, float, float);
  unsigned __int8 (__thiscall *command_form_formation)(TRIBE_Gaia *, int);
  unsigned __int8 (__thiscall *command_break_formation)(TRIBE_Gaia *, int);
  unsigned __int8 (__thiscall *command_wheel_formation)(TRIBE_Gaia *, int, int);
  unsigned __int8 (__thiscall *command_about_face_formation)(TRIBE_Gaia *, int);
  unsigned __int8 (__thiscall *command_lock_formation)(TRIBE_Gaia *, int, int);
  unsigned __int8 (__thiscall *command_formation_parameters)(TRIBE_Gaia *, int, int, int, int, float, int);
  unsigned __int8 (__thiscall *command_auto_formations)(TRIBE_Gaia *, int);
  RGE_Static_Object **(__thiscall *addObject)(TRIBE_Gaia *, RGE_Static_Object *, int, int);
  void (__thiscall *removeObject)(TRIBE_Gaia *, RGE_Static_Object *, int, int, RGE_Static_Object **);
  void (*logMessage)(TRIBE_Gaia *, char *, ...);
  void (__thiscall *notify)(TRIBE_Gaia *, int, int, int, int, int, int);
  void (__thiscall *notifyUnitDeath)(TRIBE_Gaia *, int, int);
  int (__thiscall *isInTacticalAIGroup)(TRIBE_Gaia *, int);
  void (__thiscall *logStatus)(TRIBE_Gaia *, FILE *, int);
  void (__thiscall *load_victory)(TRIBE_Gaia *, int, int *, unsigned __int8);
  void (__thiscall *new_victory)(TRIBE_Gaia *);
  void (__thiscall *open_gates_for_pathing)(TRIBE_Gaia *, int);
  void (__thiscall *close_gates_for_pathing)(TRIBE_Gaia *, int);
  int (__thiscall *isGateLocked)(TRIBE_Gaia *, int);
  void (__thiscall *setGateLocked)(TRIBE_Gaia *, int, int);
  int (__thiscall *closeGate)(TRIBE_Gaia *, int);
  int (__thiscall *openGate)(TRIBE_Gaia *, int);
  unsigned __int8 (__thiscall *command_give_attribute_2)(TRIBE_Gaia *, int, int, float, float);
  void (__thiscall *addResource)(TRIBE_Gaia *, int, int);
  void (__thiscall *registerTrigger)(TRIBE_Gaia *, int);
  void (__thiscall *buildObject)(TRIBE_Gaia *, int, int, float, float, int);
  void (__thiscall *buildWall)(TRIBE_Gaia *, int, int, int, int, int, int, int);
  void (__thiscall *cancelBuild)(TRIBE_Gaia *, int, int, int, float, float, int, int);
  void (__thiscall *registerBuild)(TRIBE_Gaia *, RGE_Static_Object *, int);
  void (__thiscall *trainUnit)(TRIBE_Gaia *, int, int, int);
  void (__thiscall *cancelTrain)(TRIBE_Gaia *, int, int, int, int);
  void (__thiscall *registerTrain)(TRIBE_Gaia *, int, int, int, int);
  void (__thiscall *research)(TRIBE_Gaia *, int, int, int);
  void (__thiscall *cancelResearch)(TRIBE_Gaia *, int, int, int, int);
  void (__thiscall *registerResearch)(TRIBE_Gaia *, int, int, int);
  void (__thiscall *spy)(TRIBE_Gaia *);
  void (__thiscall *taskTrader)(TRIBE_Gaia *, int, int, int, float, float);
  void (__thiscall *taskResourceGatherer)(TRIBE_Gaia *, int, int, int, float, float);
  void (__thiscall *notifyAI)(TRIBE_Gaia *, int, int, int, int, int, int);
  int (__thiscall *convertMasterTypeToFormationType)(TRIBE_Gaia *, int);
};
#pragma pack(pop)

/* 787 */
typedef int TribeMPSetupScreen__eCancelReasons;

/* 812 */
typedef int TButtonPanel__BevelType;

/* 881 */
typedef int TScrollBarPanel__ActionType;

/* 895 */
typedef int TRIBE_Panel_Button__GarrisonDiplayType;

/* 929 */
#pragma pack(push, 8)
struct Time_Slice_Draw_Data
{
  int x_line_pos;
  int y_line_pos;
  int intermediate_y_line_segment;
  int intermediate_civ_pop_y_line_segment;
  int intermediate_mil_pop_y_line_segment;
};
#pragma pack(pop)

/* 951 */
#pragma pack(push, 8)
struct TribeInformationAIModuleVtbl
{
  void *(__thiscall *__vecDelDtor)(TribeInformationAIModule *, unsigned int);
  int (__thiscall *loggingHistory)(TribeInformationAIModule *);
  void (__thiscall *setLogHistory)(TribeInformationAIModule *, int);
  void (__thiscall *toggleLogHistory)(TribeInformationAIModule *);
  void (__thiscall *setHistoryFilename)(TribeInformationAIModule *, char *);
  int (__thiscall *loggingCommonHistory)(TribeInformationAIModule *);
  void (__thiscall *setLogCommonHistory)(TribeInformationAIModule *, int);
  void (__thiscall *toggleLogCommonHistory)(TribeInformationAIModule *);
  int (__thiscall *loadState)(TribeInformationAIModule *, char *);
  int (__thiscall *saveState)(TribeInformationAIModule *, char *);
  int (__thiscall *gleanState)(TribeInformationAIModule *, int);
  int (__thiscall *processMessage)(TribeInformationAIModule *, AIModuleMessage *);
  int (__thiscall *update)(TribeInformationAIModule *, int);
  void (__thiscall *setCallbackMessage)(TribeInformationAIModule *, AIModuleMessage *);
  int (__thiscall *filterOutMessage)(TribeInformationAIModule *, AIModuleMessage *);
};
#pragma pack(pop)

/* 952 */
#pragma pack(push, 8)
struct BuildingLot
{
  int typeID;
  unsigned __int8 status;
  unsigned __int8 x;
  unsigned __int8 y;
};
#pragma pack(pop)

/* 953 */
#pragma pack(push, 8)
struct PerimeterWall
{
  int enabledFlag;
  int lineCount;
  int gateCount;
  int gateFittingLineCount;
  int percentageComplete;
  int segmentCount;
  int invisibleSegmentCount;
  int unfinishedSegmentCount;
  int nextLineToRefresh;
  int nextSegmentToRefresh;
  WallLine *wallLine;
};
#pragma pack(pop)

/* 954 */
#pragma pack(push, 8)
struct AttackMemory
{
  int id;
  unsigned __int8 type;
  unsigned __int8 minX;
  unsigned __int8 minY;
  unsigned __int8 maxX;
  unsigned __int8 maxY;
  unsigned __int8 attackingOwner;
  unsigned __int8 targetOwner;
  __int16 kills;
  unsigned __int8 success;
  unsigned int timeStamp;
  int play;
};
#pragma pack(pop)

/* 955 */
#pragma pack(push, 8)
struct QuadrantLog
{
  int numberExploredTiles;
  int numberAttacksOnUs;
  int numberAttacksByUs;
};
#pragma pack(pop)

/* 956 */
#pragma pack(push, 8)
struct ResourceMemory
{
  int id;
  unsigned __int8 x;
  unsigned __int8 y;
  unsigned __int8 gatherAttempts;
  int gatherValue;
  unsigned __int8 valid;
  unsigned __int8 gone;
  unsigned __int8 dropDistance;
  unsigned __int8 resourceType;
  int dropsiteID;
  unsigned int attackedTime;
};
#pragma pack(pop)

/* 957 */
#pragma pack(push, 8)
struct UnitDeathMemory
{
  int mUnitID;
  BVector mUnitPosition;
  int mAttackingUnitID;
  int mAttackingPlayerID;
  int mAttackingUnitRange;
  BVector mAttackingUnitPosition;
  unsigned int mTime;
  UnitDeathMemory *mNext;
  UnitDeathMemory *mPrev;
};
#pragma pack(pop)

/* 964 */
#pragma pack(push, 8)
struct gameOptions_s
{
  int deathMatch;
  int regicide;
  TRIBE_Game__MapSize mapSize;
  TRIBE_Game__MapType mapType;
  TRIBE_Game__ResourceLevel startingResources;
  TRIBE_Game__Age startingAge;
  int cheatsEnabled;
  int difficulty;
};
#pragma pack(pop)
